// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.StackGuard
#include "System/Threading/Tasks/StackGuard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MAX_UNCHECKED_INLINING_DEPTH
int System::Threading::Tasks::StackGuard::_get_MAX_UNCHECKED_INLINING_DEPTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::StackGuard::_get_MAX_UNCHECKED_INLINING_DEPTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "StackGuard", "MAX_UNCHECKED_INLINING_DEPTH"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MAX_UNCHECKED_INLINING_DEPTH
void System::Threading::Tasks::StackGuard::_set_MAX_UNCHECKED_INLINING_DEPTH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::StackGuard::_set_MAX_UNCHECKED_INLINING_DEPTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "StackGuard", "MAX_UNCHECKED_INLINING_DEPTH", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_inliningDepth
[[deprecated("Use field access instead!")]] int& System::Threading::Tasks::StackGuard::dyn_m_inliningDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::StackGuard::dyn_m_inliningDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_inliningDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.StackGuard.TryBeginInliningScope
bool System::Threading::Tasks::StackGuard::TryBeginInliningScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::StackGuard::TryBeginInliningScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryBeginInliningScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.StackGuard.EndInliningScope
void System::Threading::Tasks::StackGuard::EndInliningScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::StackGuard::EndInliningScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInliningScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.StackGuard.CheckForSufficientStack
bool System::Threading::Tasks::StackGuard::CheckForSufficientStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::StackGuard::CheckForSufficientStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForSufficientStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.ITaskCompletionAction
#include "System/Threading/Tasks/ITaskCompletionAction.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Tasks.ITaskCompletionAction.Invoke
void System::Threading::Tasks::ITaskCompletionAction::Invoke(::System::Threading::Tasks::Task* completingTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ITaskCompletionAction::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completingTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, completingTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskCanceledException
#include "System/Threading/Tasks/TaskCanceledException.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task m_canceledTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& System::Threading::Tasks::TaskCanceledException::dyn_m_canceledTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskCanceledException::dyn_m_canceledTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_canceledTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.ContinuationTaskFromTask
#include "System/Threading/Tasks/ContinuationTaskFromTask.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task m_antecedent
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& System::Threading::Tasks::ContinuationTaskFromTask::dyn_m_antecedent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ContinuationTaskFromTask::dyn_m_antecedent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_antecedent"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.ContinuationTaskFromTask.InnerInvoke
void System::Threading::Tasks::ContinuationTaskFromTask::InnerInvoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ContinuationTaskFromTask::InnerInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InnerInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskContinuation
#include "System/Threading/Tasks/TaskContinuation.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Tasks.TaskContinuation.Run
void System::Threading::Tasks::TaskContinuation::Run(::System::Threading::Tasks::Task* completedTask, bool bCanInlineContinuationTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuation::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completedTask), ::il2cpp_utils::ExtractType(bCanInlineContinuationTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, completedTask, bCanInlineContinuationTask);
}
// Autogenerated method: System.Threading.Tasks.TaskContinuation.InlineIfPossibleOrElseQueue
void System::Threading::Tasks::TaskContinuation::InlineIfPossibleOrElseQueue(::System::Threading::Tasks::Task* task, bool needsProtection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuation::InlineIfPossibleOrElseQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskContinuation", "InlineIfPossibleOrElseQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task), ::il2cpp_utils::ExtractType(needsProtection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, task, needsProtection);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.StandardTaskContinuation
#include "System/Threading/Tasks/StandardTaskContinuation.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.Tasks.TaskScheduler
#include "System/Threading/Tasks/TaskScheduler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Threading.Tasks.Task m_task
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& System::Threading::Tasks::StandardTaskContinuation::dyn_m_task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::StandardTaskContinuation::dyn_m_task");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_task"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Threading.Tasks.TaskContinuationOptions m_options
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskContinuationOptions& System::Threading::Tasks::StandardTaskContinuation::dyn_m_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::StandardTaskContinuation::dyn_m_options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_options"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskContinuationOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Tasks.TaskScheduler m_taskScheduler
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskScheduler*& System::Threading::Tasks::StandardTaskContinuation::dyn_m_taskScheduler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::StandardTaskContinuation::dyn_m_taskScheduler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_taskScheduler"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskScheduler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.StandardTaskContinuation.Run
void System::Threading::Tasks::StandardTaskContinuation::Run(::System::Threading::Tasks::Task* completedTask, bool bCanInlineContinuationTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::StandardTaskContinuation::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completedTask), ::il2cpp_utils::ExtractType(bCanInlineContinuationTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, completedTask, bCanInlineContinuationTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation
#include "System/Threading/Tasks/SynchronizationContextAwaitTaskContinuation.hpp"
// Including type: System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation/System.Threading.Tasks.<>c
#include "System/Threading/Tasks/SynchronizationContextAwaitTaskContinuation_--c.hpp"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.SendOrPostCallback s_postCallback
::System::Threading::SendOrPostCallback* System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::_get_s_postCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::_get_s_postCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::SendOrPostCallback*>("System.Threading.Tasks", "SynchronizationContextAwaitTaskContinuation", "s_postCallback"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.SendOrPostCallback s_postCallback
void System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::_set_s_postCallback(::System::Threading::SendOrPostCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::_set_s_postCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "SynchronizationContextAwaitTaskContinuation", "s_postCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.ContextCallback s_postActionCallback
::System::Threading::ContextCallback* System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::_get_s_postActionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::_get_s_postActionCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ContextCallback*>("System.Threading.Tasks", "SynchronizationContextAwaitTaskContinuation", "s_postActionCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ContextCallback s_postActionCallback
void System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::_set_s_postActionCallback(::System::Threading::ContextCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::_set_s_postActionCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "SynchronizationContextAwaitTaskContinuation", "s_postActionCallback", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.SynchronizationContext m_syncContext
[[deprecated("Use field access instead!")]] ::System::Threading::SynchronizationContext*& System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::dyn_m_syncContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::dyn_m_syncContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_syncContext"))->offset;
  return *reinterpret_cast<::System::Threading::SynchronizationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation..cctor
void System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "SynchronizationContextAwaitTaskContinuation", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation.PostAction
void System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::PostAction(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::PostAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "SynchronizationContextAwaitTaskContinuation", "PostAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated method: System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation.GetPostActionCallback
::System::Threading::ContextCallback* System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::GetPostActionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::GetPostActionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "SynchronizationContextAwaitTaskContinuation", "GetPostActionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ContextCallback*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation.Run
void System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::Run(::System::Threading::Tasks::Task* task, bool canInlineContinuationTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task), ::il2cpp_utils::ExtractType(canInlineContinuationTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task, canInlineContinuationTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation/System.Threading.Tasks.<>c
#include "System/Threading/Tasks/SynchronizationContextAwaitTaskContinuation_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation/System.Threading.Tasks.<>c <>9
::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c* System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c*>("System.Threading.Tasks", "SynchronizationContextAwaitTaskContinuation/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation/System.Threading.Tasks.<>c <>9
void System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c::_set_$$9(::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Threading.Tasks", "SynchronizationContextAwaitTaskContinuation/<>c", "<>9", value)));
}
// Autogenerated method: System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation/System.Threading.Tasks.<>c..cctor
void System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "SynchronizationContextAwaitTaskContinuation/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation/System.Threading.Tasks.<>c.<.cctor>b__7_0
void System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c::$_cctor$b__7_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c::<.cctor>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation
#include "System/Threading/Tasks/TaskSchedulerAwaitTaskContinuation.hpp"
// Including type: System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation/System.Threading.Tasks.<>c
#include "System/Threading/Tasks/TaskSchedulerAwaitTaskContinuation_--c.hpp"
// Including type: System.Threading.Tasks.TaskScheduler
#include "System/Threading/Tasks/TaskScheduler.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Tasks.TaskScheduler m_scheduler
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskScheduler*& System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::dyn_m_scheduler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::dyn_m_scheduler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_scheduler"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskScheduler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation.Run
void System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::Run(::System::Threading::Tasks::Task* ignored, bool canInlineContinuationTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignored), ::il2cpp_utils::ExtractType(canInlineContinuationTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ignored, canInlineContinuationTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation/System.Threading.Tasks.<>c
#include "System/Threading/Tasks/TaskSchedulerAwaitTaskContinuation_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation/System.Threading.Tasks.<>c <>9
::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c* System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c*>("System.Threading.Tasks", "TaskSchedulerAwaitTaskContinuation/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation/System.Threading.Tasks.<>c <>9
void System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::_set_$$9(::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskSchedulerAwaitTaskContinuation/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Object> <>9__2_0
::System::Action_1<::Il2CppObject*>* System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.Threading.Tasks", "TaskSchedulerAwaitTaskContinuation/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Object> <>9__2_0
void System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::_set_$$9__2_0(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskSchedulerAwaitTaskContinuation/<>c", "<>9__2_0", value)));
}
// Autogenerated method: System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation/System.Threading.Tasks.<>c..cctor
void System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskSchedulerAwaitTaskContinuation/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation/System.Threading.Tasks.<>c.<Run>b__2_0
void System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::$Run$b__2_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::<Run>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Run>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.AwaitTaskContinuation
#include "System/Threading/Tasks/AwaitTaskContinuation.hpp"
// Including type: System.Threading.Tasks.AwaitTaskContinuation/System.Threading.Tasks.<>c
#include "System/Threading/Tasks/AwaitTaskContinuation_--c.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.Tasks.TaskScheduler
#include "System/Threading/Tasks/TaskScheduler.hpp"
// Including type: System.Threading.ThreadAbortException
#include "System/Threading/ThreadAbortException.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.ContextCallback s_invokeActionCallback
::System::Threading::ContextCallback* System::Threading::Tasks::AwaitTaskContinuation::_get_s_invokeActionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::_get_s_invokeActionCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ContextCallback*>("System.Threading.Tasks", "AwaitTaskContinuation", "s_invokeActionCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ContextCallback s_invokeActionCallback
void System::Threading::Tasks::AwaitTaskContinuation::_set_s_invokeActionCallback(::System::Threading::ContextCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::_set_s_invokeActionCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "AwaitTaskContinuation", "s_invokeActionCallback", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.ExecutionContext m_capturedContext
[[deprecated("Use field access instead!")]] ::System::Threading::ExecutionContext*& System::Threading::Tasks::AwaitTaskContinuation::dyn_m_capturedContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::dyn_m_capturedContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_capturedContext"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.Action m_action
[[deprecated("Use field access instead!")]] ::System::Action*& System::Threading::Tasks::AwaitTaskContinuation::dyn_m_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::dyn_m_action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_action"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.get_IsValidLocationForInlining
bool System::Threading::Tasks::AwaitTaskContinuation::get_IsValidLocationForInlining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::get_IsValidLocationForInlining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "AwaitTaskContinuation", "get_IsValidLocationForInlining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.CreateTask
::System::Threading::Tasks::Task* System::Threading::Tasks::AwaitTaskContinuation::CreateTask(::System::Action_1<::Il2CppObject*>* action, ::Il2CppObject* state, ::System::Threading::Tasks::TaskScheduler* scheduler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::CreateTask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(scheduler)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, action, state, scheduler);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.ExecuteWorkItemHelper
void System::Threading::Tasks::AwaitTaskContinuation::ExecuteWorkItemHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::ExecuteWorkItemHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteWorkItemHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem
void System::Threading::Tasks::AwaitTaskContinuation::System_Threading_IThreadPoolWorkItem_ExecuteWorkItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::System.Threading.IThreadPoolWorkItem.ExecuteWorkItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Threading.IThreadPoolWorkItem.ExecuteWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.MarkAborted
void System::Threading::Tasks::AwaitTaskContinuation::System_Threading_IThreadPoolWorkItem_MarkAborted(::System::Threading::ThreadAbortException* tae) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::System.Threading.IThreadPoolWorkItem.MarkAborted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Threading.IThreadPoolWorkItem.MarkAborted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tae)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tae);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.InvokeAction
void System::Threading::Tasks::AwaitTaskContinuation::InvokeAction(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::InvokeAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "AwaitTaskContinuation", "InvokeAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.GetInvokeActionCallback
::System::Threading::ContextCallback* System::Threading::Tasks::AwaitTaskContinuation::GetInvokeActionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::GetInvokeActionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "AwaitTaskContinuation", "GetInvokeActionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ContextCallback*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.RunCallback
void System::Threading::Tasks::AwaitTaskContinuation::RunCallback(::System::Threading::ContextCallback* callback, ::Il2CppObject* state, ByRef<::System::Threading::Tasks::Task*> currentTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::RunCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(currentTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, state, byref(currentTask));
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction
void System::Threading::Tasks::AwaitTaskContinuation::RunOrScheduleAction(::System::Action* action, bool allowInlining, ByRef<::System::Threading::Tasks::Task*> currentTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::RunOrScheduleAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "AwaitTaskContinuation", "RunOrScheduleAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(allowInlining), ::il2cpp_utils::ExtractType(currentTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action, allowInlining, byref(currentTask));
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.UnsafeScheduleAction
void System::Threading::Tasks::AwaitTaskContinuation::UnsafeScheduleAction(::System::Action* action, ::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::UnsafeScheduleAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "AwaitTaskContinuation", "UnsafeScheduleAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action, task);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.ThrowAsyncIfNecessary
void System::Threading::Tasks::AwaitTaskContinuation::ThrowAsyncIfNecessary(::System::Exception* exc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::ThrowAsyncIfNecessary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "AwaitTaskContinuation", "ThrowAsyncIfNecessary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exc);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.Run
void System::Threading::Tasks::AwaitTaskContinuation::Run(::System::Threading::Tasks::Task* task, bool canInlineContinuationTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task), ::il2cpp_utils::ExtractType(canInlineContinuationTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task, canInlineContinuationTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.AwaitTaskContinuation/System.Threading.Tasks.<>c
#include "System/Threading/Tasks/AwaitTaskContinuation_--c.hpp"
// Including type: System.Threading.WaitCallback
#include "System/Threading/WaitCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.AwaitTaskContinuation/System.Threading.Tasks.<>c <>9
::System::Threading::Tasks::AwaitTaskContinuation::$$c* System::Threading::Tasks::AwaitTaskContinuation::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Threading::Tasks::AwaitTaskContinuation::$$c*>("System.Threading.Tasks", "AwaitTaskContinuation/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.AwaitTaskContinuation/System.Threading.Tasks.<>c <>9
void System::Threading::Tasks::AwaitTaskContinuation::$$c::_set_$$9(::System::Threading::Tasks::AwaitTaskContinuation::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Threading.Tasks", "AwaitTaskContinuation/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.WaitCallback <>9__17_0
::System::Threading::WaitCallback* System::Threading::Tasks::AwaitTaskContinuation::$$c::_get_$$9__17_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::$$c::_get_$$9__17_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Threading::WaitCallback*>("System.Threading.Tasks", "AwaitTaskContinuation/<>c", "<>9__17_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.WaitCallback <>9__17_0
void System::Threading::Tasks::AwaitTaskContinuation::$$c::_set_$$9__17_0(::System::Threading::WaitCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::$$c::_set_$$9__17_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Threading.Tasks", "AwaitTaskContinuation/<>c", "<>9__17_0", value)));
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation/System.Threading.Tasks.<>c..cctor
void System::Threading::Tasks::AwaitTaskContinuation::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "AwaitTaskContinuation/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation/System.Threading.Tasks.<>c.<ThrowAsyncIfNecessary>b__17_0
void System::Threading::Tasks::AwaitTaskContinuation::$$c::$ThrowAsyncIfNecessary$b__17_0(::Il2CppObject* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::$$c::<ThrowAsyncIfNecessary>b__17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ThrowAsyncIfNecessary>b__17_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.TaskExceptionHolder
#include "System/Threading/Tasks/TaskExceptionHolder.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.AggregateException
#include "System/AggregateException.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean s_failFastOnUnobservedException
bool System::Threading::Tasks::TaskExceptionHolder::_get_s_failFastOnUnobservedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::_get_s_failFastOnUnobservedException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Threading.Tasks", "TaskExceptionHolder", "s_failFastOnUnobservedException"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean s_failFastOnUnobservedException
void System::Threading::Tasks::TaskExceptionHolder::_set_s_failFastOnUnobservedException(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::_set_s_failFastOnUnobservedException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskExceptionHolder", "s_failFastOnUnobservedException", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_domainUnloadStarted
bool System::Threading::Tasks::TaskExceptionHolder::_get_s_domainUnloadStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::_get_s_domainUnloadStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Threading.Tasks", "TaskExceptionHolder", "s_domainUnloadStarted"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_domainUnloadStarted
void System::Threading::Tasks::TaskExceptionHolder::_set_s_domainUnloadStarted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::_set_s_domainUnloadStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskExceptionHolder", "s_domainUnloadStarted", value));
}
// Autogenerated static field getter
// Get static field: static private System.EventHandler s_adUnloadEventHandler
::System::EventHandler* System::Threading::Tasks::TaskExceptionHolder::_get_s_adUnloadEventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::_get_s_adUnloadEventHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::EventHandler*>("System.Threading.Tasks", "TaskExceptionHolder", "s_adUnloadEventHandler"));
}
// Autogenerated static field setter
// Set static field: static private System.EventHandler s_adUnloadEventHandler
void System::Threading::Tasks::TaskExceptionHolder::_set_s_adUnloadEventHandler(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::_set_s_adUnloadEventHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskExceptionHolder", "s_adUnloadEventHandler", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Tasks.Task m_task
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& System::Threading::Tasks::TaskExceptionHolder::dyn_m_task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::dyn_m_task");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_task"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Runtime.ExceptionServices.ExceptionDispatchInfo> m_faultExceptions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Runtime::ExceptionServices::ExceptionDispatchInfo*>*& System::Threading::Tasks::TaskExceptionHolder::dyn_m_faultExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::dyn_m_faultExceptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_faultExceptions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Runtime::ExceptionServices::ExceptionDispatchInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.ExceptionServices.ExceptionDispatchInfo m_cancellationException
[[deprecated("Use field access instead!")]] ::System::Runtime::ExceptionServices::ExceptionDispatchInfo*& System::Threading::Tasks::TaskExceptionHolder::dyn_m_cancellationException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::dyn_m_cancellationException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cancellationException"))->offset;
  return *reinterpret_cast<::System::Runtime::ExceptionServices::ExceptionDispatchInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isHandled
[[deprecated("Use field access instead!")]] bool& System::Threading::Tasks::TaskExceptionHolder::dyn_m_isHandled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::dyn_m_isHandled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isHandled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.get_ContainsFaultList
bool System::Threading::Tasks::TaskExceptionHolder::get_ContainsFaultList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::get_ContainsFaultList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContainsFaultList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder..cctor
void System::Threading::Tasks::TaskExceptionHolder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskExceptionHolder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.ShouldFailFastOnUnobservedException
bool System::Threading::Tasks::TaskExceptionHolder::ShouldFailFastOnUnobservedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::ShouldFailFastOnUnobservedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskExceptionHolder", "ShouldFailFastOnUnobservedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.EnsureADUnloadCallbackRegistered
void System::Threading::Tasks::TaskExceptionHolder::EnsureADUnloadCallbackRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::EnsureADUnloadCallbackRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskExceptionHolder", "EnsureADUnloadCallbackRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.AppDomainUnloadCallback
void System::Threading::Tasks::TaskExceptionHolder::AppDomainUnloadCallback(::Il2CppObject* sender, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::AppDomainUnloadCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskExceptionHolder", "AppDomainUnloadCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sender, e);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.Add
void System::Threading::Tasks::TaskExceptionHolder::Add(::Il2CppObject* exceptionObject, bool representsCancellation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exceptionObject), ::il2cpp_utils::ExtractType(representsCancellation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exceptionObject, representsCancellation);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.SetCancellationException
void System::Threading::Tasks::TaskExceptionHolder::SetCancellationException(::Il2CppObject* exceptionObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::SetCancellationException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCancellationException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exceptionObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exceptionObject);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.AddFaultException
void System::Threading::Tasks::TaskExceptionHolder::AddFaultException(::Il2CppObject* exceptionObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::AddFaultException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFaultException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exceptionObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exceptionObject);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.MarkAsUnhandled
void System::Threading::Tasks::TaskExceptionHolder::MarkAsUnhandled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::MarkAsUnhandled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkAsUnhandled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.MarkAsHandled
void System::Threading::Tasks::TaskExceptionHolder::MarkAsHandled(bool calledFromFinalizer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::MarkAsHandled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkAsHandled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calledFromFinalizer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, calledFromFinalizer);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.CreateExceptionObject
::System::AggregateException* System::Threading::Tasks::TaskExceptionHolder::CreateExceptionObject(bool calledFromFinalizer, ::System::Exception* includeThisException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::CreateExceptionObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateExceptionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calledFromFinalizer), ::il2cpp_utils::ExtractType(includeThisException)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::AggregateException*, false>(this, ___internal__method, calledFromFinalizer, includeThisException);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.GetExceptionDispatchInfos
::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Runtime::ExceptionServices::ExceptionDispatchInfo*>* System::Threading::Tasks::TaskExceptionHolder::GetExceptionDispatchInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::GetExceptionDispatchInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExceptionDispatchInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Runtime::ExceptionServices::ExceptionDispatchInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.GetCancellationExceptionDispatchInfo
::System::Runtime::ExceptionServices::ExceptionDispatchInfo* System::Threading::Tasks::TaskExceptionHolder::GetCancellationExceptionDispatchInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::GetCancellationExceptionDispatchInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCancellationExceptionDispatchInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::ExceptionServices::ExceptionDispatchInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.Finalize
void System::Threading::Tasks::TaskExceptionHolder::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.TaskFactory
#include "System/Threading/Tasks/TaskFactory.hpp"
// Including type: System.Threading.Tasks.TaskFactory/System.Threading.Tasks.CompleteOnInvokePromise
#include "System/Threading/Tasks/TaskFactory_CompleteOnInvokePromise.hpp"
// Including type: System.Threading.Tasks.TaskScheduler
#include "System/Threading/Tasks/TaskScheduler.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken m_defaultCancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::Threading::Tasks::TaskFactory::dyn_m_defaultCancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::dyn_m_defaultCancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultCancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.TaskScheduler m_defaultScheduler
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskScheduler*& System::Threading::Tasks::TaskFactory::dyn_m_defaultScheduler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::dyn_m_defaultScheduler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultScheduler"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskScheduler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.TaskCreationOptions m_defaultCreationOptions
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCreationOptions& System::Threading::Tasks::TaskFactory::dyn_m_defaultCreationOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::dyn_m_defaultCreationOptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultCreationOptions"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCreationOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.TaskContinuationOptions m_defaultContinuationOptions
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskContinuationOptions& System::Threading::Tasks::TaskFactory::dyn_m_defaultContinuationOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::dyn_m_defaultContinuationOptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultContinuationOptions"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskContinuationOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.TaskFactory.GetDefaultScheduler
::System::Threading::Tasks::TaskScheduler* System::Threading::Tasks::TaskFactory::GetDefaultScheduler(::System::Threading::Tasks::Task* currTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::GetDefaultScheduler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultScheduler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currTask)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::TaskScheduler*, false>(this, ___internal__method, currTask);
}
// Autogenerated method: System.Threading.Tasks.TaskFactory.CheckCreationOptions
void System::Threading::Tasks::TaskFactory::CheckCreationOptions(::System::Threading::Tasks::TaskCreationOptions creationOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::CheckCreationOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskFactory", "CheckCreationOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(creationOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, creationOptions);
}
// Autogenerated method: System.Threading.Tasks.TaskFactory.StartNew
::System::Threading::Tasks::Task* System::Threading::Tasks::TaskFactory::StartNew(::System::Action* action, ::System::Threading::CancellationToken cancellationToken, ::System::Threading::Tasks::TaskCreationOptions creationOptions, ::System::Threading::Tasks::TaskScheduler* scheduler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::StartNew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(cancellationToken), ::il2cpp_utils::ExtractType(creationOptions), ::il2cpp_utils::ExtractType(scheduler)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, action, cancellationToken, creationOptions, scheduler);
}
// Autogenerated method: System.Threading.Tasks.TaskFactory.CheckFromAsyncOptions
void System::Threading::Tasks::TaskFactory::CheckFromAsyncOptions(::System::Threading::Tasks::TaskCreationOptions creationOptions, bool hasBeginMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::CheckFromAsyncOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskFactory", "CheckFromAsyncOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(creationOptions), ::il2cpp_utils::ExtractType(hasBeginMethod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, creationOptions, hasBeginMethod);
}
// Autogenerated method: System.Threading.Tasks.TaskFactory.CommonCWAnyLogic
::System::Threading::Tasks::Task_1<::System::Threading::Tasks::Task*>* System::Threading::Tasks::TaskFactory::CommonCWAnyLogic(::System::Collections::Generic::IList_1<::System::Threading::Tasks::Task*>* tasks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::CommonCWAnyLogic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskFactory", "CommonCWAnyLogic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tasks)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Threading::Tasks::Task*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tasks);
}
// Autogenerated method: System.Threading.Tasks.TaskFactory.CheckMultiTaskContinuationOptions
void System::Threading::Tasks::TaskFactory::CheckMultiTaskContinuationOptions(::System::Threading::Tasks::TaskContinuationOptions continuationOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::CheckMultiTaskContinuationOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskFactory", "CheckMultiTaskContinuationOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(continuationOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, continuationOptions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskFactory/System.Threading.Tasks.CompleteOnInvokePromise
#include "System/Threading/Tasks/TaskFactory_CompleteOnInvokePromise.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IList`1<System.Threading.Tasks.Task> _tasks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::System::Threading::Tasks::Task*>*& System::Threading::Tasks::TaskFactory::CompleteOnInvokePromise::dyn__tasks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::CompleteOnInvokePromise::dyn__tasks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tasks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IList_1<::System::Threading::Tasks::Task*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_firstTaskAlreadyCompleted
[[deprecated("Use field access instead!")]] int& System::Threading::Tasks::TaskFactory::CompleteOnInvokePromise::dyn_m_firstTaskAlreadyCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::CompleteOnInvokePromise::dyn_m_firstTaskAlreadyCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_firstTaskAlreadyCompleted"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.TaskFactory/System.Threading.Tasks.CompleteOnInvokePromise.Invoke
void System::Threading::Tasks::TaskFactory::CompleteOnInvokePromise::Invoke(::System::Threading::Tasks::Task* completingTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::CompleteOnInvokePromise::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completingTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, completingTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.TaskScheduler
#include "System/Threading/Tasks/TaskScheduler.hpp"
// Including type: System.Threading.Tasks.TaskScheduler/System.Threading.Tasks.SystemThreadingTasks_TaskSchedulerDebugView
#include "System/Threading/Tasks/TaskScheduler_SystemThreadingTasks_TaskSchedulerDebugView.hpp"
// Including type: System.Runtime.CompilerServices.ConditionalWeakTable`2
#include "System/Runtime/CompilerServices/ConditionalWeakTable_2.hpp"
// Including type: System.EventHandler`1
#include "System/EventHandler_1.hpp"
// Including type: System.Threading.Tasks.UnobservedTaskExceptionEventArgs
#include "System/Threading/Tasks/UnobservedTaskExceptionEventArgs.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Threading.Tasks.TaskScheduler,System.Object> s_activeTaskSchedulers
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Threading::Tasks::TaskScheduler*, ::Il2CppObject*>* System::Threading::Tasks::TaskScheduler::_get_s_activeTaskSchedulers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::_get_s_activeTaskSchedulers");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Threading::Tasks::TaskScheduler*, ::Il2CppObject*>*>("System.Threading.Tasks", "TaskScheduler", "s_activeTaskSchedulers")));
}
// Autogenerated static field setter
// Set static field: static private System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Threading.Tasks.TaskScheduler,System.Object> s_activeTaskSchedulers
void System::Threading::Tasks::TaskScheduler::_set_s_activeTaskSchedulers(::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Threading::Tasks::TaskScheduler*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::_set_s_activeTaskSchedulers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskScheduler", "s_activeTaskSchedulers", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.Tasks.TaskScheduler s_defaultTaskScheduler
::System::Threading::Tasks::TaskScheduler* System::Threading::Tasks::TaskScheduler::_get_s_defaultTaskScheduler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::_get_s_defaultTaskScheduler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskScheduler*>("System.Threading.Tasks", "TaskScheduler", "s_defaultTaskScheduler"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.Tasks.TaskScheduler s_defaultTaskScheduler
void System::Threading::Tasks::TaskScheduler::_set_s_defaultTaskScheduler(::System::Threading::Tasks::TaskScheduler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::_set_s_defaultTaskScheduler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskScheduler", "s_defaultTaskScheduler", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 s_taskSchedulerIdCounter
int System::Threading::Tasks::TaskScheduler::_get_s_taskSchedulerIdCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::_get_s_taskSchedulerIdCounter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "TaskScheduler", "s_taskSchedulerIdCounter"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 s_taskSchedulerIdCounter
void System::Threading::Tasks::TaskScheduler::_set_s_taskSchedulerIdCounter(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::_set_s_taskSchedulerIdCounter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskScheduler", "s_taskSchedulerIdCounter", value));
}
// Autogenerated static field getter
// Get static field: static private System.EventHandler`1<System.Threading.Tasks.UnobservedTaskExceptionEventArgs> _unobservedTaskException
::System::EventHandler_1<::System::Threading::Tasks::UnobservedTaskExceptionEventArgs*>* System::Threading::Tasks::TaskScheduler::_get__unobservedTaskException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::_get__unobservedTaskException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::EventHandler_1<::System::Threading::Tasks::UnobservedTaskExceptionEventArgs*>*>("System.Threading.Tasks", "TaskScheduler", "_unobservedTaskException"));
}
// Autogenerated static field setter
// Set static field: static private System.EventHandler`1<System.Threading.Tasks.UnobservedTaskExceptionEventArgs> _unobservedTaskException
void System::Threading::Tasks::TaskScheduler::_set__unobservedTaskException(::System::EventHandler_1<::System::Threading::Tasks::UnobservedTaskExceptionEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::_set__unobservedTaskException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskScheduler", "_unobservedTaskException", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object _unobservedTaskExceptionLockObject
::Il2CppObject* System::Threading::Tasks::TaskScheduler::_get__unobservedTaskExceptionLockObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::_get__unobservedTaskExceptionLockObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Threading.Tasks", "TaskScheduler", "_unobservedTaskExceptionLockObject"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object _unobservedTaskExceptionLockObject
void System::Threading::Tasks::TaskScheduler::_set__unobservedTaskExceptionLockObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::_set__unobservedTaskExceptionLockObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskScheduler", "_unobservedTaskExceptionLockObject", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_taskSchedulerId
[[deprecated("Use field access instead!")]] int& System::Threading::Tasks::TaskScheduler::dyn_m_taskSchedulerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::dyn_m_taskSchedulerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_taskSchedulerId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.get_RequiresAtomicStartTransition
bool System::Threading::Tasks::TaskScheduler::get_RequiresAtomicStartTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::get_RequiresAtomicStartTransition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequiresAtomicStartTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.get_Default
::System::Threading::Tasks::TaskScheduler* System::Threading::Tasks::TaskScheduler::get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::get_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskScheduler", "get_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::TaskScheduler*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.get_Current
::System::Threading::Tasks::TaskScheduler* System::Threading::Tasks::TaskScheduler::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskScheduler", "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::TaskScheduler*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.get_InternalCurrent
::System::Threading::Tasks::TaskScheduler* System::Threading::Tasks::TaskScheduler::get_InternalCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::get_InternalCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskScheduler", "get_InternalCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::TaskScheduler*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.get_Id
int System::Threading::Tasks::TaskScheduler::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::get_Id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler..cctor
void System::Threading::Tasks::TaskScheduler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskScheduler", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.QueueTask
void System::Threading::Tasks::TaskScheduler::QueueTask(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::QueueTask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline
bool System::Threading::Tasks::TaskScheduler::TryExecuteTaskInline(::System::Threading::Tasks::Task* task, bool taskWasPreviouslyQueued) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::TryExecuteTaskInline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryExecuteTaskInline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task), ::il2cpp_utils::ExtractType(taskWasPreviouslyQueued)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, task, taskWasPreviouslyQueued);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.TryRunInline
bool System::Threading::Tasks::TaskScheduler::TryRunInline(::System::Threading::Tasks::Task* task, bool taskWasPreviouslyQueued) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::TryRunInline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryRunInline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task), ::il2cpp_utils::ExtractType(taskWasPreviouslyQueued)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, task, taskWasPreviouslyQueued);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.TryDequeue
bool System::Threading::Tasks::TaskScheduler::TryDequeue(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::TryDequeue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDequeue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, task);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.NotifyWorkItemProgress
void System::Threading::Tasks::TaskScheduler::NotifyWorkItemProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::NotifyWorkItemProgress");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyWorkItemProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.InternalQueueTask
void System::Threading::Tasks::TaskScheduler::InternalQueueTask(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::InternalQueueTask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalQueueTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.AddToActiveTaskSchedulers
void System::Threading::Tasks::TaskScheduler::AddToActiveTaskSchedulers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::AddToActiveTaskSchedulers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToActiveTaskSchedulers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.PublishUnobservedTaskException
void System::Threading::Tasks::TaskScheduler::PublishUnobservedTaskException(::Il2CppObject* sender, ::System::Threading::Tasks::UnobservedTaskExceptionEventArgs* ueea) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::PublishUnobservedTaskException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskScheduler", "PublishUnobservedTaskException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(ueea)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sender, ueea);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.UnobservedTaskExceptionEventArgs
#include "System/Threading/Tasks/UnobservedTaskExceptionEventArgs.hpp"
// Including type: System.AggregateException
#include "System/AggregateException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.AggregateException m_exception
[[deprecated("Use field access instead!")]] ::System::AggregateException*& System::Threading::Tasks::UnobservedTaskExceptionEventArgs::dyn_m_exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::UnobservedTaskExceptionEventArgs::dyn_m_exception");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_exception"))->offset;
  return *reinterpret_cast<::System::AggregateException**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_observed
[[deprecated("Use field access instead!")]] bool& System::Threading::Tasks::UnobservedTaskExceptionEventArgs::dyn_m_observed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::UnobservedTaskExceptionEventArgs::dyn_m_observed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_observed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskSchedulerException
#include "System/Threading/Tasks/TaskSchedulerException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.TaskToApm
#include "System/Threading/Tasks/TaskToApm.hpp"
// Including type: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.TaskWrapperAsyncResult
#include "System/Threading/Tasks/TaskToApm_TaskWrapperAsyncResult.hpp"
// Including type: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.<>c__DisplayClass3_0
#include "System/Threading/Tasks/TaskToApm_--c__DisplayClass3_0.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Tasks.TaskToApm.Begin
::System::IAsyncResult* System::Threading::Tasks::TaskToApm::Begin(::System::Threading::Tasks::Task* task, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::Begin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskToApm", "Begin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, task, callback, state);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm.End
void System::Threading::Tasks::TaskToApm::End(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::End");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskToApm", "End", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asyncResult);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm.InvokeCallbackWhenTaskCompletes
void System::Threading::Tasks::TaskToApm::InvokeCallbackWhenTaskCompletes(::System::Threading::Tasks::Task* antecedent, ::System::AsyncCallback* callback, ::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::InvokeCallbackWhenTaskCompletes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskToApm", "InvokeCallbackWhenTaskCompletes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(antecedent), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, antecedent, callback, asyncResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.TaskWrapperAsyncResult
#include "System/Threading/Tasks/TaskToApm_TaskWrapperAsyncResult.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Threading.Tasks.Task Task
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::dyn_Task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::dyn_Task");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Task"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object m_state
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::dyn_m_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::dyn_m_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_state"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean m_completedSynchronously
[[deprecated("Use field access instead!")]] bool& System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::dyn_m_completedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::dyn_m_completedSynchronously");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_completedSynchronously"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.TaskWrapperAsyncResult.System.IAsyncResult.get_AsyncState
::Il2CppObject* System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::System_IAsyncResult_get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::System.IAsyncResult.get_AsyncState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IAsyncResult.get_AsyncState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.TaskWrapperAsyncResult.System.IAsyncResult.get_CompletedSynchronously
bool System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::System_IAsyncResult_get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::System.IAsyncResult.get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IAsyncResult.get_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.TaskWrapperAsyncResult.System.IAsyncResult.get_IsCompleted
bool System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::System_IAsyncResult_get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::System.IAsyncResult.get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IAsyncResult.get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.TaskWrapperAsyncResult.System.IAsyncResult.get_AsyncWaitHandle
::System::Threading::WaitHandle* System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::System_IAsyncResult_get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::System.IAsyncResult.get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IAsyncResult.get_AsyncWaitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.<>c__DisplayClass3_0
#include "System/Threading/Tasks/TaskToApm_--c__DisplayClass3_0.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.AsyncCallback callback
[[deprecated("Use field access instead!")]] ::System::AsyncCallback*& System::Threading::Tasks::TaskToApm::$$c__DisplayClass3_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::$$c__DisplayClass3_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IAsyncResult asyncResult
[[deprecated("Use field access instead!")]] ::System::IAsyncResult*& System::Threading::Tasks::TaskToApm::$$c__DisplayClass3_0::dyn_asyncResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::$$c__DisplayClass3_0::dyn_asyncResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncResult"))->offset;
  return *reinterpret_cast<::System::IAsyncResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.<>c__DisplayClass3_0.<InvokeCallbackWhenTaskCompletes>b__0
void System::Threading::Tasks::TaskToApm::$$c__DisplayClass3_0::$InvokeCallbackWhenTaskCompletes$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::$$c__DisplayClass3_0::<InvokeCallbackWhenTaskCompletes>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InvokeCallbackWhenTaskCompletes>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.ThreadPoolTaskScheduler
#include "System/Threading/Tasks/ThreadPoolTaskScheduler.hpp"
// Including type: System.Threading.ParameterizedThreadStart
#include "System/Threading/ParameterizedThreadStart.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.ParameterizedThreadStart s_longRunningThreadWork
::System::Threading::ParameterizedThreadStart* System::Threading::Tasks::ThreadPoolTaskScheduler::_get_s_longRunningThreadWork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ThreadPoolTaskScheduler::_get_s_longRunningThreadWork");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ParameterizedThreadStart*>("System.Threading.Tasks", "ThreadPoolTaskScheduler", "s_longRunningThreadWork"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.ParameterizedThreadStart s_longRunningThreadWork
void System::Threading::Tasks::ThreadPoolTaskScheduler::_set_s_longRunningThreadWork(::System::Threading::ParameterizedThreadStart* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ThreadPoolTaskScheduler::_set_s_longRunningThreadWork");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "ThreadPoolTaskScheduler", "s_longRunningThreadWork", value));
}
// Autogenerated method: System.Threading.Tasks.ThreadPoolTaskScheduler.LongRunningThreadWork
void System::Threading::Tasks::ThreadPoolTaskScheduler::LongRunningThreadWork(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ThreadPoolTaskScheduler::LongRunningThreadWork");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "ThreadPoolTaskScheduler", "LongRunningThreadWork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Tasks.ThreadPoolTaskScheduler.get_RequiresAtomicStartTransition
bool System::Threading::Tasks::ThreadPoolTaskScheduler::get_RequiresAtomicStartTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ThreadPoolTaskScheduler::get_RequiresAtomicStartTransition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequiresAtomicStartTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.ThreadPoolTaskScheduler..cctor
void System::Threading::Tasks::ThreadPoolTaskScheduler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ThreadPoolTaskScheduler::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "ThreadPoolTaskScheduler", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.ThreadPoolTaskScheduler.QueueTask
void System::Threading::Tasks::ThreadPoolTaskScheduler::QueueTask(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ThreadPoolTaskScheduler::QueueTask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated method: System.Threading.Tasks.ThreadPoolTaskScheduler.TryExecuteTaskInline
bool System::Threading::Tasks::ThreadPoolTaskScheduler::TryExecuteTaskInline(::System::Threading::Tasks::Task* task, bool taskWasPreviouslyQueued) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ThreadPoolTaskScheduler::TryExecuteTaskInline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryExecuteTaskInline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task), ::il2cpp_utils::ExtractType(taskWasPreviouslyQueued)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, task, taskWasPreviouslyQueued);
}
// Autogenerated method: System.Threading.Tasks.ThreadPoolTaskScheduler.TryDequeue
bool System::Threading::Tasks::ThreadPoolTaskScheduler::TryDequeue(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ThreadPoolTaskScheduler::TryDequeue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDequeue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, task);
}
// Autogenerated method: System.Threading.Tasks.ThreadPoolTaskScheduler.NotifyWorkItemProgress
void System::Threading::Tasks::ThreadPoolTaskScheduler::NotifyWorkItemProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ThreadPoolTaskScheduler::NotifyWorkItemProgress");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyWorkItemProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.SecurityCriticalAttribute
#include "System/Security/SecurityCriticalAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.SecurityDocument
#include "System/Security/SecurityDocument.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Byte[] m_data
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::SecurityDocument::dyn_m_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::dyn_m_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.SecurityDocument.GuaranteeSize
void System::Security::SecurityDocument::GuaranteeSize(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::GuaranteeSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GuaranteeSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: System.Security.SecurityDocument.AddString
void System::Security::SecurityDocument::AddString(::StringW str, ByRef<int> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::AddString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str, byref(position));
}
// Autogenerated method: System.Security.SecurityDocument.AppendString
void System::Security::SecurityDocument::AppendString(::StringW str, ByRef<int> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::AppendString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str, byref(position));
}
// Autogenerated method: System.Security.SecurityDocument.EncodedStringSize
int System::Security::SecurityDocument::EncodedStringSize(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::EncodedStringSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityDocument", "EncodedStringSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Security.SecurityDocument.GetString
::StringW System::Security::SecurityDocument::GetString(ByRef<int> position, bool bCreate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(bCreate)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, byref(position), bCreate);
}
// Autogenerated method: System.Security.SecurityDocument.AddToken
void System::Security::SecurityDocument::AddToken(uint8_t b, ByRef<int> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::AddToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, b, byref(position));
}
// Autogenerated method: System.Security.SecurityDocument.GetRootElement
::System::Security::SecurityElement* System::Security::SecurityDocument::GetRootElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::GetRootElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecurityDocument.GetElement
::System::Security::SecurityElement* System::Security::SecurityDocument::GetElement(int position, bool bCreate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(bCreate)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method, position, bCreate);
}
// Autogenerated method: System.Security.SecurityDocument.InternalGetElement
::System::Security::SecurityElement* System::Security::SecurityDocument::InternalGetElement(ByRef<int> position, bool bCreate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::InternalGetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(bCreate)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method, byref(position), bCreate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.CodeAccessPermission
#include "System/Security/CodeAccessPermission.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
// Including type: System.Security.Permissions.PermissionState
#include "System/Security/Permissions/PermissionState.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.CodeAccessPermission.Demand
void System::Security::CodeAccessPermission::Demand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::Demand");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Demand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.CodeAccessPermission.IsSubsetOf
bool System::Security::CodeAccessPermission::IsSubsetOf(::System::Security::IPermission* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::IsSubsetOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSubsetOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, target);
}
// Autogenerated method: System.Security.CodeAccessPermission.ToXml
::System::Security::SecurityElement* System::Security::CodeAccessPermission::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::ToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.CodeAccessPermission.Element
::System::Security::SecurityElement* System::Security::CodeAccessPermission::Element(int version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::Element");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Element", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method, version);
}
// Autogenerated method: System.Security.CodeAccessPermission.CheckPermissionState
::System::Security::Permissions::PermissionState System::Security::CodeAccessPermission::CheckPermissionState(::System::Security::Permissions::PermissionState state, bool allowUnrestricted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::CheckPermissionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "CodeAccessPermission", "CheckPermissionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(allowUnrestricted)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Permissions::PermissionState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state, allowUnrestricted);
}
// Autogenerated method: System.Security.CodeAccessPermission.ThrowInvalidPermission
void System::Security::CodeAccessPermission::ThrowInvalidPermission(::System::Security::IPermission* target, ::System::Type* expected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::ThrowInvalidPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "CodeAccessPermission", "ThrowInvalidPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(expected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, expected);
}
// Autogenerated method: System.Security.CodeAccessPermission.System.Security.IPermission.Demand
void System::Security::CodeAccessPermission::System_Security_IPermission_Demand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::System.Security.IPermission.Demand");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Security.IPermission.Demand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.CodeAccessPermission.Equals
bool System::Security::CodeAccessPermission::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Security.CodeAccessPermission.GetHashCode
int System::Security::CodeAccessPermission::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.CodeAccessPermission.ToString
::StringW System::Security::CodeAccessPermission::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.IPermission
#include "System/Security/IPermission.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.IPermission.Demand
void System::Security::IPermission::Demand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::IPermission::Demand");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Demand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.IPermission.IsSubsetOf
bool System::Security::IPermission::IsSubsetOf(::System::Security::IPermission* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::IPermission::IsSubsetOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSubsetOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, target);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.ISecurityEncodable
#include "System/Security/ISecurityEncodable.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.ISecurityEncodable.ToXml
::System::Security::SecurityElement* System::Security::ISecurityEncodable::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::ISecurityEncodable::ToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.NamedPermissionSet
#include "System/Security/NamedPermissionSet.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Security::NamedPermissionSet::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String description
[[deprecated("Use field access instead!")]] ::StringW& System::Security::NamedPermissionSet::dyn_description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::dyn_description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.NamedPermissionSet.get_Name
::StringW System::Security::NamedPermissionSet::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.NamedPermissionSet.set_Name
void System::Security::NamedPermissionSet::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.NamedPermissionSet.ToXml
::System::Security::SecurityElement* System::Security::NamedPermissionSet::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::ToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.NamedPermissionSet.Equals
bool System::Security::NamedPermissionSet::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Security.NamedPermissionSet.GetHashCode
int System::Security::NamedPermissionSet::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.PermissionSet
#include "System/Security/PermissionSet.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Security.IPermission
#include "System/Security/IPermission.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object[] psUnrestricted
::ArrayW<::Il2CppObject*> System::Security::PermissionSet::_get_psUnrestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::_get_psUnrestricted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("System.Security", "PermissionSet", "psUnrestricted"));
}
// Autogenerated static field setter
// Set static field: static private System.Object[] psUnrestricted
void System::Security::PermissionSet::_set_psUnrestricted(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::_set_psUnrestricted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "PermissionSet", "psUnrestricted", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object[] action
::ArrayW<::Il2CppObject*> System::Security::PermissionSet::_get_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::_get_action");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("System.Security", "PermissionSet", "action"));
}
// Autogenerated static field setter
// Set static field: static private System.Object[] action
void System::Security::PermissionSet::_set_action(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::_set_action");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "PermissionSet", "action", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Permissions.PermissionState state
[[deprecated("Use field access instead!")]] ::System::Security::Permissions::PermissionState& System::Security::PermissionSet::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::System::Security::Permissions::PermissionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Security::PermissionSet::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _declsec
[[deprecated("Use field access instead!")]] bool& System::Security::PermissionSet::dyn__declsec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::dyn__declsec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_declsec"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] _ignored
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& System::Security::PermissionSet::dyn__ignored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::dyn__ignored");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignored"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.PermissionSet.get_Count
int System::Security::PermissionSet::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.get_SyncRoot
::Il2CppObject* System::Security::PermissionSet::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet..cctor
void System::Security::PermissionSet::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "PermissionSet", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.CopyTo
void System::Security::PermissionSet::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Security.PermissionSet.Demand
void System::Security::PermissionSet::Demand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::Demand");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Demand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.CasOnlyDemand
void System::Security::PermissionSet::CasOnlyDemand(int skip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::CasOnlyDemand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CasOnlyDemand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, skip);
}
// Autogenerated method: System.Security.PermissionSet.GetEnumerator
::System::Collections::IEnumerator* System::Security::PermissionSet::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.IsEmpty
bool System::Security::PermissionSet::IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.IsUnrestricted
bool System::Security::PermissionSet::IsUnrestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::IsUnrestricted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsUnrestricted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.ToXml
::System::Security::SecurityElement* System::Security::PermissionSet::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::ToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::Security::PermissionSet::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Security.PermissionSet.ToString
::StringW System::Security::PermissionSet::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.Equals
bool System::Security::PermissionSet::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Security.PermissionSet.GetHashCode
int System::Security::PermissionSet::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.SecureString
#include "System/Security/SecureString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 length
[[deprecated("Use field access instead!")]] int& System::Security::SecureString::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Security::SecureString::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] data
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::SecureString::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.SecureString.get_Length
int System::Security::SecureString::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecureString.Dispose
void System::Security::SecureString::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecureString.Encrypt
void System::Security::SecureString::Encrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecureString.Decrypt
void System::Security::SecureString::Decrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecureString.Alloc
void System::Security::SecureString::Alloc(int length, bool realloc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::Alloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Alloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(realloc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, length, realloc);
}
// Autogenerated method: System.Security.SecureString.GetBuffer
::ArrayW<uint8_t> System::Security::SecureString::GetBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::GetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.SecurityElementType
#include "System/Security/SecurityElementType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.SecurityElementType Regular
::System::Security::SecurityElementType System::Security::SecurityElementType::_get_Regular() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::_get_Regular");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::SecurityElementType>("System.Security", "SecurityElementType", "Regular"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.SecurityElementType Regular
void System::Security::SecurityElementType::_set_Regular(::System::Security::SecurityElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::_set_Regular");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElementType", "Regular", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.SecurityElementType Format
::System::Security::SecurityElementType System::Security::SecurityElementType::_get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::_get_Format");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::SecurityElementType>("System.Security", "SecurityElementType", "Format"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.SecurityElementType Format
void System::Security::SecurityElementType::_set_Format(::System::Security::SecurityElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::_set_Format");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElementType", "Format", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.SecurityElementType Comment
::System::Security::SecurityElementType System::Security::SecurityElementType::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::SecurityElementType>("System.Security", "SecurityElementType", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.SecurityElementType Comment
void System::Security::SecurityElementType::_set_Comment(::System::Security::SecurityElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElementType", "Comment", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::SecurityElementType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
// Including type: System.Security.SecurityElement/System.Security.SecurityAttribute
#include "System/Security/SecurityElement_SecurityAttribute.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] invalid_tag_chars
::ArrayW<::Il2CppChar> System::Security::SecurityElement::_get_invalid_tag_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_get_invalid_tag_chars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Security", "SecurityElement", "invalid_tag_chars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] invalid_tag_chars
void System::Security::SecurityElement::_set_invalid_tag_chars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_set_invalid_tag_chars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElement", "invalid_tag_chars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] invalid_text_chars
::ArrayW<::Il2CppChar> System::Security::SecurityElement::_get_invalid_text_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_get_invalid_text_chars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Security", "SecurityElement", "invalid_text_chars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] invalid_text_chars
void System::Security::SecurityElement::_set_invalid_text_chars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_set_invalid_text_chars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElement", "invalid_text_chars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] invalid_attr_name_chars
::ArrayW<::Il2CppChar> System::Security::SecurityElement::_get_invalid_attr_name_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_get_invalid_attr_name_chars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Security", "SecurityElement", "invalid_attr_name_chars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] invalid_attr_name_chars
void System::Security::SecurityElement::_set_invalid_attr_name_chars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_set_invalid_attr_name_chars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElement", "invalid_attr_name_chars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] invalid_attr_value_chars
::ArrayW<::Il2CppChar> System::Security::SecurityElement::_get_invalid_attr_value_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_get_invalid_attr_value_chars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Security", "SecurityElement", "invalid_attr_value_chars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] invalid_attr_value_chars
void System::Security::SecurityElement::_set_invalid_attr_value_chars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_set_invalid_attr_value_chars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElement", "invalid_attr_value_chars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] invalid_chars
::ArrayW<::Il2CppChar> System::Security::SecurityElement::_get_invalid_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_get_invalid_chars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Security", "SecurityElement", "invalid_chars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] invalid_chars
void System::Security::SecurityElement::_set_invalid_chars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_set_invalid_chars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElement", "invalid_chars", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String text
[[deprecated("Use field access instead!")]] ::StringW& System::Security::SecurityElement::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String tag
[[deprecated("Use field access instead!")]] ::StringW& System::Security::SecurityElement::dyn_tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::dyn_tag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tag"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList attributes
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Security::SecurityElement::dyn_attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::dyn_attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributes"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList children
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Security::SecurityElement::dyn_children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::dyn_children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "children"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.SecurityElement.get_Attributes
::System::Collections::Hashtable* System::Security::SecurityElement::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::get_Attributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Hashtable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecurityElement.get_Children
::System::Collections::ArrayList* System::Security::SecurityElement::get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::get_Children");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Children", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecurityElement.get_Tag
::StringW System::Security::SecurityElement::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::get_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecurityElement.get_Text
::StringW System::Security::SecurityElement::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecurityElement.set_Text
void System::Security::SecurityElement::set_Text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::set_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.SecurityElement.set_m_strText
void System::Security::SecurityElement::set_m_strText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::set_m_strText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_m_strText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.SecurityElement..cctor
void System::Security::SecurityElement::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.SecurityElement.AddAttribute
void System::Security::SecurityElement::AddAttribute(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::AddAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Security.SecurityElement.AddChild
void System::Security::SecurityElement::AddChild(::System::Security::SecurityElement* child) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::AddChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, child);
}
// Autogenerated method: System.Security.SecurityElement.Escape
::StringW System::Security::SecurityElement::Escape(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::Escape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", "Escape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Security.SecurityElement.Unescape
::StringW System::Security::SecurityElement::Unescape(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::Unescape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", "Unescape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Security.SecurityElement.FromString
::System::Security::SecurityElement* System::Security::SecurityElement::FromString(::StringW xml) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::FromString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xml)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xml);
}
// Autogenerated method: System.Security.SecurityElement.IsValidAttributeName
bool System::Security::SecurityElement::IsValidAttributeName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::IsValidAttributeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", "IsValidAttributeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Security.SecurityElement.IsValidAttributeValue
bool System::Security::SecurityElement::IsValidAttributeValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::IsValidAttributeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", "IsValidAttributeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Security.SecurityElement.IsValidTag
bool System::Security::SecurityElement::IsValidTag(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::IsValidTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", "IsValidTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: System.Security.SecurityElement.IsValidText
bool System::Security::SecurityElement::IsValidText(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::IsValidText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", "IsValidText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text);
}
// Autogenerated method: System.Security.SecurityElement.SearchForChildByTag
::System::Security::SecurityElement* System::Security::SecurityElement::SearchForChildByTag(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::SearchForChildByTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchForChildByTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method, tag);
}
// Autogenerated method: System.Security.SecurityElement.ToXml
void System::Security::SecurityElement::ToXml(ByRef<::System::Text::StringBuilder*> s, int level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::ToXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(s), level);
}
// Autogenerated method: System.Security.SecurityElement.GetAttribute
::System::Security::SecurityElement::SecurityAttribute* System::Security::SecurityElement::GetAttribute(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::GetAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement::SecurityAttribute*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Security.SecurityElement.SearchForTextOfLocalName
::StringW System::Security::SecurityElement::SearchForTextOfLocalName(::StringW strLocalName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::SearchForTextOfLocalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchForTextOfLocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strLocalName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, strLocalName);
}
// Autogenerated method: System.Security.SecurityElement.ToString
::StringW System::Security::SecurityElement::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.SecurityElement/System.Security.SecurityAttribute
#include "System/Security/SecurityElement_SecurityAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _name
[[deprecated("Use field access instead!")]] ::StringW& System::Security::SecurityElement::SecurityAttribute::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::SecurityAttribute::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _value
[[deprecated("Use field access instead!")]] ::StringW& System::Security::SecurityElement::SecurityAttribute::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::SecurityAttribute::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.SecurityElement/System.Security.SecurityAttribute.get_Name
::StringW System::Security::SecurityElement::SecurityAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::SecurityAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecurityElement/System.Security.SecurityAttribute.get_Value
::StringW System::Security::SecurityElement::SecurityAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::SecurityAttribute::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.SecurityException
#include "System/Security/SecurityException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String permissionState
[[deprecated("Use field access instead!")]] ::StringW& System::Security::SecurityException::dyn_permissionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityException::dyn_permissionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "permissionState"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.SecurityException.GetObjectData
void System::Security::SecurityException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Security.SecurityException.ToString
::StringW System::Security::SecurityException::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityException::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.SecurityManager
#include "System/Security/SecurityManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.SecurityManager.get_SecurityEnabled
bool System::Security::SecurityManager::get_SecurityEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityManager::get_SecurityEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityManager", "get_SecurityEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.SecurityManager.CheckElevatedPermissions
bool System::Security::SecurityManager::CheckElevatedPermissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityManager::CheckElevatedPermissions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityManager", "CheckElevatedPermissions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.SecurityManager.EnsureElevatedPermissions
void System::Security::SecurityManager::EnsureElevatedPermissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityManager::EnsureElevatedPermissions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityManager", "EnsureElevatedPermissions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.XmlSyntaxException
#include "System/Security/XmlSyntaxException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Policy.Evidence
#include "System/Security/Policy/Evidence.hpp"
// Including type: System.Security.Policy.Evidence/System.Security.Policy.EvidenceEnumerator
#include "System/Security/Policy/Evidence_EvidenceEnumerator.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _locked
[[deprecated("Use field access instead!")]] bool& System::Security::Policy::Evidence::dyn__locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::dyn__locked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_locked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList hostEvidenceList
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Security::Policy::Evidence::dyn_hostEvidenceList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::dyn_hostEvidenceList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hostEvidenceList"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList assemblyEvidenceList
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Security::Policy::Evidence::dyn_assemblyEvidenceList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::dyn_assemblyEvidenceList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assemblyEvidenceList"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Policy.Evidence.get_Count
int System::Security::Policy::Evidence::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Policy.Evidence.get_SyncRoot
::Il2CppObject* System::Security::Policy::Evidence::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Policy.Evidence.CopyTo
void System::Security::Policy::Evidence::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Security.Policy.Evidence.GetEnumerator
::System::Collections::IEnumerator* System::Security::Policy::Evidence::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Policy.Evidence/System.Security.Policy.EvidenceEnumerator
#include "System/Security/Policy/Evidence_EvidenceEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator currentEnum
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& System::Security::Policy::Evidence::EvidenceEnumerator::dyn_currentEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::EvidenceEnumerator::dyn_currentEnum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentEnum"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator hostEnum
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& System::Security::Policy::Evidence::EvidenceEnumerator::dyn_hostEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::EvidenceEnumerator::dyn_hostEnum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hostEnum"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator assemblyEnum
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& System::Security::Policy::Evidence::EvidenceEnumerator::dyn_assemblyEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::EvidenceEnumerator::dyn_assemblyEnum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assemblyEnum"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Policy.Evidence/System.Security.Policy.EvidenceEnumerator.get_Current
::Il2CppObject* System::Security::Policy::Evidence::EvidenceEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::EvidenceEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Policy.Evidence/System.Security.Policy.EvidenceEnumerator.MoveNext
bool System::Security::Policy::Evidence::EvidenceEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::EvidenceEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Policy.Evidence/System.Security.Policy.EvidenceEnumerator.Reset
void System::Security::Policy::Evidence::EvidenceEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::EvidenceEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Permissions.PermissionState
#include "System/Security/Permissions/PermissionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.PermissionState Unrestricted
::System::Security::Permissions::PermissionState System::Security::Permissions::PermissionState::_get_Unrestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::PermissionState::_get_Unrestricted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::PermissionState>("System.Security.Permissions", "PermissionState", "Unrestricted"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.PermissionState Unrestricted
void System::Security::Permissions::PermissionState::_set_Unrestricted(::System::Security::Permissions::PermissionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::PermissionState::_set_Unrestricted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "PermissionState", "Unrestricted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.PermissionState None
::System::Security::Permissions::PermissionState System::Security::Permissions::PermissionState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::PermissionState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::PermissionState>("System.Security.Permissions", "PermissionState", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.PermissionState None
void System::Security::Permissions::PermissionState::_set_None(::System::Security::Permissions::PermissionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::PermissionState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "PermissionState", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Permissions::PermissionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::PermissionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Permissions.SecurityAction
#include "System/Security/Permissions/SecurityAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction Demand
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_Demand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_Demand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "Demand"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction Demand
void System::Security::Permissions::SecurityAction::_set_Demand(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_Demand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "Demand", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction Assert
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_Assert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_Assert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "Assert"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction Assert
void System::Security::Permissions::SecurityAction::_set_Assert(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_Assert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "Assert", value));
}
// [ObsoleteAttribute] Offset: 0x1082138
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction Deny
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_Deny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_Deny");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "Deny"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction Deny
void System::Security::Permissions::SecurityAction::_set_Deny(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_Deny");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "Deny", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction PermitOnly
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_PermitOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_PermitOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "PermitOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction PermitOnly
void System::Security::Permissions::SecurityAction::_set_PermitOnly(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_PermitOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "PermitOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction LinkDemand
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_LinkDemand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_LinkDemand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "LinkDemand"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction LinkDemand
void System::Security::Permissions::SecurityAction::_set_LinkDemand(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_LinkDemand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "LinkDemand", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction InheritanceDemand
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_InheritanceDemand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_InheritanceDemand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "InheritanceDemand"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction InheritanceDemand
void System::Security::Permissions::SecurityAction::_set_InheritanceDemand(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_InheritanceDemand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "InheritanceDemand", value));
}
// [ObsoleteAttribute] Offset: 0x1082170
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction RequestMinimum
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_RequestMinimum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_RequestMinimum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "RequestMinimum"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction RequestMinimum
void System::Security::Permissions::SecurityAction::_set_RequestMinimum(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_RequestMinimum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "RequestMinimum", value));
}
// [ObsoleteAttribute] Offset: 0x10821A8
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction RequestOptional
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_RequestOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_RequestOptional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "RequestOptional"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction RequestOptional
void System::Security::Permissions::SecurityAction::_set_RequestOptional(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_RequestOptional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "RequestOptional", value));
}
// [ObsoleteAttribute] Offset: 0x10821E0
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction RequestRefuse
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_RequestRefuse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_RequestRefuse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "RequestRefuse"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction RequestRefuse
void System::Security::Permissions::SecurityAction::_set_RequestRefuse(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_RequestRefuse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "RequestRefuse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Permissions::SecurityAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Permissions.SecurityPermission
#include "System/Security/Permissions/SecurityPermission.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Permissions.SecurityPermissionFlag flags
[[deprecated("Use field access instead!")]] ::System::Security::Permissions::SecurityPermissionFlag& System::Security::Permissions::SecurityPermission::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermission::dyn_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<::System::Security::Permissions::SecurityPermissionFlag*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Permissions.SecurityPermission.IsUnrestricted
bool System::Security::Permissions::SecurityPermission::IsUnrestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermission::IsUnrestricted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsUnrestricted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Permissions.SecurityPermission.IsEmpty
bool System::Security::Permissions::SecurityPermission::IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermission::IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Permissions.SecurityPermission.Cast
::System::Security::Permissions::SecurityPermission* System::Security::Permissions::SecurityPermission::Cast(::System::Security::IPermission* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermission::Cast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Permissions::SecurityPermission*, false>(this, ___internal__method, target);
}
// Autogenerated method: System.Security.Permissions.SecurityPermission.IsSubsetOf
bool System::Security::Permissions::SecurityPermission::IsSubsetOf(::System::Security::IPermission* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermission::IsSubsetOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSubsetOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, target);
}
// Autogenerated method: System.Security.Permissions.SecurityPermission.ToXml
::System::Security::SecurityElement* System::Security::Permissions::SecurityPermission::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermission::ToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Permissions.SecurityPermissionFlag
#include "System/Security/Permissions/SecurityPermissionFlag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag NoFlags
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_NoFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_NoFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "NoFlags"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag NoFlags
void System::Security::Permissions::SecurityPermissionFlag::_set_NoFlags(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_NoFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "NoFlags", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag Assertion
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_Assertion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_Assertion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "Assertion"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag Assertion
void System::Security::Permissions::SecurityPermissionFlag::_set_Assertion(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_Assertion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "Assertion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag UnmanagedCode
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_UnmanagedCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_UnmanagedCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "UnmanagedCode"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag UnmanagedCode
void System::Security::Permissions::SecurityPermissionFlag::_set_UnmanagedCode(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_UnmanagedCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "UnmanagedCode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag SkipVerification
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_SkipVerification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_SkipVerification");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "SkipVerification"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag SkipVerification
void System::Security::Permissions::SecurityPermissionFlag::_set_SkipVerification(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_SkipVerification");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "SkipVerification", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag Execution
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_Execution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_Execution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "Execution"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag Execution
void System::Security::Permissions::SecurityPermissionFlag::_set_Execution(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_Execution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "Execution", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag ControlThread
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_ControlThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_ControlThread");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "ControlThread"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag ControlThread
void System::Security::Permissions::SecurityPermissionFlag::_set_ControlThread(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_ControlThread");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "ControlThread", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag ControlEvidence
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_ControlEvidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_ControlEvidence");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "ControlEvidence"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag ControlEvidence
void System::Security::Permissions::SecurityPermissionFlag::_set_ControlEvidence(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_ControlEvidence");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "ControlEvidence", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag ControlPolicy
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_ControlPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_ControlPolicy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "ControlPolicy"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag ControlPolicy
void System::Security::Permissions::SecurityPermissionFlag::_set_ControlPolicy(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_ControlPolicy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "ControlPolicy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag SerializationFormatter
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_SerializationFormatter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_SerializationFormatter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "SerializationFormatter"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag SerializationFormatter
void System::Security::Permissions::SecurityPermissionFlag::_set_SerializationFormatter(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_SerializationFormatter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "SerializationFormatter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag ControlDomainPolicy
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_ControlDomainPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_ControlDomainPolicy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "ControlDomainPolicy"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag ControlDomainPolicy
void System::Security::Permissions::SecurityPermissionFlag::_set_ControlDomainPolicy(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_ControlDomainPolicy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "ControlDomainPolicy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag ControlPrincipal
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_ControlPrincipal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_ControlPrincipal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "ControlPrincipal"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag ControlPrincipal
void System::Security::Permissions::SecurityPermissionFlag::_set_ControlPrincipal(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_ControlPrincipal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "ControlPrincipal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag ControlAppDomain
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_ControlAppDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_ControlAppDomain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "ControlAppDomain"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag ControlAppDomain
void System::Security::Permissions::SecurityPermissionFlag::_set_ControlAppDomain(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_ControlAppDomain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "ControlAppDomain", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag RemotingConfiguration
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_RemotingConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_RemotingConfiguration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "RemotingConfiguration"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag RemotingConfiguration
void System::Security::Permissions::SecurityPermissionFlag::_set_RemotingConfiguration(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_RemotingConfiguration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "RemotingConfiguration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag Infrastructure
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_Infrastructure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_Infrastructure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "Infrastructure"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag Infrastructure
void System::Security::Permissions::SecurityPermissionFlag::_set_Infrastructure(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_Infrastructure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "Infrastructure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag BindingRedirects
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_BindingRedirects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_BindingRedirects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "BindingRedirects"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag BindingRedirects
void System::Security::Permissions::SecurityPermissionFlag::_set_BindingRedirects(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_BindingRedirects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "BindingRedirects", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag AllFlags
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_AllFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_AllFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "AllFlags"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag AllFlags
void System::Security::Permissions::SecurityPermissionFlag::_set_AllFlags(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_AllFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "AllFlags", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Permissions::SecurityPermissionFlag::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.AccessControlSections
#include "System/Security/AccessControl/AccessControlSections.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AccessControlSections None
::System::Security::AccessControl::AccessControlSections System::Security::AccessControl::AccessControlSections::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AccessControlSections::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AccessControlSections>("System.Security.AccessControl", "AccessControlSections", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AccessControlSections None
void System::Security::AccessControl::AccessControlSections::_set_None(::System::Security::AccessControl::AccessControlSections value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AccessControlSections::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AccessControlSections", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AccessControlSections Audit
::System::Security::AccessControl::AccessControlSections System::Security::AccessControl::AccessControlSections::_get_Audit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AccessControlSections::_get_Audit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AccessControlSections>("System.Security.AccessControl", "AccessControlSections", "Audit"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AccessControlSections Audit
void System::Security::AccessControl::AccessControlSections::_set_Audit(::System::Security::AccessControl::AccessControlSections value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AccessControlSections::_set_Audit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AccessControlSections", "Audit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AccessControlSections Access
::System::Security::AccessControl::AccessControlSections System::Security::AccessControl::AccessControlSections::_get_Access() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AccessControlSections::_get_Access");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AccessControlSections>("System.Security.AccessControl", "AccessControlSections", "Access"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AccessControlSections Access
void System::Security::AccessControl::AccessControlSections::_set_Access(::System::Security::AccessControl::AccessControlSections value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AccessControlSections::_set_Access");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AccessControlSections", "Access", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AccessControlSections Owner
::System::Security::AccessControl::AccessControlSections System::Security::AccessControl::AccessControlSections::_get_Owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AccessControlSections::_get_Owner");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AccessControlSections>("System.Security.AccessControl", "AccessControlSections", "Owner"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AccessControlSections Owner
void System::Security::AccessControl::AccessControlSections::_set_Owner(::System::Security::AccessControl::AccessControlSections value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AccessControlSections::_set_Owner");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AccessControlSections", "Owner", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AccessControlSections Group
::System::Security::AccessControl::AccessControlSections System::Security::AccessControl::AccessControlSections::_get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AccessControlSections::_get_Group");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AccessControlSections>("System.Security.AccessControl", "AccessControlSections", "Group"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AccessControlSections Group
void System::Security::AccessControl::AccessControlSections::_set_Group(::System::Security::AccessControl::AccessControlSections value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AccessControlSections::_set_Group");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AccessControlSections", "Group", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AccessControlSections All
::System::Security::AccessControl::AccessControlSections System::Security::AccessControl::AccessControlSections::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AccessControlSections::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AccessControlSections>("System.Security.AccessControl", "AccessControlSections", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AccessControlSections All
void System::Security::AccessControl::AccessControlSections::_set_All(::System::Security::AccessControl::AccessControlSections value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AccessControlSections::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AccessControlSections", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::AccessControl::AccessControlSections::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AccessControlSections::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.AccessControlType
#include "System/Security/AccessControl/AccessControlType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AccessControlType Allow
::System::Security::AccessControl::AccessControlType System::Security::AccessControl::AccessControlType::_get_Allow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AccessControlType::_get_Allow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AccessControlType>("System.Security.AccessControl", "AccessControlType", "Allow"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AccessControlType Allow
void System::Security::AccessControl::AccessControlType::_set_Allow(::System::Security::AccessControl::AccessControlType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AccessControlType::_set_Allow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AccessControlType", "Allow", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AccessControlType Deny
::System::Security::AccessControl::AccessControlType System::Security::AccessControl::AccessControlType::_get_Deny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AccessControlType::_get_Deny");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AccessControlType>("System.Security.AccessControl", "AccessControlType", "Deny"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AccessControlType Deny
void System::Security::AccessControl::AccessControlType::_set_Deny(::System::Security::AccessControl::AccessControlType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AccessControlType::_set_Deny");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AccessControlType", "Deny", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::AccessControl::AccessControlType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AccessControlType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.AccessRule
#include "System/Security/AccessControl/AccessRule.hpp"
// Including type: System.Security.Principal.IdentityReference
#include "System/Security/Principal/IdentityReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.AccessControl.AccessControlType type
[[deprecated("Use field access instead!")]] ::System::Security::AccessControl::AccessControlType& System::Security::AccessControl::AccessRule::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AccessRule::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Security::AccessControl::AccessControlType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.AccessControl.AccessRule.get_AccessControlType
::System::Security::AccessControl::AccessControlType System::Security::AccessControl::AccessRule::get_AccessControlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AccessRule::get_AccessControlType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AccessControlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::AccessControlType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.AccessControl.AceEnumerator
#include "System/Security/AccessControl/AceEnumerator.hpp"
// Including type: System.Security.AccessControl.GenericAcl
#include "System/Security/AccessControl/GenericAcl.hpp"
// Including type: System.Security.AccessControl.GenericAce
#include "System/Security/AccessControl/GenericAce.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.AccessControl.GenericAcl owner
[[deprecated("Use field access instead!")]] ::System::Security::AccessControl::GenericAcl*& System::Security::AccessControl::AceEnumerator::dyn_owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceEnumerator::dyn_owner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "owner"))->offset;
  return *reinterpret_cast<::System::Security::AccessControl::GenericAcl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 current
[[deprecated("Use field access instead!")]] int& System::Security::AccessControl::AceEnumerator::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceEnumerator::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.AccessControl.AceEnumerator.get_Current
::System::Security::AccessControl::GenericAce* System::Security::AccessControl::AceEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::GenericAce*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.AceEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Security::AccessControl::AceEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.AceEnumerator.MoveNext
bool System::Security::AccessControl::AceEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.AceEnumerator.Reset
void System::Security::AccessControl::AceEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.AceFlags
#include "System/Security/AccessControl/AceFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceFlags None
::System::Security::AccessControl::AceFlags System::Security::AccessControl::AceFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceFlags>("System.Security.AccessControl", "AceFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceFlags None
void System::Security::AccessControl::AceFlags::_set_None(::System::Security::AccessControl::AceFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceFlags ObjectInherit
::System::Security::AccessControl::AceFlags System::Security::AccessControl::AceFlags::_get_ObjectInherit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::_get_ObjectInherit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceFlags>("System.Security.AccessControl", "AceFlags", "ObjectInherit"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceFlags ObjectInherit
void System::Security::AccessControl::AceFlags::_set_ObjectInherit(::System::Security::AccessControl::AceFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::_set_ObjectInherit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceFlags", "ObjectInherit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceFlags ContainerInherit
::System::Security::AccessControl::AceFlags System::Security::AccessControl::AceFlags::_get_ContainerInherit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::_get_ContainerInherit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceFlags>("System.Security.AccessControl", "AceFlags", "ContainerInherit"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceFlags ContainerInherit
void System::Security::AccessControl::AceFlags::_set_ContainerInherit(::System::Security::AccessControl::AceFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::_set_ContainerInherit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceFlags", "ContainerInherit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceFlags NoPropagateInherit
::System::Security::AccessControl::AceFlags System::Security::AccessControl::AceFlags::_get_NoPropagateInherit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::_get_NoPropagateInherit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceFlags>("System.Security.AccessControl", "AceFlags", "NoPropagateInherit"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceFlags NoPropagateInherit
void System::Security::AccessControl::AceFlags::_set_NoPropagateInherit(::System::Security::AccessControl::AceFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::_set_NoPropagateInherit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceFlags", "NoPropagateInherit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceFlags InheritOnly
::System::Security::AccessControl::AceFlags System::Security::AccessControl::AceFlags::_get_InheritOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::_get_InheritOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceFlags>("System.Security.AccessControl", "AceFlags", "InheritOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceFlags InheritOnly
void System::Security::AccessControl::AceFlags::_set_InheritOnly(::System::Security::AccessControl::AceFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::_set_InheritOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceFlags", "InheritOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceFlags InheritanceFlags
::System::Security::AccessControl::AceFlags System::Security::AccessControl::AceFlags::_get_InheritanceFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::_get_InheritanceFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceFlags>("System.Security.AccessControl", "AceFlags", "InheritanceFlags"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceFlags InheritanceFlags
void System::Security::AccessControl::AceFlags::_set_InheritanceFlags(::System::Security::AccessControl::AceFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::_set_InheritanceFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceFlags", "InheritanceFlags", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceFlags Inherited
::System::Security::AccessControl::AceFlags System::Security::AccessControl::AceFlags::_get_Inherited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::_get_Inherited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceFlags>("System.Security.AccessControl", "AceFlags", "Inherited"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceFlags Inherited
void System::Security::AccessControl::AceFlags::_set_Inherited(::System::Security::AccessControl::AceFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::_set_Inherited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceFlags", "Inherited", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceFlags SuccessfulAccess
::System::Security::AccessControl::AceFlags System::Security::AccessControl::AceFlags::_get_SuccessfulAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::_get_SuccessfulAccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceFlags>("System.Security.AccessControl", "AceFlags", "SuccessfulAccess"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceFlags SuccessfulAccess
void System::Security::AccessControl::AceFlags::_set_SuccessfulAccess(::System::Security::AccessControl::AceFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::_set_SuccessfulAccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceFlags", "SuccessfulAccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceFlags FailedAccess
::System::Security::AccessControl::AceFlags System::Security::AccessControl::AceFlags::_get_FailedAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::_get_FailedAccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceFlags>("System.Security.AccessControl", "AceFlags", "FailedAccess"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceFlags FailedAccess
void System::Security::AccessControl::AceFlags::_set_FailedAccess(::System::Security::AccessControl::AceFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::_set_FailedAccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceFlags", "FailedAccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceFlags AuditFlags
::System::Security::AccessControl::AceFlags System::Security::AccessControl::AceFlags::_get_AuditFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::_get_AuditFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceFlags>("System.Security.AccessControl", "AceFlags", "AuditFlags"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceFlags AuditFlags
void System::Security::AccessControl::AceFlags::_set_AuditFlags(::System::Security::AccessControl::AceFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::_set_AuditFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceFlags", "AuditFlags", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& System::Security::AccessControl::AceFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.AceQualifier
#include "System/Security/AccessControl/AceQualifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceQualifier AccessAllowed
::System::Security::AccessControl::AceQualifier System::Security::AccessControl::AceQualifier::_get_AccessAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceQualifier::_get_AccessAllowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceQualifier>("System.Security.AccessControl", "AceQualifier", "AccessAllowed"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceQualifier AccessAllowed
void System::Security::AccessControl::AceQualifier::_set_AccessAllowed(::System::Security::AccessControl::AceQualifier value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceQualifier::_set_AccessAllowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceQualifier", "AccessAllowed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceQualifier AccessDenied
::System::Security::AccessControl::AceQualifier System::Security::AccessControl::AceQualifier::_get_AccessDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceQualifier::_get_AccessDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceQualifier>("System.Security.AccessControl", "AceQualifier", "AccessDenied"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceQualifier AccessDenied
void System::Security::AccessControl::AceQualifier::_set_AccessDenied(::System::Security::AccessControl::AceQualifier value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceQualifier::_set_AccessDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceQualifier", "AccessDenied", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceQualifier SystemAudit
::System::Security::AccessControl::AceQualifier System::Security::AccessControl::AceQualifier::_get_SystemAudit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceQualifier::_get_SystemAudit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceQualifier>("System.Security.AccessControl", "AceQualifier", "SystemAudit"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceQualifier SystemAudit
void System::Security::AccessControl::AceQualifier::_set_SystemAudit(::System::Security::AccessControl::AceQualifier value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceQualifier::_set_SystemAudit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceQualifier", "SystemAudit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceQualifier SystemAlarm
::System::Security::AccessControl::AceQualifier System::Security::AccessControl::AceQualifier::_get_SystemAlarm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceQualifier::_get_SystemAlarm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceQualifier>("System.Security.AccessControl", "AceQualifier", "SystemAlarm"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceQualifier SystemAlarm
void System::Security::AccessControl::AceQualifier::_set_SystemAlarm(::System::Security::AccessControl::AceQualifier value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceQualifier::_set_SystemAlarm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceQualifier", "SystemAlarm", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::AccessControl::AceQualifier::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceQualifier::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.AceType
#include "System/Security/AccessControl/AceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceType AccessAllowed
::System::Security::AccessControl::AceType System::Security::AccessControl::AceType::_get_AccessAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_get_AccessAllowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceType>("System.Security.AccessControl", "AceType", "AccessAllowed"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceType AccessAllowed
void System::Security::AccessControl::AceType::_set_AccessAllowed(::System::Security::AccessControl::AceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_set_AccessAllowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceType", "AccessAllowed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceType AccessDenied
::System::Security::AccessControl::AceType System::Security::AccessControl::AceType::_get_AccessDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_get_AccessDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceType>("System.Security.AccessControl", "AceType", "AccessDenied"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceType AccessDenied
void System::Security::AccessControl::AceType::_set_AccessDenied(::System::Security::AccessControl::AceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_set_AccessDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceType", "AccessDenied", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceType SystemAudit
::System::Security::AccessControl::AceType System::Security::AccessControl::AceType::_get_SystemAudit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_get_SystemAudit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceType>("System.Security.AccessControl", "AceType", "SystemAudit"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceType SystemAudit
void System::Security::AccessControl::AceType::_set_SystemAudit(::System::Security::AccessControl::AceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_set_SystemAudit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceType", "SystemAudit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceType SystemAlarm
::System::Security::AccessControl::AceType System::Security::AccessControl::AceType::_get_SystemAlarm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_get_SystemAlarm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceType>("System.Security.AccessControl", "AceType", "SystemAlarm"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceType SystemAlarm
void System::Security::AccessControl::AceType::_set_SystemAlarm(::System::Security::AccessControl::AceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_set_SystemAlarm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceType", "SystemAlarm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceType AccessAllowedCompound
::System::Security::AccessControl::AceType System::Security::AccessControl::AceType::_get_AccessAllowedCompound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_get_AccessAllowedCompound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceType>("System.Security.AccessControl", "AceType", "AccessAllowedCompound"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceType AccessAllowedCompound
void System::Security::AccessControl::AceType::_set_AccessAllowedCompound(::System::Security::AccessControl::AceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_set_AccessAllowedCompound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceType", "AccessAllowedCompound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceType AccessAllowedObject
::System::Security::AccessControl::AceType System::Security::AccessControl::AceType::_get_AccessAllowedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_get_AccessAllowedObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceType>("System.Security.AccessControl", "AceType", "AccessAllowedObject"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceType AccessAllowedObject
void System::Security::AccessControl::AceType::_set_AccessAllowedObject(::System::Security::AccessControl::AceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_set_AccessAllowedObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceType", "AccessAllowedObject", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceType AccessDeniedObject
::System::Security::AccessControl::AceType System::Security::AccessControl::AceType::_get_AccessDeniedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_get_AccessDeniedObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceType>("System.Security.AccessControl", "AceType", "AccessDeniedObject"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceType AccessDeniedObject
void System::Security::AccessControl::AceType::_set_AccessDeniedObject(::System::Security::AccessControl::AceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_set_AccessDeniedObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceType", "AccessDeniedObject", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceType SystemAuditObject
::System::Security::AccessControl::AceType System::Security::AccessControl::AceType::_get_SystemAuditObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_get_SystemAuditObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceType>("System.Security.AccessControl", "AceType", "SystemAuditObject"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceType SystemAuditObject
void System::Security::AccessControl::AceType::_set_SystemAuditObject(::System::Security::AccessControl::AceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_set_SystemAuditObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceType", "SystemAuditObject", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceType SystemAlarmObject
::System::Security::AccessControl::AceType System::Security::AccessControl::AceType::_get_SystemAlarmObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_get_SystemAlarmObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceType>("System.Security.AccessControl", "AceType", "SystemAlarmObject"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceType SystemAlarmObject
void System::Security::AccessControl::AceType::_set_SystemAlarmObject(::System::Security::AccessControl::AceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_set_SystemAlarmObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceType", "SystemAlarmObject", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceType AccessAllowedCallback
::System::Security::AccessControl::AceType System::Security::AccessControl::AceType::_get_AccessAllowedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_get_AccessAllowedCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceType>("System.Security.AccessControl", "AceType", "AccessAllowedCallback"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceType AccessAllowedCallback
void System::Security::AccessControl::AceType::_set_AccessAllowedCallback(::System::Security::AccessControl::AceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_set_AccessAllowedCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceType", "AccessAllowedCallback", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceType AccessDeniedCallback
::System::Security::AccessControl::AceType System::Security::AccessControl::AceType::_get_AccessDeniedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_get_AccessDeniedCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceType>("System.Security.AccessControl", "AceType", "AccessDeniedCallback"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceType AccessDeniedCallback
void System::Security::AccessControl::AceType::_set_AccessDeniedCallback(::System::Security::AccessControl::AceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_set_AccessDeniedCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceType", "AccessDeniedCallback", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceType AccessAllowedCallbackObject
::System::Security::AccessControl::AceType System::Security::AccessControl::AceType::_get_AccessAllowedCallbackObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_get_AccessAllowedCallbackObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceType>("System.Security.AccessControl", "AceType", "AccessAllowedCallbackObject"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceType AccessAllowedCallbackObject
void System::Security::AccessControl::AceType::_set_AccessAllowedCallbackObject(::System::Security::AccessControl::AceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_set_AccessAllowedCallbackObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceType", "AccessAllowedCallbackObject", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceType AccessDeniedCallbackObject
::System::Security::AccessControl::AceType System::Security::AccessControl::AceType::_get_AccessDeniedCallbackObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_get_AccessDeniedCallbackObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceType>("System.Security.AccessControl", "AceType", "AccessDeniedCallbackObject"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceType AccessDeniedCallbackObject
void System::Security::AccessControl::AceType::_set_AccessDeniedCallbackObject(::System::Security::AccessControl::AceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_set_AccessDeniedCallbackObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceType", "AccessDeniedCallbackObject", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceType SystemAuditCallback
::System::Security::AccessControl::AceType System::Security::AccessControl::AceType::_get_SystemAuditCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_get_SystemAuditCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceType>("System.Security.AccessControl", "AceType", "SystemAuditCallback"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceType SystemAuditCallback
void System::Security::AccessControl::AceType::_set_SystemAuditCallback(::System::Security::AccessControl::AceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_set_SystemAuditCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceType", "SystemAuditCallback", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceType SystemAlarmCallback
::System::Security::AccessControl::AceType System::Security::AccessControl::AceType::_get_SystemAlarmCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_get_SystemAlarmCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceType>("System.Security.AccessControl", "AceType", "SystemAlarmCallback"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceType SystemAlarmCallback
void System::Security::AccessControl::AceType::_set_SystemAlarmCallback(::System::Security::AccessControl::AceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_set_SystemAlarmCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceType", "SystemAlarmCallback", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceType SystemAuditCallbackObject
::System::Security::AccessControl::AceType System::Security::AccessControl::AceType::_get_SystemAuditCallbackObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_get_SystemAuditCallbackObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceType>("System.Security.AccessControl", "AceType", "SystemAuditCallbackObject"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceType SystemAuditCallbackObject
void System::Security::AccessControl::AceType::_set_SystemAuditCallbackObject(::System::Security::AccessControl::AceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_set_SystemAuditCallbackObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceType", "SystemAuditCallbackObject", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceType SystemAlarmCallbackObject
::System::Security::AccessControl::AceType System::Security::AccessControl::AceType::_get_SystemAlarmCallbackObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_get_SystemAlarmCallbackObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceType>("System.Security.AccessControl", "AceType", "SystemAlarmCallbackObject"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceType SystemAlarmCallbackObject
void System::Security::AccessControl::AceType::_set_SystemAlarmCallbackObject(::System::Security::AccessControl::AceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_set_SystemAlarmCallbackObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceType", "SystemAlarmCallbackObject", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AceType MaxDefinedAceType
::System::Security::AccessControl::AceType System::Security::AccessControl::AceType::_get_MaxDefinedAceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_get_MaxDefinedAceType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AceType>("System.Security.AccessControl", "AceType", "MaxDefinedAceType"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AceType MaxDefinedAceType
void System::Security::AccessControl::AceType::_set_MaxDefinedAceType(::System::Security::AccessControl::AceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::_set_MaxDefinedAceType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AceType", "MaxDefinedAceType", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& System::Security::AccessControl::AceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.AuditFlags
#include "System/Security/AccessControl/AuditFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AuditFlags None
::System::Security::AccessControl::AuditFlags System::Security::AccessControl::AuditFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AuditFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AuditFlags>("System.Security.AccessControl", "AuditFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AuditFlags None
void System::Security::AccessControl::AuditFlags::_set_None(::System::Security::AccessControl::AuditFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AuditFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AuditFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AuditFlags Success
::System::Security::AccessControl::AuditFlags System::Security::AccessControl::AuditFlags::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AuditFlags::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AuditFlags>("System.Security.AccessControl", "AuditFlags", "Success"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AuditFlags Success
void System::Security::AccessControl::AuditFlags::_set_Success(::System::Security::AccessControl::AuditFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AuditFlags::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AuditFlags", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.AuditFlags Failure
::System::Security::AccessControl::AuditFlags System::Security::AccessControl::AuditFlags::_get_Failure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AuditFlags::_get_Failure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::AuditFlags>("System.Security.AccessControl", "AuditFlags", "Failure"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.AuditFlags Failure
void System::Security::AccessControl::AuditFlags::_set_Failure(::System::Security::AccessControl::AuditFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AuditFlags::_set_Failure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "AuditFlags", "Failure", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::AccessControl::AuditFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AuditFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.AuthorizationRule
#include "System/Security/AccessControl/AuthorizationRule.hpp"
// Including type: System.Security.Principal.IdentityReference
#include "System/Security/Principal/IdentityReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Principal.IdentityReference identity
[[deprecated("Use field access instead!")]] ::System::Security::Principal::IdentityReference*& System::Security::AccessControl::AuthorizationRule::dyn_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AuthorizationRule::dyn_identity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "identity"))->offset;
  return *reinterpret_cast<::System::Security::Principal::IdentityReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 accessMask
[[deprecated("Use field access instead!")]] int& System::Security::AccessControl::AuthorizationRule::dyn_accessMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AuthorizationRule::dyn_accessMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "accessMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isInherited
[[deprecated("Use field access instead!")]] bool& System::Security::AccessControl::AuthorizationRule::dyn_isInherited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AuthorizationRule::dyn_isInherited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isInherited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.AccessControl.InheritanceFlags inheritanceFlags
[[deprecated("Use field access instead!")]] ::System::Security::AccessControl::InheritanceFlags& System::Security::AccessControl::AuthorizationRule::dyn_inheritanceFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AuthorizationRule::dyn_inheritanceFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inheritanceFlags"))->offset;
  return *reinterpret_cast<::System::Security::AccessControl::InheritanceFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.AccessControl.PropagationFlags propagationFlags
[[deprecated("Use field access instead!")]] ::System::Security::AccessControl::PropagationFlags& System::Security::AccessControl::AuthorizationRule::dyn_propagationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AuthorizationRule::dyn_propagationFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propagationFlags"))->offset;
  return *reinterpret_cast<::System::Security::AccessControl::PropagationFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.AccessControl.AuthorizationRule.get_AccessMask
int System::Security::AccessControl::AuthorizationRule::get_AccessMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::AuthorizationRule::get_AccessMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AccessMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.AuthorizationRuleCollection
#include "System/Security/AccessControl/AuthorizationRuleCollection.hpp"
// Including type: System.Security.AccessControl.AuthorizationRule
#include "System/Security/AccessControl/AuthorizationRule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.CommonAce
#include "System/Security/AccessControl/CommonAce.hpp"
// Including type: System.Security.Principal.SecurityIdentifier
#include "System/Security/Principal/SecurityIdentifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.AccessControl.CommonAce.ConvertType
::System::Security::AccessControl::AceType System::Security::AccessControl::CommonAce::ConvertType(::System::Security::AccessControl::AceQualifier qualifier, bool isCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAce::ConvertType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.AccessControl", "CommonAce", "ConvertType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifier), ::il2cpp_utils::ExtractType(isCallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::AceType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qualifier, isCallback);
}
// Autogenerated method: System.Security.AccessControl.CommonAce.get_BinaryLength
int System::Security::AccessControl::CommonAce::get_BinaryLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAce::get_BinaryLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BinaryLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonAce.GetBinaryForm
void System::Security::AccessControl::CommonAce::GetBinaryForm(::ArrayW<uint8_t> binaryForm, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAce::GetBinaryForm");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBinaryForm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryForm), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, binaryForm, offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.CommonAcl
#include "System/Security/AccessControl/CommonAcl.hpp"
// Including type: System.Security.AccessControl.CommonAcl/System.Security.AccessControl.RemoveAcesCallback`1
#include "System/Security/AccessControl/CommonAcl_RemoveAcesCallback_1.hpp"
// Including type: System.Security.AccessControl.RawAcl
#include "System/Security/AccessControl/RawAcl.hpp"
// Including type: System.Security.AccessControl.GenericAce
#include "System/Security/AccessControl/GenericAce.hpp"
// Including type: System.Security.AccessControl.ObjectAce
#include "System/Security/AccessControl/ObjectAce.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Security.AccessControl.AceQualifier
#include "System/Security/AccessControl/AceQualifier.hpp"
// Including type: System.Security.Principal.SecurityIdentifier
#include "System/Security/Principal/SecurityIdentifier.hpp"
// Including type: System.Security.AccessControl.InheritanceFlags
#include "System/Security/AccessControl/InheritanceFlags.hpp"
// Including type: System.Security.AccessControl.PropagationFlags
#include "System/Security/AccessControl/PropagationFlags.hpp"
// Including type: System.Security.AccessControl.AuditFlags
#include "System/Security/AccessControl/AuditFlags.hpp"
// Including type: System.Security.AccessControl.QualifiedAce
#include "System/Security/AccessControl/QualifiedAce.hpp"
// Including type: System.Security.AccessControl.AceFlags
#include "System/Security/AccessControl/AceFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean is_aefa
[[deprecated("Use field access instead!")]] bool& System::Security::AccessControl::CommonAcl::dyn_is_aefa() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::dyn_is_aefa");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "is_aefa"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean is_canonical
[[deprecated("Use field access instead!")]] bool& System::Security::AccessControl::CommonAcl::dyn_is_canonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::dyn_is_canonical");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "is_canonical"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean is_container
[[deprecated("Use field access instead!")]] bool& System::Security::AccessControl::CommonAcl::dyn_is_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::dyn_is_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "is_container"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean is_ds
[[deprecated("Use field access instead!")]] bool& System::Security::AccessControl::CommonAcl::dyn_is_ds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::dyn_is_ds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "is_ds"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Security.AccessControl.RawAcl raw_acl
[[deprecated("Use field access instead!")]] ::System::Security::AccessControl::RawAcl*& System::Security::AccessControl::CommonAcl::dyn_raw_acl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::dyn_raw_acl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raw_acl"))->offset;
  return *reinterpret_cast<::System::Security::AccessControl::RawAcl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.get_IsCanonical
bool System::Security::AccessControl::CommonAcl::get_IsCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::get_IsCanonical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCanonical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.get_IsContainer
bool System::Security::AccessControl::CommonAcl::get_IsContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::get_IsContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.get_IsDS
bool System::Security::AccessControl::CommonAcl::get_IsDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::get_IsDS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.set_IsAefa
void System::Security::AccessControl::CommonAcl::set_IsAefa(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::set_IsAefa");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsAefa", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.Init
void System::Security::AccessControl::CommonAcl::Init(bool isContainer, bool isDS, ::System::Security::AccessControl::RawAcl* rawAcl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isContainer), ::il2cpp_utils::ExtractType(isDS), ::il2cpp_utils::ExtractType(rawAcl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isContainer, isDS, rawAcl);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.RequireCanonicity
void System::Security::AccessControl::CommonAcl::RequireCanonicity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::RequireCanonicity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequireCanonicity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.CanonicalizeAndClearAefa
void System::Security::AccessControl::CommonAcl::CanonicalizeAndClearAefa() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::CanonicalizeAndClearAefa");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanonicalizeAndClearAefa", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.IsAceMeaningless
bool System::Security::AccessControl::CommonAcl::IsAceMeaningless(::System::Security::AccessControl::GenericAce* ace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::IsAceMeaningless");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAceMeaningless", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ace)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ace);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.TestCanonicity
bool System::Security::AccessControl::CommonAcl::TestCanonicity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::TestCanonicity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestCanonicity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.GetCanonicalExplicitDenyAceCount
int System::Security::AccessControl::CommonAcl::GetCanonicalExplicitDenyAceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::GetCanonicalExplicitDenyAceCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCanonicalExplicitDenyAceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.GetCanonicalExplicitAceCount
int System::Security::AccessControl::CommonAcl::GetCanonicalExplicitAceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::GetCanonicalExplicitAceCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCanonicalExplicitAceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.MergeExplicitAces
void System::Security::AccessControl::CommonAcl::MergeExplicitAces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::MergeExplicitAces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MergeExplicitAces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.MergeExplicitAcePair
::System::Security::AccessControl::GenericAce* System::Security::AccessControl::CommonAcl::MergeExplicitAcePair(::System::Security::AccessControl::GenericAce* ace1, ::System::Security::AccessControl::GenericAce* ace2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::MergeExplicitAcePair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MergeExplicitAcePair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ace1), ::il2cpp_utils::ExtractType(ace2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::GenericAce*, false>(this, ___internal__method, ace1, ace2);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.GetObjectAceTypeGuids
void System::Security::AccessControl::CommonAcl::GetObjectAceTypeGuids(::System::Security::AccessControl::ObjectAce* ace, ByRef<::System::Guid> type, ByRef<::System::Guid> inheritedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::GetObjectAceTypeGuids");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.AccessControl", "CommonAcl", "GetObjectAceTypeGuids", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ace), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>(), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ace, byref(type), byref(inheritedType));
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.ApplyCanonicalSortToExplicitAces
void System::Security::AccessControl::CommonAcl::ApplyCanonicalSortToExplicitAces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::ApplyCanonicalSortToExplicitAces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyCanonicalSortToExplicitAces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.ApplyCanonicalSortToExplicitAces
void System::Security::AccessControl::CommonAcl::ApplyCanonicalSortToExplicitAces(int start, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::ApplyCanonicalSortToExplicitAces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyCanonicalSortToExplicitAces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, count);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.AddAce
void System::Security::AccessControl::CommonAcl::AddAce(::System::Security::AccessControl::AceQualifier aceQualifier, ::System::Security::Principal::SecurityIdentifier* sid, int accessMask, ::System::Security::AccessControl::InheritanceFlags inheritanceFlags, ::System::Security::AccessControl::PropagationFlags propagationFlags, ::System::Security::AccessControl::AuditFlags auditFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::AddAce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aceQualifier), ::il2cpp_utils::ExtractType(sid), ::il2cpp_utils::ExtractType(accessMask), ::il2cpp_utils::ExtractType(inheritanceFlags), ::il2cpp_utils::ExtractType(propagationFlags), ::il2cpp_utils::ExtractType(auditFlags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aceQualifier, sid, accessMask, inheritanceFlags, propagationFlags, auditFlags);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.AddAceGetQualifiedAce
::System::Security::AccessControl::QualifiedAce* System::Security::AccessControl::CommonAcl::AddAceGetQualifiedAce(::System::Security::AccessControl::AceQualifier aceQualifier, ::System::Security::Principal::SecurityIdentifier* sid, int accessMask, ::System::Security::AccessControl::InheritanceFlags inheritanceFlags, ::System::Security::AccessControl::PropagationFlags propagationFlags, ::System::Security::AccessControl::AuditFlags auditFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::AddAceGetQualifiedAce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAceGetQualifiedAce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aceQualifier), ::il2cpp_utils::ExtractType(sid), ::il2cpp_utils::ExtractType(accessMask), ::il2cpp_utils::ExtractType(inheritanceFlags), ::il2cpp_utils::ExtractType(propagationFlags), ::il2cpp_utils::ExtractType(auditFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::QualifiedAce*, false>(this, ___internal__method, aceQualifier, sid, accessMask, inheritanceFlags, propagationFlags, auditFlags);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.AddAce
void System::Security::AccessControl::CommonAcl::AddAce(::System::Security::AccessControl::QualifiedAce* newAce) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::AddAce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newAce)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newAce);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.CopyAce
::System::Security::AccessControl::GenericAce* System::Security::AccessControl::CommonAcl::CopyAce(::System::Security::AccessControl::GenericAce* ace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::CopyAce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.AccessControl", "CommonAcl", "CopyAce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ace)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::GenericAce*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ace);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.GetAceInsertPosition
int System::Security::AccessControl::CommonAcl::GetAceInsertPosition(::System::Security::AccessControl::AceQualifier aceQualifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::GetAceInsertPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAceInsertPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aceQualifier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, aceQualifier);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.GetAceFlags
::System::Security::AccessControl::AceFlags System::Security::AccessControl::CommonAcl::GetAceFlags(::System::Security::AccessControl::InheritanceFlags inheritanceFlags, ::System::Security::AccessControl::PropagationFlags propagationFlags, ::System::Security::AccessControl::AuditFlags auditFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::GetAceFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAceFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inheritanceFlags), ::il2cpp_utils::ExtractType(propagationFlags), ::il2cpp_utils::ExtractType(auditFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::AceFlags, false>(this, ___internal__method, inheritanceFlags, propagationFlags, auditFlags);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.get_BinaryLength
int System::Security::AccessControl::CommonAcl::get_BinaryLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::get_BinaryLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BinaryLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.get_Count
int System::Security::AccessControl::CommonAcl::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.get_Revision
uint8_t System::Security::AccessControl::CommonAcl::get_Revision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::get_Revision");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Revision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.get_Item
::System::Security::AccessControl::GenericAce* System::Security::AccessControl::CommonAcl::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::GenericAce*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.set_Item
void System::Security::AccessControl::CommonAcl::set_Item(int index, ::System::Security::AccessControl::GenericAce* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Security.AccessControl.CommonAcl.GetBinaryForm
void System::Security::AccessControl::CommonAcl::GetBinaryForm(::ArrayW<uint8_t> binaryForm, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonAcl::GetBinaryForm");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBinaryForm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryForm), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, binaryForm, offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.CommonObjectSecurity
#include "System/Security/AccessControl/CommonObjectSecurity.hpp"
// Including type: System.Security.AccessControl.AuthorizationRuleCollection
#include "System/Security/AccessControl/AuthorizationRuleCollection.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules
::System::Security::AccessControl::AuthorizationRuleCollection* System::Security::AccessControl::CommonObjectSecurity::GetAccessRules(bool includeExplicit, bool includeInherited, ::System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonObjectSecurity::GetAccessRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAccessRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includeExplicit), ::il2cpp_utils::ExtractType(includeInherited), ::il2cpp_utils::ExtractType(targetType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::AuthorizationRuleCollection*, false>(this, ___internal__method, includeExplicit, includeInherited, targetType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.CommonSecurityDescriptor
#include "System/Security/AccessControl/CommonSecurityDescriptor.hpp"
// Including type: System.Security.AccessControl.RawSecurityDescriptor
#include "System/Security/AccessControl/RawSecurityDescriptor.hpp"
// Including type: System.Security.Principal.SecurityIdentifier
#include "System/Security/Principal/SecurityIdentifier.hpp"
// Including type: System.Security.AccessControl.SystemAcl
#include "System/Security/AccessControl/SystemAcl.hpp"
// Including type: System.Security.AccessControl.DiscretionaryAcl
#include "System/Security/AccessControl/DiscretionaryAcl.hpp"
// Including type: System.Security.AccessControl.CommonAcl
#include "System/Security/AccessControl/CommonAcl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean is_container
[[deprecated("Use field access instead!")]] bool& System::Security::AccessControl::CommonSecurityDescriptor::dyn_is_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::dyn_is_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "is_container"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean is_ds
[[deprecated("Use field access instead!")]] bool& System::Security::AccessControl::CommonSecurityDescriptor::dyn_is_ds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::dyn_is_ds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "is_ds"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.AccessControl.ControlFlags flags
[[deprecated("Use field access instead!")]] ::System::Security::AccessControl::ControlFlags& System::Security::AccessControl::CommonSecurityDescriptor::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::dyn_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<::System::Security::AccessControl::ControlFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Principal.SecurityIdentifier owner
[[deprecated("Use field access instead!")]] ::System::Security::Principal::SecurityIdentifier*& System::Security::AccessControl::CommonSecurityDescriptor::dyn_owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::dyn_owner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "owner"))->offset;
  return *reinterpret_cast<::System::Security::Principal::SecurityIdentifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Principal.SecurityIdentifier group
[[deprecated("Use field access instead!")]] ::System::Security::Principal::SecurityIdentifier*& System::Security::AccessControl::CommonSecurityDescriptor::dyn_group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::dyn_group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "group"))->offset;
  return *reinterpret_cast<::System::Security::Principal::SecurityIdentifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.AccessControl.SystemAcl system_acl
[[deprecated("Use field access instead!")]] ::System::Security::AccessControl::SystemAcl*& System::Security::AccessControl::CommonSecurityDescriptor::dyn_system_acl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::dyn_system_acl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "system_acl"))->offset;
  return *reinterpret_cast<::System::Security::AccessControl::SystemAcl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.AccessControl.DiscretionaryAcl discretionary_acl
[[deprecated("Use field access instead!")]] ::System::Security::AccessControl::DiscretionaryAcl*& System::Security::AccessControl::CommonSecurityDescriptor::dyn_discretionary_acl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::dyn_discretionary_acl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "discretionary_acl"))->offset;
  return *reinterpret_cast<::System::Security::AccessControl::DiscretionaryAcl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.AccessControl.CommonSecurityDescriptor.get_DiscretionaryAcl
::System::Security::AccessControl::DiscretionaryAcl* System::Security::AccessControl::CommonSecurityDescriptor::get_DiscretionaryAcl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::get_DiscretionaryAcl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DiscretionaryAcl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::DiscretionaryAcl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonSecurityDescriptor.set_DiscretionaryAcl
void System::Security::AccessControl::CommonSecurityDescriptor::set_DiscretionaryAcl(::System::Security::AccessControl::DiscretionaryAcl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::set_DiscretionaryAcl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DiscretionaryAcl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.AccessControl.CommonSecurityDescriptor.get_IsContainer
bool System::Security::AccessControl::CommonSecurityDescriptor::get_IsContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::get_IsContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonSecurityDescriptor.get_IsDS
bool System::Security::AccessControl::CommonSecurityDescriptor::get_IsDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::get_IsDS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonSecurityDescriptor.get_SystemAcl
::System::Security::AccessControl::SystemAcl* System::Security::AccessControl::CommonSecurityDescriptor::get_SystemAcl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::get_SystemAcl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SystemAcl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::SystemAcl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonSecurityDescriptor.set_SystemAcl
void System::Security::AccessControl::CommonSecurityDescriptor::set_SystemAcl(::System::Security::AccessControl::SystemAcl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::set_SystemAcl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SystemAcl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.AccessControl.CommonSecurityDescriptor.Init
void System::Security::AccessControl::CommonSecurityDescriptor::Init(bool isContainer, bool isDS, ::System::Security::AccessControl::RawSecurityDescriptor* rawSecurityDescriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isContainer), ::il2cpp_utils::ExtractType(isDS), ::il2cpp_utils::ExtractType(rawSecurityDescriptor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isContainer, isDS, rawSecurityDescriptor);
}
// Autogenerated method: System.Security.AccessControl.CommonSecurityDescriptor.Init
void System::Security::AccessControl::CommonSecurityDescriptor::Init(bool isContainer, bool isDS, ::System::Security::AccessControl::ControlFlags flags, ::System::Security::Principal::SecurityIdentifier* owner, ::System::Security::Principal::SecurityIdentifier* group, ::System::Security::AccessControl::SystemAcl* systemAcl, ::System::Security::AccessControl::DiscretionaryAcl* discretionaryAcl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isContainer), ::il2cpp_utils::ExtractType(isDS), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(owner), ::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(systemAcl), ::il2cpp_utils::ExtractType(discretionaryAcl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isContainer, isDS, flags, owner, group, systemAcl, discretionaryAcl);
}
// Autogenerated method: System.Security.AccessControl.CommonSecurityDescriptor.CheckAclConsistency
void System::Security::AccessControl::CommonSecurityDescriptor::CheckAclConsistency(::System::Security::AccessControl::CommonAcl* acl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::CheckAclConsistency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAclConsistency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(acl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, acl);
}
// Autogenerated method: System.Security.AccessControl.CommonSecurityDescriptor.get_ControlFlags
::System::Security::AccessControl::ControlFlags System::Security::AccessControl::CommonSecurityDescriptor::get_ControlFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::get_ControlFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ControlFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::ControlFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonSecurityDescriptor.get_Group
::System::Security::Principal::SecurityIdentifier* System::Security::AccessControl::CommonSecurityDescriptor::get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::get_Group");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Principal::SecurityIdentifier*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonSecurityDescriptor.set_Group
void System::Security::AccessControl::CommonSecurityDescriptor::set_Group(::System::Security::Principal::SecurityIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::set_Group");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.AccessControl.CommonSecurityDescriptor.get_Owner
::System::Security::Principal::SecurityIdentifier* System::Security::AccessControl::CommonSecurityDescriptor::get_Owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::get_Owner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Owner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Principal::SecurityIdentifier*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.CommonSecurityDescriptor.set_Owner
void System::Security::AccessControl::CommonSecurityDescriptor::set_Owner(::System::Security::Principal::SecurityIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::CommonSecurityDescriptor::set_Owner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Owner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.ControlFlags
#include "System/Security/AccessControl/ControlFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ControlFlags None
::System::Security::AccessControl::ControlFlags System::Security::AccessControl::ControlFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ControlFlags>("System.Security.AccessControl", "ControlFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ControlFlags None
void System::Security::AccessControl::ControlFlags::_set_None(::System::Security::AccessControl::ControlFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ControlFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ControlFlags OwnerDefaulted
::System::Security::AccessControl::ControlFlags System::Security::AccessControl::ControlFlags::_get_OwnerDefaulted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_get_OwnerDefaulted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ControlFlags>("System.Security.AccessControl", "ControlFlags", "OwnerDefaulted"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ControlFlags OwnerDefaulted
void System::Security::AccessControl::ControlFlags::_set_OwnerDefaulted(::System::Security::AccessControl::ControlFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_set_OwnerDefaulted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ControlFlags", "OwnerDefaulted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ControlFlags GroupDefaulted
::System::Security::AccessControl::ControlFlags System::Security::AccessControl::ControlFlags::_get_GroupDefaulted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_get_GroupDefaulted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ControlFlags>("System.Security.AccessControl", "ControlFlags", "GroupDefaulted"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ControlFlags GroupDefaulted
void System::Security::AccessControl::ControlFlags::_set_GroupDefaulted(::System::Security::AccessControl::ControlFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_set_GroupDefaulted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ControlFlags", "GroupDefaulted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ControlFlags DiscretionaryAclPresent
::System::Security::AccessControl::ControlFlags System::Security::AccessControl::ControlFlags::_get_DiscretionaryAclPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_get_DiscretionaryAclPresent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ControlFlags>("System.Security.AccessControl", "ControlFlags", "DiscretionaryAclPresent"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ControlFlags DiscretionaryAclPresent
void System::Security::AccessControl::ControlFlags::_set_DiscretionaryAclPresent(::System::Security::AccessControl::ControlFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_set_DiscretionaryAclPresent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ControlFlags", "DiscretionaryAclPresent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ControlFlags DiscretionaryAclDefaulted
::System::Security::AccessControl::ControlFlags System::Security::AccessControl::ControlFlags::_get_DiscretionaryAclDefaulted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_get_DiscretionaryAclDefaulted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ControlFlags>("System.Security.AccessControl", "ControlFlags", "DiscretionaryAclDefaulted"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ControlFlags DiscretionaryAclDefaulted
void System::Security::AccessControl::ControlFlags::_set_DiscretionaryAclDefaulted(::System::Security::AccessControl::ControlFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_set_DiscretionaryAclDefaulted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ControlFlags", "DiscretionaryAclDefaulted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ControlFlags SystemAclPresent
::System::Security::AccessControl::ControlFlags System::Security::AccessControl::ControlFlags::_get_SystemAclPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_get_SystemAclPresent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ControlFlags>("System.Security.AccessControl", "ControlFlags", "SystemAclPresent"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ControlFlags SystemAclPresent
void System::Security::AccessControl::ControlFlags::_set_SystemAclPresent(::System::Security::AccessControl::ControlFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_set_SystemAclPresent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ControlFlags", "SystemAclPresent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ControlFlags SystemAclDefaulted
::System::Security::AccessControl::ControlFlags System::Security::AccessControl::ControlFlags::_get_SystemAclDefaulted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_get_SystemAclDefaulted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ControlFlags>("System.Security.AccessControl", "ControlFlags", "SystemAclDefaulted"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ControlFlags SystemAclDefaulted
void System::Security::AccessControl::ControlFlags::_set_SystemAclDefaulted(::System::Security::AccessControl::ControlFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_set_SystemAclDefaulted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ControlFlags", "SystemAclDefaulted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ControlFlags DiscretionaryAclUntrusted
::System::Security::AccessControl::ControlFlags System::Security::AccessControl::ControlFlags::_get_DiscretionaryAclUntrusted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_get_DiscretionaryAclUntrusted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ControlFlags>("System.Security.AccessControl", "ControlFlags", "DiscretionaryAclUntrusted"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ControlFlags DiscretionaryAclUntrusted
void System::Security::AccessControl::ControlFlags::_set_DiscretionaryAclUntrusted(::System::Security::AccessControl::ControlFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_set_DiscretionaryAclUntrusted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ControlFlags", "DiscretionaryAclUntrusted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ControlFlags ServerSecurity
::System::Security::AccessControl::ControlFlags System::Security::AccessControl::ControlFlags::_get_ServerSecurity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_get_ServerSecurity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ControlFlags>("System.Security.AccessControl", "ControlFlags", "ServerSecurity"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ControlFlags ServerSecurity
void System::Security::AccessControl::ControlFlags::_set_ServerSecurity(::System::Security::AccessControl::ControlFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_set_ServerSecurity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ControlFlags", "ServerSecurity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ControlFlags DiscretionaryAclAutoInheritRequired
::System::Security::AccessControl::ControlFlags System::Security::AccessControl::ControlFlags::_get_DiscretionaryAclAutoInheritRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_get_DiscretionaryAclAutoInheritRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ControlFlags>("System.Security.AccessControl", "ControlFlags", "DiscretionaryAclAutoInheritRequired"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ControlFlags DiscretionaryAclAutoInheritRequired
void System::Security::AccessControl::ControlFlags::_set_DiscretionaryAclAutoInheritRequired(::System::Security::AccessControl::ControlFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_set_DiscretionaryAclAutoInheritRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ControlFlags", "DiscretionaryAclAutoInheritRequired", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ControlFlags SystemAclAutoInheritRequired
::System::Security::AccessControl::ControlFlags System::Security::AccessControl::ControlFlags::_get_SystemAclAutoInheritRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_get_SystemAclAutoInheritRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ControlFlags>("System.Security.AccessControl", "ControlFlags", "SystemAclAutoInheritRequired"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ControlFlags SystemAclAutoInheritRequired
void System::Security::AccessControl::ControlFlags::_set_SystemAclAutoInheritRequired(::System::Security::AccessControl::ControlFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_set_SystemAclAutoInheritRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ControlFlags", "SystemAclAutoInheritRequired", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ControlFlags DiscretionaryAclAutoInherited
::System::Security::AccessControl::ControlFlags System::Security::AccessControl::ControlFlags::_get_DiscretionaryAclAutoInherited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_get_DiscretionaryAclAutoInherited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ControlFlags>("System.Security.AccessControl", "ControlFlags", "DiscretionaryAclAutoInherited"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ControlFlags DiscretionaryAclAutoInherited
void System::Security::AccessControl::ControlFlags::_set_DiscretionaryAclAutoInherited(::System::Security::AccessControl::ControlFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_set_DiscretionaryAclAutoInherited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ControlFlags", "DiscretionaryAclAutoInherited", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ControlFlags SystemAclAutoInherited
::System::Security::AccessControl::ControlFlags System::Security::AccessControl::ControlFlags::_get_SystemAclAutoInherited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_get_SystemAclAutoInherited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ControlFlags>("System.Security.AccessControl", "ControlFlags", "SystemAclAutoInherited"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ControlFlags SystemAclAutoInherited
void System::Security::AccessControl::ControlFlags::_set_SystemAclAutoInherited(::System::Security::AccessControl::ControlFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_set_SystemAclAutoInherited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ControlFlags", "SystemAclAutoInherited", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ControlFlags DiscretionaryAclProtected
::System::Security::AccessControl::ControlFlags System::Security::AccessControl::ControlFlags::_get_DiscretionaryAclProtected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_get_DiscretionaryAclProtected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ControlFlags>("System.Security.AccessControl", "ControlFlags", "DiscretionaryAclProtected"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ControlFlags DiscretionaryAclProtected
void System::Security::AccessControl::ControlFlags::_set_DiscretionaryAclProtected(::System::Security::AccessControl::ControlFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_set_DiscretionaryAclProtected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ControlFlags", "DiscretionaryAclProtected", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ControlFlags SystemAclProtected
::System::Security::AccessControl::ControlFlags System::Security::AccessControl::ControlFlags::_get_SystemAclProtected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_get_SystemAclProtected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ControlFlags>("System.Security.AccessControl", "ControlFlags", "SystemAclProtected"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ControlFlags SystemAclProtected
void System::Security::AccessControl::ControlFlags::_set_SystemAclProtected(::System::Security::AccessControl::ControlFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_set_SystemAclProtected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ControlFlags", "SystemAclProtected", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ControlFlags RMControlValid
::System::Security::AccessControl::ControlFlags System::Security::AccessControl::ControlFlags::_get_RMControlValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_get_RMControlValid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ControlFlags>("System.Security.AccessControl", "ControlFlags", "RMControlValid"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ControlFlags RMControlValid
void System::Security::AccessControl::ControlFlags::_set_RMControlValid(::System::Security::AccessControl::ControlFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_set_RMControlValid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ControlFlags", "RMControlValid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ControlFlags SelfRelative
::System::Security::AccessControl::ControlFlags System::Security::AccessControl::ControlFlags::_get_SelfRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_get_SelfRelative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ControlFlags>("System.Security.AccessControl", "ControlFlags", "SelfRelative"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ControlFlags SelfRelative
void System::Security::AccessControl::ControlFlags::_set_SelfRelative(::System::Security::AccessControl::ControlFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::_set_SelfRelative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ControlFlags", "SelfRelative", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::AccessControl::ControlFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ControlFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.DirectorySecurity
#include "System/Security/AccessControl/DirectorySecurity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.DiscretionaryAcl
#include "System/Security/AccessControl/DiscretionaryAcl.hpp"
// Including type: System.Security.AccessControl.AccessControlType
#include "System/Security/AccessControl/AccessControlType.hpp"
// Including type: System.Security.Principal.SecurityIdentifier
#include "System/Security/Principal/SecurityIdentifier.hpp"
// Including type: System.Security.AccessControl.InheritanceFlags
#include "System/Security/AccessControl/InheritanceFlags.hpp"
// Including type: System.Security.AccessControl.PropagationFlags
#include "System/Security/AccessControl/PropagationFlags.hpp"
// Including type: System.Security.AccessControl.AceQualifier
#include "System/Security/AccessControl/AceQualifier.hpp"
// Including type: System.Security.AccessControl.RawAcl
#include "System/Security/AccessControl/RawAcl.hpp"
// Including type: System.Security.AccessControl.GenericAce
#include "System/Security/AccessControl/GenericAce.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.AccessControl.DiscretionaryAcl.AddAccess
void System::Security::AccessControl::DiscretionaryAcl::AddAccess(::System::Security::AccessControl::AccessControlType accessType, ::System::Security::Principal::SecurityIdentifier* sid, int accessMask, ::System::Security::AccessControl::InheritanceFlags inheritanceFlags, ::System::Security::AccessControl::PropagationFlags propagationFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::DiscretionaryAcl::AddAccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accessType), ::il2cpp_utils::ExtractType(sid), ::il2cpp_utils::ExtractType(accessMask), ::il2cpp_utils::ExtractType(inheritanceFlags), ::il2cpp_utils::ExtractType(propagationFlags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, accessType, sid, accessMask, inheritanceFlags, propagationFlags);
}
// Autogenerated method: System.Security.AccessControl.DiscretionaryAcl.GetAceQualifier
::System::Security::AccessControl::AceQualifier System::Security::AccessControl::DiscretionaryAcl::GetAceQualifier(::System::Security::AccessControl::AccessControlType accessType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::DiscretionaryAcl::GetAceQualifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.AccessControl", "DiscretionaryAcl", "GetAceQualifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accessType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::AceQualifier, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, accessType);
}
// Autogenerated method: System.Security.AccessControl.DiscretionaryAcl.ApplyCanonicalSortToExplicitAces
void System::Security::AccessControl::DiscretionaryAcl::ApplyCanonicalSortToExplicitAces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::DiscretionaryAcl::ApplyCanonicalSortToExplicitAces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyCanonicalSortToExplicitAces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.DiscretionaryAcl.GetAceInsertPosition
int System::Security::AccessControl::DiscretionaryAcl::GetAceInsertPosition(::System::Security::AccessControl::AceQualifier aceQualifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::DiscretionaryAcl::GetAceInsertPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAceInsertPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aceQualifier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, aceQualifier);
}
// Autogenerated method: System.Security.AccessControl.DiscretionaryAcl.IsAceMeaningless
bool System::Security::AccessControl::DiscretionaryAcl::IsAceMeaningless(::System::Security::AccessControl::GenericAce* ace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::DiscretionaryAcl::IsAceMeaningless");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAceMeaningless", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ace)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ace);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.FileSecurity
#include "System/Security/AccessControl/FileSecurity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.FileSystemAccessRule
#include "System/Security/AccessControl/FileSystemAccessRule.hpp"
// Including type: System.Security.Principal.IdentityReference
#include "System/Security/Principal/IdentityReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.AccessControl.FileSystemAccessRule.get_FileSystemRights
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemAccessRule::get_FileSystemRights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemAccessRule::get_FileSystemRights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FileSystemRights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::FileSystemRights, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.FileSystemRights
#include "System/Security/AccessControl/FileSystemRights.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights ListDirectory
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_ListDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_ListDirectory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "ListDirectory"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights ListDirectory
void System::Security::AccessControl::FileSystemRights::_set_ListDirectory(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_ListDirectory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "ListDirectory", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights ReadData
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_ReadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_ReadData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "ReadData"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights ReadData
void System::Security::AccessControl::FileSystemRights::_set_ReadData(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_ReadData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "ReadData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights CreateFiles
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_CreateFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_CreateFiles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "CreateFiles"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights CreateFiles
void System::Security::AccessControl::FileSystemRights::_set_CreateFiles(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_CreateFiles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "CreateFiles", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights WriteData
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_WriteData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_WriteData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "WriteData"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights WriteData
void System::Security::AccessControl::FileSystemRights::_set_WriteData(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_WriteData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "WriteData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights AppendData
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_AppendData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_AppendData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "AppendData"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights AppendData
void System::Security::AccessControl::FileSystemRights::_set_AppendData(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_AppendData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "AppendData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights CreateDirectories
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_CreateDirectories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_CreateDirectories");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "CreateDirectories"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights CreateDirectories
void System::Security::AccessControl::FileSystemRights::_set_CreateDirectories(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_CreateDirectories");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "CreateDirectories", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights ReadExtendedAttributes
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_ReadExtendedAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_ReadExtendedAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "ReadExtendedAttributes"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights ReadExtendedAttributes
void System::Security::AccessControl::FileSystemRights::_set_ReadExtendedAttributes(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_ReadExtendedAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "ReadExtendedAttributes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights WriteExtendedAttributes
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_WriteExtendedAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_WriteExtendedAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "WriteExtendedAttributes"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights WriteExtendedAttributes
void System::Security::AccessControl::FileSystemRights::_set_WriteExtendedAttributes(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_WriteExtendedAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "WriteExtendedAttributes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights ExecuteFile
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_ExecuteFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_ExecuteFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "ExecuteFile"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights ExecuteFile
void System::Security::AccessControl::FileSystemRights::_set_ExecuteFile(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_ExecuteFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "ExecuteFile", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights Traverse
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_Traverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_Traverse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "Traverse"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights Traverse
void System::Security::AccessControl::FileSystemRights::_set_Traverse(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_Traverse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "Traverse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights DeleteSubdirectoriesAndFiles
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_DeleteSubdirectoriesAndFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_DeleteSubdirectoriesAndFiles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "DeleteSubdirectoriesAndFiles"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights DeleteSubdirectoriesAndFiles
void System::Security::AccessControl::FileSystemRights::_set_DeleteSubdirectoriesAndFiles(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_DeleteSubdirectoriesAndFiles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "DeleteSubdirectoriesAndFiles", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights ReadAttributes
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_ReadAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_ReadAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "ReadAttributes"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights ReadAttributes
void System::Security::AccessControl::FileSystemRights::_set_ReadAttributes(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_ReadAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "ReadAttributes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights WriteAttributes
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_WriteAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_WriteAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "WriteAttributes"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights WriteAttributes
void System::Security::AccessControl::FileSystemRights::_set_WriteAttributes(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_WriteAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "WriteAttributes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights Write
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "Write"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights Write
void System::Security::AccessControl::FileSystemRights::_set_Write(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights Delete
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "Delete"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights Delete
void System::Security::AccessControl::FileSystemRights::_set_Delete(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "Delete", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights ReadPermissions
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_ReadPermissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_ReadPermissions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "ReadPermissions"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights ReadPermissions
void System::Security::AccessControl::FileSystemRights::_set_ReadPermissions(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_ReadPermissions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "ReadPermissions", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights Read
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "Read"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights Read
void System::Security::AccessControl::FileSystemRights::_set_Read(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights ReadAndExecute
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_ReadAndExecute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_ReadAndExecute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "ReadAndExecute"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights ReadAndExecute
void System::Security::AccessControl::FileSystemRights::_set_ReadAndExecute(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_ReadAndExecute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "ReadAndExecute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights Modify
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_Modify() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_Modify");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "Modify"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights Modify
void System::Security::AccessControl::FileSystemRights::_set_Modify(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_Modify");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "Modify", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights ChangePermissions
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_ChangePermissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_ChangePermissions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "ChangePermissions"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights ChangePermissions
void System::Security::AccessControl::FileSystemRights::_set_ChangePermissions(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_ChangePermissions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "ChangePermissions", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights TakeOwnership
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_TakeOwnership() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_TakeOwnership");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "TakeOwnership"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights TakeOwnership
void System::Security::AccessControl::FileSystemRights::_set_TakeOwnership(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_TakeOwnership");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "TakeOwnership", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights Synchronize
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_Synchronize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_Synchronize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "Synchronize"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights Synchronize
void System::Security::AccessControl::FileSystemRights::_set_Synchronize(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_Synchronize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "Synchronize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.FileSystemRights FullControl
::System::Security::AccessControl::FileSystemRights System::Security::AccessControl::FileSystemRights::_get_FullControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_get_FullControl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::FileSystemRights>("System.Security.AccessControl", "FileSystemRights", "FullControl"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.FileSystemRights FullControl
void System::Security::AccessControl::FileSystemRights::_set_FullControl(::System::Security::AccessControl::FileSystemRights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::_set_FullControl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "FileSystemRights", "FullControl", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::AccessControl::FileSystemRights::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemRights::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.FileSystemSecurity
#include "System/Security/AccessControl/FileSystemSecurity.hpp"
// Including type: System.Security.AccessControl.AccessRule
#include "System/Security/AccessControl/AccessRule.hpp"
// Including type: System.Security.Principal.IdentityReference
#include "System/Security/Principal/IdentityReference.hpp"
// Including type: System.Security.AccessControl.InheritanceFlags
#include "System/Security/AccessControl/InheritanceFlags.hpp"
// Including type: System.Security.AccessControl.PropagationFlags
#include "System/Security/AccessControl/PropagationFlags.hpp"
// Including type: System.Security.AccessControl.AccessControlType
#include "System/Security/AccessControl/AccessControlType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory
::System::Security::AccessControl::AccessRule* System::Security::AccessControl::FileSystemSecurity::AccessRuleFactory(::System::Security::Principal::IdentityReference* identityReference, int accessMask, bool isInherited, ::System::Security::AccessControl::InheritanceFlags inheritanceFlags, ::System::Security::AccessControl::PropagationFlags propagationFlags, ::System::Security::AccessControl::AccessControlType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::FileSystemSecurity::AccessRuleFactory");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AccessRuleFactory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identityReference), ::il2cpp_utils::ExtractType(accessMask), ::il2cpp_utils::ExtractType(isInherited), ::il2cpp_utils::ExtractType(inheritanceFlags), ::il2cpp_utils::ExtractType(propagationFlags), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::AccessRule*, false>(this, ___internal__method, identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.AccessControl.GenericAce
#include "System/Security/AccessControl/GenericAce.hpp"
// Including type: System.Security.AccessControl.AuditFlags
#include "System/Security/AccessControl/AuditFlags.hpp"
// Including type: System.Security.AccessControl.InheritanceFlags
#include "System/Security/AccessControl/InheritanceFlags.hpp"
// Including type: System.Security.AccessControl.PropagationFlags
#include "System/Security/AccessControl/PropagationFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.AccessControl.AceFlags ace_flags
[[deprecated("Use field access instead!")]] ::System::Security::AccessControl::AceFlags& System::Security::AccessControl::GenericAce::dyn_ace_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAce::dyn_ace_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ace_flags"))->offset;
  return *reinterpret_cast<::System::Security::AccessControl::AceFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.AccessControl.AceType ace_type
[[deprecated("Use field access instead!")]] ::System::Security::AccessControl::AceType& System::Security::AccessControl::GenericAce::dyn_ace_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAce::dyn_ace_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ace_type"))->offset;
  return *reinterpret_cast<::System::Security::AccessControl::AceType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.AccessControl.GenericAce.get_AceFlags
::System::Security::AccessControl::AceFlags System::Security::AccessControl::GenericAce::get_AceFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAce::get_AceFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AceFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::AceFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.GenericAce.get_AceType
::System::Security::AccessControl::AceType System::Security::AccessControl::GenericAce::get_AceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAce::get_AceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::AceType, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.GenericAce.get_AuditFlags
::System::Security::AccessControl::AuditFlags System::Security::AccessControl::GenericAce::get_AuditFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAce::get_AuditFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuditFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::AuditFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.GenericAce.get_BinaryLength
int System::Security::AccessControl::GenericAce::get_BinaryLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAce::get_BinaryLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BinaryLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.GenericAce.get_InheritanceFlags
::System::Security::AccessControl::InheritanceFlags System::Security::AccessControl::GenericAce::get_InheritanceFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAce::get_InheritanceFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InheritanceFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::InheritanceFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.GenericAce.get_IsInherited
bool System::Security::AccessControl::GenericAce::get_IsInherited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAce::get_IsInherited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInherited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.GenericAce.get_PropagationFlags
::System::Security::AccessControl::PropagationFlags System::Security::AccessControl::GenericAce::get_PropagationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAce::get_PropagationFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropagationFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::PropagationFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.GenericAce.CreateFromBinaryForm
::System::Security::AccessControl::GenericAce* System::Security::AccessControl::GenericAce::CreateFromBinaryForm(::ArrayW<uint8_t> binaryForm, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAce::CreateFromBinaryForm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.AccessControl", "GenericAce", "CreateFromBinaryForm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryForm), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::GenericAce*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryForm, offset);
}
// Autogenerated method: System.Security.AccessControl.GenericAce.GetBinaryForm
void System::Security::AccessControl::GenericAce::GetBinaryForm(::ArrayW<uint8_t> binaryForm, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAce::GetBinaryForm");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBinaryForm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryForm), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, binaryForm, offset);
}
// Autogenerated method: System.Security.AccessControl.GenericAce.IsObjectType
bool System::Security::AccessControl::GenericAce::IsObjectType(::System::Security::AccessControl::AceType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAce::IsObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.AccessControl", "GenericAce", "IsObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Security.AccessControl.GenericAce.ReadUShort
uint16_t System::Security::AccessControl::GenericAce::ReadUShort(::ArrayW<uint8_t> buffer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAce::ReadUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.AccessControl", "GenericAce", "ReadUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, offset);
}
// Autogenerated method: System.Security.AccessControl.GenericAce.ReadInt
int System::Security::AccessControl::GenericAce::ReadInt(::ArrayW<uint8_t> buffer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAce::ReadInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.AccessControl", "GenericAce", "ReadInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, offset);
}
// Autogenerated method: System.Security.AccessControl.GenericAce.WriteInt
void System::Security::AccessControl::GenericAce::WriteInt(int val, ::ArrayW<uint8_t> buffer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAce::WriteInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.AccessControl", "GenericAce", "WriteInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val, buffer, offset);
}
// Autogenerated method: System.Security.AccessControl.GenericAce.WriteUShort
void System::Security::AccessControl::GenericAce::WriteUShort(uint16_t val, ::ArrayW<uint8_t> buffer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAce::WriteUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.AccessControl", "GenericAce", "WriteUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val, buffer, offset);
}
// Autogenerated method: System.Security.AccessControl.GenericAce.Equals
bool System::Security::AccessControl::GenericAce::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAce::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Security.AccessControl.GenericAce.GetHashCode
int System::Security::AccessControl::GenericAce::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAce::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.GenericAce.op_Equality
bool System::Security::AccessControl::operator ==(::System::Security::AccessControl::GenericAce* left, ::System::Security::AccessControl::GenericAce& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAce::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.AccessControl", "GenericAce", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.Security.AccessControl.GenericAce.op_Inequality
bool System::Security::AccessControl::operator !=(::System::Security::AccessControl::GenericAce* left, ::System::Security::AccessControl::GenericAce& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAce::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.AccessControl", "GenericAce", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.AccessControl.GenericAcl
#include "System/Security/AccessControl/GenericAcl.hpp"
// Including type: System.Security.AccessControl.GenericAce
#include "System/Security/AccessControl/GenericAce.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Security.AccessControl.AceEnumerator
#include "System/Security/AccessControl/AceEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Byte AclRevision
uint8_t System::Security::AccessControl::GenericAcl::_get_AclRevision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAcl::_get_AclRevision");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Security.AccessControl", "GenericAcl", "AclRevision"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte AclRevision
void System::Security::AccessControl::GenericAcl::_set_AclRevision(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAcl::_set_AclRevision");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "GenericAcl", "AclRevision", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte AclRevisionDS
uint8_t System::Security::AccessControl::GenericAcl::_get_AclRevisionDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAcl::_get_AclRevisionDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Security.AccessControl", "GenericAcl", "AclRevisionDS"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte AclRevisionDS
void System::Security::AccessControl::GenericAcl::_set_AclRevisionDS(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAcl::_set_AclRevisionDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "GenericAcl", "AclRevisionDS", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 MaxBinaryLength
int System::Security::AccessControl::GenericAcl::_get_MaxBinaryLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAcl::_get_MaxBinaryLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.AccessControl", "GenericAcl", "MaxBinaryLength"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 MaxBinaryLength
void System::Security::AccessControl::GenericAcl::_set_MaxBinaryLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAcl::_set_MaxBinaryLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "GenericAcl", "MaxBinaryLength", value));
}
// Autogenerated method: System.Security.AccessControl.GenericAcl.get_BinaryLength
int System::Security::AccessControl::GenericAcl::get_BinaryLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAcl::get_BinaryLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BinaryLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.GenericAcl.get_Count
int System::Security::AccessControl::GenericAcl::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAcl::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.GenericAcl.get_Item
::System::Security::AccessControl::GenericAce* System::Security::AccessControl::GenericAcl::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAcl::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::GenericAce*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Security.AccessControl.GenericAcl.set_Item
void System::Security::AccessControl::GenericAcl::set_Item(int index, ::System::Security::AccessControl::GenericAce* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAcl::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Security.AccessControl.GenericAcl.get_Revision
uint8_t System::Security::AccessControl::GenericAcl::get_Revision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAcl::get_Revision");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Revision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.GenericAcl.get_SyncRoot
::Il2CppObject* System::Security::AccessControl::GenericAcl::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAcl::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.GenericAcl..cctor
void System::Security::AccessControl::GenericAcl::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAcl::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.AccessControl", "GenericAcl", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.GenericAcl.CopyTo
void System::Security::AccessControl::GenericAcl::CopyTo(::ArrayW<::System::Security::AccessControl::GenericAce*> array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAcl::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Security.AccessControl.GenericAcl.System.Collections.ICollection.CopyTo
void System::Security::AccessControl::GenericAcl::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAcl::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Security.AccessControl.GenericAcl.GetBinaryForm
void System::Security::AccessControl::GenericAcl::GetBinaryForm(::ArrayW<uint8_t> binaryForm, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAcl::GetBinaryForm");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBinaryForm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryForm), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, binaryForm, offset);
}
// Autogenerated method: System.Security.AccessControl.GenericAcl.GetEnumerator
::System::Security::AccessControl::AceEnumerator* System::Security::AccessControl::GenericAcl::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAcl::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::AceEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.GenericAcl.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Security::AccessControl::GenericAcl::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAcl::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.GenericSecurityDescriptor
#include "System/Security/AccessControl/GenericSecurityDescriptor.hpp"
// Including type: System.Security.AccessControl.ControlFlags
#include "System/Security/AccessControl/ControlFlags.hpp"
// Including type: System.Security.Principal.SecurityIdentifier
#include "System/Security/Principal/SecurityIdentifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.AccessControl.GenericSecurityDescriptor.get_ControlFlags
::System::Security::AccessControl::ControlFlags System::Security::AccessControl::GenericSecurityDescriptor::get_ControlFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericSecurityDescriptor::get_ControlFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ControlFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::ControlFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.GenericSecurityDescriptor.get_Group
::System::Security::Principal::SecurityIdentifier* System::Security::AccessControl::GenericSecurityDescriptor::get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericSecurityDescriptor::get_Group");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Principal::SecurityIdentifier*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.GenericSecurityDescriptor.set_Group
void System::Security::AccessControl::GenericSecurityDescriptor::set_Group(::System::Security::Principal::SecurityIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericSecurityDescriptor::set_Group");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.AccessControl.GenericSecurityDescriptor.get_Owner
::System::Security::Principal::SecurityIdentifier* System::Security::AccessControl::GenericSecurityDescriptor::get_Owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericSecurityDescriptor::get_Owner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Owner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Principal::SecurityIdentifier*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.GenericSecurityDescriptor.set_Owner
void System::Security::AccessControl::GenericSecurityDescriptor::set_Owner(::System::Security::Principal::SecurityIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericSecurityDescriptor::set_Owner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Owner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.InheritanceFlags
#include "System/Security/AccessControl/InheritanceFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.InheritanceFlags None
::System::Security::AccessControl::InheritanceFlags System::Security::AccessControl::InheritanceFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::InheritanceFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::InheritanceFlags>("System.Security.AccessControl", "InheritanceFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.InheritanceFlags None
void System::Security::AccessControl::InheritanceFlags::_set_None(::System::Security::AccessControl::InheritanceFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::InheritanceFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "InheritanceFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.InheritanceFlags ContainerInherit
::System::Security::AccessControl::InheritanceFlags System::Security::AccessControl::InheritanceFlags::_get_ContainerInherit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::InheritanceFlags::_get_ContainerInherit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::InheritanceFlags>("System.Security.AccessControl", "InheritanceFlags", "ContainerInherit"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.InheritanceFlags ContainerInherit
void System::Security::AccessControl::InheritanceFlags::_set_ContainerInherit(::System::Security::AccessControl::InheritanceFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::InheritanceFlags::_set_ContainerInherit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "InheritanceFlags", "ContainerInherit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.InheritanceFlags ObjectInherit
::System::Security::AccessControl::InheritanceFlags System::Security::AccessControl::InheritanceFlags::_get_ObjectInherit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::InheritanceFlags::_get_ObjectInherit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::InheritanceFlags>("System.Security.AccessControl", "InheritanceFlags", "ObjectInherit"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.InheritanceFlags ObjectInherit
void System::Security::AccessControl::InheritanceFlags::_set_ObjectInherit(::System::Security::AccessControl::InheritanceFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::InheritanceFlags::_set_ObjectInherit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "InheritanceFlags", "ObjectInherit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::AccessControl::InheritanceFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::InheritanceFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.KnownAce
#include "System/Security/AccessControl/KnownAce.hpp"
// Including type: System.Security.Principal.SecurityIdentifier
#include "System/Security/Principal/SecurityIdentifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 access_mask
[[deprecated("Use field access instead!")]] int& System::Security::AccessControl::KnownAce::dyn_access_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::KnownAce::dyn_access_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "access_mask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Principal.SecurityIdentifier identifier
[[deprecated("Use field access instead!")]] ::System::Security::Principal::SecurityIdentifier*& System::Security::AccessControl::KnownAce::dyn_identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::KnownAce::dyn_identifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "identifier"))->offset;
  return *reinterpret_cast<::System::Security::Principal::SecurityIdentifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.AccessControl.KnownAce.get_AccessMask
int System::Security::AccessControl::KnownAce::get_AccessMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::KnownAce::get_AccessMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AccessMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.KnownAce.set_AccessMask
void System::Security::AccessControl::KnownAce::set_AccessMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::KnownAce::set_AccessMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AccessMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.AccessControl.KnownAce.get_SecurityIdentifier
::System::Security::Principal::SecurityIdentifier* System::Security::AccessControl::KnownAce::get_SecurityIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::KnownAce::get_SecurityIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SecurityIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Principal::SecurityIdentifier*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.KnownAce.set_SecurityIdentifier
void System::Security::AccessControl::KnownAce::set_SecurityIdentifier(::System::Security::Principal::SecurityIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::KnownAce::set_SecurityIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SecurityIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.AccessControl.NativeObjectSecurity
#include "System/Security/AccessControl/NativeObjectSecurity.hpp"
// Including type: System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.ExceptionFromErrorCode
#include "System/Security/AccessControl/NativeObjectSecurity_ExceptionFromErrorCode.hpp"
// Including type: System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.GetSecurityInfoNativeCall
#include "System/Security/AccessControl/NativeObjectSecurity_GetSecurityInfoNativeCall.hpp"
// Including type: System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.<>c__DisplayClass20_0
#include "System/Security/AccessControl/NativeObjectSecurity_--c__DisplayClass20_0.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
// Including type: System.Security.AccessControl.SecurityInfos
#include "System/Security/AccessControl/SecurityInfos.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.ExceptionFromErrorCode exception_from_error_code
[[deprecated("Use field access instead!")]] ::System::Security::AccessControl::NativeObjectSecurity::ExceptionFromErrorCode*& System::Security::AccessControl::NativeObjectSecurity::dyn_exception_from_error_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::dyn_exception_from_error_code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exception_from_error_code"))->offset;
  return *reinterpret_cast<::System::Security::AccessControl::NativeObjectSecurity::ExceptionFromErrorCode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.AccessControl.ResourceType resource_type
[[deprecated("Use field access instead!")]] ::System::Security::AccessControl::ResourceType& System::Security::AccessControl::NativeObjectSecurity::dyn_resource_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::dyn_resource_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resource_type"))->offset;
  return *reinterpret_cast<::System::Security::AccessControl::ResourceType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.AccessControl.NativeObjectSecurity.get_ResourceType
::System::Security::AccessControl::ResourceType System::Security::AccessControl::NativeObjectSecurity::get_ResourceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::get_ResourceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResourceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::ResourceType, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.NativeObjectSecurity.ClearAccessControlSectionsModified
void System::Security::AccessControl::NativeObjectSecurity::ClearAccessControlSectionsModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::ClearAccessControlSectionsModified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearAccessControlSectionsModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.NativeObjectSecurity.DefaultExceptionFromErrorCode
::System::Exception* System::Security::AccessControl::NativeObjectSecurity::DefaultExceptionFromErrorCode(int errorCode, ::StringW name, ::System::Runtime::InteropServices::SafeHandle* handle, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::DefaultExceptionFromErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.AccessControl", "NativeObjectSecurity", "DefaultExceptionFromErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode, name, handle, context);
}
// Autogenerated method: System.Security.AccessControl.NativeObjectSecurity.RaiseExceptionOnFailure
void System::Security::AccessControl::NativeObjectSecurity::RaiseExceptionOnFailure(int errorCode, ::StringW name, ::System::Runtime::InteropServices::SafeHandle* handle, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::RaiseExceptionOnFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseExceptionOnFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorCode, name, handle, context);
}
// Autogenerated method: System.Security.AccessControl.NativeObjectSecurity.InternalGet
int System::Security::AccessControl::NativeObjectSecurity::InternalGet(::StringW name, ::System::Security::AccessControl::AccessControlSections includeSections) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::InternalGet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(includeSections)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name, includeSections);
}
// Autogenerated method: System.Security.AccessControl.NativeObjectSecurity.Win32GetHelper
int System::Security::AccessControl::NativeObjectSecurity::Win32GetHelper(::System::Security::AccessControl::NativeObjectSecurity::GetSecurityInfoNativeCall* nativeCall, ::System::Security::AccessControl::AccessControlSections includeSections) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::Win32GetHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Win32GetHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeCall), ::il2cpp_utils::ExtractType(includeSections)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, nativeCall, includeSections);
}
// Autogenerated method: System.Security.AccessControl.NativeObjectSecurity.Win32FixName
::StringW System::Security::AccessControl::NativeObjectSecurity::Win32FixName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::Win32FixName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Win32FixName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Security.AccessControl.NativeObjectSecurity.GetNamedSecurityInfo
int System::Security::AccessControl::NativeObjectSecurity::GetNamedSecurityInfo(::StringW name, ::System::Security::AccessControl::ResourceType resourceType, ::System::Security::AccessControl::SecurityInfos securityInfos, ByRef<::System::IntPtr> owner, ByRef<::System::IntPtr> group, ByRef<::System::IntPtr> dacl, ByRef<::System::IntPtr> sacl, ByRef<::System::IntPtr> descriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::GetNamedSecurityInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.AccessControl", "NativeObjectSecurity", "GetNamedSecurityInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(resourceType), ::il2cpp_utils::ExtractType(securityInfos), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, resourceType, securityInfos, byref(owner), byref(group), byref(dacl), byref(sacl), byref(descriptor));
}
// Autogenerated method: System.Security.AccessControl.NativeObjectSecurity.LocalFree
::System::IntPtr System::Security::AccessControl::NativeObjectSecurity::LocalFree(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::LocalFree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.AccessControl", "NativeObjectSecurity", "LocalFree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Security.AccessControl.NativeObjectSecurity.GetSecurityDescriptorLength
int System::Security::AccessControl::NativeObjectSecurity::GetSecurityDescriptorLength(::System::IntPtr descriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::GetSecurityDescriptorLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.AccessControl", "NativeObjectSecurity", "GetSecurityDescriptorLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(descriptor)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, descriptor);
}
// Autogenerated method: System.Security.AccessControl.NativeObjectSecurity.IsValidSecurityDescriptor
bool System::Security::AccessControl::NativeObjectSecurity::IsValidSecurityDescriptor(::System::IntPtr descriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::IsValidSecurityDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.AccessControl", "NativeObjectSecurity", "IsValidSecurityDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(descriptor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, descriptor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.ExceptionFromErrorCode
#include "System/Security/AccessControl/NativeObjectSecurity_ExceptionFromErrorCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.ExceptionFromErrorCode.Invoke
::System::Exception* System::Security::AccessControl::NativeObjectSecurity::ExceptionFromErrorCode::Invoke(int errorCode, ::StringW name, ::System::Runtime::InteropServices::SafeHandle* handle, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::ExceptionFromErrorCode::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, errorCode, name, handle, context);
}
// Autogenerated method: System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.ExceptionFromErrorCode.BeginInvoke
::System::IAsyncResult* System::Security::AccessControl::NativeObjectSecurity::ExceptionFromErrorCode::BeginInvoke(int errorCode, ::StringW name, ::System::Runtime::InteropServices::SafeHandle* handle, ::Il2CppObject* context, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::ExceptionFromErrorCode::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, errorCode, name, handle, context, callback, object);
}
// Autogenerated method: System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.ExceptionFromErrorCode.EndInvoke
::System::Exception* System::Security::AccessControl::NativeObjectSecurity::ExceptionFromErrorCode::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::ExceptionFromErrorCode::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.GetSecurityInfoNativeCall
#include "System/Security/AccessControl/NativeObjectSecurity_GetSecurityInfoNativeCall.hpp"
// Including type: System.Security.AccessControl.SecurityInfos
#include "System/Security/AccessControl/SecurityInfos.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.GetSecurityInfoNativeCall.Invoke
int System::Security::AccessControl::NativeObjectSecurity::GetSecurityInfoNativeCall::Invoke(::System::Security::AccessControl::SecurityInfos securityInfos, ByRef<::System::IntPtr> owner, ByRef<::System::IntPtr> group, ByRef<::System::IntPtr> dacl, ByRef<::System::IntPtr> sacl, ByRef<::System::IntPtr> descriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::GetSecurityInfoNativeCall::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(securityInfos), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, securityInfos, byref(owner), byref(group), byref(dacl), byref(sacl), byref(descriptor));
}
// Autogenerated method: System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.GetSecurityInfoNativeCall.BeginInvoke
::System::IAsyncResult* System::Security::AccessControl::NativeObjectSecurity::GetSecurityInfoNativeCall::BeginInvoke(::System::Security::AccessControl::SecurityInfos securityInfos, ByRef<::System::IntPtr> owner, ByRef<::System::IntPtr> group, ByRef<::System::IntPtr> dacl, ByRef<::System::IntPtr> sacl, ByRef<::System::IntPtr> descriptor, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::GetSecurityInfoNativeCall::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(securityInfos), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, securityInfos, byref(owner), byref(group), byref(dacl), byref(sacl), byref(descriptor), callback, object);
}
// Autogenerated method: System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.GetSecurityInfoNativeCall.EndInvoke
int System::Security::AccessControl::NativeObjectSecurity::GetSecurityInfoNativeCall::EndInvoke(ByRef<::System::IntPtr> owner, ByRef<::System::IntPtr> group, ByRef<::System::IntPtr> dacl, ByRef<::System::IntPtr> sacl, ByRef<::System::IntPtr> descriptor, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::GetSecurityInfoNativeCall::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(owner), byref(group), byref(dacl), byref(sacl), byref(descriptor), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.<>c__DisplayClass20_0
#include "System/Security/AccessControl/NativeObjectSecurity_--c__DisplayClass20_0.hpp"
// Including type: System.Security.AccessControl.SecurityInfos
#include "System/Security/AccessControl/SecurityInfos.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Security.AccessControl.NativeObjectSecurity <>4__this
[[deprecated("Use field access instead!")]] ::System::Security::AccessControl::NativeObjectSecurity*& System::Security::AccessControl::NativeObjectSecurity::$$c__DisplayClass20_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::$$c__DisplayClass20_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Security::AccessControl::NativeObjectSecurity**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Security::AccessControl::NativeObjectSecurity::$$c__DisplayClass20_0::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::$$c__DisplayClass20_0::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.<>c__DisplayClass20_0.<InternalGet>b__0
int System::Security::AccessControl::NativeObjectSecurity::$$c__DisplayClass20_0::$InternalGet$b__0(::System::Security::AccessControl::SecurityInfos securityInfos, ByRef<::System::IntPtr> owner, ByRef<::System::IntPtr> group, ByRef<::System::IntPtr> dacl, ByRef<::System::IntPtr> sacl, ByRef<::System::IntPtr> descriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::$$c__DisplayClass20_0::<InternalGet>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InternalGet>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(securityInfos), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, securityInfos, byref(owner), byref(group), byref(dacl), byref(sacl), byref(descriptor));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.ObjectAce
#include "System/Security/AccessControl/ObjectAce.hpp"
// Including type: System.Security.Principal.SecurityIdentifier
#include "System/Security/Principal/SecurityIdentifier.hpp"
// Including type: System.Security.AccessControl.AceType
#include "System/Security/AccessControl/AceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Guid object_ace_type
[[deprecated("Use field access instead!")]] ::System::Guid& System::Security::AccessControl::ObjectAce::dyn_object_ace_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAce::dyn_object_ace_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "object_ace_type"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Guid inherited_object_type
[[deprecated("Use field access instead!")]] ::System::Guid& System::Security::AccessControl::ObjectAce::dyn_inherited_object_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAce::dyn_inherited_object_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inherited_object_type"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.AccessControl.ObjectAceFlags object_ace_flags
[[deprecated("Use field access instead!")]] ::System::Security::AccessControl::ObjectAceFlags& System::Security::AccessControl::ObjectAce::dyn_object_ace_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAce::dyn_object_ace_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "object_ace_flags"))->offset;
  return *reinterpret_cast<::System::Security::AccessControl::ObjectAceFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.AccessControl.ObjectAce.get_InheritedObjectAceType
::System::Guid System::Security::AccessControl::ObjectAce::get_InheritedObjectAceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAce::get_InheritedObjectAceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InheritedObjectAceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.ObjectAce.set_InheritedObjectAceType
void System::Security::AccessControl::ObjectAce::set_InheritedObjectAceType(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAce::set_InheritedObjectAceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InheritedObjectAceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.AccessControl.ObjectAce.get_InheritedObjectAceTypePresent
bool System::Security::AccessControl::ObjectAce::get_InheritedObjectAceTypePresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAce::get_InheritedObjectAceTypePresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InheritedObjectAceTypePresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.ObjectAce.get_ObjectAceFlags
::System::Security::AccessControl::ObjectAceFlags System::Security::AccessControl::ObjectAce::get_ObjectAceFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAce::get_ObjectAceFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectAceFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::ObjectAceFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.ObjectAce.set_ObjectAceFlags
void System::Security::AccessControl::ObjectAce::set_ObjectAceFlags(::System::Security::AccessControl::ObjectAceFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAce::set_ObjectAceFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ObjectAceFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.AccessControl.ObjectAce.get_ObjectAceType
::System::Guid System::Security::AccessControl::ObjectAce::get_ObjectAceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAce::get_ObjectAceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectAceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.ObjectAce.set_ObjectAceType
void System::Security::AccessControl::ObjectAce::set_ObjectAceType(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAce::set_ObjectAceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ObjectAceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.AccessControl.ObjectAce.get_ObjectAceTypePresent
bool System::Security::AccessControl::ObjectAce::get_ObjectAceTypePresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAce::get_ObjectAceTypePresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectAceTypePresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.ObjectAce.ConvertType
::System::Security::AccessControl::AceType System::Security::AccessControl::ObjectAce::ConvertType(::System::Security::AccessControl::AceQualifier qualifier, bool isCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAce::ConvertType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.AccessControl", "ObjectAce", "ConvertType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifier), ::il2cpp_utils::ExtractType(isCallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::AceType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qualifier, isCallback);
}
// Autogenerated method: System.Security.AccessControl.ObjectAce.WriteGuid
void System::Security::AccessControl::ObjectAce::WriteGuid(::System::Guid val, ::ArrayW<uint8_t> buffer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAce::WriteGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val, buffer, offset);
}
// Autogenerated method: System.Security.AccessControl.ObjectAce.ReadGuid
::System::Guid System::Security::AccessControl::ObjectAce::ReadGuid(::ArrayW<uint8_t> buffer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAce::ReadGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method, buffer, offset);
}
// Autogenerated method: System.Security.AccessControl.ObjectAce.get_BinaryLength
int System::Security::AccessControl::ObjectAce::get_BinaryLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAce::get_BinaryLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BinaryLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.ObjectAce.GetBinaryForm
void System::Security::AccessControl::ObjectAce::GetBinaryForm(::ArrayW<uint8_t> binaryForm, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAce::GetBinaryForm");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBinaryForm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryForm), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, binaryForm, offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.ObjectAceFlags
#include "System/Security/AccessControl/ObjectAceFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ObjectAceFlags None
::System::Security::AccessControl::ObjectAceFlags System::Security::AccessControl::ObjectAceFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAceFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ObjectAceFlags>("System.Security.AccessControl", "ObjectAceFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ObjectAceFlags None
void System::Security::AccessControl::ObjectAceFlags::_set_None(::System::Security::AccessControl::ObjectAceFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAceFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ObjectAceFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ObjectAceFlags ObjectAceTypePresent
::System::Security::AccessControl::ObjectAceFlags System::Security::AccessControl::ObjectAceFlags::_get_ObjectAceTypePresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAceFlags::_get_ObjectAceTypePresent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ObjectAceFlags>("System.Security.AccessControl", "ObjectAceFlags", "ObjectAceTypePresent"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ObjectAceFlags ObjectAceTypePresent
void System::Security::AccessControl::ObjectAceFlags::_set_ObjectAceTypePresent(::System::Security::AccessControl::ObjectAceFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAceFlags::_set_ObjectAceTypePresent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ObjectAceFlags", "ObjectAceTypePresent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ObjectAceFlags InheritedObjectAceTypePresent
::System::Security::AccessControl::ObjectAceFlags System::Security::AccessControl::ObjectAceFlags::_get_InheritedObjectAceTypePresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAceFlags::_get_InheritedObjectAceTypePresent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ObjectAceFlags>("System.Security.AccessControl", "ObjectAceFlags", "InheritedObjectAceTypePresent"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ObjectAceFlags InheritedObjectAceTypePresent
void System::Security::AccessControl::ObjectAceFlags::_set_InheritedObjectAceTypePresent(::System::Security::AccessControl::ObjectAceFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAceFlags::_set_InheritedObjectAceTypePresent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ObjectAceFlags", "InheritedObjectAceTypePresent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::AccessControl::ObjectAceFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectAceFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.CommonSecurityDescriptor
#include "System/Security/AccessControl/CommonSecurityDescriptor.hpp"
// Including type: System.Security.AccessControl.ObjectSecurity
#include "System/Security/AccessControl/ObjectSecurity.hpp"
// Including type: System.Threading.ReaderWriterLock
#include "System/Threading/ReaderWriterLock.hpp"
// Including type: System.Security.AccessControl.AccessRule
#include "System/Security/AccessControl/AccessRule.hpp"
// Including type: System.Security.Principal.IdentityReference
#include "System/Security/Principal/IdentityReference.hpp"
// Including type: System.Security.AccessControl.InheritanceFlags
#include "System/Security/AccessControl/InheritanceFlags.hpp"
// Including type: System.Security.AccessControl.PropagationFlags
#include "System/Security/AccessControl/PropagationFlags.hpp"
// Including type: System.Security.AccessControl.AccessControlType
#include "System/Security/AccessControl/AccessControlType.hpp"
// Including type: System.Security.AccessControl.AuthorizationRuleCollection
#include "System/Security/AccessControl/AuthorizationRuleCollection.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Security.AccessControl.QualifiedAce
#include "System/Security/AccessControl/QualifiedAce.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Security.AccessControl.CommonSecurityDescriptor descriptor
[[deprecated("Use field access instead!")]] ::System::Security::AccessControl::CommonSecurityDescriptor*& System::Security::AccessControl::ObjectSecurity::dyn_descriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectSecurity::dyn_descriptor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "descriptor"))->offset;
  return *reinterpret_cast<::System::Security::AccessControl::CommonSecurityDescriptor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.AccessControl.AccessControlSections sections_modified
[[deprecated("Use field access instead!")]] ::System::Security::AccessControl::AccessControlSections& System::Security::AccessControl::ObjectSecurity::dyn_sections_modified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectSecurity::dyn_sections_modified");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sections_modified"))->offset;
  return *reinterpret_cast<::System::Security::AccessControl::AccessControlSections*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ReaderWriterLock rw_lock
[[deprecated("Use field access instead!")]] ::System::Threading::ReaderWriterLock*& System::Security::AccessControl::ObjectSecurity::dyn_rw_lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectSecurity::dyn_rw_lock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rw_lock"))->offset;
  return *reinterpret_cast<::System::Threading::ReaderWriterLock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.AccessControl.ObjectSecurity.get_AccessControlSectionsModified
::System::Security::AccessControl::AccessControlSections System::Security::AccessControl::ObjectSecurity::get_AccessControlSectionsModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectSecurity::get_AccessControlSectionsModified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AccessControlSectionsModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::AccessControlSections, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.ObjectSecurity.set_AccessControlSectionsModified
void System::Security::AccessControl::ObjectSecurity::set_AccessControlSectionsModified(::System::Security::AccessControl::AccessControlSections value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectSecurity::set_AccessControlSectionsModified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AccessControlSectionsModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.AccessControl.ObjectSecurity.get_IsContainer
bool System::Security::AccessControl::ObjectSecurity::get_IsContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectSecurity::get_IsContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.ObjectSecurity.get_IsDS
bool System::Security::AccessControl::ObjectSecurity::get_IsDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectSecurity::get_IsDS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory
::System::Security::AccessControl::AccessRule* System::Security::AccessControl::ObjectSecurity::AccessRuleFactory(::System::Security::Principal::IdentityReference* identityReference, int accessMask, bool isInherited, ::System::Security::AccessControl::InheritanceFlags inheritanceFlags, ::System::Security::AccessControl::PropagationFlags propagationFlags, ::System::Security::AccessControl::AccessControlType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectSecurity::AccessRuleFactory");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AccessRuleFactory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identityReference), ::il2cpp_utils::ExtractType(accessMask), ::il2cpp_utils::ExtractType(isInherited), ::il2cpp_utils::ExtractType(inheritanceFlags), ::il2cpp_utils::ExtractType(propagationFlags), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::AccessRule*, false>(this, ___internal__method, identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type);
}
// Autogenerated method: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm
void System::Security::AccessControl::ObjectSecurity::SetSecurityDescriptorBinaryForm(::ArrayW<uint8_t> binaryForm, ::System::Security::AccessControl::AccessControlSections includeSections) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectSecurity::SetSecurityDescriptorBinaryForm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSecurityDescriptorBinaryForm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryForm), ::il2cpp_utils::ExtractType(includeSections)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, binaryForm, includeSections);
}
// Autogenerated method: System.Security.AccessControl.ObjectSecurity.CopySddlForm
void System::Security::AccessControl::ObjectSecurity::CopySddlForm(::System::Security::AccessControl::CommonSecurityDescriptor* sourceDescriptor, ::System::Security::AccessControl::AccessControlSections includeSections) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectSecurity::CopySddlForm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopySddlForm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceDescriptor), ::il2cpp_utils::ExtractType(includeSections)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceDescriptor, includeSections);
}
// Autogenerated method: System.Security.AccessControl.ObjectSecurity.Reading
void System::Security::AccessControl::ObjectSecurity::Reading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectSecurity::Reading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.ObjectSecurity.ReadLock
void System::Security::AccessControl::ObjectSecurity::ReadLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectSecurity::ReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.ObjectSecurity.ReadUnlock
void System::Security::AccessControl::ObjectSecurity::ReadUnlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectSecurity::ReadUnlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUnlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.ObjectSecurity.Writing
void System::Security::AccessControl::ObjectSecurity::Writing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectSecurity::Writing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Writing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.ObjectSecurity.WriteLock
void System::Security::AccessControl::ObjectSecurity::WriteLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectSecurity::WriteLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.ObjectSecurity.WriteUnlock
void System::Security::AccessControl::ObjectSecurity::WriteUnlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectSecurity::WriteUnlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUnlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.ObjectSecurity.InternalGetAccessRules
::System::Security::AccessControl::AuthorizationRuleCollection* System::Security::AccessControl::ObjectSecurity::InternalGetAccessRules(bool includeExplicit, bool includeInherited, ::System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectSecurity::InternalGetAccessRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetAccessRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includeExplicit), ::il2cpp_utils::ExtractType(includeInherited), ::il2cpp_utils::ExtractType(targetType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::AuthorizationRuleCollection*, false>(this, ___internal__method, includeExplicit, includeInherited, targetType);
}
// Autogenerated method: System.Security.AccessControl.ObjectSecurity.InternalAccessRuleFactory
::System::Security::AccessControl::AccessRule* System::Security::AccessControl::ObjectSecurity::InternalAccessRuleFactory(::System::Security::AccessControl::QualifiedAce* ace, ::System::Type* targetType, ::System::Security::AccessControl::AccessControlType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ObjectSecurity::InternalAccessRuleFactory");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalAccessRuleFactory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ace), ::il2cpp_utils::ExtractType(targetType), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::AccessRule*, false>(this, ___internal__method, ace, targetType, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.PrivilegeNotHeldException
#include "System/Security/AccessControl/PrivilegeNotHeldException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.AccessControl.PrivilegeNotHeldException.GetObjectData
void System::Security::AccessControl::PrivilegeNotHeldException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::PrivilegeNotHeldException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.PropagationFlags
#include "System/Security/AccessControl/PropagationFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.PropagationFlags None
::System::Security::AccessControl::PropagationFlags System::Security::AccessControl::PropagationFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::PropagationFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::PropagationFlags>("System.Security.AccessControl", "PropagationFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.PropagationFlags None
void System::Security::AccessControl::PropagationFlags::_set_None(::System::Security::AccessControl::PropagationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::PropagationFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "PropagationFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.PropagationFlags NoPropagateInherit
::System::Security::AccessControl::PropagationFlags System::Security::AccessControl::PropagationFlags::_get_NoPropagateInherit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::PropagationFlags::_get_NoPropagateInherit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::PropagationFlags>("System.Security.AccessControl", "PropagationFlags", "NoPropagateInherit"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.PropagationFlags NoPropagateInherit
void System::Security::AccessControl::PropagationFlags::_set_NoPropagateInherit(::System::Security::AccessControl::PropagationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::PropagationFlags::_set_NoPropagateInherit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "PropagationFlags", "NoPropagateInherit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.PropagationFlags InheritOnly
::System::Security::AccessControl::PropagationFlags System::Security::AccessControl::PropagationFlags::_get_InheritOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::PropagationFlags::_get_InheritOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::PropagationFlags>("System.Security.AccessControl", "PropagationFlags", "InheritOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.PropagationFlags InheritOnly
void System::Security::AccessControl::PropagationFlags::_set_InheritOnly(::System::Security::AccessControl::PropagationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::PropagationFlags::_set_InheritOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "PropagationFlags", "InheritOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::AccessControl::PropagationFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::PropagationFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.QualifiedAce
#include "System/Security/AccessControl/QualifiedAce.hpp"
// Including type: System.Security.AccessControl.AceQualifier
#include "System/Security/AccessControl/AceQualifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] opaque
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::AccessControl::QualifiedAce::dyn_opaque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::QualifiedAce::dyn_opaque");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opaque"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.AccessControl.QualifiedAce.get_AceQualifier
::System::Security::AccessControl::AceQualifier System::Security::AccessControl::QualifiedAce::get_AceQualifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::QualifiedAce::get_AceQualifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AceQualifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::AceQualifier, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.QualifiedAce.get_IsCallback
bool System::Security::AccessControl::QualifiedAce::get_IsCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::QualifiedAce::get_IsCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.QualifiedAce.get_OpaqueLength
int System::Security::AccessControl::QualifiedAce::get_OpaqueLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::QualifiedAce::get_OpaqueLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OpaqueLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.QualifiedAce.GetOpaque
::ArrayW<uint8_t> System::Security::AccessControl::QualifiedAce::GetOpaque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::QualifiedAce::GetOpaque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOpaque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.QualifiedAce.SetOpaque
void System::Security::AccessControl::QualifiedAce::SetOpaque(::ArrayW<uint8_t> opaque) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::QualifiedAce::SetOpaque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOpaque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opaque)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, opaque);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.RawAcl
#include "System/Security/AccessControl/RawAcl.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Security.AccessControl.GenericAce
#include "System/Security/AccessControl/GenericAce.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte revision
[[deprecated("Use field access instead!")]] uint8_t& System::Security::AccessControl::RawAcl::dyn_revision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawAcl::dyn_revision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "revision"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Security.AccessControl.GenericAce> list
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Security::AccessControl::GenericAce*>*& System::Security::AccessControl::RawAcl::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawAcl::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Security::AccessControl::GenericAce*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.AccessControl.RawAcl.InsertAce
void System::Security::AccessControl::RawAcl::InsertAce(int index, ::System::Security::AccessControl::GenericAce* ace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawAcl::InsertAce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertAce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(ace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, ace);
}
// Autogenerated method: System.Security.AccessControl.RawAcl.RemoveAce
void System::Security::AccessControl::RawAcl::RemoveAce(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawAcl::RemoveAce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Security.AccessControl.RawAcl.WriteUShort
void System::Security::AccessControl::RawAcl::WriteUShort(uint16_t val, ::ArrayW<uint8_t> buffer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawAcl::WriteUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val, buffer, offset);
}
// Autogenerated method: System.Security.AccessControl.RawAcl.ReadUShort
uint16_t System::Security::AccessControl::RawAcl::ReadUShort(::ArrayW<uint8_t> buffer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawAcl::ReadUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, buffer, offset);
}
// Autogenerated method: System.Security.AccessControl.RawAcl.get_BinaryLength
int System::Security::AccessControl::RawAcl::get_BinaryLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawAcl::get_BinaryLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BinaryLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.RawAcl.get_Count
int System::Security::AccessControl::RawAcl::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawAcl::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.RawAcl.get_Item
::System::Security::AccessControl::GenericAce* System::Security::AccessControl::RawAcl::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawAcl::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::GenericAce*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Security.AccessControl.RawAcl.set_Item
void System::Security::AccessControl::RawAcl::set_Item(int index, ::System::Security::AccessControl::GenericAce* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawAcl::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Security.AccessControl.RawAcl.get_Revision
uint8_t System::Security::AccessControl::RawAcl::get_Revision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawAcl::get_Revision");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Revision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.RawAcl.GetBinaryForm
void System::Security::AccessControl::RawAcl::GetBinaryForm(::ArrayW<uint8_t> binaryForm, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawAcl::GetBinaryForm");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBinaryForm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryForm), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, binaryForm, offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.RawSecurityDescriptor
#include "System/Security/AccessControl/RawSecurityDescriptor.hpp"
// Including type: System.Security.Principal.SecurityIdentifier
#include "System/Security/Principal/SecurityIdentifier.hpp"
// Including type: System.Security.AccessControl.RawAcl
#include "System/Security/AccessControl/RawAcl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.AccessControl.ControlFlags control_flags
[[deprecated("Use field access instead!")]] ::System::Security::AccessControl::ControlFlags& System::Security::AccessControl::RawSecurityDescriptor::dyn_control_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawSecurityDescriptor::dyn_control_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "control_flags"))->offset;
  return *reinterpret_cast<::System::Security::AccessControl::ControlFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Principal.SecurityIdentifier owner_sid
[[deprecated("Use field access instead!")]] ::System::Security::Principal::SecurityIdentifier*& System::Security::AccessControl::RawSecurityDescriptor::dyn_owner_sid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawSecurityDescriptor::dyn_owner_sid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "owner_sid"))->offset;
  return *reinterpret_cast<::System::Security::Principal::SecurityIdentifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Principal.SecurityIdentifier group_sid
[[deprecated("Use field access instead!")]] ::System::Security::Principal::SecurityIdentifier*& System::Security::AccessControl::RawSecurityDescriptor::dyn_group_sid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawSecurityDescriptor::dyn_group_sid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "group_sid"))->offset;
  return *reinterpret_cast<::System::Security::Principal::SecurityIdentifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.AccessControl.RawAcl system_acl
[[deprecated("Use field access instead!")]] ::System::Security::AccessControl::RawAcl*& System::Security::AccessControl::RawSecurityDescriptor::dyn_system_acl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawSecurityDescriptor::dyn_system_acl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "system_acl"))->offset;
  return *reinterpret_cast<::System::Security::AccessControl::RawAcl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.AccessControl.RawAcl discretionary_acl
[[deprecated("Use field access instead!")]] ::System::Security::AccessControl::RawAcl*& System::Security::AccessControl::RawSecurityDescriptor::dyn_discretionary_acl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawSecurityDescriptor::dyn_discretionary_acl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "discretionary_acl"))->offset;
  return *reinterpret_cast<::System::Security::AccessControl::RawAcl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte resourcemgr_control
[[deprecated("Use field access instead!")]] uint8_t& System::Security::AccessControl::RawSecurityDescriptor::dyn_resourcemgr_control() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawSecurityDescriptor::dyn_resourcemgr_control");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resourcemgr_control"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.AccessControl.RawSecurityDescriptor.get_DiscretionaryAcl
::System::Security::AccessControl::RawAcl* System::Security::AccessControl::RawSecurityDescriptor::get_DiscretionaryAcl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawSecurityDescriptor::get_DiscretionaryAcl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DiscretionaryAcl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::RawAcl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.RawSecurityDescriptor.get_SystemAcl
::System::Security::AccessControl::RawAcl* System::Security::AccessControl::RawSecurityDescriptor::get_SystemAcl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawSecurityDescriptor::get_SystemAcl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SystemAcl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::RawAcl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.RawSecurityDescriptor.ReadUShort
uint16_t System::Security::AccessControl::RawSecurityDescriptor::ReadUShort(::ArrayW<uint8_t> buffer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawSecurityDescriptor::ReadUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, buffer, offset);
}
// Autogenerated method: System.Security.AccessControl.RawSecurityDescriptor.ReadInt
int System::Security::AccessControl::RawSecurityDescriptor::ReadInt(::ArrayW<uint8_t> buffer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawSecurityDescriptor::ReadInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset);
}
// Autogenerated method: System.Security.AccessControl.RawSecurityDescriptor.get_ControlFlags
::System::Security::AccessControl::ControlFlags System::Security::AccessControl::RawSecurityDescriptor::get_ControlFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawSecurityDescriptor::get_ControlFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ControlFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::ControlFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.RawSecurityDescriptor.get_Group
::System::Security::Principal::SecurityIdentifier* System::Security::AccessControl::RawSecurityDescriptor::get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawSecurityDescriptor::get_Group");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Principal::SecurityIdentifier*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.RawSecurityDescriptor.set_Group
void System::Security::AccessControl::RawSecurityDescriptor::set_Group(::System::Security::Principal::SecurityIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawSecurityDescriptor::set_Group");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.AccessControl.RawSecurityDescriptor.get_Owner
::System::Security::Principal::SecurityIdentifier* System::Security::AccessControl::RawSecurityDescriptor::get_Owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawSecurityDescriptor::get_Owner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Owner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Principal::SecurityIdentifier*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.RawSecurityDescriptor.set_Owner
void System::Security::AccessControl::RawSecurityDescriptor::set_Owner(::System::Security::Principal::SecurityIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawSecurityDescriptor::set_Owner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Owner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.ResourceType
#include "System/Security/AccessControl/ResourceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ResourceType Unknown
::System::Security::AccessControl::ResourceType System::Security::AccessControl::ResourceType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ResourceType>("System.Security.AccessControl", "ResourceType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ResourceType Unknown
void System::Security::AccessControl::ResourceType::_set_Unknown(::System::Security::AccessControl::ResourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ResourceType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ResourceType FileObject
::System::Security::AccessControl::ResourceType System::Security::AccessControl::ResourceType::_get_FileObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_get_FileObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ResourceType>("System.Security.AccessControl", "ResourceType", "FileObject"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ResourceType FileObject
void System::Security::AccessControl::ResourceType::_set_FileObject(::System::Security::AccessControl::ResourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_set_FileObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ResourceType", "FileObject", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ResourceType Service
::System::Security::AccessControl::ResourceType System::Security::AccessControl::ResourceType::_get_Service() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_get_Service");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ResourceType>("System.Security.AccessControl", "ResourceType", "Service"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ResourceType Service
void System::Security::AccessControl::ResourceType::_set_Service(::System::Security::AccessControl::ResourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_set_Service");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ResourceType", "Service", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ResourceType Printer
::System::Security::AccessControl::ResourceType System::Security::AccessControl::ResourceType::_get_Printer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_get_Printer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ResourceType>("System.Security.AccessControl", "ResourceType", "Printer"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ResourceType Printer
void System::Security::AccessControl::ResourceType::_set_Printer(::System::Security::AccessControl::ResourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_set_Printer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ResourceType", "Printer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ResourceType RegistryKey
::System::Security::AccessControl::ResourceType System::Security::AccessControl::ResourceType::_get_RegistryKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_get_RegistryKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ResourceType>("System.Security.AccessControl", "ResourceType", "RegistryKey"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ResourceType RegistryKey
void System::Security::AccessControl::ResourceType::_set_RegistryKey(::System::Security::AccessControl::ResourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_set_RegistryKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ResourceType", "RegistryKey", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ResourceType LMShare
::System::Security::AccessControl::ResourceType System::Security::AccessControl::ResourceType::_get_LMShare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_get_LMShare");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ResourceType>("System.Security.AccessControl", "ResourceType", "LMShare"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ResourceType LMShare
void System::Security::AccessControl::ResourceType::_set_LMShare(::System::Security::AccessControl::ResourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_set_LMShare");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ResourceType", "LMShare", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ResourceType KernelObject
::System::Security::AccessControl::ResourceType System::Security::AccessControl::ResourceType::_get_KernelObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_get_KernelObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ResourceType>("System.Security.AccessControl", "ResourceType", "KernelObject"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ResourceType KernelObject
void System::Security::AccessControl::ResourceType::_set_KernelObject(::System::Security::AccessControl::ResourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_set_KernelObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ResourceType", "KernelObject", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ResourceType WindowObject
::System::Security::AccessControl::ResourceType System::Security::AccessControl::ResourceType::_get_WindowObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_get_WindowObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ResourceType>("System.Security.AccessControl", "ResourceType", "WindowObject"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ResourceType WindowObject
void System::Security::AccessControl::ResourceType::_set_WindowObject(::System::Security::AccessControl::ResourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_set_WindowObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ResourceType", "WindowObject", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ResourceType DSObject
::System::Security::AccessControl::ResourceType System::Security::AccessControl::ResourceType::_get_DSObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_get_DSObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ResourceType>("System.Security.AccessControl", "ResourceType", "DSObject"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ResourceType DSObject
void System::Security::AccessControl::ResourceType::_set_DSObject(::System::Security::AccessControl::ResourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_set_DSObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ResourceType", "DSObject", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ResourceType DSObjectAll
::System::Security::AccessControl::ResourceType System::Security::AccessControl::ResourceType::_get_DSObjectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_get_DSObjectAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ResourceType>("System.Security.AccessControl", "ResourceType", "DSObjectAll"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ResourceType DSObjectAll
void System::Security::AccessControl::ResourceType::_set_DSObjectAll(::System::Security::AccessControl::ResourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_set_DSObjectAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ResourceType", "DSObjectAll", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ResourceType ProviderDefined
::System::Security::AccessControl::ResourceType System::Security::AccessControl::ResourceType::_get_ProviderDefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_get_ProviderDefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ResourceType>("System.Security.AccessControl", "ResourceType", "ProviderDefined"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ResourceType ProviderDefined
void System::Security::AccessControl::ResourceType::_set_ProviderDefined(::System::Security::AccessControl::ResourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_set_ProviderDefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ResourceType", "ProviderDefined", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ResourceType WmiGuidObject
::System::Security::AccessControl::ResourceType System::Security::AccessControl::ResourceType::_get_WmiGuidObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_get_WmiGuidObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ResourceType>("System.Security.AccessControl", "ResourceType", "WmiGuidObject"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ResourceType WmiGuidObject
void System::Security::AccessControl::ResourceType::_set_WmiGuidObject(::System::Security::AccessControl::ResourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_set_WmiGuidObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ResourceType", "WmiGuidObject", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.ResourceType RegistryWow6432Key
::System::Security::AccessControl::ResourceType System::Security::AccessControl::ResourceType::_get_RegistryWow6432Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_get_RegistryWow6432Key");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::ResourceType>("System.Security.AccessControl", "ResourceType", "RegistryWow6432Key"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.ResourceType RegistryWow6432Key
void System::Security::AccessControl::ResourceType::_set_RegistryWow6432Key(::System::Security::AccessControl::ResourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::_set_RegistryWow6432Key");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "ResourceType", "RegistryWow6432Key", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::AccessControl::ResourceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::ResourceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.SecurityInfos
#include "System/Security/AccessControl/SecurityInfos.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.SecurityInfos Owner
::System::Security::AccessControl::SecurityInfos System::Security::AccessControl::SecurityInfos::_get_Owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::SecurityInfos::_get_Owner");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::SecurityInfos>("System.Security.AccessControl", "SecurityInfos", "Owner"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.SecurityInfos Owner
void System::Security::AccessControl::SecurityInfos::_set_Owner(::System::Security::AccessControl::SecurityInfos value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::SecurityInfos::_set_Owner");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "SecurityInfos", "Owner", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.SecurityInfos Group
::System::Security::AccessControl::SecurityInfos System::Security::AccessControl::SecurityInfos::_get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::SecurityInfos::_get_Group");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::SecurityInfos>("System.Security.AccessControl", "SecurityInfos", "Group"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.SecurityInfos Group
void System::Security::AccessControl::SecurityInfos::_set_Group(::System::Security::AccessControl::SecurityInfos value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::SecurityInfos::_set_Group");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "SecurityInfos", "Group", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.SecurityInfos DiscretionaryAcl
::System::Security::AccessControl::SecurityInfos System::Security::AccessControl::SecurityInfos::_get_DiscretionaryAcl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::SecurityInfos::_get_DiscretionaryAcl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::SecurityInfos>("System.Security.AccessControl", "SecurityInfos", "DiscretionaryAcl"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.SecurityInfos DiscretionaryAcl
void System::Security::AccessControl::SecurityInfos::_set_DiscretionaryAcl(::System::Security::AccessControl::SecurityInfos value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::SecurityInfos::_set_DiscretionaryAcl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "SecurityInfos", "DiscretionaryAcl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.AccessControl.SecurityInfos SystemAcl
::System::Security::AccessControl::SecurityInfos System::Security::AccessControl::SecurityInfos::_get_SystemAcl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::SecurityInfos::_get_SystemAcl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::AccessControl::SecurityInfos>("System.Security.AccessControl", "SecurityInfos", "SystemAcl"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.AccessControl.SecurityInfos SystemAcl
void System::Security::AccessControl::SecurityInfos::_set_SystemAcl(::System::Security::AccessControl::SecurityInfos value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::SecurityInfos::_set_SystemAcl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.AccessControl", "SecurityInfos", "SystemAcl", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::AccessControl::SecurityInfos::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::SecurityInfos::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.AccessControl.SystemAcl
#include "System/Security/AccessControl/SystemAcl.hpp"
// Including type: System.Security.AccessControl.AuditFlags
#include "System/Security/AccessControl/AuditFlags.hpp"
// Including type: System.Security.AccessControl.RawAcl
#include "System/Security/AccessControl/RawAcl.hpp"
// Including type: System.Security.AccessControl.AceQualifier
#include "System/Security/AccessControl/AceQualifier.hpp"
// Including type: System.Security.AccessControl.GenericAce
#include "System/Security/AccessControl/GenericAce.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.AccessControl.SystemAcl.IsValidAuditFlags
bool System::Security::AccessControl::SystemAcl::IsValidAuditFlags(::System::Security::AccessControl::AuditFlags auditFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::SystemAcl::IsValidAuditFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.AccessControl", "SystemAcl", "IsValidAuditFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(auditFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, auditFlags);
}
// Autogenerated method: System.Security.AccessControl.SystemAcl.ApplyCanonicalSortToExplicitAces
void System::Security::AccessControl::SystemAcl::ApplyCanonicalSortToExplicitAces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::SystemAcl::ApplyCanonicalSortToExplicitAces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyCanonicalSortToExplicitAces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.AccessControl.SystemAcl.GetAceInsertPosition
int System::Security::AccessControl::SystemAcl::GetAceInsertPosition(::System::Security::AccessControl::AceQualifier aceQualifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::SystemAcl::GetAceInsertPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAceInsertPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aceQualifier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, aceQualifier);
}
// Autogenerated method: System.Security.AccessControl.SystemAcl.IsAceMeaningless
bool System::Security::AccessControl::SystemAcl::IsAceMeaningless(::System::Security::AccessControl::GenericAce* ace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::SystemAcl::IsAceMeaningless");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAceMeaningless", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ace)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ace);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Util.Parser
#include "System/Security/Util/Parser.hpp"
// Including type: System.Security.SecurityDocument
#include "System/Security/SecurityDocument.hpp"
// Including type: System.Security.Util.Tokenizer
#include "System/Security/Util/Tokenizer.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
// Including type: System.Security.Util.TokenizerStream
#include "System/Security/Util/TokenizerStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.SecurityDocument _doc
[[deprecated("Use field access instead!")]] ::System::Security::SecurityDocument*& System::Security::Util::Parser::dyn__doc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Parser::dyn__doc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doc"))->offset;
  return *reinterpret_cast<::System::Security::SecurityDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.Tokenizer _t
[[deprecated("Use field access instead!")]] ::System::Security::Util::Tokenizer*& System::Security::Util::Parser::dyn__t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Parser::dyn__t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_t"))->offset;
  return *reinterpret_cast<::System::Security::Util::Tokenizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Util.Parser.GetTopElement
::System::Security::SecurityElement* System::Security::Util::Parser::GetTopElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Parser::GetTopElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTopElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.Parser.GetRequiredSizes
void System::Security::Util::Parser::GetRequiredSizes(::System::Security::Util::TokenizerStream* stream, ByRef<int> index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Parser::GetRequiredSizes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequiredSizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, byref(index));
}
// Autogenerated method: System.Security.Util.Parser.DetermineFormat
int System::Security::Util::Parser::DetermineFormat(::System::Security::Util::TokenizerStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Parser::DetermineFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetermineFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, stream);
}
// Autogenerated method: System.Security.Util.Parser.ParseContents
void System::Security::Util::Parser::ParseContents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Parser::ParseContents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseContents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Util.Tokenizer
#include "System/Security/Util/Tokenizer.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Security.Util.Tokenizer/System.Security.Util.StringMaker
#include "System/Security/Util/Tokenizer_StringMaker.hpp"
// Including type: System.Security.Util.Tokenizer/System.Security.Util.ITokenReader
#include "System/Security/Util/Tokenizer_ITokenReader.hpp"
// Including type: System.Security.Util.Tokenizer/System.Security.Util.StreamTokenReader
#include "System/Security/Util/Tokenizer_StreamTokenReader.hpp"
// Including type: System.Security.Util.TokenizerStream
#include "System/Security/Util/TokenizerStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 LineNo
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn_LineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn_LineNo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LineNo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inProcessingTag
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn__inProcessingTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inProcessingTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inProcessingTag"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _inBytes
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Util::Tokenizer::dyn__inBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] _inChars
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Security::Util::Tokenizer::dyn__inChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inChars"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _inString
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Util::Tokenizer::dyn__inString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inIndex
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn__inIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inSize
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn__inSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inSavedCharacter
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn__inSavedCharacter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inSavedCharacter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inSavedCharacter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.Tokenizer/System.Security.Util.TokenSource _inTokenSource
[[deprecated("Use field access instead!")]] ::System::Security::Util::Tokenizer::TokenSource& System::Security::Util::Tokenizer::dyn__inTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inTokenSource"))->offset;
  return *reinterpret_cast<::System::Security::Util::Tokenizer::TokenSource*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.Tokenizer/System.Security.Util.ITokenReader _inTokenReader
[[deprecated("Use field access instead!")]] ::System::Security::Util::Tokenizer::ITokenReader*& System::Security::Util::Tokenizer::dyn__inTokenReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inTokenReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inTokenReader"))->offset;
  return *reinterpret_cast<::System::Security::Util::Tokenizer::ITokenReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.Tokenizer/System.Security.Util.StringMaker _maker
[[deprecated("Use field access instead!")]] ::System::Security::Util::Tokenizer::StringMaker*& System::Security::Util::Tokenizer::dyn__maker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__maker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maker"))->offset;
  return *reinterpret_cast<::System::Security::Util::Tokenizer::StringMaker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _searchStrings
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Security::Util::Tokenizer::dyn__searchStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__searchStrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_searchStrings"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _replaceStrings
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Security::Util::Tokenizer::dyn__replaceStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__replaceStrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_replaceStrings"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inNestedIndex
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn__inNestedIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inNestedIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inNestedIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inNestedSize
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn__inNestedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inNestedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inNestedSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _inNestedString
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Util::Tokenizer::dyn__inNestedString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inNestedString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inNestedString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Util.Tokenizer.BasicInitialization
void System::Security::Util::Tokenizer::BasicInitialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::BasicInitialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BasicInitialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.Tokenizer.Recycle
void System::Security::Util::Tokenizer::Recycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::Recycle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Recycle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.Tokenizer.ChangeFormat
void System::Security::Util::Tokenizer::ChangeFormat(::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::ChangeFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encoding);
}
// Autogenerated method: System.Security.Util.Tokenizer.GetTokens
void System::Security::Util::Tokenizer::GetTokens(::System::Security::Util::TokenizerStream* stream, int maxNum, bool endAfterKet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::GetTokens");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTokens", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(maxNum), ::il2cpp_utils::ExtractType(endAfterKet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, maxNum, endAfterKet);
}
// Autogenerated method: System.Security.Util.Tokenizer.GetStringToken
::StringW System::Security::Util::Tokenizer::GetStringToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::GetStringToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Util.Tokenizer/System.Security.Util.TokenSource
#include "System/Security/Util/Tokenizer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource UnicodeByteArray
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_UnicodeByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_UnicodeByteArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "UnicodeByteArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource UnicodeByteArray
void System::Security::Util::Tokenizer::TokenSource::_set_UnicodeByteArray(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_UnicodeByteArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "UnicodeByteArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource UTF8ByteArray
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_UTF8ByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_UTF8ByteArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "UTF8ByteArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource UTF8ByteArray
void System::Security::Util::Tokenizer::TokenSource::_set_UTF8ByteArray(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_UTF8ByteArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "UTF8ByteArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource ASCIIByteArray
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_ASCIIByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_ASCIIByteArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "ASCIIByteArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource ASCIIByteArray
void System::Security::Util::Tokenizer::TokenSource::_set_ASCIIByteArray(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_ASCIIByteArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "ASCIIByteArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource CharArray
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_CharArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_CharArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "CharArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource CharArray
void System::Security::Util::Tokenizer::TokenSource::_set_CharArray(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_CharArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "CharArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource String
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "String"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource String
void System::Security::Util::Tokenizer::TokenSource::_set_String(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource NestedStrings
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_NestedStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_NestedStrings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "NestedStrings"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource NestedStrings
void System::Security::Util::Tokenizer::TokenSource::_set_NestedStrings(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_NestedStrings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "NestedStrings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource Other
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "Other"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource Other
void System::Security::Util::Tokenizer::TokenSource::_set_Other(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "Other", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::TokenSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Util.Tokenizer/System.Security.Util.StringMaker
#include "System/Security/Util/Tokenizer_StringMaker.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String[] aStrings
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Security::Util::Tokenizer::StringMaker::dyn_aStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::dyn_aStrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aStrings"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 cStringsMax
[[deprecated("Use field access instead!")]] uint& System::Security::Util::Tokenizer::StringMaker::dyn_cStringsMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::dyn_cStringsMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cStringsMax"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 cStringsUsed
[[deprecated("Use field access instead!")]] uint& System::Security::Util::Tokenizer::StringMaker::dyn_cStringsUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::dyn_cStringsUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cStringsUsed"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Text.StringBuilder _outStringBuilder
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& System::Security::Util::Tokenizer::StringMaker::dyn__outStringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::dyn__outStringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outStringBuilder"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Char[] _outChars
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Security::Util::Tokenizer::StringMaker::dyn__outChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::dyn__outChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outChars"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 _outIndex
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::StringMaker::dyn__outIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::dyn__outIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Util.Tokenizer/System.Security.Util.StringMaker.HashString
uint System::Security::Util::Tokenizer::StringMaker::HashString(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::HashString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Util", "Tokenizer/StringMaker", "HashString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Security.Util.Tokenizer/System.Security.Util.StringMaker.HashCharArray
uint System::Security::Util::Tokenizer::StringMaker::HashCharArray(::ArrayW<::Il2CppChar> a, int l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::HashCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Util", "Tokenizer/StringMaker", "HashCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, l);
}
// Autogenerated method: System.Security.Util.Tokenizer/System.Security.Util.StringMaker.CompareStringAndChars
bool System::Security::Util::Tokenizer::StringMaker::CompareStringAndChars(::StringW str, ::ArrayW<::Il2CppChar> a, int l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::CompareStringAndChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareStringAndChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, str, a, l);
}
// Autogenerated method: System.Security.Util.Tokenizer/System.Security.Util.StringMaker.MakeString
::StringW System::Security::Util::Tokenizer::StringMaker::MakeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::MakeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Util.Tokenizer/System.Security.Util.ITokenReader
#include "System/Security/Util/Tokenizer_ITokenReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Util.Tokenizer/System.Security.Util.ITokenReader.Read
int System::Security::Util::Tokenizer::ITokenReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::ITokenReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Util.Tokenizer/System.Security.Util.StreamTokenReader
#include "System/Security/Util/Tokenizer_StreamTokenReader.hpp"
// Including type: System.IO.StreamReader
#include "System/IO/StreamReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IO.StreamReader _in
[[deprecated("Use field access instead!")]] ::System::IO::StreamReader*& System::Security::Util::Tokenizer::StreamTokenReader::dyn__in() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StreamTokenReader::dyn__in");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_in"))->offset;
  return *reinterpret_cast<::System::IO::StreamReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _numCharRead
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::StreamTokenReader::dyn__numCharRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StreamTokenReader::dyn__numCharRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numCharRead"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Util.Tokenizer/System.Security.Util.StreamTokenReader.get_NumCharEncountered
int System::Security::Util::Tokenizer::StreamTokenReader::get_NumCharEncountered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StreamTokenReader::get_NumCharEncountered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumCharEncountered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.Tokenizer/System.Security.Util.StreamTokenReader.Read
int System::Security::Util::Tokenizer::StreamTokenReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StreamTokenReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Util.TokenizerShortBlock
#include "System/Security/Util/TokenizerShortBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int16[] m_block
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& System::Security::Util::TokenizerShortBlock::dyn_m_block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerShortBlock::dyn_m_block");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_block"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Security.Util.TokenizerShortBlock m_next
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerShortBlock*& System::Security::Util::TokenizerShortBlock::dyn_m_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerShortBlock::dyn_m_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_next"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerShortBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Util.TokenizerStringBlock
#include "System/Security/Util/TokenizerStringBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String[] m_block
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Security::Util::TokenizerStringBlock::dyn_m_block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStringBlock::dyn_m_block");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_block"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Security.Util.TokenizerStringBlock m_next
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerStringBlock*& System::Security::Util::TokenizerStringBlock::dyn_m_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStringBlock::dyn_m_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_next"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerStringBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Util.TokenizerStream
#include "System/Security/Util/TokenizerStream.hpp"
// Including type: System.Security.Util.TokenizerShortBlock
#include "System/Security/Util/TokenizerShortBlock.hpp"
// Including type: System.Security.Util.TokenizerStringBlock
#include "System/Security/Util/TokenizerStringBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_countTokens
[[deprecated("Use field access instead!")]] int& System::Security::Util::TokenizerStream::dyn_m_countTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_countTokens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_countTokens"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.TokenizerShortBlock m_headTokens
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerShortBlock*& System::Security::Util::TokenizerStream::dyn_m_headTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_headTokens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_headTokens"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerShortBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.TokenizerShortBlock m_lastTokens
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerShortBlock*& System::Security::Util::TokenizerStream::dyn_m_lastTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_lastTokens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastTokens"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerShortBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.TokenizerShortBlock m_currentTokens
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerShortBlock*& System::Security::Util::TokenizerStream::dyn_m_currentTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_currentTokens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentTokens"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerShortBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_indexTokens
[[deprecated("Use field access instead!")]] int& System::Security::Util::TokenizerStream::dyn_m_indexTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_indexTokens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_indexTokens"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.TokenizerStringBlock m_headStrings
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerStringBlock*& System::Security::Util::TokenizerStream::dyn_m_headStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_headStrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_headStrings"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerStringBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.TokenizerStringBlock m_currentStrings
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerStringBlock*& System::Security::Util::TokenizerStream::dyn_m_currentStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_currentStrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentStrings"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerStringBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_indexStrings
[[deprecated("Use field access instead!")]] int& System::Security::Util::TokenizerStream::dyn_m_indexStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_indexStrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_indexStrings"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Util.TokenizerStream.AddToken
void System::Security::Util::TokenizerStream::AddToken(int16_t token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::AddToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Security.Util.TokenizerStream.AddString
void System::Security::Util::TokenizerStream::AddString(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::AddString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Security.Util.TokenizerStream.Reset
void System::Security::Util::TokenizerStream::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.TokenizerStream.GetNextFullToken
int16_t System::Security::Util::TokenizerStream::GetNextFullToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::GetNextFullToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextFullToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.TokenizerStream.GetNextToken
int16_t System::Security::Util::TokenizerStream::GetNextToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::GetNextToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.TokenizerStream.GetNextString
::StringW System::Security::Util::TokenizerStream::GetNextString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::GetNextString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.TokenizerStream.ThrowAwayNextString
void System::Security::Util::TokenizerStream::ThrowAwayNextString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::ThrowAwayNextString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowAwayNextString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.TokenizerStream.TagLastToken
void System::Security::Util::TokenizerStream::TagLastToken(int16_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::TagLastToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TagLastToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tag);
}
// Autogenerated method: System.Security.Util.TokenizerStream.GetTokenCount
int System::Security::Util::TokenizerStream::GetTokenCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::GetTokenCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTokenCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.TokenizerStream.GoToPosition
void System::Security::Util::TokenizerStream::GoToPosition(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::GoToPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GoToPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Principal.GenericIdentity
#include "System/Security/Principal/GenericIdentity.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Security.Claims.Claim
#include "System/Security/Claims/Claim.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_name
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Principal::GenericIdentity::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::dyn_m_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_type
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Principal::GenericIdentity::dyn_m_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::dyn_m_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Principal.GenericIdentity.AddNameClaim
void System::Security::Principal::GenericIdentity::AddNameClaim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::AddNameClaim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNameClaim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.GenericIdentity.get_Claims
::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::Claim*>* System::Security::Principal::GenericIdentity::get_Claims() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::get_Claims");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Claims", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::Claim*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.GenericIdentity.get_Name
::StringW System::Security::Principal::GenericIdentity::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.GenericIdentity.get_AuthenticationType
::StringW System::Security::Principal::GenericIdentity::get_AuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::get_AuthenticationType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthenticationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.GenericIdentity.Clone
::System::Security::Claims::ClaimsIdentity* System::Security::Principal::GenericIdentity::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Claims::ClaimsIdentity*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.GenericIdentity.OnDeserializedMethod
void System::Security::Principal::GenericIdentity::OnDeserializedMethod(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::OnDeserializedMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializedMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
