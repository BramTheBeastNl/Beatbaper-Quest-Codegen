// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.DiContainer/<>c__DisplayClass178_0
#include "Zenject/DiContainer_--c__DisplayClass178_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.DiContainer/ProviderInfo
#include "Zenject/DiContainer_ProviderInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.DiContainer/<>c__DisplayClass178_0.<UnbindId>b__0
bool Zenject::DiContainer::$$c__DisplayClass178_0::$UnbindId$b__0(Zenject::DiContainer::ProviderInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::$$c__DisplayClass178_0::<UnbindId>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UnbindId>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.IInstantiator
#include "Zenject/IInstantiator.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IInstantiator.Instantiate
::Il2CppObject* Zenject::IInstantiator::Instantiate_NEW(System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IInstantiator::Instantiate_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(concreteType)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType);
}
// Autogenerated method: Zenject.IInstantiator.Instantiate
::Il2CppObject* Zenject::IInstantiator::Instantiate_NEW(System::Type* concreteType, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IInstantiator::Instantiate_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(concreteType, extraArgs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType, extraArgs);
}
// Autogenerated method: Zenject.IInstantiator.InstantiateComponent
UnityEngine::Component* Zenject::IInstantiator::InstantiateComponent_NEW(System::Type* componentType, UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IInstantiator::InstantiateComponent_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiateComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(componentType, gameObject)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Component*, false>(this, ___internal__method, componentType, gameObject);
}
// Autogenerated method: Zenject.IInstantiator.InstantiateComponent
UnityEngine::Component* Zenject::IInstantiator::InstantiateComponent_NEW(System::Type* componentType, UnityEngine::GameObject* gameObject, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IInstantiator::InstantiateComponent_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiateComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(componentType, gameObject, extraArgs)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Component*, false>(this, ___internal__method, componentType, gameObject, extraArgs);
}
// Autogenerated method: Zenject.IInstantiator.InstantiatePrefab
UnityEngine::GameObject* Zenject::IInstantiator::InstantiatePrefab_NEW(UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IInstantiator::InstantiatePrefab_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefab)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Zenject.IInstantiator.InstantiatePrefab
UnityEngine::GameObject* Zenject::IInstantiator::InstantiatePrefab_NEW(UnityEngine::Object* prefab, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IInstantiator::InstantiatePrefab_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefab, parentTransform)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefab, parentTransform);
}
// Autogenerated method: Zenject.IInstantiator.InstantiatePrefab
UnityEngine::GameObject* Zenject::IInstantiator::InstantiatePrefab_NEW(UnityEngine::Object* prefab, UnityEngine::Vector3 position, UnityEngine::Quaternion rotation, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IInstantiator::InstantiatePrefab_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefab, position, rotation, parentTransform)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefab, position, rotation, parentTransform);
}
// Autogenerated method: Zenject.IInstantiator.InstantiatePrefabResource
UnityEngine::GameObject* Zenject::IInstantiator::InstantiatePrefabResource_NEW(::Il2CppString* resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IInstantiator::InstantiatePrefabResource_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabResource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resourcePath)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.IInstantiator.InstantiatePrefabResource
UnityEngine::GameObject* Zenject::IInstantiator::InstantiatePrefabResource_NEW(::Il2CppString* resourcePath, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IInstantiator::InstantiatePrefabResource_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabResource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resourcePath, parentTransform)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, resourcePath, parentTransform);
}
// Autogenerated method: Zenject.IInstantiator.InstantiatePrefabResource
UnityEngine::GameObject* Zenject::IInstantiator::InstantiatePrefabResource_NEW(::Il2CppString* resourcePath, UnityEngine::Vector3 position, UnityEngine::Quaternion rotation, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IInstantiator::InstantiatePrefabResource_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabResource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resourcePath, position, rotation, parentTransform)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, resourcePath, position, rotation, parentTransform);
}
// Autogenerated method: Zenject.IInstantiator.InstantiatePrefabForComponent
::Il2CppObject* Zenject::IInstantiator::InstantiatePrefabForComponent_NEW(System::Type* concreteType, UnityEngine::Object* prefab, UnityEngine::Transform* parentTransform, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IInstantiator::InstantiatePrefabForComponent_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabForComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(concreteType, prefab, parentTransform, extraArgs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType, prefab, parentTransform, extraArgs);
}
// Autogenerated method: Zenject.IInstantiator.InstantiatePrefabResourceForComponent
::Il2CppObject* Zenject::IInstantiator::InstantiatePrefabResourceForComponent_NEW(System::Type* concreteType, ::Il2CppString* resourcePath, UnityEngine::Transform* parentTransform, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IInstantiator::InstantiatePrefabResourceForComponent_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiatePrefabResourceForComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(concreteType, resourcePath, parentTransform, extraArgs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType, resourcePath, parentTransform, extraArgs);
}
// Autogenerated method: Zenject.IInstantiator.InstantiateScriptableObjectResource
::Il2CppObject* Zenject::IInstantiator::InstantiateScriptableObjectResource_NEW(System::Type* scriptableObjectType, ::Il2CppString* resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IInstantiator::InstantiateScriptableObjectResource_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiateScriptableObjectResource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scriptableObjectType, resourcePath)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, scriptableObjectType, resourcePath);
}
// Autogenerated method: Zenject.IInstantiator.InstantiateScriptableObjectResource
::Il2CppObject* Zenject::IInstantiator::InstantiateScriptableObjectResource_NEW(System::Type* scriptableObjectType, ::Il2CppString* resourcePath, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IInstantiator::InstantiateScriptableObjectResource_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiateScriptableObjectResource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scriptableObjectType, resourcePath, extraArgs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, scriptableObjectType, resourcePath, extraArgs);
}
// Autogenerated method: Zenject.IInstantiator.CreateEmptyGameObject
UnityEngine::GameObject* Zenject::IInstantiator::CreateEmptyGameObject_NEW(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IInstantiator::CreateEmptyGameObject_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateEmptyGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.LazyInstanceInjector
#include "Zenject/LazyInstanceInjector.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.LazyInstanceInjector.get_Instances
System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* Zenject::LazyInstanceInjector::get_Instances() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LazyInstanceInjector::get_Instances");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Instances", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.LazyInstanceInjector.AddInstance
void Zenject::LazyInstanceInjector::AddInstance(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LazyInstanceInjector::AddInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(instance)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, instance);
}
// Autogenerated method: Zenject.LazyInstanceInjector.AddInstances
void Zenject::LazyInstanceInjector::AddInstances(System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* instances) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LazyInstanceInjector::AddInstances");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddInstances", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(instances)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, instances);
}
// Autogenerated method: Zenject.LazyInstanceInjector.LazyInject
void Zenject::LazyInstanceInjector::LazyInject(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LazyInstanceInjector::LazyInject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LazyInject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(instance)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, instance);
}
// Autogenerated method: Zenject.LazyInstanceInjector.LazyInjectAll
void Zenject::LazyInstanceInjector::LazyInjectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LazyInstanceInjector::LazyInjectAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LazyInjectAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ValidationErrorResponses
#include "Zenject/ValidationErrorResponses.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.ValidationErrorResponses Log
Zenject::ValidationErrorResponses Zenject::ValidationErrorResponses::_get_Log() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ValidationErrorResponses::_get_Log");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ValidationErrorResponses>("Zenject", "ValidationErrorResponses", "Log"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ValidationErrorResponses Log
void Zenject::ValidationErrorResponses::_set_Log(Zenject::ValidationErrorResponses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ValidationErrorResponses::_set_Log");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ValidationErrorResponses", "Log", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.ValidationErrorResponses Throw
Zenject::ValidationErrorResponses Zenject::ValidationErrorResponses::_get_Throw() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ValidationErrorResponses::_get_Throw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ValidationErrorResponses>("Zenject", "ValidationErrorResponses", "Throw"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ValidationErrorResponses Throw
void Zenject::ValidationErrorResponses::_set_Throw(Zenject::ValidationErrorResponses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ValidationErrorResponses::_set_Throw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ValidationErrorResponses", "Throw", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.RootResolveMethods
#include "Zenject/RootResolveMethods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.RootResolveMethods NonLazyOnly
Zenject::RootResolveMethods Zenject::RootResolveMethods::_get_NonLazyOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::RootResolveMethods::_get_NonLazyOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::RootResolveMethods>("Zenject", "RootResolveMethods", "NonLazyOnly"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.RootResolveMethods NonLazyOnly
void Zenject::RootResolveMethods::_set_NonLazyOnly(Zenject::RootResolveMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::RootResolveMethods::_set_NonLazyOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "RootResolveMethods", "NonLazyOnly", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.RootResolveMethods All
Zenject::RootResolveMethods Zenject::RootResolveMethods::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::RootResolveMethods::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::RootResolveMethods>("Zenject", "RootResolveMethods", "All"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.RootResolveMethods All
void Zenject::RootResolveMethods::_set_All(Zenject::RootResolveMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::RootResolveMethods::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "RootResolveMethods", "All", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SignalDefaultSyncModes
#include "Zenject/SignalDefaultSyncModes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.SignalDefaultSyncModes Synchronous
Zenject::SignalDefaultSyncModes Zenject::SignalDefaultSyncModes::_get_Synchronous() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SignalDefaultSyncModes::_get_Synchronous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::SignalDefaultSyncModes>("Zenject", "SignalDefaultSyncModes", "Synchronous"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.SignalDefaultSyncModes Synchronous
void Zenject::SignalDefaultSyncModes::_set_Synchronous(Zenject::SignalDefaultSyncModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SignalDefaultSyncModes::_set_Synchronous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SignalDefaultSyncModes", "Synchronous", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.SignalDefaultSyncModes Asynchronous
Zenject::SignalDefaultSyncModes Zenject::SignalDefaultSyncModes::_get_Asynchronous() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SignalDefaultSyncModes::_get_Asynchronous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::SignalDefaultSyncModes>("Zenject", "SignalDefaultSyncModes", "Asynchronous"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.SignalDefaultSyncModes Asynchronous
void Zenject::SignalDefaultSyncModes::_set_Asynchronous(Zenject::SignalDefaultSyncModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SignalDefaultSyncModes::_set_Asynchronous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SignalDefaultSyncModes", "Asynchronous", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SignalMissingHandlerResponses
#include "Zenject/SignalMissingHandlerResponses.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.SignalMissingHandlerResponses Ignore
Zenject::SignalMissingHandlerResponses Zenject::SignalMissingHandlerResponses::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SignalMissingHandlerResponses::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::SignalMissingHandlerResponses>("Zenject", "SignalMissingHandlerResponses", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.SignalMissingHandlerResponses Ignore
void Zenject::SignalMissingHandlerResponses::_set_Ignore(Zenject::SignalMissingHandlerResponses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SignalMissingHandlerResponses::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SignalMissingHandlerResponses", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.SignalMissingHandlerResponses Throw
Zenject::SignalMissingHandlerResponses Zenject::SignalMissingHandlerResponses::_get_Throw() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SignalMissingHandlerResponses::_get_Throw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::SignalMissingHandlerResponses>("Zenject", "SignalMissingHandlerResponses", "Throw"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.SignalMissingHandlerResponses Throw
void Zenject::SignalMissingHandlerResponses::_set_Throw(Zenject::SignalMissingHandlerResponses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SignalMissingHandlerResponses::_set_Throw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SignalMissingHandlerResponses", "Throw", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.SignalMissingHandlerResponses Warn
Zenject::SignalMissingHandlerResponses Zenject::SignalMissingHandlerResponses::_get_Warn() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SignalMissingHandlerResponses::_get_Warn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::SignalMissingHandlerResponses>("Zenject", "SignalMissingHandlerResponses", "Warn"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.SignalMissingHandlerResponses Warn
void Zenject::SignalMissingHandlerResponses::_set_Warn(Zenject::SignalMissingHandlerResponses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SignalMissingHandlerResponses::_set_Warn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SignalMissingHandlerResponses", "Warn", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ZenjectSettings
#include "Zenject/ZenjectSettings.hpp"
// Including type: Zenject.ZenjectSettings/SignalSettings
#include "Zenject/ZenjectSettings_SignalSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.ZenjectSettings Default
Zenject::ZenjectSettings* Zenject::ZenjectSettings::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSettings::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ZenjectSettings*>("Zenject", "ZenjectSettings", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ZenjectSettings Default
void Zenject::ZenjectSettings::_set_Default(Zenject::ZenjectSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSettings::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ZenjectSettings", "Default", value));
}
// Autogenerated method: Zenject.ZenjectSettings.get_Signals
Zenject::ZenjectSettings::SignalSettings* Zenject::ZenjectSettings::get_Signals() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSettings::get_Signals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Signals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ZenjectSettings::SignalSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings.get_ValidationErrorResponse
Zenject::ValidationErrorResponses Zenject::ZenjectSettings::get_ValidationErrorResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSettings::get_ValidationErrorResponse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ValidationErrorResponse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ValidationErrorResponses, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings.get_ValidationRootResolveMethod
Zenject::RootResolveMethods Zenject::ZenjectSettings::get_ValidationRootResolveMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSettings::get_ValidationRootResolveMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ValidationRootResolveMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::RootResolveMethods, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings.get_DisplayWarningWhenResolvingDuringInstall
bool Zenject::ZenjectSettings::get_DisplayWarningWhenResolvingDuringInstall() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSettings::get_DisplayWarningWhenResolvingDuringInstall");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DisplayWarningWhenResolvingDuringInstall", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings.get_EnsureDeterministicDestructionOrderOnApplicationQuit
bool Zenject::ZenjectSettings::get_EnsureDeterministicDestructionOrderOnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSettings::get_EnsureDeterministicDestructionOrderOnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_EnsureDeterministicDestructionOrderOnApplicationQuit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings..cctor
void Zenject::ZenjectSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ZenjectSettings", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ZenjectSettings/SignalSettings
#include "Zenject/ZenjectSettings_SignalSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.ZenjectSettings/SignalSettings Default
Zenject::ZenjectSettings::SignalSettings* Zenject::ZenjectSettings::SignalSettings::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSettings::SignalSettings::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ZenjectSettings::SignalSettings*>("Zenject", "ZenjectSettings/SignalSettings", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ZenjectSettings/SignalSettings Default
void Zenject::ZenjectSettings::SignalSettings::_set_Default(Zenject::ZenjectSettings::SignalSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSettings::SignalSettings::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ZenjectSettings/SignalSettings", "Default", value));
}
// Autogenerated method: Zenject.ZenjectSettings/SignalSettings.get_DefaultAsyncTickPriority
int Zenject::ZenjectSettings::SignalSettings::get_DefaultAsyncTickPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSettings::SignalSettings::get_DefaultAsyncTickPriority");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DefaultAsyncTickPriority", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings/SignalSettings.get_DefaultSyncMode
Zenject::SignalDefaultSyncModes Zenject::ZenjectSettings::SignalSettings::get_DefaultSyncMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSettings::SignalSettings::get_DefaultSyncMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DefaultSyncMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::SignalDefaultSyncModes, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings/SignalSettings.get_MissingHandlerDefaultResponse
Zenject::SignalMissingHandlerResponses Zenject::ZenjectSettings::SignalSettings::get_MissingHandlerDefaultResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSettings::SignalSettings::get_MissingHandlerDefaultResponse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MissingHandlerDefaultResponse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::SignalMissingHandlerResponses, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings/SignalSettings.get_RequireStrictUnsubscribe
bool Zenject::ZenjectSettings::SignalSettings::get_RequireStrictUnsubscribe() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSettings::SignalSettings::get_RequireStrictUnsubscribe");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_RequireStrictUnsubscribe", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings/SignalSettings..cctor
void Zenject::ZenjectSettings::SignalSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSettings::SignalSettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ZenjectSettings/SignalSettings", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.NoTransitionContext
#include "Zenject/NoTransitionContext.hpp"
// Including type: Zenject.NoTransitionInstaller
#include "Zenject/NoTransitionInstaller.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.NoTransitionContext.get_installMethod
System::Action_1<Zenject::DiContainer*>* Zenject::NoTransitionContext::get_installMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::NoTransitionContext::get_installMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_installMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Action_1<Zenject::DiContainer*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.NoTransitionContext.Awake
void Zenject::NoTransitionContext::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::NoTransitionContext::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.NoTransitionInstaller
#include "Zenject/NoTransitionInstaller.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.NoTransitionInstaller.InstallBindings
void Zenject::NoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::NoTransitionInstaller::InstallBindings_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.CachedOpenTypeProvider
#include "Zenject/CachedOpenTypeProvider.hpp"
// Including type: Zenject.CachedOpenTypeProvider/<>c
#include "Zenject/CachedOpenTypeProvider_--c.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.CachedProvider
#include "Zenject/CachedProvider.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.CachedOpenTypeProvider.get_IsCached
bool Zenject::CachedOpenTypeProvider::get_IsCached_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CachedOpenTypeProvider::get_IsCached_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CachedOpenTypeProvider.get_TypeVariesBasedOnMemberType
bool Zenject::CachedOpenTypeProvider::get_TypeVariesBasedOnMemberType_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CachedOpenTypeProvider::get_TypeVariesBasedOnMemberType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CachedOpenTypeProvider.get_NumInstances
int Zenject::CachedOpenTypeProvider::get_NumInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CachedOpenTypeProvider::get_NumInstances");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_NumInstances", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CachedOpenTypeProvider.ClearCache
void Zenject::CachedOpenTypeProvider::ClearCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CachedOpenTypeProvider::ClearCache");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearCache", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CachedOpenTypeProvider.GetInstanceType
System::Type* Zenject::CachedOpenTypeProvider::GetInstanceType_NEW(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CachedOpenTypeProvider::GetInstanceType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.CachedOpenTypeProvider.GetAllInstancesWithInjectSplit
void Zenject::CachedOpenTypeProvider::GetAllInstancesWithInjectSplit_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CachedOpenTypeProvider::GetAllInstancesWithInjectSplit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.CachedOpenTypeProvider/<>c
#include "Zenject/CachedOpenTypeProvider_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.CachedProvider
#include "Zenject/CachedProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.CachedOpenTypeProvider/<>c <>9
Zenject::CachedOpenTypeProvider::$$c* Zenject::CachedOpenTypeProvider::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CachedOpenTypeProvider::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::CachedOpenTypeProvider::$$c*>("Zenject", "CachedOpenTypeProvider/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.CachedOpenTypeProvider/<>c <>9
void Zenject::CachedOpenTypeProvider::$$c::_set_$$9(Zenject::CachedOpenTypeProvider::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CachedOpenTypeProvider::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "CachedOpenTypeProvider/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.CachedProvider,System.Int32> <>9__8_0
System::Func_2<Zenject::CachedProvider*, int>* Zenject::CachedOpenTypeProvider::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CachedOpenTypeProvider::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::CachedProvider*, int>*>("Zenject", "CachedOpenTypeProvider/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.CachedProvider,System.Int32> <>9__8_0
void Zenject::CachedOpenTypeProvider::$$c::_set_$$9__8_0(System::Func_2<Zenject::CachedProvider*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CachedOpenTypeProvider::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "CachedOpenTypeProvider/<>c", "<>9__8_0", value)));
}
// Autogenerated method: Zenject.CachedOpenTypeProvider/<>c..cctor
void Zenject::CachedOpenTypeProvider::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CachedOpenTypeProvider::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "CachedOpenTypeProvider/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.CachedOpenTypeProvider/<>c.<get_NumInstances>b__8_0
int Zenject::CachedOpenTypeProvider::$$c::$get_NumInstances$b__8_0(Zenject::CachedProvider* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CachedOpenTypeProvider::$$c::<get_NumInstances>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_NumInstances>b__8_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.CachedProvider
#include "Zenject/CachedProvider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.CachedProvider.get_IsCached
bool Zenject::CachedProvider::get_IsCached_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CachedProvider::get_IsCached_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CachedProvider.get_TypeVariesBasedOnMemberType
bool Zenject::CachedProvider::get_TypeVariesBasedOnMemberType_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CachedProvider::get_TypeVariesBasedOnMemberType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CachedProvider.get_NumInstances
int Zenject::CachedProvider::get_NumInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CachedProvider::get_NumInstances");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_NumInstances", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CachedProvider.ClearCache
void Zenject::CachedProvider::ClearCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CachedProvider::ClearCache");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearCache", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CachedProvider.GetInstanceType
System::Type* Zenject::CachedProvider::GetInstanceType_NEW(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CachedProvider::GetInstanceType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.CachedProvider.GetAllInstancesWithInjectSplit
void Zenject::CachedProvider::GetAllInstancesWithInjectSplit_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::CachedProvider::GetAllInstancesWithInjectSplit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.AddToCurrentGameObjectComponentProvider
#include "Zenject/AddToCurrentGameObjectComponentProvider.hpp"
// Including type: Zenject.AddToCurrentGameObjectComponentProvider/<>c__DisplayClass15_0
#include "Zenject/AddToCurrentGameObjectComponentProvider_--c__DisplayClass15_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider.get_IsCached
bool Zenject::AddToCurrentGameObjectComponentProvider::get_IsCached_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToCurrentGameObjectComponentProvider::get_IsCached_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider.get_TypeVariesBasedOnMemberType
bool Zenject::AddToCurrentGameObjectComponentProvider::get_TypeVariesBasedOnMemberType_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToCurrentGameObjectComponentProvider::get_TypeVariesBasedOnMemberType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider.get_Container
Zenject::DiContainer* Zenject::AddToCurrentGameObjectComponentProvider::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToCurrentGameObjectComponentProvider::get_Container");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider.get_ComponentType
System::Type* Zenject::AddToCurrentGameObjectComponentProvider::get_ComponentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToCurrentGameObjectComponentProvider::get_ComponentType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ComponentType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider.GetInstanceType
System::Type* Zenject::AddToCurrentGameObjectComponentProvider::GetInstanceType_NEW(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToCurrentGameObjectComponentProvider::GetInstanceType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider.GetAllInstancesWithInjectSplit
void Zenject::AddToCurrentGameObjectComponentProvider::GetAllInstancesWithInjectSplit_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToCurrentGameObjectComponentProvider::GetAllInstancesWithInjectSplit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.AddToCurrentGameObjectComponentProvider/<>c__DisplayClass15_0
#include "Zenject/AddToCurrentGameObjectComponentProvider_--c__DisplayClass15_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider/<>c__DisplayClass15_0.<GetAllInstancesWithInjectSplit>b__0
void Zenject::AddToCurrentGameObjectComponentProvider::$$c__DisplayClass15_0::$GetAllInstancesWithInjectSplit$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToCurrentGameObjectComponentProvider::$$c__DisplayClass15_0::<GetAllInstancesWithInjectSplit>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllInstancesWithInjectSplit>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.AddToExistingGameObjectComponentProvider
#include "Zenject/AddToExistingGameObjectComponentProvider.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AddToExistingGameObjectComponentProvider.get_ShouldToggleActive
bool Zenject::AddToExistingGameObjectComponentProvider::get_ShouldToggleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToExistingGameObjectComponentProvider::get_ShouldToggleActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ShouldToggleActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToExistingGameObjectComponentProvider.GetGameObject
UnityEngine::GameObject* Zenject::AddToExistingGameObjectComponentProvider::GetGameObject(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToExistingGameObjectComponentProvider::GetGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.AddToExistingGameObjectComponentProviderGetter
#include "Zenject/AddToExistingGameObjectComponentProviderGetter.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AddToExistingGameObjectComponentProviderGetter.get_ShouldToggleActive
bool Zenject::AddToExistingGameObjectComponentProviderGetter::get_ShouldToggleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToExistingGameObjectComponentProviderGetter::get_ShouldToggleActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ShouldToggleActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToExistingGameObjectComponentProviderGetter.GetGameObject
UnityEngine::GameObject* Zenject::AddToExistingGameObjectComponentProviderGetter::GetGameObject(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToExistingGameObjectComponentProviderGetter::GetGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.AddToGameObjectComponentProviderBase
#include "Zenject/AddToGameObjectComponentProviderBase.hpp"
// Including type: Zenject.AddToGameObjectComponentProviderBase/<>c__DisplayClass17_0
#include "Zenject/AddToGameObjectComponentProviderBase_--c__DisplayClass17_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.get_IsCached
bool Zenject::AddToGameObjectComponentProviderBase::get_IsCached_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToGameObjectComponentProviderBase::get_IsCached_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.get_TypeVariesBasedOnMemberType
bool Zenject::AddToGameObjectComponentProviderBase::get_TypeVariesBasedOnMemberType_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToGameObjectComponentProviderBase::get_TypeVariesBasedOnMemberType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.get_Container
Zenject::DiContainer* Zenject::AddToGameObjectComponentProviderBase::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToGameObjectComponentProviderBase::get_Container");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.get_ComponentType
System::Type* Zenject::AddToGameObjectComponentProviderBase::get_ComponentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToGameObjectComponentProviderBase::get_ComponentType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ComponentType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.get_ShouldToggleActive
bool Zenject::AddToGameObjectComponentProviderBase::get_ShouldToggleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToGameObjectComponentProviderBase::get_ShouldToggleActive_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ShouldToggleActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.GetInstanceType
System::Type* Zenject::AddToGameObjectComponentProviderBase::GetInstanceType_NEW(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToGameObjectComponentProviderBase::GetInstanceType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.GetAllInstancesWithInjectSplit
void Zenject::AddToGameObjectComponentProviderBase::GetAllInstancesWithInjectSplit_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToGameObjectComponentProviderBase::GetAllInstancesWithInjectSplit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.GetGameObject
UnityEngine::GameObject* Zenject::AddToGameObjectComponentProviderBase::GetGameObject(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToGameObjectComponentProviderBase::GetGameObject_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.AddToGameObjectComponentProviderBase/<>c__DisplayClass17_0
#include "Zenject/AddToGameObjectComponentProviderBase_--c__DisplayClass17_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase/<>c__DisplayClass17_0.<GetAllInstancesWithInjectSplit>b__0
void Zenject::AddToGameObjectComponentProviderBase::$$c__DisplayClass17_0::$GetAllInstancesWithInjectSplit$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToGameObjectComponentProviderBase::$$c__DisplayClass17_0::<GetAllInstancesWithInjectSplit>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllInstancesWithInjectSplit>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.AddToNewGameObjectComponentProvider
#include "Zenject/AddToNewGameObjectComponentProvider.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AddToNewGameObjectComponentProvider.get_ShouldToggleActive
bool Zenject::AddToNewGameObjectComponentProvider::get_ShouldToggleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToNewGameObjectComponentProvider::get_ShouldToggleActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ShouldToggleActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToNewGameObjectComponentProvider.GetGameObject
UnityEngine::GameObject* Zenject::AddToNewGameObjectComponentProvider::GetGameObject(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AddToNewGameObjectComponentProvider::GetGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.GetFromGameObjectComponentProvider
#include "Zenject/GetFromGameObjectComponentProvider.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.GetFromGameObjectComponentProvider.get_IsCached
bool Zenject::GetFromGameObjectComponentProvider::get_IsCached_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GetFromGameObjectComponentProvider::get_IsCached_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GetFromGameObjectComponentProvider.get_TypeVariesBasedOnMemberType
bool Zenject::GetFromGameObjectComponentProvider::get_TypeVariesBasedOnMemberType_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GetFromGameObjectComponentProvider::get_TypeVariesBasedOnMemberType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GetFromGameObjectComponentProvider.GetInstanceType
System::Type* Zenject::GetFromGameObjectComponentProvider::GetInstanceType_NEW(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GetFromGameObjectComponentProvider::GetInstanceType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.GetFromGameObjectComponentProvider.GetAllInstancesWithInjectSplit
void Zenject::GetFromGameObjectComponentProvider::GetAllInstancesWithInjectSplit_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GetFromGameObjectComponentProvider::GetAllInstancesWithInjectSplit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.GetFromGameObjectGetterComponentProvider
#include "Zenject/GetFromGameObjectGetterComponentProvider.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.GetFromGameObjectGetterComponentProvider.get_IsCached
bool Zenject::GetFromGameObjectGetterComponentProvider::get_IsCached_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GetFromGameObjectGetterComponentProvider::get_IsCached_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GetFromGameObjectGetterComponentProvider.get_TypeVariesBasedOnMemberType
bool Zenject::GetFromGameObjectGetterComponentProvider::get_TypeVariesBasedOnMemberType_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GetFromGameObjectGetterComponentProvider::get_TypeVariesBasedOnMemberType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GetFromGameObjectGetterComponentProvider.GetInstanceType
System::Type* Zenject::GetFromGameObjectGetterComponentProvider::GetInstanceType_NEW(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GetFromGameObjectGetterComponentProvider::GetInstanceType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.GetFromGameObjectGetterComponentProvider.GetAllInstancesWithInjectSplit
void Zenject::GetFromGameObjectGetterComponentProvider::GetAllInstancesWithInjectSplit_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GetFromGameObjectGetterComponentProvider::GetAllInstancesWithInjectSplit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.GetFromPrefabComponentProvider
#include "Zenject/GetFromPrefabComponentProvider.hpp"
// Including type: Zenject.IPrefabInstantiator
#include "Zenject/IPrefabInstantiator.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.GetFromPrefabComponentProvider.get_IsCached
bool Zenject::GetFromPrefabComponentProvider::get_IsCached_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GetFromPrefabComponentProvider::get_IsCached_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GetFromPrefabComponentProvider.get_TypeVariesBasedOnMemberType
bool Zenject::GetFromPrefabComponentProvider::get_TypeVariesBasedOnMemberType_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GetFromPrefabComponentProvider::get_TypeVariesBasedOnMemberType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GetFromPrefabComponentProvider.GetInstanceType
System::Type* Zenject::GetFromPrefabComponentProvider::GetInstanceType_NEW(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GetFromPrefabComponentProvider::GetInstanceType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.GetFromPrefabComponentProvider.GetAllInstancesWithInjectSplit
void Zenject::GetFromPrefabComponentProvider::GetAllInstancesWithInjectSplit_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GetFromPrefabComponentProvider::GetAllInstancesWithInjectSplit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InstantiateOnPrefabComponentProvider
#include "Zenject/InstantiateOnPrefabComponentProvider.hpp"
// Including type: Zenject.IPrefabInstantiator
#include "Zenject/IPrefabInstantiator.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.InstantiateOnPrefabComponentProvider.get_IsCached
bool Zenject::InstantiateOnPrefabComponentProvider::get_IsCached_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InstantiateOnPrefabComponentProvider::get_IsCached_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InstantiateOnPrefabComponentProvider.get_TypeVariesBasedOnMemberType
bool Zenject::InstantiateOnPrefabComponentProvider::get_TypeVariesBasedOnMemberType_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InstantiateOnPrefabComponentProvider::get_TypeVariesBasedOnMemberType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InstantiateOnPrefabComponentProvider.GetInstanceType
System::Type* Zenject::InstantiateOnPrefabComponentProvider::GetInstanceType_NEW(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InstantiateOnPrefabComponentProvider::GetInstanceType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.InstantiateOnPrefabComponentProvider.GetAllInstancesWithInjectSplit
void Zenject::InstantiateOnPrefabComponentProvider::GetAllInstancesWithInjectSplit_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InstantiateOnPrefabComponentProvider::GetAllInstancesWithInjectSplit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.EmptyGameObjectProvider
#include "Zenject/EmptyGameObjectProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.EmptyGameObjectProvider.get_IsCached
bool Zenject::EmptyGameObjectProvider::get_IsCached_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::EmptyGameObjectProvider::get_IsCached_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.EmptyGameObjectProvider.get_TypeVariesBasedOnMemberType
bool Zenject::EmptyGameObjectProvider::get_TypeVariesBasedOnMemberType_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::EmptyGameObjectProvider::get_TypeVariesBasedOnMemberType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.EmptyGameObjectProvider.GetInstanceType
System::Type* Zenject::EmptyGameObjectProvider::GetInstanceType_NEW(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::EmptyGameObjectProvider::GetInstanceType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.EmptyGameObjectProvider.GetAllInstancesWithInjectSplit
void Zenject::EmptyGameObjectProvider::GetAllInstancesWithInjectSplit_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::EmptyGameObjectProvider::GetAllInstancesWithInjectSplit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabGameObjectProvider
#include "Zenject/PrefabGameObjectProvider.hpp"
// Including type: Zenject.IPrefabInstantiator
#include "Zenject/IPrefabInstantiator.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.PrefabGameObjectProvider.get_IsCached
bool Zenject::PrefabGameObjectProvider::get_IsCached_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabGameObjectProvider::get_IsCached_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PrefabGameObjectProvider.get_TypeVariesBasedOnMemberType
bool Zenject::PrefabGameObjectProvider::get_TypeVariesBasedOnMemberType_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabGameObjectProvider::get_TypeVariesBasedOnMemberType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PrefabGameObjectProvider.GetInstanceType
System::Type* Zenject::PrefabGameObjectProvider::GetInstanceType_NEW(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabGameObjectProvider::GetInstanceType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.PrefabGameObjectProvider.GetAllInstancesWithInjectSplit
void Zenject::PrefabGameObjectProvider::GetAllInstancesWithInjectSplit_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabGameObjectProvider::GetAllInstancesWithInjectSplit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IProvider.get_TypeVariesBasedOnMemberType
bool Zenject::IProvider::get_TypeVariesBasedOnMemberType_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IProvider::get_TypeVariesBasedOnMemberType_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IProvider.get_IsCached
bool Zenject::IProvider::get_IsCached_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IProvider::get_IsCached_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IProvider.GetInstanceType
System::Type* Zenject::IProvider::GetInstanceType_NEW(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IProvider::GetInstanceType_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.IProvider.GetAllInstancesWithInjectSplit
void Zenject::IProvider::GetAllInstancesWithInjectSplit_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* instances) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IProvider::GetAllInstancesWithInjectSplit_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, instances)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, instances);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.IProviderExtensions
#include "Zenject/IProviderExtensions.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<Zenject.TypeValuePair> EmptyArgList
System::Collections::Generic::List_1<Zenject::TypeValuePair>* Zenject::IProviderExtensions::_get_EmptyArgList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IProviderExtensions::_get_EmptyArgList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<Zenject::TypeValuePair>*>("Zenject", "IProviderExtensions", "EmptyArgList"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<Zenject.TypeValuePair> EmptyArgList
void Zenject::IProviderExtensions::_set_EmptyArgList(System::Collections::Generic::List_1<Zenject::TypeValuePair>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IProviderExtensions::_set_EmptyArgList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "IProviderExtensions", "EmptyArgList", value));
}
// Autogenerated method: Zenject.IProviderExtensions.GetAllInstancesWithInjectSplit
void Zenject::IProviderExtensions::GetAllInstancesWithInjectSplit(Zenject::IProvider* creator, Zenject::InjectContext* context, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IProviderExtensions::GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "IProviderExtensions", "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(creator, context, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, creator, context, injectAction, buffer);
}
// Autogenerated method: Zenject.IProviderExtensions.GetAllInstances
void Zenject::IProviderExtensions::GetAllInstances(Zenject::IProvider* creator, Zenject::InjectContext* context, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IProviderExtensions::GetAllInstances");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "IProviderExtensions", "GetAllInstances", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(creator, context, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, creator, context, buffer);
}
// Autogenerated method: Zenject.IProviderExtensions.GetAllInstances
void Zenject::IProviderExtensions::GetAllInstances(Zenject::IProvider* creator, Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IProviderExtensions::GetAllInstances");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "IProviderExtensions", "GetAllInstances", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(creator, context, args, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, creator, context, args, buffer);
}
// Autogenerated method: Zenject.IProviderExtensions.TryGetInstance
::Il2CppObject* Zenject::IProviderExtensions::TryGetInstance(Zenject::IProvider* creator, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IProviderExtensions::TryGetInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "IProviderExtensions", "TryGetInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(creator, context)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, creator, context);
}
// Autogenerated method: Zenject.IProviderExtensions.TryGetInstance
::Il2CppObject* Zenject::IProviderExtensions::TryGetInstance(Zenject::IProvider* creator, Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IProviderExtensions::TryGetInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "IProviderExtensions", "TryGetInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(creator, context, args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, creator, context, args);
}
// Autogenerated method: Zenject.IProviderExtensions.GetInstance
::Il2CppObject* Zenject::IProviderExtensions::GetInstance(Zenject::IProvider* creator, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IProviderExtensions::GetInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "IProviderExtensions", "GetInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(creator, context)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, creator, context);
}
// Autogenerated method: Zenject.IProviderExtensions.GetInstance
::Il2CppObject* Zenject::IProviderExtensions::GetInstance(Zenject::IProvider* creator, Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IProviderExtensions::GetInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "IProviderExtensions", "GetInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(creator, context, args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, creator, context, args);
}
// Autogenerated method: Zenject.IProviderExtensions..cctor
void Zenject::IProviderExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IProviderExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "IProviderExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InstanceProvider
#include "Zenject/InstanceProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.InstanceProvider.get_IsCached
bool Zenject::InstanceProvider::get_IsCached_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InstanceProvider::get_IsCached_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InstanceProvider.get_TypeVariesBasedOnMemberType
bool Zenject::InstanceProvider::get_TypeVariesBasedOnMemberType_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InstanceProvider::get_TypeVariesBasedOnMemberType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InstanceProvider.GetInstanceType
System::Type* Zenject::InstanceProvider::GetInstanceType_NEW(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InstanceProvider::GetInstanceType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.InstanceProvider.GetAllInstancesWithInjectSplit
void Zenject::InstanceProvider::GetAllInstancesWithInjectSplit_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InstanceProvider::GetAllInstancesWithInjectSplit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated method: Zenject.InstanceProvider.<GetAllInstancesWithInjectSplit>b__9_0
void Zenject::InstanceProvider::$GetAllInstancesWithInjectSplit$b__9_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InstanceProvider::<GetAllInstancesWithInjectSplit>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllInstancesWithInjectSplit>b__9_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.MethodMultipleProviderUntyped
#include "Zenject/MethodMultipleProviderUntyped.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.MethodMultipleProviderUntyped.get_IsCached
bool Zenject::MethodMultipleProviderUntyped::get_IsCached_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MethodMultipleProviderUntyped::get_IsCached_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MethodMultipleProviderUntyped.get_TypeVariesBasedOnMemberType
bool Zenject::MethodMultipleProviderUntyped::get_TypeVariesBasedOnMemberType_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MethodMultipleProviderUntyped::get_TypeVariesBasedOnMemberType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MethodMultipleProviderUntyped.GetInstanceType
System::Type* Zenject::MethodMultipleProviderUntyped::GetInstanceType_NEW(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MethodMultipleProviderUntyped::GetInstanceType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.MethodMultipleProviderUntyped.GetAllInstancesWithInjectSplit
void Zenject::MethodMultipleProviderUntyped::GetAllInstancesWithInjectSplit_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MethodMultipleProviderUntyped::GetAllInstancesWithInjectSplit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.MethodProviderUntyped
#include "Zenject/MethodProviderUntyped.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.MethodProviderUntyped.get_IsCached
bool Zenject::MethodProviderUntyped::get_IsCached_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MethodProviderUntyped::get_IsCached_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MethodProviderUntyped.get_TypeVariesBasedOnMemberType
bool Zenject::MethodProviderUntyped::get_TypeVariesBasedOnMemberType_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MethodProviderUntyped::get_TypeVariesBasedOnMemberType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MethodProviderUntyped.GetInstanceType
System::Type* Zenject::MethodProviderUntyped::GetInstanceType_NEW(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MethodProviderUntyped::GetInstanceType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.MethodProviderUntyped.GetAllInstancesWithInjectSplit
void Zenject::MethodProviderUntyped::GetAllInstancesWithInjectSplit_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MethodProviderUntyped::GetAllInstancesWithInjectSplit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IPrefabInstantiator
#include "Zenject/IPrefabInstantiator.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IPrefabInstantiator.get_ArgumentTarget
System::Type* Zenject::IPrefabInstantiator::get_ArgumentTarget_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IPrefabInstantiator::get_ArgumentTarget_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ArgumentTarget", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IPrefabInstantiator.get_ExtraArguments
System::Collections::Generic::List_1<Zenject::TypeValuePair>* Zenject::IPrefabInstantiator::get_ExtraArguments_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IPrefabInstantiator::get_ExtraArguments_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ExtraArguments", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<Zenject::TypeValuePair>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IPrefabInstantiator.get_GameObjectCreationParameters
Zenject::GameObjectCreationParameters* Zenject::IPrefabInstantiator::get_GameObjectCreationParameters_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IPrefabInstantiator::get_GameObjectCreationParameters_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_GameObjectCreationParameters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::GameObjectCreationParameters*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IPrefabInstantiator.Instantiate
UnityEngine::GameObject* Zenject::IPrefabInstantiator::Instantiate_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IPrefabInstantiator::Instantiate_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, context, args, injectAction);
}
// Autogenerated method: Zenject.IPrefabInstantiator.GetPrefab
UnityEngine::Object* Zenject::IPrefabInstantiator::GetPrefab_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IPrefabInstantiator::GetPrefab_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabInstantiator
#include "Zenject/PrefabInstantiator.hpp"
// Including type: Zenject.PrefabInstantiator/<>c__DisplayClass15_0
#include "Zenject/PrefabInstantiator_--c__DisplayClass15_0.hpp"
// Including type: Zenject.IPrefabProvider
#include "Zenject/IPrefabProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.PrefabInstantiator.get_GameObjectCreationParameters
Zenject::GameObjectCreationParameters* Zenject::PrefabInstantiator::get_GameObjectCreationParameters_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabInstantiator::get_GameObjectCreationParameters_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_GameObjectCreationParameters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::GameObjectCreationParameters*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PrefabInstantiator.get_ArgumentTarget
System::Type* Zenject::PrefabInstantiator::get_ArgumentTarget_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabInstantiator::get_ArgumentTarget_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ArgumentTarget", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PrefabInstantiator.get_ExtraArguments
System::Collections::Generic::List_1<Zenject::TypeValuePair>* Zenject::PrefabInstantiator::get_ExtraArguments_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabInstantiator::get_ExtraArguments_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ExtraArguments", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<Zenject::TypeValuePair>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PrefabInstantiator.GetPrefab
UnityEngine::Object* Zenject::PrefabInstantiator::GetPrefab_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabInstantiator::GetPrefab_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PrefabInstantiator.Instantiate
UnityEngine::GameObject* Zenject::PrefabInstantiator::Instantiate_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabInstantiator::Instantiate_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, context, args, injectAction);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PrefabInstantiator/<>c__DisplayClass15_0
#include "Zenject/PrefabInstantiator_--c__DisplayClass15_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.PrefabInstantiator/<>c__DisplayClass15_0.<Instantiate>b__0
void Zenject::PrefabInstantiator::$$c__DisplayClass15_0::$Instantiate$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabInstantiator::$$c__DisplayClass15_0::<Instantiate>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Instantiate>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PrefabInstantiatorCached
#include "Zenject/PrefabInstantiatorCached.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.PrefabInstantiatorCached.get_ExtraArguments
System::Collections::Generic::List_1<Zenject::TypeValuePair>* Zenject::PrefabInstantiatorCached::get_ExtraArguments_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabInstantiatorCached::get_ExtraArguments_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ExtraArguments", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<Zenject::TypeValuePair>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PrefabInstantiatorCached.get_ArgumentTarget
System::Type* Zenject::PrefabInstantiatorCached::get_ArgumentTarget_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabInstantiatorCached::get_ArgumentTarget_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ArgumentTarget", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PrefabInstantiatorCached.get_GameObjectCreationParameters
Zenject::GameObjectCreationParameters* Zenject::PrefabInstantiatorCached::get_GameObjectCreationParameters_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabInstantiatorCached::get_GameObjectCreationParameters_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_GameObjectCreationParameters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::GameObjectCreationParameters*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PrefabInstantiatorCached.GetPrefab
UnityEngine::Object* Zenject::PrefabInstantiatorCached::GetPrefab_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabInstantiatorCached::GetPrefab_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PrefabInstantiatorCached.Instantiate
UnityEngine::GameObject* Zenject::PrefabInstantiatorCached::Instantiate_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabInstantiatorCached::Instantiate_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, context, args, injectAction);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IPrefabProvider
#include "Zenject/IPrefabProvider.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IPrefabProvider.GetPrefab
UnityEngine::Object* Zenject::IPrefabProvider::GetPrefab_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IPrefabProvider::GetPrefab_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PrefabProvider
#include "Zenject/PrefabProvider.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.PrefabProvider.GetPrefab
UnityEngine::Object* Zenject::PrefabProvider::GetPrefab_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabProvider::GetPrefab_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabProviderResource
#include "Zenject/PrefabProviderResource.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.PrefabProviderResource.GetPrefab
UnityEngine::Object* Zenject::PrefabProviderResource::GetPrefab_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabProviderResource::GetPrefab_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ProviderUtil
#include "Zenject/ProviderUtil.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ProviderUtil.GetTypeToInstantiate
System::Type* Zenject::ProviderUtil::GetTypeToInstantiate(System::Type* contractType, System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderUtil::GetTypeToInstantiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ProviderUtil", "GetTypeToInstantiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractType, concreteType)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, contractType, concreteType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ResolveProvider
#include "Zenject/ResolveProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ResolveProvider.get_IsCached
bool Zenject::ResolveProvider::get_IsCached_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ResolveProvider::get_IsCached_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ResolveProvider.get_TypeVariesBasedOnMemberType
bool Zenject::ResolveProvider::get_TypeVariesBasedOnMemberType_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ResolveProvider::get_TypeVariesBasedOnMemberType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ResolveProvider.GetInstanceType
System::Type* Zenject::ResolveProvider::GetInstanceType_NEW(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ResolveProvider::GetInstanceType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.ResolveProvider.GetAllInstancesWithInjectSplit
void Zenject::ResolveProvider::GetAllInstancesWithInjectSplit_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ResolveProvider::GetAllInstancesWithInjectSplit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated method: Zenject.ResolveProvider.GetSubContext
Zenject::InjectContext* Zenject::ResolveProvider::GetSubContext(Zenject::InjectContext* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ResolveProvider::GetSubContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSubContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parent)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectContext*, false>(this, ___internal__method, parent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ResourceProvider
#include "Zenject/ResourceProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ResourceProvider.get_IsCached
bool Zenject::ResourceProvider::get_IsCached_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ResourceProvider::get_IsCached_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ResourceProvider.get_TypeVariesBasedOnMemberType
bool Zenject::ResourceProvider::get_TypeVariesBasedOnMemberType_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ResourceProvider::get_TypeVariesBasedOnMemberType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ResourceProvider.GetInstanceType
System::Type* Zenject::ResourceProvider::GetInstanceType_NEW(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ResourceProvider::GetInstanceType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.ResourceProvider.GetAllInstancesWithInjectSplit
void Zenject::ResourceProvider::GetAllInstancesWithInjectSplit_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ResourceProvider::GetAllInstancesWithInjectSplit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ScriptableObjectInstanceProvider
#include "Zenject/ScriptableObjectInstanceProvider.hpp"
// Including type: Zenject.ScriptableObjectInstanceProvider/<>c__DisplayClass13_0
#include "Zenject/ScriptableObjectInstanceProvider_--c__DisplayClass13_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ScriptableObjectInstanceProvider.get_IsCached
bool Zenject::ScriptableObjectInstanceProvider::get_IsCached_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScriptableObjectInstanceProvider::get_IsCached_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ScriptableObjectInstanceProvider.get_TypeVariesBasedOnMemberType
bool Zenject::ScriptableObjectInstanceProvider::get_TypeVariesBasedOnMemberType_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScriptableObjectInstanceProvider::get_TypeVariesBasedOnMemberType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ScriptableObjectInstanceProvider.GetInstanceType
System::Type* Zenject::ScriptableObjectInstanceProvider::GetInstanceType_NEW(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScriptableObjectInstanceProvider::GetInstanceType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.ScriptableObjectInstanceProvider.GetAllInstancesWithInjectSplit
void Zenject::ScriptableObjectInstanceProvider::GetAllInstancesWithInjectSplit_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScriptableObjectInstanceProvider::GetAllInstancesWithInjectSplit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ScriptableObjectInstanceProvider/<>c__DisplayClass13_0
#include "Zenject/ScriptableObjectInstanceProvider_--c__DisplayClass13_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ScriptableObjectInstanceProvider/<>c__DisplayClass13_0.<GetAllInstancesWithInjectSplit>b__0
void Zenject::ScriptableObjectInstanceProvider::$$c__DisplayClass13_0::$GetAllInstancesWithInjectSplit$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScriptableObjectInstanceProvider::$$c__DisplayClass13_0::<GetAllInstancesWithInjectSplit>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllInstancesWithInjectSplit>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ScriptableObjectResourceProvider
#include "Zenject/ScriptableObjectResourceProvider.hpp"
// Including type: Zenject.ScriptableObjectResourceProvider/<>c__DisplayClass13_0
#include "Zenject/ScriptableObjectResourceProvider_--c__DisplayClass13_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ScriptableObjectResourceProvider.get_IsCached
bool Zenject::ScriptableObjectResourceProvider::get_IsCached_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScriptableObjectResourceProvider::get_IsCached_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ScriptableObjectResourceProvider.get_TypeVariesBasedOnMemberType
bool Zenject::ScriptableObjectResourceProvider::get_TypeVariesBasedOnMemberType_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScriptableObjectResourceProvider::get_TypeVariesBasedOnMemberType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ScriptableObjectResourceProvider.GetInstanceType
System::Type* Zenject::ScriptableObjectResourceProvider::GetInstanceType_NEW(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScriptableObjectResourceProvider::GetInstanceType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.ScriptableObjectResourceProvider.GetAllInstancesWithInjectSplit
void Zenject::ScriptableObjectResourceProvider::GetAllInstancesWithInjectSplit_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScriptableObjectResourceProvider::GetAllInstancesWithInjectSplit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ScriptableObjectResourceProvider/<>c__DisplayClass13_0
#include "Zenject/ScriptableObjectResourceProvider_--c__DisplayClass13_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ScriptableObjectResourceProvider/<>c__DisplayClass13_0.<GetAllInstancesWithInjectSplit>b__0
void Zenject::ScriptableObjectResourceProvider::$$c__DisplayClass13_0::$GetAllInstancesWithInjectSplit$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScriptableObjectResourceProvider::$$c__DisplayClass13_0::<GetAllInstancesWithInjectSplit>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllInstancesWithInjectSplit>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ISubContainerCreator.CreateSubContainer
Zenject::DiContainer* Zenject::ISubContainerCreator::CreateSubContainer_NEW(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ISubContainerCreator::CreateSubContainer_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorBindInfo.get_DefaultParentName
::Il2CppString* Zenject::SubContainerCreatorBindInfo::get_DefaultParentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorBindInfo::get_DefaultParentName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DefaultParentName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SubContainerCreatorBindInfo.set_DefaultParentName
void Zenject::SubContainerCreatorBindInfo::set_DefaultParentName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorBindInfo::set_DefaultParentName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_DefaultParentName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SubContainerCreatorBindInfo.get_CreateKernel
bool Zenject::SubContainerCreatorBindInfo::get_CreateKernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorBindInfo::get_CreateKernel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CreateKernel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SubContainerCreatorBindInfo.set_CreateKernel
void Zenject::SubContainerCreatorBindInfo::set_CreateKernel(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorBindInfo::set_CreateKernel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_CreateKernel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SubContainerCreatorBindInfo.get_KernelType
System::Type* Zenject::SubContainerCreatorBindInfo::get_KernelType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorBindInfo::get_KernelType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_KernelType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SubContainerCreatorBindInfo.set_KernelType
void Zenject::SubContainerCreatorBindInfo::set_KernelType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorBindInfo::set_KernelType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_KernelType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByInstaller
#include "Zenject/SubContainerCreatorByInstaller.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByInstaller.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByInstaller::CreateSubContainer_NEW(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByInstaller::CreateSubContainer_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByInstance
#include "Zenject/SubContainerCreatorByInstance.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByInstance.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByInstance::CreateSubContainer_NEW(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByInstance::CreateSubContainer_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByInstanceGetter
#include "Zenject/SubContainerCreatorByInstanceGetter.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByInstanceGetter.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByInstanceGetter::CreateSubContainer_NEW(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByInstanceGetter::CreateSubContainer_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByMethodBase
#include "Zenject/SubContainerCreatorByMethodBase.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByMethodBase.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByMethodBase::CreateSubContainer_NEW(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByMethodBase::CreateSubContainer_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, context);
}
// Autogenerated method: Zenject.SubContainerCreatorByMethodBase.CreateEmptySubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByMethodBase::CreateEmptySubContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByMethodBase::CreateEmptySubContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateEmptySubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByMethod
#include "Zenject/SubContainerCreatorByMethod.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByMethod.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByMethod::CreateSubContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByMethod::CreateSubContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewGameObjectDynamicContext
#include "Zenject/SubContainerCreatorByNewGameObjectDynamicContext.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewGameObjectDynamicContext.CreateGameObject
UnityEngine::GameObject* Zenject::SubContainerCreatorByNewGameObjectDynamicContext::CreateGameObject(bool& shouldMakeActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewGameObjectDynamicContext::CreateGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(shouldMakeActive)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, shouldMakeActive);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewGameObjectInstaller
#include "Zenject/SubContainerCreatorByNewGameObjectInstaller.hpp"
// Including type: Zenject.SubContainerCreatorByNewGameObjectInstaller/<>c__DisplayClass3_0
#include "Zenject/SubContainerCreatorByNewGameObjectInstaller_--c__DisplayClass3_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.GameObjectContext
#include "Zenject/GameObjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewGameObjectInstaller.AddInstallers
void Zenject::SubContainerCreatorByNewGameObjectInstaller::AddInstallers(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::GameObjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewGameObjectInstaller::AddInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewGameObjectInstaller/<>c__DisplayClass3_0
#include "Zenject/SubContainerCreatorByNewGameObjectInstaller_--c__DisplayClass3_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewGameObjectInstaller/<>c__DisplayClass3_0.<AddInstallers>b__0
void Zenject::SubContainerCreatorByNewGameObjectInstaller::$$c__DisplayClass3_0::$AddInstallers$b__0(Zenject::DiContainer* subContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewGameObjectInstaller::$$c__DisplayClass3_0::<AddInstallers>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddInstallers>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(subContainer))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, subContainer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewGameObjectMethod
#include "Zenject/SubContainerCreatorByNewGameObjectMethod.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.GameObjectContext
#include "Zenject/GameObjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewGameObjectMethod.AddInstallers
void Zenject::SubContainerCreatorByNewGameObjectMethod::AddInstallers(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::GameObjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewGameObjectMethod::AddInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefab
#include "Zenject/SubContainerCreatorByNewPrefab.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.IPrefabProvider
#include "Zenject/IPrefabProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefab.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByNewPrefab::CreateSubContainer_NEW(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* parentContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewPrefab::CreateSubContainer_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, parentContext)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, parentContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefabDynamicContext
#include "Zenject/SubContainerCreatorByNewPrefabDynamicContext.hpp"
// Including type: Zenject.IPrefabProvider
#include "Zenject/IPrefabProvider.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabDynamicContext.CreateGameObject
UnityEngine::GameObject* Zenject::SubContainerCreatorByNewPrefabDynamicContext::CreateGameObject(bool& shouldMakeActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewPrefabDynamicContext::CreateGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(shouldMakeActive)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, shouldMakeActive);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefabInstaller
#include "Zenject/SubContainerCreatorByNewPrefabInstaller.hpp"
// Including type: Zenject.SubContainerCreatorByNewPrefabInstaller/<>c__DisplayClass3_0
#include "Zenject/SubContainerCreatorByNewPrefabInstaller_--c__DisplayClass3_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IPrefabProvider
#include "Zenject/IPrefabProvider.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.GameObjectContext
#include "Zenject/GameObjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabInstaller.AddInstallers
void Zenject::SubContainerCreatorByNewPrefabInstaller::AddInstallers(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::GameObjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewPrefabInstaller::AddInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefabInstaller/<>c__DisplayClass3_0
#include "Zenject/SubContainerCreatorByNewPrefabInstaller_--c__DisplayClass3_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabInstaller/<>c__DisplayClass3_0.<AddInstallers>b__0
void Zenject::SubContainerCreatorByNewPrefabInstaller::$$c__DisplayClass3_0::$AddInstallers$b__0(Zenject::DiContainer* subContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewPrefabInstaller::$$c__DisplayClass3_0::<AddInstallers>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddInstallers>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(subContainer))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, subContainer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefabMethod
#include "Zenject/SubContainerCreatorByNewPrefabMethod.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IPrefabProvider
#include "Zenject/IPrefabProvider.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.GameObjectContext
#include "Zenject/GameObjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabMethod.AddInstallers
void Zenject::SubContainerCreatorByNewPrefabMethod::AddInstallers(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::GameObjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewPrefabMethod::AddInstallers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefabWithParams
#include "Zenject/SubContainerCreatorByNewPrefabWithParams.hpp"
// Including type: Zenject.SubContainerCreatorByNewPrefabWithParams/<>c__DisplayClass7_0
#include "Zenject/SubContainerCreatorByNewPrefabWithParams_--c__DisplayClass7_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IPrefabProvider
#include "Zenject/IPrefabProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabWithParams.get_Container
Zenject::DiContainer* Zenject::SubContainerCreatorByNewPrefabWithParams::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewPrefabWithParams::get_Container");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabWithParams.CreateTempContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByNewPrefabWithParams::CreateTempContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewPrefabWithParams::CreateTempContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateTempContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args);
}
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabWithParams.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByNewPrefabWithParams::CreateSubContainer_NEW(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* parentContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewPrefabWithParams::CreateSubContainer_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, parentContext)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, parentContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefabWithParams/<>c__DisplayClass7_0
#include "Zenject/SubContainerCreatorByNewPrefabWithParams_--c__DisplayClass7_0.hpp"
// Including type: Zenject.InjectableInfo
#include "Zenject/InjectableInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabWithParams/<>c__DisplayClass7_0.<CreateTempContainer>b__0
bool Zenject::SubContainerCreatorByNewPrefabWithParams::$$c__DisplayClass7_0::$CreateTempContainer$b__0(Zenject::InjectableInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewPrefabWithParams::$$c__DisplayClass7_0::<CreateTempContainer>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateTempContainer>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabWithParams/<>c__DisplayClass7_0.<CreateTempContainer>b__1
int Zenject::SubContainerCreatorByNewPrefabWithParams::$$c__DisplayClass7_0::$CreateTempContainer$b__1(Zenject::InjectableInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewPrefabWithParams::$$c__DisplayClass7_0::<CreateTempContainer>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateTempContainer>b__1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorCached
#include "Zenject/SubContainerCreatorCached.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorCached.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorCached::CreateSubContainer_NEW(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorCached::CreateSubContainer_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorDynamicContext
#include "Zenject/SubContainerCreatorDynamicContext.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.GameObjectContext
#include "Zenject/GameObjectContext.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorDynamicContext.get_Container
Zenject::DiContainer* Zenject::SubContainerCreatorDynamicContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorDynamicContext::get_Container");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SubContainerCreatorDynamicContext.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorDynamicContext::CreateSubContainer_NEW(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* parentContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorDynamicContext::CreateSubContainer_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, parentContext)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, parentContext);
}
// Autogenerated method: Zenject.SubContainerCreatorDynamicContext.AddInstallers
void Zenject::SubContainerCreatorDynamicContext::AddInstallers_NEW(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::GameObjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorDynamicContext::AddInstallers_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddInstallers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, args, context);
}
// Autogenerated method: Zenject.SubContainerCreatorDynamicContext.CreateGameObject
UnityEngine::GameObject* Zenject::SubContainerCreatorDynamicContext::CreateGameObject(bool& shouldMakeActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorDynamicContext::CreateGameObject_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(shouldMakeActive)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, shouldMakeActive);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorUtil
#include "Zenject/SubContainerCreatorUtil.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorUtil.ApplyBindSettings
void Zenject::SubContainerCreatorUtil::ApplyBindSettings(Zenject::SubContainerCreatorBindInfo* subContainerBindInfo, Zenject::DiContainer* subContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorUtil::ApplyBindSettings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "SubContainerCreatorUtil", "ApplyBindSettings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(subContainerBindInfo, subContainer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, subContainerBindInfo, subContainer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerDependencyProvider
#include "Zenject/SubContainerDependencyProvider.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerDependencyProvider.get_IsCached
bool Zenject::SubContainerDependencyProvider::get_IsCached_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerDependencyProvider::get_IsCached_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SubContainerDependencyProvider.get_TypeVariesBasedOnMemberType
bool Zenject::SubContainerDependencyProvider::get_TypeVariesBasedOnMemberType_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerDependencyProvider::get_TypeVariesBasedOnMemberType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SubContainerDependencyProvider.GetInstanceType
System::Type* Zenject::SubContainerDependencyProvider::GetInstanceType_NEW(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerDependencyProvider::GetInstanceType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.SubContainerDependencyProvider.CreateSubContext
Zenject::InjectContext* Zenject::SubContainerDependencyProvider::CreateSubContext(Zenject::InjectContext* parent, Zenject::DiContainer* subContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerDependencyProvider::CreateSubContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSubContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parent, subContainer)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectContext*, false>(this, ___internal__method, parent, subContainer);
}
// Autogenerated method: Zenject.SubContainerDependencyProvider.GetAllInstancesWithInjectSplit
void Zenject::SubContainerDependencyProvider::GetAllInstancesWithInjectSplit_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerDependencyProvider::GetAllInstancesWithInjectSplit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.TransientProvider
#include "Zenject/TransientProvider.hpp"
// Including type: Zenject.TransientProvider/<>c__DisplayClass11_0
#include "Zenject/TransientProvider_--c__DisplayClass11_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.TransientProvider.get_IsCached
bool Zenject::TransientProvider::get_IsCached_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TransientProvider::get_IsCached_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TransientProvider.get_TypeVariesBasedOnMemberType
bool Zenject::TransientProvider::get_TypeVariesBasedOnMemberType_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TransientProvider::get_TypeVariesBasedOnMemberType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TransientProvider.GetInstanceType
System::Type* Zenject::TransientProvider::GetInstanceType_NEW(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TransientProvider::GetInstanceType_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.TransientProvider.GetAllInstancesWithInjectSplit
void Zenject::TransientProvider::GetAllInstancesWithInjectSplit_NEW(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TransientProvider::GetAllInstancesWithInjectSplit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated method: Zenject.TransientProvider.GetTypeToCreate
System::Type* Zenject::TransientProvider::GetTypeToCreate(System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TransientProvider::GetTypeToCreate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTypeToCreate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(contractType)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, contractType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.TransientProvider/<>c__DisplayClass11_0
#include "Zenject/TransientProvider_--c__DisplayClass11_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.TransientProvider/<>c__DisplayClass11_0.<GetAllInstancesWithInjectSplit>b__0
void Zenject::TransientProvider::$$c__DisplayClass11_0::$GetAllInstancesWithInjectSplit$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TransientProvider::$$c__DisplayClass11_0::<GetAllInstancesWithInjectSplit>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllInstancesWithInjectSplit>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.AnimatorIkHandlerManager
#include "Zenject/AnimatorIkHandlerManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IAnimatorIkHandler
#include "Zenject/IAnimatorIkHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AnimatorIkHandlerManager.Construct
void Zenject::AnimatorIkHandlerManager::Construct(System::Collections::Generic::List_1<Zenject::IAnimatorIkHandler*>* handlers) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AnimatorIkHandlerManager::Construct");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Construct", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handlers)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, handlers);
}
// Autogenerated method: Zenject.AnimatorIkHandlerManager.OnAnimatorIk
void Zenject::AnimatorIkHandlerManager::OnAnimatorIk() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AnimatorIkHandlerManager::OnAnimatorIk");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnAnimatorIk", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.AnimatorInstaller
#include "Zenject/AnimatorInstaller.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AnimatorInstaller.InstallBindings
void Zenject::AnimatorInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AnimatorInstaller::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.AnimatorMoveHandlerManager
#include "Zenject/AnimatorMoveHandlerManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IAnimatorMoveHandler
#include "Zenject/IAnimatorMoveHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AnimatorMoveHandlerManager.Construct
void Zenject::AnimatorMoveHandlerManager::Construct(System::Collections::Generic::List_1<Zenject::IAnimatorMoveHandler*>* handlers) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AnimatorMoveHandlerManager::Construct");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Construct", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handlers)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, handlers);
}
// Autogenerated method: Zenject.AnimatorMoveHandlerManager.OnAnimatorMove
void Zenject::AnimatorMoveHandlerManager::OnAnimatorMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AnimatorMoveHandlerManager::OnAnimatorMove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnAnimatorMove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IAnimatorIkHandler
#include "Zenject/IAnimatorIkHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IAnimatorIkHandler.OnAnimatorIk
void Zenject::IAnimatorIkHandler::OnAnimatorIk_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IAnimatorIkHandler::OnAnimatorIk_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnAnimatorIk", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IAnimatorMoveHandler
#include "Zenject/IAnimatorMoveHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IAnimatorMoveHandler.OnAnimatorMove
void Zenject::IAnimatorMoveHandler::OnAnimatorMove_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IAnimatorMoveHandler::OnAnimatorMove_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnAnimatorMove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager
#include "Zenject/DisposableManager.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: Zenject.DisposableManager/LateDisposableInfo
#include "Zenject/DisposableManager_LateDisposableInfo.hpp"
// Including type: Zenject.DisposableManager/<>c__DisplayClass4_0
#include "Zenject/DisposableManager_--c__DisplayClass4_0.hpp"
// Including type: Zenject.DisposableManager/<>c__DisplayClass4_1
#include "Zenject/DisposableManager_--c__DisplayClass4_1.hpp"
// Including type: Zenject.DisposableManager/<>c
#include "Zenject/DisposableManager_--c.hpp"
// Including type: Zenject.DisposableManager/<>c__DisplayClass9_0
#include "Zenject/DisposableManager_--c__DisplayClass9_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.ILateDisposable
#include "Zenject/ILateDisposable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.DisposableManager.Add
void Zenject::DisposableManager::Add(System::IDisposable* disposable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposable);
}
// Autogenerated method: Zenject.DisposableManager.Add
void Zenject::DisposableManager::Add(System::IDisposable* disposable, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposable, priority)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposable, priority);
}
// Autogenerated method: Zenject.DisposableManager.AddLate
void Zenject::DisposableManager::AddLate(Zenject::ILateDisposable* disposable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::AddLate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddLate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposable);
}
// Autogenerated method: Zenject.DisposableManager.AddLate
void Zenject::DisposableManager::AddLate(Zenject::ILateDisposable* disposable, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::AddLate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddLate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposable, priority)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposable, priority);
}
// Autogenerated method: Zenject.DisposableManager.Remove
void Zenject::DisposableManager::Remove(System::IDisposable* disposable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposable);
}
// Autogenerated method: Zenject.DisposableManager.LateDispose
void Zenject::DisposableManager::LateDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::LateDispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateDispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DisposableManager.Dispose
void Zenject::DisposableManager::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager/DisposableInfo
#include "Zenject/DisposableManager.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager/LateDisposableInfo
#include "Zenject/DisposableManager_LateDisposableInfo.hpp"
// Including type: Zenject.ILateDisposable
#include "Zenject/ILateDisposable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager/<>c__DisplayClass4_0
#include "Zenject/DisposableManager_--c__DisplayClass4_0.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.DisposableManager/<>c__DisplayClass4_0.<.ctor>b__0
bool Zenject::DisposableManager::$$c__DisplayClass4_0::$_ctor$b__0(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c__DisplayClass4_0::<.ctor>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager/<>c__DisplayClass4_1
#include "Zenject/DisposableManager_--c__DisplayClass4_1.hpp"
// Including type: Zenject.ILateDisposable
#include "Zenject/ILateDisposable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.DisposableManager/<>c__DisplayClass4_1.<.ctor>b__2
bool Zenject::DisposableManager::$$c__DisplayClass4_1::$_ctor$b__2(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c__DisplayClass4_1::<.ctor>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager/<>c
#include "Zenject/DisposableManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.DisposableManager/LateDisposableInfo
#include "Zenject/DisposableManager_LateDisposableInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.DisposableManager/<>c <>9
Zenject::DisposableManager::$$c* Zenject::DisposableManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::DisposableManager::$$c*>("Zenject", "DisposableManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.DisposableManager/<>c <>9
void Zenject::DisposableManager::$$c::_set_$$9(Zenject::DisposableManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DisposableManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Nullable`1<System.Int32>> <>9__4_1
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>* Zenject::DisposableManager::$$c::_get_$$9__4_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::_get_$$9__4_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>*>("Zenject", "DisposableManager/<>c", "<>9__4_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Nullable`1<System.Int32>> <>9__4_1
void Zenject::DisposableManager::$$c::_set_$$9__4_1(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::_set_$$9__4_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DisposableManager/<>c", "<>9__4_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Nullable`1<System.Int32>> <>9__4_3
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>* Zenject::DisposableManager::$$c::_get_$$9__4_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::_get_$$9__4_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>*>("Zenject", "DisposableManager/<>c", "<>9__4_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Nullable`1<System.Int32>> <>9__4_3
void Zenject::DisposableManager::$$c::_set_$$9__4_3(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::_set_$$9__4_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DisposableManager/<>c", "<>9__4_3", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.DisposableManager/LateDisposableInfo,System.Int32> <>9__10_0
System::Func_2<Zenject::DisposableManager::LateDisposableInfo*, int>* Zenject::DisposableManager::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::DisposableManager::LateDisposableInfo*, int>*>("Zenject", "DisposableManager/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.DisposableManager/LateDisposableInfo,System.Int32> <>9__10_0
void Zenject::DisposableManager::$$c::_set_$$9__10_0(System::Func_2<Zenject::DisposableManager::LateDisposableInfo*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DisposableManager/<>c", "<>9__10_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.DisposableManager/DisposableInfo,System.Int32> <>9__11_0
System::Func_2<Zenject::DisposableManager::DisposableInfo, int>* Zenject::DisposableManager::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::DisposableManager::DisposableInfo, int>*>("Zenject", "DisposableManager/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.DisposableManager/DisposableInfo,System.Int32> <>9__11_0
void Zenject::DisposableManager::$$c::_set_$$9__11_0(System::Func_2<Zenject::DisposableManager::DisposableInfo, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DisposableManager/<>c", "<>9__11_0", value)));
}
// Autogenerated method: Zenject.DisposableManager/<>c..cctor
void Zenject::DisposableManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "DisposableManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.DisposableManager/<>c.<.ctor>b__4_1
System::Nullable_1<int> Zenject::DisposableManager::$$c::$_ctor$b__4_1(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::<.ctor>b__4_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<int>, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.DisposableManager/<>c.<.ctor>b__4_3
System::Nullable_1<int> Zenject::DisposableManager::$$c::$_ctor$b__4_3(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::<.ctor>b__4_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_3", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<int>, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.DisposableManager/<>c.<LateDispose>b__10_0
int Zenject::DisposableManager::$$c::$LateDispose$b__10_0(Zenject::DisposableManager::LateDisposableInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::<LateDispose>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LateDispose>b__10_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.DisposableManager/<>c.<Dispose>b__11_0
int Zenject::DisposableManager::$$c::$Dispose$b__11_0(Zenject::DisposableManager::DisposableInfo x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::<Dispose>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Dispose>b__11_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager/<>c__DisplayClass9_0
#include "Zenject/DisposableManager_--c__DisplayClass9_0.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: Zenject.DisposableManager/DisposableInfo
#include "Zenject/DisposableManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.DisposableManager/<>c__DisplayClass9_0.<Remove>b__0
bool Zenject::DisposableManager::$$c__DisplayClass9_0::$Remove$b__0(Zenject::DisposableManager::DisposableInfo x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c__DisplayClass9_0::<Remove>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Remove>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.GuiRenderableManager
#include "Zenject/GuiRenderableManager.hpp"
// Including type: Zenject.GuiRenderableManager/RenderableInfo
#include "Zenject/GuiRenderableManager_RenderableInfo.hpp"
// Including type: Zenject.GuiRenderableManager/<>c__DisplayClass1_0
#include "Zenject/GuiRenderableManager_--c__DisplayClass1_0.hpp"
// Including type: Zenject.GuiRenderableManager/<>c
#include "Zenject/GuiRenderableManager_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IGuiRenderable
#include "Zenject/IGuiRenderable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.GuiRenderableManager.OnGui
void Zenject::GuiRenderableManager::OnGui() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::OnGui");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnGui", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.GuiRenderableManager/RenderableInfo
#include "Zenject/GuiRenderableManager_RenderableInfo.hpp"
// Including type: Zenject.IGuiRenderable
#include "Zenject/IGuiRenderable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.GuiRenderableManager/<>c__DisplayClass1_0
#include "Zenject/GuiRenderableManager_--c__DisplayClass1_0.hpp"
// Including type: Zenject.IGuiRenderable
#include "Zenject/IGuiRenderable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.GuiRenderableManager/<>c__DisplayClass1_0.<.ctor>b__1
bool Zenject::GuiRenderableManager::$$c__DisplayClass1_0::$_ctor$b__1(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::$$c__DisplayClass1_0::<.ctor>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.GuiRenderableManager/<>c
#include "Zenject/GuiRenderableManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.GuiRenderableManager/RenderableInfo
#include "Zenject/GuiRenderableManager_RenderableInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.GuiRenderableManager/<>c <>9
Zenject::GuiRenderableManager::$$c* Zenject::GuiRenderableManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::GuiRenderableManager::$$c*>("Zenject", "GuiRenderableManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.GuiRenderableManager/<>c <>9
void Zenject::GuiRenderableManager::$$c::_set_$$9(Zenject::GuiRenderableManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "GuiRenderableManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Int32> <>9__1_2
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>* Zenject::GuiRenderableManager::$$c::_get_$$9__1_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::$$c::_get_$$9__1_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>*>("Zenject", "GuiRenderableManager/<>c", "<>9__1_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Int32> <>9__1_2
void Zenject::GuiRenderableManager::$$c::_set_$$9__1_2(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::$$c::_set_$$9__1_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "GuiRenderableManager/<>c", "<>9__1_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.GuiRenderableManager/RenderableInfo,System.Int32> <>9__1_0
System::Func_2<Zenject::GuiRenderableManager::RenderableInfo*, int>* Zenject::GuiRenderableManager::$$c::_get_$$9__1_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::$$c::_get_$$9__1_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::GuiRenderableManager::RenderableInfo*, int>*>("Zenject", "GuiRenderableManager/<>c", "<>9__1_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.GuiRenderableManager/RenderableInfo,System.Int32> <>9__1_0
void Zenject::GuiRenderableManager::$$c::_set_$$9__1_0(System::Func_2<Zenject::GuiRenderableManager::RenderableInfo*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::$$c::_set_$$9__1_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "GuiRenderableManager/<>c", "<>9__1_0", value)));
}
// Autogenerated method: Zenject.GuiRenderableManager/<>c..cctor
void Zenject::GuiRenderableManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "GuiRenderableManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.GuiRenderableManager/<>c.<.ctor>b__1_2
int Zenject::GuiRenderableManager::$$c::$_ctor$b__1_2(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::$$c::<.ctor>b__1_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__1_2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.GuiRenderableManager/<>c.<.ctor>b__1_0
int Zenject::GuiRenderableManager::$$c::$_ctor$b__1_0(Zenject::GuiRenderableManager::RenderableInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::$$c::<.ctor>b__1_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__1_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.GuiRenderer
#include "Zenject/GuiRenderer.hpp"
// Including type: Zenject.GuiRenderableManager
#include "Zenject/GuiRenderableManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.GuiRenderer.Construct
void Zenject::GuiRenderer::Construct(Zenject::GuiRenderableManager* renderableManager) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderer::Construct");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Construct", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(renderableManager)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, renderableManager);
}
// Autogenerated method: Zenject.GuiRenderer.OnGUI
void Zenject::GuiRenderer::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderer::OnGUI");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.InitializableManager
#include "Zenject/InitializableManager.hpp"
// Including type: Zenject.InitializableManager/InitializableInfo
#include "Zenject/InitializableManager_InitializableInfo.hpp"
// Including type: Zenject.InitializableManager/<>c__DisplayClass2_0
#include "Zenject/InitializableManager_--c__DisplayClass2_0.hpp"
// Including type: Zenject.InitializableManager/<>c
#include "Zenject/InitializableManager_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IInitializable
#include "Zenject/IInitializable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.InitializableManager.Add
void Zenject::InitializableManager::Add(Zenject::IInitializable* initializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(initializable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, initializable);
}
// Autogenerated method: Zenject.InitializableManager.Add
void Zenject::InitializableManager::Add(Zenject::IInitializable* initializable, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(initializable, priority)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, initializable, priority);
}
// Autogenerated method: Zenject.InitializableManager.Initialize
void Zenject::InitializableManager::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.InitializableManager/InitializableInfo
#include "Zenject/InitializableManager_InitializableInfo.hpp"
// Including type: Zenject.IInitializable
#include "Zenject/IInitializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.InitializableManager/<>c__DisplayClass2_0
#include "Zenject/InitializableManager_--c__DisplayClass2_0.hpp"
// Including type: Zenject.IInitializable
#include "Zenject/IInitializable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.InitializableManager/<>c__DisplayClass2_0.<.ctor>b__0
bool Zenject::InitializableManager::$$c__DisplayClass2_0::$_ctor$b__0(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::$$c__DisplayClass2_0::<.ctor>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.InitializableManager/<>c
#include "Zenject/InitializableManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InitializableManager/InitializableInfo
#include "Zenject/InitializableManager_InitializableInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.InitializableManager/<>c <>9
Zenject::InitializableManager::$$c* Zenject::InitializableManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::InitializableManager::$$c*>("Zenject", "InitializableManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.InitializableManager/<>c <>9
void Zenject::InitializableManager::$$c::_set_$$9(Zenject::InitializableManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "InitializableManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Int32> <>9__2_1
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>* Zenject::InitializableManager::$$c::_get_$$9__2_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::$$c::_get_$$9__2_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>*>("Zenject", "InitializableManager/<>c", "<>9__2_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Int32> <>9__2_1
void Zenject::InitializableManager::$$c::_set_$$9__2_1(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::$$c::_set_$$9__2_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "InitializableManager/<>c", "<>9__2_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.InitializableManager/InitializableInfo,System.Int32> <>9__5_0
System::Func_2<Zenject::InitializableManager::InitializableInfo*, int>* Zenject::InitializableManager::$$c::_get_$$9__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::$$c::_get_$$9__5_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::InitializableManager::InitializableInfo*, int>*>("Zenject", "InitializableManager/<>c", "<>9__5_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.InitializableManager/InitializableInfo,System.Int32> <>9__5_0
void Zenject::InitializableManager::$$c::_set_$$9__5_0(System::Func_2<Zenject::InitializableManager::InitializableInfo*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::$$c::_set_$$9__5_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "InitializableManager/<>c", "<>9__5_0", value)));
}
// Autogenerated method: Zenject.InitializableManager/<>c..cctor
void Zenject::InitializableManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "InitializableManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.InitializableManager/<>c.<.ctor>b__2_1
int Zenject::InitializableManager::$$c::$_ctor$b__2_1(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::$$c::<.ctor>b__2_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.InitializableManager/<>c.<Initialize>b__5_0
int Zenject::InitializableManager::$$c::$Initialize$b__5_0(Zenject::InitializableManager::InitializableInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::$$c::<Initialize>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Initialize>b__5_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DefaultGameObjectKernel
#include "Zenject/DefaultGameObjectKernel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Kernel
#include "Zenject/Kernel.hpp"
// Including type: Zenject.TickableManager
#include "Zenject/TickableManager.hpp"
// Including type: Zenject.InitializableManager
#include "Zenject/InitializableManager.hpp"
// Including type: Zenject.DisposableManager
#include "Zenject/DisposableManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.Kernel.Initialize
void Zenject::Kernel::Initialize_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Kernel::Initialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Kernel.Dispose
void Zenject::Kernel::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Kernel::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Kernel.LateDispose
void Zenject::Kernel::LateDispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Kernel::LateDispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateDispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Kernel.Tick
void Zenject::Kernel::Tick_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Kernel::Tick_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Tick", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Kernel.LateTick
void Zenject::Kernel::LateTick_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Kernel::LateTick_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateTick", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Kernel.FixedTick
void Zenject::Kernel::FixedTick_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Kernel::FixedTick_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedTick", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.MonoKernel
#include "Zenject/MonoKernel.hpp"
// Including type: Zenject.TickableManager
#include "Zenject/TickableManager.hpp"
// Including type: Zenject.InitializableManager
#include "Zenject/InitializableManager.hpp"
// Including type: Zenject.DisposableManager
#include "Zenject/DisposableManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.MonoKernel.get_IsDestroyed
bool Zenject::MonoKernel::get_IsDestroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoKernel::get_IsDestroyed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsDestroyed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MonoKernel.Start
void Zenject::MonoKernel::Start_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoKernel::Start_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MonoKernel.Initialize
void Zenject::MonoKernel::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoKernel::Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MonoKernel.Update
void Zenject::MonoKernel::Update_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoKernel::Update_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MonoKernel.FixedUpdate
void Zenject::MonoKernel::FixedUpdate_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoKernel::FixedUpdate_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MonoKernel.LateUpdate
void Zenject::MonoKernel::LateUpdate_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoKernel::LateUpdate_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MonoKernel.OnDestroy
void Zenject::MonoKernel::OnDestroy_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoKernel::OnDestroy_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ProjectKernel
#include "Zenject/ProjectKernel.hpp"
// Including type: Zenject.ProjectKernel/<>c__DisplayClass4_0
#include "Zenject/ProjectKernel_--c__DisplayClass4_0.hpp"
// Including type: Zenject.ZenjectSettings
#include "Zenject/ZenjectSettings.hpp"
// Including type: Zenject.SceneContextRegistry
#include "Zenject/SceneContextRegistry.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ProjectKernel.OnApplicationQuit
void Zenject::ProjectKernel::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectKernel::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectKernel.DestroyEverythingInOrder
void Zenject::ProjectKernel::DestroyEverythingInOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectKernel::DestroyEverythingInOrder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DestroyEverythingInOrder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectKernel.ForceUnloadAllScenes
void Zenject::ProjectKernel::ForceUnloadAllScenes(bool immediate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectKernel::ForceUnloadAllScenes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ForceUnloadAllScenes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(immediate)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, immediate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ProjectKernel/<>c__DisplayClass4_0
#include "Zenject/ProjectKernel_--c__DisplayClass4_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.SceneContext
#include "Zenject/SceneContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ProjectKernel/<>c__DisplayClass4_0.<ForceUnloadAllScenes>b__0
int Zenject::ProjectKernel::$$c__DisplayClass4_0::$ForceUnloadAllScenes$b__0(Zenject::SceneContext* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectKernel::$$c__DisplayClass4_0::<ForceUnloadAllScenes>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ForceUnloadAllScenes>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SceneKernel
#include "Zenject/SceneKernel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PoolableManager
#include "Zenject/PoolableManager.hpp"
// Including type: Zenject.PoolableManager/PoolableInfo
#include "Zenject/PoolableManager_PoolableInfo.hpp"
// Including type: Zenject.PoolableManager/<>c__DisplayClass2_0
#include "Zenject/PoolableManager_--c__DisplayClass2_0.hpp"
// Including type: Zenject.PoolableManager/<>c
#include "Zenject/PoolableManager_--c.hpp"
// Including type: Zenject.PoolableManager/<>c__DisplayClass3_0
#include "Zenject/PoolableManager_--c__DisplayClass3_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IPoolable
#include "Zenject/IPoolable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.PoolableManager.CreatePoolableInfo
Zenject::PoolableManager::PoolableInfo Zenject::PoolableManager::CreatePoolableInfo(Zenject::IPoolable* poolable, System::Collections::Generic::List_1<ModestTree::Util::ValuePair_2<System::Type*, int>*>* priorities) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::CreatePoolableInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreatePoolableInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(poolable, priorities)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::PoolableManager::PoolableInfo, false>(this, ___internal__method, poolable, priorities);
}
// Autogenerated method: Zenject.PoolableManager.TriggerOnSpawned
void Zenject::PoolableManager::TriggerOnSpawned() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::TriggerOnSpawned");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TriggerOnSpawned", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PoolableManager.TriggerOnDespawned
void Zenject::PoolableManager::TriggerOnDespawned() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::TriggerOnDespawned");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TriggerOnDespawned", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PoolableManager/PoolableInfo
#include "Zenject/PoolableManager_PoolableInfo.hpp"
// Including type: Zenject.IPoolable
#include "Zenject/IPoolable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PoolableManager/<>c__DisplayClass2_0
#include "Zenject/PoolableManager_--c__DisplayClass2_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.IPoolable
#include "Zenject/IPoolable.hpp"
// Including type: Zenject.PoolableManager/PoolableInfo
#include "Zenject/PoolableManager_PoolableInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.PoolableManager/<>c__DisplayClass2_0.<.ctor>b__0
Zenject::PoolableManager::PoolableInfo Zenject::PoolableManager::$$c__DisplayClass2_0::$_ctor$b__0(Zenject::IPoolable* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c__DisplayClass2_0::<.ctor>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<Zenject::PoolableManager::PoolableInfo, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PoolableManager/<>c
#include "Zenject/PoolableManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.IPoolable
#include "Zenject/IPoolable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.PoolableManager/<>c <>9
Zenject::PoolableManager::$$c* Zenject::PoolableManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::PoolableManager::$$c*>("Zenject", "PoolableManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.PoolableManager/<>c <>9
void Zenject::PoolableManager::$$c::_set_$$9(Zenject::PoolableManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "PoolableManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.PoolableManager/PoolableInfo,System.Int32> <>9__2_1
System::Func_2<Zenject::PoolableManager::PoolableInfo, int>* Zenject::PoolableManager::$$c::_get_$$9__2_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::_get_$$9__2_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::PoolableManager::PoolableInfo, int>*>("Zenject", "PoolableManager/<>c", "<>9__2_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.PoolableManager/PoolableInfo,System.Int32> <>9__2_1
void Zenject::PoolableManager::$$c::_set_$$9__2_1(System::Func_2<Zenject::PoolableManager::PoolableInfo, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::_set_$$9__2_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "PoolableManager/<>c", "<>9__2_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.PoolableManager/PoolableInfo,Zenject.IPoolable> <>9__2_2
System::Func_2<Zenject::PoolableManager::PoolableInfo, Zenject::IPoolable*>* Zenject::PoolableManager::$$c::_get_$$9__2_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::_get_$$9__2_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::PoolableManager::PoolableInfo, Zenject::IPoolable*>*>("Zenject", "PoolableManager/<>c", "<>9__2_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.PoolableManager/PoolableInfo,Zenject.IPoolable> <>9__2_2
void Zenject::PoolableManager::$$c::_set_$$9__2_2(System::Func_2<Zenject::PoolableManager::PoolableInfo, Zenject::IPoolable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::_set_$$9__2_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "PoolableManager/<>c", "<>9__2_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Nullable`1<System.Int32>> <>9__3_1
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>* Zenject::PoolableManager::$$c::_get_$$9__3_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::_get_$$9__3_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>*>("Zenject", "PoolableManager/<>c", "<>9__3_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Nullable`1<System.Int32>> <>9__3_1
void Zenject::PoolableManager::$$c::_set_$$9__3_1(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::_set_$$9__3_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "PoolableManager/<>c", "<>9__3_1", value)));
}
// Autogenerated method: Zenject.PoolableManager/<>c..cctor
void Zenject::PoolableManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PoolableManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.PoolableManager/<>c.<.ctor>b__2_1
int Zenject::PoolableManager::$$c::$_ctor$b__2_1(Zenject::PoolableManager::PoolableInfo x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::<.ctor>b__2_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.PoolableManager/<>c.<.ctor>b__2_2
Zenject::IPoolable* Zenject::PoolableManager::$$c::$_ctor$b__2_2(Zenject::PoolableManager::PoolableInfo x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::<.ctor>b__2_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2_2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<Zenject::IPoolable*, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.PoolableManager/<>c.<CreatePoolableInfo>b__3_1
System::Nullable_1<int> Zenject::PoolableManager::$$c::$CreatePoolableInfo$b__3_1(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::<CreatePoolableInfo>b__3_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreatePoolableInfo>b__3_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<int>, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PoolableManager/<>c__DisplayClass3_0
#include "Zenject/PoolableManager_--c__DisplayClass3_0.hpp"
// Including type: Zenject.IPoolable
#include "Zenject/IPoolable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.PoolableManager/<>c__DisplayClass3_0.<CreatePoolableInfo>b__0
bool Zenject::PoolableManager::$$c__DisplayClass3_0::$CreatePoolableInfo$b__0(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c__DisplayClass3_0::<CreatePoolableInfo>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreatePoolableInfo>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SceneContextRegistry
#include "Zenject/SceneContextRegistry.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Zenject.SceneContext
#include "Zenject/SceneContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SceneContextRegistry.get_SceneContexts
System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>* Zenject::SceneContextRegistry::get_SceneContexts() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistry::get_SceneContexts");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SceneContexts", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContextRegistry.Add
void Zenject::SceneContextRegistry::Add(Zenject::SceneContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistry::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.SceneContextRegistry.GetSceneContextForScene
Zenject::SceneContext* Zenject::SceneContextRegistry::GetSceneContextForScene(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistry::GetSceneContextForScene");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSceneContextForScene", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::SceneContext*, false>(this, ___internal__method, name);
}
// Autogenerated method: Zenject.SceneContextRegistry.GetSceneContextForScene
Zenject::SceneContext* Zenject::SceneContextRegistry::GetSceneContextForScene(UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistry::GetSceneContextForScene");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSceneContextForScene", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scene)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::SceneContext*, false>(this, ___internal__method, scene);
}
// Autogenerated method: Zenject.SceneContextRegistry.TryGetSceneContextForScene
Zenject::SceneContext* Zenject::SceneContextRegistry::TryGetSceneContextForScene(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistry::TryGetSceneContextForScene");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryGetSceneContextForScene", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::SceneContext*, false>(this, ___internal__method, name);
}
// Autogenerated method: Zenject.SceneContextRegistry.TryGetSceneContextForScene
Zenject::SceneContext* Zenject::SceneContextRegistry::TryGetSceneContextForScene(UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistry::TryGetSceneContextForScene");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryGetSceneContextForScene", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scene)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::SceneContext*, false>(this, ___internal__method, scene);
}
// Autogenerated method: Zenject.SceneContextRegistry.GetContainerForScene
Zenject::DiContainer* Zenject::SceneContextRegistry::GetContainerForScene(UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistry::GetContainerForScene");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetContainerForScene", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scene)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, scene);
}
// Autogenerated method: Zenject.SceneContextRegistry.TryGetContainerForScene
Zenject::DiContainer* Zenject::SceneContextRegistry::TryGetContainerForScene(UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistry::TryGetContainerForScene");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryGetContainerForScene", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scene)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, scene);
}
// Autogenerated method: Zenject.SceneContextRegistry.Remove
void Zenject::SceneContextRegistry::Remove(Zenject::SceneContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistry::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SceneContextRegistryAdderAndRemover
#include "Zenject/SceneContextRegistryAdderAndRemover.hpp"
// Including type: Zenject.SceneContextRegistry
#include "Zenject/SceneContextRegistry.hpp"
// Including type: Zenject.SceneContext
#include "Zenject/SceneContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SceneContextRegistryAdderAndRemover.Initialize
void Zenject::SceneContextRegistryAdderAndRemover::Initialize_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistryAdderAndRemover::Initialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContextRegistryAdderAndRemover.Dispose
void Zenject::SceneContextRegistryAdderAndRemover::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistryAdderAndRemover::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.TickablesTaskUpdater
#include "Zenject/TickablesTaskUpdater.hpp"
// Including type: Zenject.ITickable
#include "Zenject/ITickable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.TickablesTaskUpdater.UpdateItem
void Zenject::TickablesTaskUpdater::UpdateItem(Zenject::ITickable* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickablesTaskUpdater::UpdateItem");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateItem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(task)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.LateTickablesTaskUpdater
#include "Zenject/LateTickablesTaskUpdater.hpp"
// Including type: Zenject.ILateTickable
#include "Zenject/ILateTickable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.LateTickablesTaskUpdater.UpdateItem
void Zenject::LateTickablesTaskUpdater::UpdateItem(Zenject::ILateTickable* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LateTickablesTaskUpdater::UpdateItem");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateItem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(task)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.FixedTickablesTaskUpdater
#include "Zenject/FixedTickablesTaskUpdater.hpp"
// Including type: Zenject.IFixedTickable
#include "Zenject/IFixedTickable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.FixedTickablesTaskUpdater.UpdateItem
void Zenject::FixedTickablesTaskUpdater::UpdateItem(Zenject::IFixedTickable* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FixedTickablesTaskUpdater::UpdateItem");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateItem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(task)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.TickableManager
#include "Zenject/TickableManager.hpp"
// Including type: Zenject.TickableManager/<>c__DisplayClass17_0
#include "Zenject/TickableManager_--c__DisplayClass17_0.hpp"
// Including type: Zenject.TickableManager/<>c
#include "Zenject/TickableManager_--c.hpp"
// Including type: Zenject.TickableManager/<>c__DisplayClass18_0
#include "Zenject/TickableManager_--c__DisplayClass18_0.hpp"
// Including type: Zenject.TickableManager/<>c__DisplayClass19_0
#include "Zenject/TickableManager_--c__DisplayClass19_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.ITickable
#include "Zenject/ITickable.hpp"
// Including type: Zenject.IFixedTickable
#include "Zenject/IFixedTickable.hpp"
// Including type: Zenject.ILateTickable
#include "Zenject/ILateTickable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.TickablesTaskUpdater
#include "Zenject/TickablesTaskUpdater.hpp"
// Including type: Zenject.FixedTickablesTaskUpdater
#include "Zenject/FixedTickablesTaskUpdater.hpp"
// Including type: Zenject.LateTickablesTaskUpdater
#include "Zenject/LateTickablesTaskUpdater.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.TickableManager.get_Tickables
System::Collections::Generic::IEnumerable_1<Zenject::ITickable*>* Zenject::TickableManager::get_Tickables() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::get_Tickables");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Tickables", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::ITickable*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TickableManager.get_IsPaused
bool Zenject::TickableManager::get_IsPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::get_IsPaused");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsPaused", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TickableManager.set_IsPaused
void Zenject::TickableManager::set_IsPaused(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::set_IsPaused");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_IsPaused", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.TickableManager.Initialize
void Zenject::TickableManager::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TickableManager.InitFixedTickables
void Zenject::TickableManager::InitFixedTickables() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::InitFixedTickables");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitFixedTickables", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TickableManager.InitTickables
void Zenject::TickableManager::InitTickables() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::InitTickables");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitTickables", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TickableManager.InitLateTickables
void Zenject::TickableManager::InitLateTickables() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::InitLateTickables");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitLateTickables", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TickableManager.Add
void Zenject::TickableManager::Add(Zenject::ITickable* tickable, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tickable, priority)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tickable, priority);
}
// Autogenerated method: Zenject.TickableManager.Add
void Zenject::TickableManager::Add(Zenject::ITickable* tickable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tickable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tickable);
}
// Autogenerated method: Zenject.TickableManager.AddLate
void Zenject::TickableManager::AddLate(Zenject::ILateTickable* tickable, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::AddLate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddLate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tickable, priority)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tickable, priority);
}
// Autogenerated method: Zenject.TickableManager.AddLate
void Zenject::TickableManager::AddLate(Zenject::ILateTickable* tickable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::AddLate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddLate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tickable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tickable);
}
// Autogenerated method: Zenject.TickableManager.AddFixed
void Zenject::TickableManager::AddFixed(Zenject::IFixedTickable* tickable, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::AddFixed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddFixed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tickable, priority)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tickable, priority);
}
// Autogenerated method: Zenject.TickableManager.AddFixed
void Zenject::TickableManager::AddFixed(Zenject::IFixedTickable* tickable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::AddFixed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddFixed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tickable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tickable);
}
// Autogenerated method: Zenject.TickableManager.Remove
void Zenject::TickableManager::Remove(Zenject::ITickable* tickable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tickable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tickable);
}
// Autogenerated method: Zenject.TickableManager.RemoveLate
void Zenject::TickableManager::RemoveLate(Zenject::ILateTickable* tickable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::RemoveLate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveLate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tickable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tickable);
}
// Autogenerated method: Zenject.TickableManager.RemoveFixed
void Zenject::TickableManager::RemoveFixed(Zenject::IFixedTickable* tickable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::RemoveFixed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveFixed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tickable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tickable);
}
// Autogenerated method: Zenject.TickableManager.Update
void Zenject::TickableManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TickableManager.FixedUpdate
void Zenject::TickableManager::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TickableManager.LateUpdate
void Zenject::TickableManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.TickableManager/<>c__DisplayClass17_0
#include "Zenject/TickableManager_--c__DisplayClass17_0.hpp"
// Including type: Zenject.IFixedTickable
#include "Zenject/IFixedTickable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.TickableManager/<>c__DisplayClass17_0.<InitFixedTickables>b__1
bool Zenject::TickableManager::$$c__DisplayClass17_0::$InitFixedTickables$b__1(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c__DisplayClass17_0::<InitFixedTickables>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitFixedTickables>b__1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.TickableManager/<>c
#include "Zenject/TickableManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.TickableManager/<>c <>9
Zenject::TickableManager::$$c* Zenject::TickableManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::TickableManager::$$c*>("Zenject", "TickableManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.TickableManager/<>c <>9
void Zenject::TickableManager::$$c::_set_$$9(Zenject::TickableManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "TickableManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Type> <>9__17_0
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Type*>* Zenject::TickableManager::$$c::_get_$$9__17_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_get_$$9__17_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Type*>*>("Zenject", "TickableManager/<>c", "<>9__17_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Type> <>9__17_0
void Zenject::TickableManager::$$c::_set_$$9__17_0(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_set_$$9__17_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "TickableManager/<>c", "<>9__17_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Int32> <>9__17_2
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>* Zenject::TickableManager::$$c::_get_$$9__17_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_get_$$9__17_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>*>("Zenject", "TickableManager/<>c", "<>9__17_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Int32> <>9__17_2
void Zenject::TickableManager::$$c::_set_$$9__17_2(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_set_$$9__17_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "TickableManager/<>c", "<>9__17_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Type> <>9__18_0
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Type*>* Zenject::TickableManager::$$c::_get_$$9__18_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_get_$$9__18_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Type*>*>("Zenject", "TickableManager/<>c", "<>9__18_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Type> <>9__18_0
void Zenject::TickableManager::$$c::_set_$$9__18_0(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_set_$$9__18_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "TickableManager/<>c", "<>9__18_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Int32> <>9__18_2
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>* Zenject::TickableManager::$$c::_get_$$9__18_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_get_$$9__18_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>*>("Zenject", "TickableManager/<>c", "<>9__18_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Int32> <>9__18_2
void Zenject::TickableManager::$$c::_set_$$9__18_2(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_set_$$9__18_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "TickableManager/<>c", "<>9__18_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Type> <>9__19_0
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Type*>* Zenject::TickableManager::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Type*>*>("Zenject", "TickableManager/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Type> <>9__19_0
void Zenject::TickableManager::$$c::_set_$$9__19_0(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "TickableManager/<>c", "<>9__19_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Int32> <>9__19_2
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>* Zenject::TickableManager::$$c::_get_$$9__19_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_get_$$9__19_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>*>("Zenject", "TickableManager/<>c", "<>9__19_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Int32> <>9__19_2
void Zenject::TickableManager::$$c::_set_$$9__19_2(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_set_$$9__19_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "TickableManager/<>c", "<>9__19_2", value)));
}
// Autogenerated method: Zenject.TickableManager/<>c..cctor
void Zenject::TickableManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "TickableManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.TickableManager/<>c.<InitFixedTickables>b__17_0
System::Type* Zenject::TickableManager::$$c::$InitFixedTickables$b__17_0(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::<InitFixedTickables>b__17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitFixedTickables>b__17_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.TickableManager/<>c.<InitFixedTickables>b__17_2
int Zenject::TickableManager::$$c::$InitFixedTickables$b__17_2(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::<InitFixedTickables>b__17_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitFixedTickables>b__17_2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.TickableManager/<>c.<InitTickables>b__18_0
System::Type* Zenject::TickableManager::$$c::$InitTickables$b__18_0(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::<InitTickables>b__18_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitTickables>b__18_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.TickableManager/<>c.<InitTickables>b__18_2
int Zenject::TickableManager::$$c::$InitTickables$b__18_2(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::<InitTickables>b__18_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitTickables>b__18_2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.TickableManager/<>c.<InitLateTickables>b__19_0
System::Type* Zenject::TickableManager::$$c::$InitLateTickables$b__19_0(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::<InitLateTickables>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitLateTickables>b__19_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.TickableManager/<>c.<InitLateTickables>b__19_2
int Zenject::TickableManager::$$c::$InitLateTickables$b__19_2(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::<InitLateTickables>b__19_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitLateTickables>b__19_2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.TickableManager/<>c__DisplayClass18_0
#include "Zenject/TickableManager_--c__DisplayClass18_0.hpp"
// Including type: Zenject.ITickable
#include "Zenject/ITickable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.TickableManager/<>c__DisplayClass18_0.<InitTickables>b__1
bool Zenject::TickableManager::$$c__DisplayClass18_0::$InitTickables$b__1(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c__DisplayClass18_0::<InitTickables>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitTickables>b__1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.TickableManager/<>c__DisplayClass19_0
#include "Zenject/TickableManager_--c__DisplayClass19_0.hpp"
// Including type: Zenject.ILateTickable
#include "Zenject/ILateTickable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.TickableManager/<>c__DisplayClass19_0.<InitLateTickables>b__1
bool Zenject::TickableManager::$$c__DisplayClass19_0::$InitLateTickables$b__1(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c__DisplayClass19_0::<InitLateTickables>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitLateTickables>b__1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ActionInstaller
#include "Zenject/ActionInstaller.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ActionInstaller.InstallBindings
void Zenject::ActionInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ActionInstaller::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.DefaultGameObjectParentInstaller
#include "Zenject/DefaultGameObjectParentInstaller.hpp"
// Including type: Zenject.DefaultGameObjectParentInstaller/DefaultParentObjectDestroyer
#include "Zenject/DefaultGameObjectParentInstaller_DefaultParentObjectDestroyer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.DefaultGameObjectParentInstaller.InstallBindings
void Zenject::DefaultGameObjectParentInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DefaultGameObjectParentInstaller::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DefaultGameObjectParentInstaller/DefaultParentObjectDestroyer
#include "Zenject/DefaultGameObjectParentInstaller_DefaultParentObjectDestroyer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.DefaultGameObjectParentInstaller/DefaultParentObjectDestroyer.Dispose
void Zenject::DefaultGameObjectParentInstaller::DefaultParentObjectDestroyer::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DefaultGameObjectParentInstaller::DefaultParentObjectDestroyer::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposeBlock
#include "Zenject/DisposeBlock.hpp"
// Including type: Zenject.StaticMemoryPool`1
#include "Zenject/StaticMemoryPool_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: Zenject.IDespawnableMemoryPool`1
#include "Zenject/IDespawnableMemoryPool_1.hpp"
// Including type: Zenject.IMemoryPool`1
#include "Zenject/IMemoryPool_1.hpp"
// Including type: Zenject.IMemoryPool`2
#include "Zenject/IMemoryPool_2.hpp"
// Including type: Zenject.IMemoryPool`3
#include "Zenject/IMemoryPool_3.hpp"
// Including type: Zenject.IMemoryPool`4
#include "Zenject/IMemoryPool_4.hpp"
// Including type: Zenject.IMemoryPool`5
#include "Zenject/IMemoryPool_5.hpp"
// Including type: Zenject.IMemoryPool`6
#include "Zenject/IMemoryPool_6.hpp"
// Including type: Zenject.IMemoryPool`7
#include "Zenject/IMemoryPool_7.hpp"
// Including type: Zenject.IMemoryPool`8
#include "Zenject/IMemoryPool_8.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.IMemoryPool
#include "Zenject/IMemoryPool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Zenject.StaticMemoryPool`1<Zenject.DisposeBlock> _pool
Zenject::StaticMemoryPool_1<Zenject::DisposeBlock*>* Zenject::DisposeBlock::_get__pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposeBlock::_get__pool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::StaticMemoryPool_1<Zenject::DisposeBlock*>*>("Zenject", "DisposeBlock", "_pool"));
}
// Autogenerated static field setter
// Set static field: static private readonly Zenject.StaticMemoryPool`1<Zenject.DisposeBlock> _pool
void Zenject::DisposeBlock::_set__pool(Zenject::StaticMemoryPool_1<Zenject::DisposeBlock*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposeBlock::_set__pool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "DisposeBlock", "_pool", value));
}
// Autogenerated method: Zenject.DisposeBlock.OnSpawned
void Zenject::DisposeBlock::OnSpawned(Zenject::DisposeBlock* that) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposeBlock::OnSpawned");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "DisposeBlock", "OnSpawned", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(that)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, that);
}
// Autogenerated method: Zenject.DisposeBlock.OnDespawned
void Zenject::DisposeBlock::OnDespawned(Zenject::DisposeBlock* that) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposeBlock::OnDespawned");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "DisposeBlock", "OnDespawned", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(that)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, that);
}
// Autogenerated method: Zenject.DisposeBlock.LazyInitializeDisposableList
void Zenject::DisposeBlock::LazyInitializeDisposableList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposeBlock::LazyInitializeDisposableList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LazyInitializeDisposableList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DisposeBlock.Add
void Zenject::DisposeBlock::Add(System::IDisposable* disposable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposeBlock::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposable);
}
// Autogenerated method: Zenject.DisposeBlock.Remove
void Zenject::DisposeBlock::Remove(System::IDisposable* disposable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposeBlock::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposable);
}
// Autogenerated method: Zenject.DisposeBlock.Spawn
Zenject::DisposeBlock* Zenject::DisposeBlock::Spawn() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposeBlock::Spawn");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "DisposeBlock", "Spawn", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DisposeBlock*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.DisposeBlock.Dispose
void Zenject::DisposeBlock::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposeBlock::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DisposeBlock..cctor
void Zenject::DisposeBlock::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposeBlock::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "DisposeBlock", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ExecutionOrderInstaller
#include "Zenject/ExecutionOrderInstaller.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ExecutionOrderInstaller.InstallBindings
void Zenject::ExecutionOrderInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ExecutionOrderInstaller::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ProfileBlock
#include "Zenject/ProfileBlock.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xCF14F0
// Autogenerated static field getter
// Get static field: static private System.Text.RegularExpressions.Regex <ProfilePattern>k__BackingField
System::Text::RegularExpressions::Regex* Zenject::ProfileBlock::_get_$ProfilePattern$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProfileBlock::_get_$ProfilePattern$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Text::RegularExpressions::Regex*>("Zenject", "ProfileBlock", "<ProfilePattern>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Text.RegularExpressions.Regex <ProfilePattern>k__BackingField
void Zenject::ProfileBlock::_set_$ProfilePattern$k__BackingField(System::Text::RegularExpressions::Regex* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProfileBlock::_set_$ProfilePattern$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ProfileBlock", "<ProfilePattern>k__BackingField", value));
}
// Autogenerated method: Zenject.ProfileBlock.get_ProfilePattern
System::Text::RegularExpressions::Regex* Zenject::ProfileBlock::get_ProfilePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProfileBlock::get_ProfilePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ProfileBlock", "get_ProfilePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::Regex*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ProfileBlock.set_ProfilePattern
void Zenject::ProfileBlock::set_ProfilePattern(System::Text::RegularExpressions::Regex* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProfileBlock::set_ProfilePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ProfileBlock", "set_ProfilePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Zenject.ProfileBlock.Start
Zenject::ProfileBlock* Zenject::ProfileBlock::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProfileBlock::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ProfileBlock", "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ProfileBlock*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ProfileBlock.Start
Zenject::ProfileBlock* Zenject::ProfileBlock::Start(::Il2CppString* sampleNameFormat, ::Il2CppObject* obj1, ::Il2CppObject* obj2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProfileBlock::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ProfileBlock", "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sampleNameFormat, obj1, obj2)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ProfileBlock*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sampleNameFormat, obj1, obj2);
}
// Autogenerated method: Zenject.ProfileBlock.Start
Zenject::ProfileBlock* Zenject::ProfileBlock::Start(::Il2CppString* sampleNameFormat, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProfileBlock::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ProfileBlock", "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sampleNameFormat, obj)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ProfileBlock*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sampleNameFormat, obj);
}
// Autogenerated method: Zenject.ProfileBlock.Start
Zenject::ProfileBlock* Zenject::ProfileBlock::Start(::Il2CppString* sampleName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProfileBlock::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ProfileBlock", "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sampleName)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ProfileBlock*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sampleName);
}
// Autogenerated method: Zenject.ProfileBlock.Dispose
void Zenject::ProfileBlock::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProfileBlock::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ZenTypeInfoGetter
#include "Zenject/ZenTypeInfoGetter.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ZenTypeInfoGetter.Invoke
Zenject::InjectTypeInfo* Zenject::ZenTypeInfoGetter::Invoke_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenTypeInfoGetter::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectTypeInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenTypeInfoGetter.BeginInvoke
System::IAsyncResult* Zenject::ZenTypeInfoGetter::BeginInvoke_NEW(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenTypeInfoGetter::BeginInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Zenject.ZenTypeInfoGetter.EndInvoke
Zenject::InjectTypeInfo* Zenject::ZenTypeInfoGetter::EndInvoke_NEW(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenTypeInfoGetter::EndInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectTypeInfo*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ReflectionBakingCoverageModes
#include "Zenject/ReflectionBakingCoverageModes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.ReflectionBakingCoverageModes FallbackToDirectReflection
Zenject::ReflectionBakingCoverageModes Zenject::ReflectionBakingCoverageModes::_get_FallbackToDirectReflection() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ReflectionBakingCoverageModes::_get_FallbackToDirectReflection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ReflectionBakingCoverageModes>("Zenject", "ReflectionBakingCoverageModes", "FallbackToDirectReflection"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ReflectionBakingCoverageModes FallbackToDirectReflection
void Zenject::ReflectionBakingCoverageModes::_set_FallbackToDirectReflection(Zenject::ReflectionBakingCoverageModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ReflectionBakingCoverageModes::_set_FallbackToDirectReflection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ReflectionBakingCoverageModes", "FallbackToDirectReflection", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.ReflectionBakingCoverageModes NoCheckAssumeFullCoverage
Zenject::ReflectionBakingCoverageModes Zenject::ReflectionBakingCoverageModes::_get_NoCheckAssumeFullCoverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ReflectionBakingCoverageModes::_get_NoCheckAssumeFullCoverage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ReflectionBakingCoverageModes>("Zenject", "ReflectionBakingCoverageModes", "NoCheckAssumeFullCoverage"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ReflectionBakingCoverageModes NoCheckAssumeFullCoverage
void Zenject::ReflectionBakingCoverageModes::_set_NoCheckAssumeFullCoverage(Zenject::ReflectionBakingCoverageModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ReflectionBakingCoverageModes::_set_NoCheckAssumeFullCoverage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ReflectionBakingCoverageModes", "NoCheckAssumeFullCoverage", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.ReflectionBakingCoverageModes FallbackToDirectReflectionWithWarning
Zenject::ReflectionBakingCoverageModes Zenject::ReflectionBakingCoverageModes::_get_FallbackToDirectReflectionWithWarning() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ReflectionBakingCoverageModes::_get_FallbackToDirectReflectionWithWarning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ReflectionBakingCoverageModes>("Zenject", "ReflectionBakingCoverageModes", "FallbackToDirectReflectionWithWarning"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ReflectionBakingCoverageModes FallbackToDirectReflectionWithWarning
void Zenject::ReflectionBakingCoverageModes::_set_FallbackToDirectReflectionWithWarning(Zenject::ReflectionBakingCoverageModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ReflectionBakingCoverageModes::_set_FallbackToDirectReflectionWithWarning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ReflectionBakingCoverageModes", "FallbackToDirectReflectionWithWarning", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.TypeAnalyzer
#include "Zenject/TypeAnalyzer.hpp"
// Including type: Zenject.TypeAnalyzer/<>c__DisplayClass23_0
#include "Zenject/TypeAnalyzer_--c__DisplayClass23_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Type,Zenject.InjectTypeInfo> _typeInfo
System::Collections::Generic::Dictionary_2<System::Type*, Zenject::InjectTypeInfo*>* Zenject::TypeAnalyzer::_get__typeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::_get__typeInfo");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<System::Type*, Zenject::InjectTypeInfo*>*>("Zenject", "TypeAnalyzer", "_typeInfo")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Type,Zenject.InjectTypeInfo> _typeInfo
void Zenject::TypeAnalyzer::_set__typeInfo(System::Collections::Generic::Dictionary_2<System::Type*, Zenject::InjectTypeInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::_set__typeInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "TypeAnalyzer", "_typeInfo", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Type,System.Boolean> _allowDuringValidation
System::Collections::Generic::Dictionary_2<System::Type*, bool>* Zenject::TypeAnalyzer::_get__allowDuringValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::_get__allowDuringValidation");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<System::Type*, bool>*>("Zenject", "TypeAnalyzer", "_allowDuringValidation")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Type,System.Boolean> _allowDuringValidation
void Zenject::TypeAnalyzer::_set__allowDuringValidation(System::Collections::Generic::Dictionary_2<System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::_set__allowDuringValidation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "TypeAnalyzer", "_allowDuringValidation", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ReflectionBakingGetInjectInfoMethodName
::Il2CppString* Zenject::TypeAnalyzer::_get_ReflectionBakingGetInjectInfoMethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::_get_ReflectionBakingGetInjectInfoMethodName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Zenject", "TypeAnalyzer", "ReflectionBakingGetInjectInfoMethodName"));
}
// Autogenerated static field setter
// Set static field: static public System.String ReflectionBakingGetInjectInfoMethodName
void Zenject::TypeAnalyzer::_set_ReflectionBakingGetInjectInfoMethodName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::_set_ReflectionBakingGetInjectInfoMethodName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "TypeAnalyzer", "ReflectionBakingGetInjectInfoMethodName", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ReflectionBakingFactoryMethodName
::Il2CppString* Zenject::TypeAnalyzer::_get_ReflectionBakingFactoryMethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::_get_ReflectionBakingFactoryMethodName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Zenject", "TypeAnalyzer", "ReflectionBakingFactoryMethodName"));
}
// Autogenerated static field setter
// Set static field: static public System.String ReflectionBakingFactoryMethodName
void Zenject::TypeAnalyzer::_set_ReflectionBakingFactoryMethodName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::_set_ReflectionBakingFactoryMethodName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "TypeAnalyzer", "ReflectionBakingFactoryMethodName", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ReflectionBakingInjectMethodPrefix
::Il2CppString* Zenject::TypeAnalyzer::_get_ReflectionBakingInjectMethodPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::_get_ReflectionBakingInjectMethodPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Zenject", "TypeAnalyzer", "ReflectionBakingInjectMethodPrefix"));
}
// Autogenerated static field setter
// Set static field: static public System.String ReflectionBakingInjectMethodPrefix
void Zenject::TypeAnalyzer::_set_ReflectionBakingInjectMethodPrefix(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::_set_ReflectionBakingInjectMethodPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "TypeAnalyzer", "ReflectionBakingInjectMethodPrefix", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ReflectionBakingFieldSetterPrefix
::Il2CppString* Zenject::TypeAnalyzer::_get_ReflectionBakingFieldSetterPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::_get_ReflectionBakingFieldSetterPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Zenject", "TypeAnalyzer", "ReflectionBakingFieldSetterPrefix"));
}
// Autogenerated static field setter
// Set static field: static public System.String ReflectionBakingFieldSetterPrefix
void Zenject::TypeAnalyzer::_set_ReflectionBakingFieldSetterPrefix(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::_set_ReflectionBakingFieldSetterPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "TypeAnalyzer", "ReflectionBakingFieldSetterPrefix", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ReflectionBakingPropertySetterPrefix
::Il2CppString* Zenject::TypeAnalyzer::_get_ReflectionBakingPropertySetterPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::_get_ReflectionBakingPropertySetterPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Zenject", "TypeAnalyzer", "ReflectionBakingPropertySetterPrefix"));
}
// Autogenerated static field setter
// Set static field: static public System.String ReflectionBakingPropertySetterPrefix
void Zenject::TypeAnalyzer::_set_ReflectionBakingPropertySetterPrefix(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::_set_ReflectionBakingPropertySetterPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "TypeAnalyzer", "ReflectionBakingPropertySetterPrefix", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCF1500
// Autogenerated static field getter
// Get static field: static private Zenject.ReflectionBakingCoverageModes <ReflectionBakingCoverageMode>k__BackingField
Zenject::ReflectionBakingCoverageModes Zenject::TypeAnalyzer::_get_$ReflectionBakingCoverageMode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::_get_$ReflectionBakingCoverageMode$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::ReflectionBakingCoverageModes>("Zenject", "TypeAnalyzer", "<ReflectionBakingCoverageMode>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Zenject.ReflectionBakingCoverageModes <ReflectionBakingCoverageMode>k__BackingField
void Zenject::TypeAnalyzer::_set_$ReflectionBakingCoverageMode$k__BackingField(Zenject::ReflectionBakingCoverageModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::_set_$ReflectionBakingCoverageMode$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "TypeAnalyzer", "<ReflectionBakingCoverageMode>k__BackingField", value));
}
// Autogenerated method: Zenject.TypeAnalyzer.get_ReflectionBakingCoverageMode
Zenject::ReflectionBakingCoverageModes Zenject::TypeAnalyzer::get_ReflectionBakingCoverageMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::get_ReflectionBakingCoverageMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "TypeAnalyzer", "get_ReflectionBakingCoverageMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ReflectionBakingCoverageModes, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.TypeAnalyzer.set_ReflectionBakingCoverageMode
void Zenject::TypeAnalyzer::set_ReflectionBakingCoverageMode(Zenject::ReflectionBakingCoverageModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::set_ReflectionBakingCoverageMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "TypeAnalyzer", "set_ReflectionBakingCoverageMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Zenject.TypeAnalyzer.ShouldAllowDuringValidation
bool Zenject::TypeAnalyzer::ShouldAllowDuringValidation(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::ShouldAllowDuringValidation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "TypeAnalyzer", "ShouldAllowDuringValidation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.TypeAnalyzer.ShouldAllowDuringValidationInternal
bool Zenject::TypeAnalyzer::ShouldAllowDuringValidationInternal(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::ShouldAllowDuringValidationInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "TypeAnalyzer", "ShouldAllowDuringValidationInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.TypeAnalyzer.HasInfo
bool Zenject::TypeAnalyzer::HasInfo(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::HasInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "TypeAnalyzer", "HasInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.TypeAnalyzer.GetInfo
Zenject::InjectTypeInfo* Zenject::TypeAnalyzer::GetInfo(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::GetInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "TypeAnalyzer", "GetInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectTypeInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.TypeAnalyzer.TryGetInfo
Zenject::InjectTypeInfo* Zenject::TypeAnalyzer::TryGetInfo(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::TryGetInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "TypeAnalyzer", "TryGetInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectTypeInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.TypeAnalyzer.GetInfoInternal
Zenject::InjectTypeInfo* Zenject::TypeAnalyzer::GetInfoInternal(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::GetInfoInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "TypeAnalyzer", "GetInfoInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectTypeInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.TypeAnalyzer.ShouldSkipTypeAnalysis
bool Zenject::TypeAnalyzer::ShouldSkipTypeAnalysis(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::ShouldSkipTypeAnalysis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "TypeAnalyzer", "ShouldSkipTypeAnalysis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.TypeAnalyzer.IsStaticType
bool Zenject::TypeAnalyzer::IsStaticType(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::IsStaticType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "TypeAnalyzer", "IsStaticType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.TypeAnalyzer.CreateTypeInfoFromReflection
Zenject::InjectTypeInfo* Zenject::TypeAnalyzer::CreateTypeInfoFromReflection(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::CreateTypeInfoFromReflection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "TypeAnalyzer", "CreateTypeInfoFromReflection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectTypeInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.TypeAnalyzer..cctor
void Zenject::TypeAnalyzer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "TypeAnalyzer", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.TypeAnalyzer/<>c__DisplayClass23_0
#include "Zenject/TypeAnalyzer_--c__DisplayClass23_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo/InjectMemberInfo
#include "Zenject/InjectTypeInfo_InjectMemberInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/InjectFieldInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectFieldInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/InjectPropertyInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectPropertyInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.TypeAnalyzer/<>c__DisplayClass23_0.<CreateTypeInfoFromReflection>b__0
Zenject::InjectTypeInfo::InjectMemberInfo* Zenject::TypeAnalyzer::$$c__DisplayClass23_0::$CreateTypeInfoFromReflection$b__0(Zenject::Internal::ReflectionTypeInfo::InjectFieldInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::$$c__DisplayClass23_0::<CreateTypeInfoFromReflection>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateTypeInfoFromReflection>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectTypeInfo::InjectMemberInfo*, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.TypeAnalyzer/<>c__DisplayClass23_0.<CreateTypeInfoFromReflection>b__1
Zenject::InjectTypeInfo::InjectMemberInfo* Zenject::TypeAnalyzer::$$c__DisplayClass23_0::$CreateTypeInfoFromReflection$b__1(Zenject::Internal::ReflectionTypeInfo::InjectPropertyInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeAnalyzer::$$c__DisplayClass23_0::<CreateTypeInfoFromReflection>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateTypeInfoFromReflection>b__1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectTypeInfo::InjectMemberInfo*, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ValidationUtil
#include "Zenject/ValidationUtil.hpp"
// Including type: Zenject.ValidationUtil/<>c
#include "Zenject/ValidationUtil_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ValidationUtil.CreateDefaultArgs
System::Collections::Generic::List_1<Zenject::TypeValuePair>* Zenject::ValidationUtil::CreateDefaultArgs(::Array<System::Type*>* argTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ValidationUtil::CreateDefaultArgs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ValidationUtil", "CreateDefaultArgs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(argTypes)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<Zenject::TypeValuePair>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, argTypes);
}
// Creating initializer_list -> params proxy for: System.Collections.Generic.List`1<Zenject.TypeValuePair> CreateDefaultArgs(params System.Type[] argTypes)
System::Collections::Generic::List_1<Zenject::TypeValuePair>* Zenject::ValidationUtil::CreateDefaultArgs(std::initializer_list<System::Type*> argTypes) {
  return Zenject::ValidationUtil::CreateDefaultArgs(::Array<System::Type*>::New(argTypes));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ValidationUtil/<>c
#include "Zenject/ValidationUtil_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.ValidationUtil/<>c <>9
Zenject::ValidationUtil::$$c* Zenject::ValidationUtil::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ValidationUtil::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::ValidationUtil::$$c*>("Zenject", "ValidationUtil/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.ValidationUtil/<>c <>9
void Zenject::ValidationUtil::$$c::_set_$$9(Zenject::ValidationUtil::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ValidationUtil::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ValidationUtil/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,Zenject.TypeValuePair> <>9__0_0
System::Func_2<System::Type*, Zenject::TypeValuePair>* Zenject::ValidationUtil::$$c::_get_$$9__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ValidationUtil::$$c::_get_$$9__0_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Type*, Zenject::TypeValuePair>*>("Zenject", "ValidationUtil/<>c", "<>9__0_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,Zenject.TypeValuePair> <>9__0_0
void Zenject::ValidationUtil::$$c::_set_$$9__0_0(System::Func_2<System::Type*, Zenject::TypeValuePair>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ValidationUtil::$$c::_set_$$9__0_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ValidationUtil/<>c", "<>9__0_0", value)));
}
// Autogenerated method: Zenject.ValidationUtil/<>c..cctor
void Zenject::ValidationUtil::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ValidationUtil::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ValidationUtil/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ValidationUtil/<>c.<CreateDefaultArgs>b__0_0
Zenject::TypeValuePair Zenject::ValidationUtil::$$c::$CreateDefaultArgs$b__0_0(System::Type* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ValidationUtil::$$c::<CreateDefaultArgs>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateDefaultArgs>b__0_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<Zenject::TypeValuePair, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ZenAutoInjecter
#include "Zenject/ZenAutoInjecter.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ZenAutoInjecter.get_ContainerSource
Zenject::ZenAutoInjecter::ContainerSources Zenject::ZenAutoInjecter::get_ContainerSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenAutoInjecter::get_ContainerSource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ContainerSource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ZenAutoInjecter::ContainerSources, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenAutoInjecter.set_ContainerSource
void Zenject::ZenAutoInjecter::set_ContainerSource(Zenject::ZenAutoInjecter::ContainerSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenAutoInjecter::set_ContainerSource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_ContainerSource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ZenAutoInjecter.Construct
void Zenject::ZenAutoInjecter::Construct() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenAutoInjecter::Construct");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Construct", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenAutoInjecter.Awake
void Zenject::ZenAutoInjecter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenAutoInjecter::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenAutoInjecter.LookupContainer
Zenject::DiContainer* Zenject::ZenAutoInjecter::LookupContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenAutoInjecter::LookupContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LookupContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenAutoInjecter.GetContainerForCurrentScene
Zenject::DiContainer* Zenject::ZenAutoInjecter::GetContainerForCurrentScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenAutoInjecter::GetContainerForCurrentScene");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetContainerForCurrentScene", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ZenAutoInjecter/ContainerSources
#include "Zenject/ZenAutoInjecter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.ZenAutoInjecter/ContainerSources SceneContext
Zenject::ZenAutoInjecter::ContainerSources Zenject::ZenAutoInjecter::ContainerSources::_get_SceneContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenAutoInjecter::ContainerSources::_get_SceneContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ZenAutoInjecter::ContainerSources>("Zenject", "ZenAutoInjecter/ContainerSources", "SceneContext"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ZenAutoInjecter/ContainerSources SceneContext
void Zenject::ZenAutoInjecter::ContainerSources::_set_SceneContext(Zenject::ZenAutoInjecter::ContainerSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenAutoInjecter::ContainerSources::_set_SceneContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ZenAutoInjecter/ContainerSources", "SceneContext", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.ZenAutoInjecter/ContainerSources ProjectContext
Zenject::ZenAutoInjecter::ContainerSources Zenject::ZenAutoInjecter::ContainerSources::_get_ProjectContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenAutoInjecter::ContainerSources::_get_ProjectContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ZenAutoInjecter::ContainerSources>("Zenject", "ZenAutoInjecter/ContainerSources", "ProjectContext"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ZenAutoInjecter/ContainerSources ProjectContext
void Zenject::ZenAutoInjecter::ContainerSources::_set_ProjectContext(Zenject::ZenAutoInjecter::ContainerSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenAutoInjecter::ContainerSources::_set_ProjectContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ZenAutoInjecter/ContainerSources", "ProjectContext", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.ZenAutoInjecter/ContainerSources SearchHierarchy
Zenject::ZenAutoInjecter::ContainerSources Zenject::ZenAutoInjecter::ContainerSources::_get_SearchHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenAutoInjecter::ContainerSources::_get_SearchHierarchy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ZenAutoInjecter::ContainerSources>("Zenject", "ZenAutoInjecter/ContainerSources", "SearchHierarchy"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ZenAutoInjecter/ContainerSources SearchHierarchy
void Zenject::ZenAutoInjecter::ContainerSources::_set_SearchHierarchy(Zenject::ZenAutoInjecter::ContainerSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenAutoInjecter::ContainerSources::_set_SearchHierarchy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ZenAutoInjecter/ContainerSources", "SearchHierarchy", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ZenjectException
#include "Zenject/ZenjectException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.LoadSceneRelationship
#include "Zenject/LoadSceneRelationship.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.LoadSceneRelationship None
Zenject::LoadSceneRelationship Zenject::LoadSceneRelationship::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LoadSceneRelationship::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::LoadSceneRelationship>("Zenject", "LoadSceneRelationship", "None"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.LoadSceneRelationship None
void Zenject::LoadSceneRelationship::_set_None(Zenject::LoadSceneRelationship value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LoadSceneRelationship::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "LoadSceneRelationship", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.LoadSceneRelationship Child
Zenject::LoadSceneRelationship Zenject::LoadSceneRelationship::_get_Child() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LoadSceneRelationship::_get_Child");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::LoadSceneRelationship>("Zenject", "LoadSceneRelationship", "Child"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.LoadSceneRelationship Child
void Zenject::LoadSceneRelationship::_set_Child(Zenject::LoadSceneRelationship value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LoadSceneRelationship::_set_Child");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "LoadSceneRelationship", "Child", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.LoadSceneRelationship Sibling
Zenject::LoadSceneRelationship Zenject::LoadSceneRelationship::_get_Sibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LoadSceneRelationship::_get_Sibling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::LoadSceneRelationship>("Zenject", "LoadSceneRelationship", "Sibling"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.LoadSceneRelationship Sibling
void Zenject::LoadSceneRelationship::_set_Sibling(Zenject::LoadSceneRelationship value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LoadSceneRelationship::_set_Sibling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "LoadSceneRelationship", "Sibling", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ZenjectSceneLoader
#include "Zenject/ZenjectSceneLoader.hpp"
// Including type: Zenject.ProjectKernel
#include "Zenject/ProjectKernel.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.SceneContext
#include "Zenject/SceneContext.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneMode
#include "UnityEngine/SceneManagement/LoadSceneMode.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.LoadSceneRelationship
#include "Zenject/LoadSceneRelationship.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadScene
void Zenject::ZenjectSceneLoader::LoadScene(::Il2CppString* sceneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneName)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sceneName);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadScene
void Zenject::ZenjectSceneLoader::LoadScene(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneMode loadMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneName, loadMode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sceneName, loadMode);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadScene
void Zenject::ZenjectSceneLoader::LoadScene(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneName, loadMode, extraBindings)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sceneName, loadMode, extraBindings);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadScene
void Zenject::ZenjectSceneLoader::LoadScene(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings, Zenject::LoadSceneRelationship containerMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneName, loadMode, extraBindings, containerMode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sceneName, loadMode, extraBindings, containerMode);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadScene
void Zenject::ZenjectSceneLoader::LoadScene(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings, Zenject::LoadSceneRelationship containerMode, System::Action_1<Zenject::DiContainer*>* extraBindingsLate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneName, loadMode, extraBindings, containerMode, extraBindingsLate)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sceneName, loadMode, extraBindings, containerMode, extraBindingsLate);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadSceneAsync
UnityEngine::AsyncOperation* Zenject::ZenjectSceneLoader::LoadSceneAsync(::Il2CppString* sceneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneName)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(this, ___internal__method, sceneName);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadSceneAsync
UnityEngine::AsyncOperation* Zenject::ZenjectSceneLoader::LoadSceneAsync(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneMode loadMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneName, loadMode)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(this, ___internal__method, sceneName, loadMode);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadSceneAsync
UnityEngine::AsyncOperation* Zenject::ZenjectSceneLoader::LoadSceneAsync(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneName, loadMode, extraBindings)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(this, ___internal__method, sceneName, loadMode, extraBindings);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadSceneAsync
UnityEngine::AsyncOperation* Zenject::ZenjectSceneLoader::LoadSceneAsync(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings, Zenject::LoadSceneRelationship containerMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneName, loadMode, extraBindings, containerMode)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(this, ___internal__method, sceneName, loadMode, extraBindings, containerMode);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadSceneAsync
UnityEngine::AsyncOperation* Zenject::ZenjectSceneLoader::LoadSceneAsync(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindingsEarly, System::Action_1<Zenject::DiContainer*>* extraBindings, Zenject::LoadSceneRelationship containerMode, System::Action_1<Zenject::DiContainer*>* extraBindingsLate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneName, loadMode, extraBindingsEarly, extraBindings, containerMode, extraBindingsLate)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(this, ___internal__method, sceneName, loadMode, extraBindingsEarly, extraBindings, containerMode, extraBindingsLate);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.PrepareForLoadScene
void Zenject::ZenjectSceneLoader::PrepareForLoadScene(UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindingsEarly, System::Action_1<Zenject::DiContainer*>* extraBindings, System::Action_1<Zenject::DiContainer*>* extraBindingsLate, Zenject::LoadSceneRelationship containerMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::PrepareForLoadScene");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PrepareForLoadScene", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(loadMode, extraBindingsEarly, extraBindings, extraBindingsLate, containerMode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, loadMode, extraBindingsEarly, extraBindings, extraBindingsLate, containerMode);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadScene
void Zenject::ZenjectSceneLoader::LoadScene(int sceneIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sceneIndex);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadScene
void Zenject::ZenjectSceneLoader::LoadScene(int sceneIndex, UnityEngine::SceneManagement::LoadSceneMode loadMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneIndex, loadMode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sceneIndex, loadMode);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadScene
void Zenject::ZenjectSceneLoader::LoadScene(int sceneIndex, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneIndex, loadMode, extraBindings)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sceneIndex, loadMode, extraBindings);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadScene
void Zenject::ZenjectSceneLoader::LoadScene(int sceneIndex, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings, Zenject::LoadSceneRelationship containerMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneIndex, loadMode, extraBindings, containerMode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sceneIndex, loadMode, extraBindings, containerMode);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadScene
void Zenject::ZenjectSceneLoader::LoadScene(int sceneIndex, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings, Zenject::LoadSceneRelationship containerMode, System::Action_1<Zenject::DiContainer*>* extraBindingsLate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneIndex, loadMode, extraBindings, containerMode, extraBindingsLate)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sceneIndex, loadMode, extraBindings, containerMode, extraBindingsLate);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadSceneAsync
UnityEngine::AsyncOperation* Zenject::ZenjectSceneLoader::LoadSceneAsync(int sceneIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneIndex)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(this, ___internal__method, sceneIndex);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadSceneAsync
UnityEngine::AsyncOperation* Zenject::ZenjectSceneLoader::LoadSceneAsync(int sceneIndex, UnityEngine::SceneManagement::LoadSceneMode loadMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneIndex, loadMode)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(this, ___internal__method, sceneIndex, loadMode);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadSceneAsync
UnityEngine::AsyncOperation* Zenject::ZenjectSceneLoader::LoadSceneAsync(int sceneIndex, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneIndex, loadMode, extraBindings)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(this, ___internal__method, sceneIndex, loadMode, extraBindings);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadSceneAsync
UnityEngine::AsyncOperation* Zenject::ZenjectSceneLoader::LoadSceneAsync(int sceneIndex, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings, Zenject::LoadSceneRelationship containerMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneIndex, loadMode, extraBindings, containerMode)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(this, ___internal__method, sceneIndex, loadMode, extraBindings, containerMode);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadSceneAsync
UnityEngine::AsyncOperation* Zenject::ZenjectSceneLoader::LoadSceneAsync(int sceneIndex, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings, Zenject::LoadSceneRelationship containerMode, System::Action_1<Zenject::DiContainer*>* extraBindingsLate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneIndex, loadMode, extraBindings, containerMode, extraBindingsLate)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(this, ___internal__method, sceneIndex, loadMode, extraBindings, containerMode, extraBindingsLate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ZenjectStateMachineBehaviourAutoInjecter
#include "Zenject/ZenjectStateMachineBehaviourAutoInjecter.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ZenjectStateMachineBehaviourAutoInjecter.Construct
void Zenject::ZenjectStateMachineBehaviourAutoInjecter::Construct(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectStateMachineBehaviourAutoInjecter::Construct");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Construct", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.ZenjectStateMachineBehaviourAutoInjecter.Start
void Zenject::ZenjectStateMachineBehaviourAutoInjecter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectStateMachineBehaviourAutoInjecter::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
