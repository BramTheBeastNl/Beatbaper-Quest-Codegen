// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.AxisElement
#include "System/Xml/Schema/AxisElement.hpp"
// Including type: System.Xml.Schema.DoubleLinkAxis
#include "System/Xml/Schema/DoubleLinkAxis.hpp"
// Including type: System.Xml.Schema.ForwardAxis
#include "System/Xml/Schema/ForwardAxis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.DoubleLinkAxis curNode
System::Xml::Schema::DoubleLinkAxis*& System::Xml::Schema::AxisElement::dyn_curNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AxisElement::dyn_curNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curNode"))->offset;
  return *reinterpret_cast<System::Xml::Schema::DoubleLinkAxis**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 rootDepth
int& System::Xml::Schema::AxisElement::dyn_rootDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AxisElement::dyn_rootDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 curDepth
int& System::Xml::Schema::AxisElement::dyn_curDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AxisElement::dyn_curDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean isMatch
bool& System::Xml::Schema::AxisElement::dyn_isMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AxisElement::dyn_isMatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isMatch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.AxisElement.get_CurNode
System::Xml::Schema::DoubleLinkAxis* System::Xml::Schema::AxisElement::get_CurNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AxisElement::get_CurNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::DoubleLinkAxis*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.AxisElement.SetDepth
void System::Xml::Schema::AxisElement::SetDepth(int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AxisElement::SetDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(depth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, depth);
}
// Autogenerated method: System.Xml.Schema.AxisElement.MoveToParent
void System::Xml::Schema::AxisElement::MoveToParent(int depth, System::Xml::Schema::ForwardAxis* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AxisElement::MoveToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(depth), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, depth, parent);
}
// Autogenerated method: System.Xml.Schema.AxisElement.MoveToChild
bool System::Xml::Schema::AxisElement::MoveToChild(::StringW name, ::StringW URN, int depth, System::Xml::Schema::ForwardAxis* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AxisElement::MoveToChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(URN), ::il2cpp_utils::ExtractType(depth), ::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, URN, depth, parent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.AxisStack
#include "System/Xml/Schema/AxisStack.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.ForwardAxis
#include "System/Xml/Schema/ForwardAxis.hpp"
// Including type: System.Xml.Schema.ActiveAxis
#include "System/Xml/Schema/ActiveAxis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList stack
System::Collections::ArrayList*& System::Xml::Schema::AxisStack::dyn_stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AxisStack::dyn_stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stack"))->offset;
  return *reinterpret_cast<System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ForwardAxis subtree
System::Xml::Schema::ForwardAxis*& System::Xml::Schema::AxisStack::dyn_subtree() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AxisStack::dyn_subtree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subtree"))->offset;
  return *reinterpret_cast<System::Xml::Schema::ForwardAxis**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ActiveAxis parent
System::Xml::Schema::ActiveAxis*& System::Xml::Schema::AxisStack::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AxisStack::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<System::Xml::Schema::ActiveAxis**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.AxisStack.get_Subtree
System::Xml::Schema::ForwardAxis* System::Xml::Schema::AxisStack::get_Subtree() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AxisStack::get_Subtree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Subtree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::ForwardAxis*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.AxisStack.get_Length
int System::Xml::Schema::AxisStack::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AxisStack::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.AxisStack.Push
void System::Xml::Schema::AxisStack::Push(int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AxisStack::Push");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(depth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, depth);
}
// Autogenerated method: System.Xml.Schema.AxisStack.Pop
void System::Xml::Schema::AxisStack::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AxisStack::Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.AxisStack.Equal
bool System::Xml::Schema::AxisStack::Equal(::StringW thisname, ::StringW thisURN, ::StringW name, ::StringW URN) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AxisStack::Equal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "AxisStack", "Equal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisname), ::il2cpp_utils::ExtractType(thisURN), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(URN)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisname, thisURN, name, URN);
}
// Autogenerated method: System.Xml.Schema.AxisStack.MoveToParent
void System::Xml::Schema::AxisStack::MoveToParent(::StringW name, ::StringW URN, int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AxisStack::MoveToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(URN), ::il2cpp_utils::ExtractType(depth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, URN, depth);
}
// Autogenerated method: System.Xml.Schema.AxisStack.MoveToChild
bool System::Xml::Schema::AxisStack::MoveToChild(::StringW name, ::StringW URN, int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AxisStack::MoveToChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(URN), ::il2cpp_utils::ExtractType(depth)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, URN, depth);
}
// Autogenerated method: System.Xml.Schema.AxisStack.MoveToAttribute
bool System::Xml::Schema::AxisStack::MoveToAttribute(::StringW name, ::StringW URN, int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AxisStack::MoveToAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(URN), ::il2cpp_utils::ExtractType(depth)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, URN, depth);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.ActiveAxis
#include "System/Xml/Schema/ActiveAxis.hpp"
// Including type: System.Xml.Schema.Asttree
#include "System/Xml/Schema/Asttree.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentDepth
int& System::Xml::Schema::ActiveAxis::dyn_currentDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ActiveAxis::dyn_currentDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isActive
bool& System::Xml::Schema::ActiveAxis::dyn_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ActiveAxis::dyn_isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.Asttree axisTree
System::Xml::Schema::Asttree*& System::Xml::Schema::ActiveAxis::dyn_axisTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ActiveAxis::dyn_axisTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axisTree"))->offset;
  return *reinterpret_cast<System::Xml::Schema::Asttree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList axisStack
System::Collections::ArrayList*& System::Xml::Schema::ActiveAxis::dyn_axisStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ActiveAxis::dyn_axisStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axisStack"))->offset;
  return *reinterpret_cast<System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.ActiveAxis.get_CurrentDepth
int System::Xml::Schema::ActiveAxis::get_CurrentDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ActiveAxis::get_CurrentDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ActiveAxis.Reactivate
void System::Xml::Schema::ActiveAxis::Reactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ActiveAxis::Reactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ActiveAxis.MoveToStartElement
bool System::Xml::Schema::ActiveAxis::MoveToStartElement(::StringW localname, ::StringW URN) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ActiveAxis::MoveToStartElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localname), ::il2cpp_utils::ExtractType(URN)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, localname, URN);
}
// Autogenerated method: System.Xml.Schema.ActiveAxis.EndElement
bool System::Xml::Schema::ActiveAxis::EndElement(::StringW localname, ::StringW URN) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ActiveAxis::EndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localname), ::il2cpp_utils::ExtractType(URN)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, localname, URN);
}
// Autogenerated method: System.Xml.Schema.ActiveAxis.MoveToAttribute
bool System::Xml::Schema::ActiveAxis::MoveToAttribute(::StringW localname, ::StringW URN) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ActiveAxis::MoveToAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localname), ::il2cpp_utils::ExtractType(URN)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, localname, URN);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.DoubleLinkAxis
#include "System/Xml/Schema/DoubleLinkAxis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: MS.Internal.Xml.XPath.Axis next
MS::Internal::Xml::XPath::Axis*& System::Xml::Schema::DoubleLinkAxis::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DoubleLinkAxis::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<MS::Internal::Xml::XPath::Axis**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.DoubleLinkAxis.get_Next
MS::Internal::Xml::XPath::Axis* System::Xml::Schema::DoubleLinkAxis::get_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DoubleLinkAxis::get_Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::Axis*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DoubleLinkAxis.set_Next
void System::Xml::Schema::DoubleLinkAxis::set_Next(MS::Internal::Xml::XPath::Axis* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DoubleLinkAxis::set_Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.DoubleLinkAxis.ConvertTree
System::Xml::Schema::DoubleLinkAxis* System::Xml::Schema::DoubleLinkAxis::ConvertTree(MS::Internal::Xml::XPath::Axis* axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DoubleLinkAxis::ConvertTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DoubleLinkAxis", "ConvertTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::DoubleLinkAxis*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, axis);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.ForwardAxis
#include "System/Xml/Schema/ForwardAxis.hpp"
// Including type: System.Xml.Schema.DoubleLinkAxis
#include "System/Xml/Schema/DoubleLinkAxis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.DoubleLinkAxis topNode
System::Xml::Schema::DoubleLinkAxis*& System::Xml::Schema::ForwardAxis::dyn_topNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ForwardAxis::dyn_topNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "topNode"))->offset;
  return *reinterpret_cast<System::Xml::Schema::DoubleLinkAxis**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.DoubleLinkAxis rootNode
System::Xml::Schema::DoubleLinkAxis*& System::Xml::Schema::ForwardAxis::dyn_rootNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ForwardAxis::dyn_rootNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootNode"))->offset;
  return *reinterpret_cast<System::Xml::Schema::DoubleLinkAxis**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isAttribute
bool& System::Xml::Schema::ForwardAxis::dyn_isAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ForwardAxis::dyn_isAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isAttribute"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isDss
bool& System::Xml::Schema::ForwardAxis::dyn_isDss() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ForwardAxis::dyn_isDss");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDss"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isSelfAxis
bool& System::Xml::Schema::ForwardAxis::dyn_isSelfAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ForwardAxis::dyn_isSelfAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isSelfAxis"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.ForwardAxis.get_RootNode
System::Xml::Schema::DoubleLinkAxis* System::Xml::Schema::ForwardAxis::get_RootNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ForwardAxis::get_RootNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RootNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::DoubleLinkAxis*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ForwardAxis.get_TopNode
System::Xml::Schema::DoubleLinkAxis* System::Xml::Schema::ForwardAxis::get_TopNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ForwardAxis::get_TopNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TopNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::DoubleLinkAxis*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ForwardAxis.get_IsAttribute
bool System::Xml::Schema::ForwardAxis::get_IsAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ForwardAxis::get_IsAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ForwardAxis.get_IsDss
bool System::Xml::Schema::ForwardAxis::get_IsDss() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ForwardAxis::get_IsDss");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDss", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ForwardAxis.get_IsSelfAxis
bool System::Xml::Schema::ForwardAxis::get_IsSelfAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ForwardAxis::get_IsSelfAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSelfAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Asttree
#include "System/Xml/Schema/Asttree.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
// Including type: MS.Internal.Xml.XPath.Axis
#include "MS/Internal/Xml/XPath/Axis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList fAxisArray
System::Collections::ArrayList*& System::Xml::Schema::Asttree::dyn_fAxisArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Asttree::dyn_fAxisArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fAxisArray"))->offset;
  return *reinterpret_cast<System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String xpathexpr
::StringW& System::Xml::Schema::Asttree::dyn_xpathexpr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Asttree::dyn_xpathexpr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xpathexpr"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isField
bool& System::Xml::Schema::Asttree::dyn_isField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Asttree::dyn_isField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNamespaceManager nsmgr
System::Xml::XmlNamespaceManager*& System::Xml::Schema::Asttree::dyn_nsmgr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Asttree::dyn_nsmgr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nsmgr"))->offset;
  return *reinterpret_cast<System::Xml::XmlNamespaceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Asttree.get_SubtreeArray
System::Collections::ArrayList* System::Xml::Schema::Asttree::get_SubtreeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Asttree::get_SubtreeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SubtreeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Asttree.IsNameTest
bool System::Xml::Schema::Asttree::IsNameTest(MS::Internal::Xml::XPath::Axis* ast) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Asttree::IsNameTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Asttree", "IsNameTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ast)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ast);
}
// Autogenerated method: System.Xml.Schema.Asttree.IsAttribute
bool System::Xml::Schema::Asttree::IsAttribute(MS::Internal::Xml::XPath::Axis* ast) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Asttree::IsAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Asttree", "IsAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ast)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ast);
}
// Autogenerated method: System.Xml.Schema.Asttree.IsDescendantOrSelf
bool System::Xml::Schema::Asttree::IsDescendantOrSelf(MS::Internal::Xml::XPath::Axis* ast) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Asttree::IsDescendantOrSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Asttree", "IsDescendantOrSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ast)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ast);
}
// Autogenerated method: System.Xml.Schema.Asttree.IsSelf
bool System::Xml::Schema::Asttree::IsSelf(MS::Internal::Xml::XPath::Axis* ast) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Asttree::IsSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Asttree", "IsSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ast)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ast);
}
// Autogenerated method: System.Xml.Schema.Asttree.CompileXPath
void System::Xml::Schema::Asttree::CompileXPath(::StringW xPath, bool isField, System::Xml::XmlNamespaceManager* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Asttree::CompileXPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileXPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xPath), ::il2cpp_utils::ExtractType(isField), ::il2cpp_utils::ExtractType(nsmgr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xPath, isField, nsmgr);
}
// Autogenerated method: System.Xml.Schema.Asttree.SetURN
void System::Xml::Schema::Asttree::SetURN(MS::Internal::Xml::XPath::Axis* axis, System::Xml::XmlNamespaceManager* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Asttree::SetURN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetURN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(nsmgr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis, nsmgr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.AutoValidator
#include "System/Xml/Schema/AutoValidator.hpp"
// Including type: System.Xml.ValidationType
#include "System/Xml/ValidationType.hpp"
// Including type: System.Xml.XmlValidatingReaderImpl
#include "System/Xml/XmlValidatingReaderImpl.hpp"
// Including type: System.Xml.Schema.XmlSchemaCollection
#include "System/Xml/Schema/XmlSchemaCollection.hpp"
// Including type: System.Xml.IValidationEventHandling
#include "System/Xml/IValidationEventHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.AutoValidator.DetectValidationType
System::Xml::ValidationType System::Xml::Schema::AutoValidator::DetectValidationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AutoValidator::DetectValidationType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectValidationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::ValidationType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.AutoValidator.get_PreserveWhitespace
bool System::Xml::Schema::AutoValidator::get_PreserveWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AutoValidator::get_PreserveWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PreserveWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.AutoValidator.Validate
void System::Xml::Schema::AutoValidator::Validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AutoValidator::Validate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.AutoValidator.CompleteValidation
void System::Xml::Schema::AutoValidator::CompleteValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AutoValidator::CompleteValidation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.AutoValidator.FindId
::Il2CppObject* System::Xml::Schema::AutoValidator::FindId(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AutoValidator::FindId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.BaseProcessor
#include "System/Xml/Schema/BaseProcessor.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.Schema.SchemaNames
#include "System/Xml/Schema/SchemaNames.hpp"
// Including type: System.Xml.Schema.ValidationEventHandler
#include "System/Xml/Schema/ValidationEventHandler.hpp"
// Including type: System.Xml.Schema.XmlSchemaCompilationSettings
#include "System/Xml/Schema/XmlSchemaCompilationSettings.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectTable
#include "System/Xml/Schema/XmlSchemaObjectTable.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSeverityType
#include "System/Xml/Schema/XmlSeverityType.hpp"
// Including type: System.Xml.Schema.XmlSchemaException
#include "System/Xml/Schema/XmlSchemaException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
System::Xml::XmlNameTable*& System::Xml::Schema::BaseProcessor::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaNames schemaNames
System::Xml::Schema::SchemaNames*& System::Xml::Schema::BaseProcessor::dyn_schemaNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::dyn_schemaNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaNames"))->offset;
  return *reinterpret_cast<System::Xml::Schema::SchemaNames**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ValidationEventHandler eventHandler
System::Xml::Schema::ValidationEventHandler*& System::Xml::Schema::BaseProcessor::dyn_eventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::dyn_eventHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventHandler"))->offset;
  return *reinterpret_cast<System::Xml::Schema::ValidationEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaCompilationSettings compilationSettings
System::Xml::Schema::XmlSchemaCompilationSettings*& System::Xml::Schema::BaseProcessor::dyn_compilationSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::dyn_compilationSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compilationSettings"))->offset;
  return *reinterpret_cast<System::Xml::Schema::XmlSchemaCompilationSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 errorCount
int& System::Xml::Schema::BaseProcessor::dyn_errorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::dyn_errorCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "errorCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String NsXml
::StringW& System::Xml::Schema::BaseProcessor::dyn_NsXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::dyn_NsXml");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NsXml"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.get_NameTable
System::Xml::XmlNameTable* System::Xml::Schema::BaseProcessor::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::get_NameTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.get_SchemaNames
System::Xml::Schema::SchemaNames* System::Xml::Schema::BaseProcessor::get_SchemaNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::get_SchemaNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::SchemaNames*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.get_EventHandler
System::Xml::Schema::ValidationEventHandler* System::Xml::Schema::BaseProcessor::get_EventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::get_EventHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EventHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::ValidationEventHandler*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.get_CompilationSettings
System::Xml::Schema::XmlSchemaCompilationSettings* System::Xml::Schema::BaseProcessor::get_CompilationSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::get_CompilationSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompilationSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaCompilationSettings*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.get_HasErrors
bool System::Xml::Schema::BaseProcessor::get_HasErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::get_HasErrors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasErrors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.AddToTable
void System::Xml::Schema::BaseProcessor::AddToTable(System::Xml::Schema::XmlSchemaObjectTable* table, System::Xml::XmlQualifiedName* qname, System::Xml::Schema::XmlSchemaObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::AddToTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(qname), ::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table, qname, item);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.IsValidAttributeGroupRedefine
bool System::Xml::Schema::BaseProcessor::IsValidAttributeGroupRedefine(System::Xml::Schema::XmlSchemaObject* existingObject, System::Xml::Schema::XmlSchemaObject* item, System::Xml::Schema::XmlSchemaObjectTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::IsValidAttributeGroupRedefine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidAttributeGroupRedefine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(existingObject), ::il2cpp_utils::ExtractType(item), ::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, existingObject, item, table);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.IsValidGroupRedefine
bool System::Xml::Schema::BaseProcessor::IsValidGroupRedefine(System::Xml::Schema::XmlSchemaObject* existingObject, System::Xml::Schema::XmlSchemaObject* item, System::Xml::Schema::XmlSchemaObjectTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::IsValidGroupRedefine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidGroupRedefine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(existingObject), ::il2cpp_utils::ExtractType(item), ::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, existingObject, item, table);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.IsValidTypeRedefine
bool System::Xml::Schema::BaseProcessor::IsValidTypeRedefine(System::Xml::Schema::XmlSchemaObject* existingObject, System::Xml::Schema::XmlSchemaObject* item, System::Xml::Schema::XmlSchemaObjectTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::IsValidTypeRedefine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidTypeRedefine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(existingObject), ::il2cpp_utils::ExtractType(item), ::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, existingObject, item, table);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.SendValidationEvent
void System::Xml::Schema::BaseProcessor::SendValidationEvent(::StringW code, System::Xml::Schema::XmlSchemaObject* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, source);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.SendValidationEvent
void System::Xml::Schema::BaseProcessor::SendValidationEvent(::StringW code, ::StringW msg, System::Xml::Schema::XmlSchemaObject* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, msg, source);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.SendValidationEvent
void System::Xml::Schema::BaseProcessor::SendValidationEvent(::StringW code, ::StringW msg1, ::StringW msg2, System::Xml::Schema::XmlSchemaObject* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(msg1), ::il2cpp_utils::ExtractType(msg2), ::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, msg1, msg2, source);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.SendValidationEvent
void System::Xml::Schema::BaseProcessor::SendValidationEvent(::StringW code, ::ArrayW<::StringW> args, System::Exception* innerException, System::Xml::Schema::XmlSchemaObject* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(innerException), ::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, args, innerException, source);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.SendValidationEvent
void System::Xml::Schema::BaseProcessor::SendValidationEvent(::StringW code, ::StringW msg1, ::StringW msg2, ::StringW sourceUri, int lineNumber, int linePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(msg1), ::il2cpp_utils::ExtractType(msg2), ::il2cpp_utils::ExtractType(sourceUri), ::il2cpp_utils::ExtractType(lineNumber), ::il2cpp_utils::ExtractType(linePosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, msg1, msg2, sourceUri, lineNumber, linePosition);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.SendValidationEvent
void System::Xml::Schema::BaseProcessor::SendValidationEvent(::StringW code, System::Xml::Schema::XmlSchemaObject* source, System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, source, severity);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.SendValidationEvent
void System::Xml::Schema::BaseProcessor::SendValidationEvent(System::Xml::Schema::XmlSchemaException* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.SendValidationEvent
void System::Xml::Schema::BaseProcessor::SendValidationEvent(::StringW code, ::StringW msg, System::Xml::Schema::XmlSchemaObject* source, System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, msg, source, severity);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.SendValidationEvent
void System::Xml::Schema::BaseProcessor::SendValidationEvent(System::Xml::Schema::XmlSchemaException* e, System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e, severity);
}
// Autogenerated method: System.Xml.Schema.BaseProcessor.SendValidationEventNoThrow
void System::Xml::Schema::BaseProcessor::SendValidationEventNoThrow(System::Xml::Schema::XmlSchemaException* e, System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseProcessor::SendValidationEventNoThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEventNoThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e, severity);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.BaseValidator
#include "System/Xml/Schema/BaseValidator.hpp"
// Including type: System.Xml.Schema.XmlSchemaCollection
#include "System/Xml/Schema/XmlSchemaCollection.hpp"
// Including type: System.Xml.IValidationEventHandling
#include "System/Xml/IValidationEventHandling.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.Schema.SchemaNames
#include "System/Xml/Schema/SchemaNames.hpp"
// Including type: System.Xml.PositionInfo
#include "System/Xml/PositionInfo.hpp"
// Including type: System.Xml.XmlResolver
#include "System/Xml/XmlResolver.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Xml.Schema.SchemaInfo
#include "System/Xml/Schema/SchemaInfo.hpp"
// Including type: System.Xml.XmlValidatingReaderImpl
#include "System/Xml/XmlValidatingReaderImpl.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.ValidationState
#include "System/Xml/Schema/ValidationState.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Xml.Schema.ValidationEventHandler
#include "System/Xml/Schema/ValidationEventHandler.hpp"
// Including type: System.Xml.IDtdInfo
#include "System/Xml/IDtdInfo.hpp"
// Including type: System.Xml.Schema.XmlSchemaException
#include "System/Xml/Schema/XmlSchemaException.hpp"
// Including type: System.Xml.Schema.XmlSeverityType
#include "System/Xml/Schema/XmlSeverityType.hpp"
// Including type: System.Xml.ValidationType
#include "System/Xml/ValidationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaCollection schemaCollection
System::Xml::Schema::XmlSchemaCollection*& System::Xml::Schema::BaseValidator::dyn_schemaCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::dyn_schemaCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaCollection"))->offset;
  return *reinterpret_cast<System::Xml::Schema::XmlSchemaCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.IValidationEventHandling eventHandling
System::Xml::IValidationEventHandling*& System::Xml::Schema::BaseValidator::dyn_eventHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::dyn_eventHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventHandling"))->offset;
  return *reinterpret_cast<System::Xml::IValidationEventHandling**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
System::Xml::XmlNameTable*& System::Xml::Schema::BaseValidator::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaNames schemaNames
System::Xml::Schema::SchemaNames*& System::Xml::Schema::BaseValidator::dyn_schemaNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::dyn_schemaNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaNames"))->offset;
  return *reinterpret_cast<System::Xml::Schema::SchemaNames**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.PositionInfo positionInfo
System::Xml::PositionInfo*& System::Xml::Schema::BaseValidator::dyn_positionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::dyn_positionInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionInfo"))->offset;
  return *reinterpret_cast<System::Xml::PositionInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlResolver xmlResolver
System::Xml::XmlResolver*& System::Xml::Schema::BaseValidator::dyn_xmlResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::dyn_xmlResolver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlResolver"))->offset;
  return *reinterpret_cast<System::Xml::XmlResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri baseUri
System::Uri*& System::Xml::Schema::BaseValidator::dyn_baseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::dyn_baseUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseUri"))->offset;
  return *reinterpret_cast<System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.Schema.SchemaInfo schemaInfo
System::Xml::Schema::SchemaInfo*& System::Xml::Schema::BaseValidator::dyn_schemaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::dyn_schemaInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaInfo"))->offset;
  return *reinterpret_cast<System::Xml::Schema::SchemaInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.XmlValidatingReaderImpl reader
System::Xml::XmlValidatingReaderImpl*& System::Xml::Schema::BaseValidator::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::dyn_reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<System::Xml::XmlValidatingReaderImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.XmlQualifiedName elementName
System::Xml::XmlQualifiedName*& System::Xml::Schema::BaseValidator::dyn_elementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::dyn_elementName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementName"))->offset;
  return *reinterpret_cast<System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.Schema.ValidationState context
System::Xml::Schema::ValidationState*& System::Xml::Schema::BaseValidator::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<System::Xml::Schema::ValidationState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Text.StringBuilder textValue
System::Text::StringBuilder*& System::Xml::Schema::BaseValidator::dyn_textValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::dyn_textValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textValue"))->offset;
  return *reinterpret_cast<System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String textString
::StringW& System::Xml::Schema::BaseValidator::dyn_textString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::dyn_textString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean hasSibling
bool& System::Xml::Schema::BaseValidator::dyn_hasSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::dyn_hasSibling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasSibling"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean checkDatatype
bool& System::Xml::Schema::BaseValidator::dyn_checkDatatype() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::dyn_checkDatatype");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkDatatype"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.get_Reader
System::Xml::XmlValidatingReaderImpl* System::Xml::Schema::BaseValidator::get_Reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::get_Reader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Reader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlValidatingReaderImpl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.get_SchemaCollection
System::Xml::Schema::XmlSchemaCollection* System::Xml::Schema::BaseValidator::get_SchemaCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::get_SchemaCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.get_NameTable
System::Xml::XmlNameTable* System::Xml::Schema::BaseValidator::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::get_NameTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.get_SchemaNames
System::Xml::Schema::SchemaNames* System::Xml::Schema::BaseValidator::get_SchemaNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::get_SchemaNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::SchemaNames*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.get_PositionInfo
System::Xml::PositionInfo* System::Xml::Schema::BaseValidator::get_PositionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::get_PositionInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PositionInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::PositionInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.get_XmlResolver
System::Xml::XmlResolver* System::Xml::Schema::BaseValidator::get_XmlResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::get_XmlResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlResolver*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.set_XmlResolver
void System::Xml::Schema::BaseValidator::set_XmlResolver(System::Xml::XmlResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::set_XmlResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_XmlResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.get_BaseUri
System::Uri* System::Xml::Schema::BaseValidator::get_BaseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::get_BaseUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.set_BaseUri
void System::Xml::Schema::BaseValidator::set_BaseUri(System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::set_BaseUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BaseUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.get_EventHandler
System::Xml::Schema::ValidationEventHandler* System::Xml::Schema::BaseValidator::get_EventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::get_EventHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EventHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::ValidationEventHandler*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.get_SchemaInfo
System::Xml::Schema::SchemaInfo* System::Xml::Schema::BaseValidator::get_SchemaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::get_SchemaInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::SchemaInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.set_DtdInfo
void System::Xml::Schema::BaseValidator::set_DtdInfo(System::Xml::IDtdInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::set_DtdInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DtdInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.get_PreserveWhitespace
bool System::Xml::Schema::BaseValidator::get_PreserveWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::get_PreserveWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PreserveWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.Validate
void System::Xml::Schema::BaseValidator::Validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::Validate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.CompleteValidation
void System::Xml::Schema::BaseValidator::CompleteValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::CompleteValidation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.FindId
::Il2CppObject* System::Xml::Schema::BaseValidator::FindId(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::FindId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.ValidateText
void System::Xml::Schema::BaseValidator::ValidateText() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::ValidateText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.ValidateWhitespace
void System::Xml::Schema::BaseValidator::ValidateWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::ValidateWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.SaveTextValue
void System::Xml::Schema::BaseValidator::SaveTextValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::SaveTextValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveTextValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.SendValidationEvent
void System::Xml::Schema::BaseValidator::SendValidationEvent(::StringW code) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.SendValidationEvent
void System::Xml::Schema::BaseValidator::SendValidationEvent(::StringW code, ::ArrayW<::StringW> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, args);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.SendValidationEvent
void System::Xml::Schema::BaseValidator::SendValidationEvent(::StringW code, ::StringW arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, arg);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.SendValidationEvent
void System::Xml::Schema::BaseValidator::SendValidationEvent(System::Xml::Schema::XmlSchemaException* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.SendValidationEvent
void System::Xml::Schema::BaseValidator::SendValidationEvent(::StringW code, ::StringW msg, System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, msg, severity);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.SendValidationEvent
void System::Xml::Schema::BaseValidator::SendValidationEvent(::StringW code, ::ArrayW<::StringW> args, System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, args, severity);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.SendValidationEvent
void System::Xml::Schema::BaseValidator::SendValidationEvent(System::Xml::Schema::XmlSchemaException* e, System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e, severity);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.ProcessEntity
void System::Xml::Schema::BaseValidator::ProcessEntity(System::Xml::Schema::SchemaInfo* sinfo, ::StringW name, ::Il2CppObject* sender, System::Xml::Schema::ValidationEventHandler* eventhandler, ::StringW baseUri, int lineNumber, int linePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::ProcessEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "BaseValidator", "ProcessEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sinfo), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(eventhandler), ::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(lineNumber), ::il2cpp_utils::ExtractType(linePosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sinfo, name, sender, eventhandler, baseUri, lineNumber, linePosition);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.ProcessEntity
void System::Xml::Schema::BaseValidator::ProcessEntity(System::Xml::Schema::SchemaInfo* sinfo, ::StringW name, System::Xml::IValidationEventHandling* eventHandling, ::StringW baseUriStr, int lineNumber, int linePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::ProcessEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "BaseValidator", "ProcessEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sinfo), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(eventHandling), ::il2cpp_utils::ExtractType(baseUriStr), ::il2cpp_utils::ExtractType(lineNumber), ::il2cpp_utils::ExtractType(linePosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sinfo, name, eventHandling, baseUriStr, lineNumber, linePosition);
}
// Autogenerated method: System.Xml.Schema.BaseValidator.CreateInstance
System::Xml::Schema::BaseValidator* System::Xml::Schema::BaseValidator::CreateInstance(System::Xml::ValidationType valType, System::Xml::XmlValidatingReaderImpl* reader, System::Xml::Schema::XmlSchemaCollection* schemaCollection, System::Xml::IValidationEventHandling* eventHandling, bool processIdentityConstraints) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BaseValidator::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "BaseValidator", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valType), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(schemaCollection), ::il2cpp_utils::ExtractType(eventHandling), ::il2cpp_utils::ExtractType(processIdentityConstraints)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::BaseValidator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, valType, reader, schemaCollection, eventHandling, processIdentityConstraints);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
int& System::Xml::Schema::BitSet::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BitSet::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] bits
::ArrayW<uint>& System::Xml::Schema::BitSet::dyn_bits() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BitSet::dyn_bits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bits"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.BitSet.get_Count
int System::Xml::Schema::BitSet::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BitSet::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BitSet.get_Item
bool System::Xml::Schema::BitSet::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BitSet::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.Schema.BitSet.get_IsEmpty
bool System::Xml::Schema::BitSet::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BitSet::get_IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BitSet.Clear
void System::Xml::Schema::BitSet::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BitSet::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BitSet.Set
void System::Xml::Schema::BitSet::Set(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BitSet::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.Schema.BitSet.Get
bool System::Xml::Schema::BitSet::Get(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BitSet::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.Schema.BitSet.NextSet
int System::Xml::Schema::BitSet::NextSet(int startFrom) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BitSet::NextSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startFrom)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startFrom);
}
// Autogenerated method: System.Xml.Schema.BitSet.And
void System::Xml::Schema::BitSet::And(System::Xml::Schema::BitSet* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BitSet::And");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "And", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.Schema.BitSet.Or
void System::Xml::Schema::BitSet::Or(System::Xml::Schema::BitSet* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BitSet::Or");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Or", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.Schema.BitSet.Clone
System::Xml::Schema::BitSet* System::Xml::Schema::BitSet::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BitSet::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::BitSet*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BitSet.Intersects
bool System::Xml::Schema::BitSet::Intersects(System::Xml::Schema::BitSet* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BitSet::Intersects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Intersects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.Schema.BitSet.Subscript
int System::Xml::Schema::BitSet::Subscript(int bitIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BitSet::Subscript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Subscript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bitIndex);
}
// Autogenerated method: System.Xml.Schema.BitSet.EnsureLength
void System::Xml::Schema::BitSet::EnsureLength(int nRequiredLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BitSet::EnsureLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nRequiredLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nRequiredLength);
}
// Autogenerated method: System.Xml.Schema.BitSet.GetHashCode
int System::Xml::Schema::BitSet::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BitSet::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BitSet.Equals
bool System::Xml::Schema::BitSet::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::BitSet::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.ChameleonKey
#include "System/Xml/Schema/ChameleonKey.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String targetNS
::StringW& System::Xml::Schema::ChameleonKey::dyn_targetNS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ChameleonKey::dyn_targetNS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetNS"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Uri chameleonLocation
System::Uri*& System::Xml::Schema::ChameleonKey::dyn_chameleonLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ChameleonKey::dyn_chameleonLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chameleonLocation"))->offset;
  return *reinterpret_cast<System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.XmlSchema originalSchema
System::Xml::Schema::XmlSchema*& System::Xml::Schema::ChameleonKey::dyn_originalSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ChameleonKey::dyn_originalSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalSchema"))->offset;
  return *reinterpret_cast<System::Xml::Schema::XmlSchema**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hashCode
int& System::Xml::Schema::ChameleonKey::dyn_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ChameleonKey::dyn_hashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.ChameleonKey.GetHashCode
int System::Xml::Schema::ChameleonKey::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ChameleonKey::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ChameleonKey.Equals
bool System::Xml::Schema::ChameleonKey::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ChameleonKey::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.CompiledIdentityConstraint
#include "System/Xml/Schema/CompiledIdentityConstraint.hpp"
// Including type: System.Xml.Schema.Asttree
#include "System/Xml/Schema/Asttree.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaIdentityConstraint
#include "System/Xml/Schema/XmlSchemaIdentityConstraint.hpp"
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.CompiledIdentityConstraint Empty
System::Xml::Schema::CompiledIdentityConstraint* System::Xml::Schema::CompiledIdentityConstraint::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::CompiledIdentityConstraint::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::CompiledIdentityConstraint*>("System.Xml.Schema", "CompiledIdentityConstraint", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.CompiledIdentityConstraint Empty
void System::Xml::Schema::CompiledIdentityConstraint::_set_Empty(System::Xml::Schema::CompiledIdentityConstraint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::CompiledIdentityConstraint::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "CompiledIdentityConstraint", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlQualifiedName name
System::Xml::XmlQualifiedName*& System::Xml::Schema::CompiledIdentityConstraint::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::CompiledIdentityConstraint::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.CompiledIdentityConstraint/System.Xml.Schema.ConstraintRole role
System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole& System::Xml::Schema::CompiledIdentityConstraint::dyn_role() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::CompiledIdentityConstraint::dyn_role");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "role"))->offset;
  return *reinterpret_cast<System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.Asttree selector
System::Xml::Schema::Asttree*& System::Xml::Schema::CompiledIdentityConstraint::dyn_selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::CompiledIdentityConstraint::dyn_selector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selector"))->offset;
  return *reinterpret_cast<System::Xml::Schema::Asttree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.Asttree[] fields
::ArrayW<System::Xml::Schema::Asttree*>& System::Xml::Schema::CompiledIdentityConstraint::dyn_fields() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::CompiledIdentityConstraint::dyn_fields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fields"))->offset;
  return *reinterpret_cast<::ArrayW<System::Xml::Schema::Asttree*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlQualifiedName refer
System::Xml::XmlQualifiedName*& System::Xml::Schema::CompiledIdentityConstraint::dyn_refer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::CompiledIdentityConstraint::dyn_refer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "refer"))->offset;
  return *reinterpret_cast<System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.CompiledIdentityConstraint.get_Role
System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole System::Xml::Schema::CompiledIdentityConstraint::get_Role() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::CompiledIdentityConstraint::get_Role");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Role", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.CompiledIdentityConstraint.get_Selector
System::Xml::Schema::Asttree* System::Xml::Schema::CompiledIdentityConstraint::get_Selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::CompiledIdentityConstraint::get_Selector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Selector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::Asttree*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.CompiledIdentityConstraint.get_Fields
::ArrayW<System::Xml::Schema::Asttree*> System::Xml::Schema::CompiledIdentityConstraint::get_Fields() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::CompiledIdentityConstraint::get_Fields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Fields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<System::Xml::Schema::Asttree*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.CompiledIdentityConstraint..cctor
void System::Xml::Schema::CompiledIdentityConstraint::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::CompiledIdentityConstraint::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "CompiledIdentityConstraint", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.CompiledIdentityConstraint/System.Xml.Schema.ConstraintRole
#include "System/Xml/Schema/CompiledIdentityConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.CompiledIdentityConstraint/System.Xml.Schema.ConstraintRole Unique
System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_get_Unique() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_get_Unique");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole>("System.Xml.Schema", "CompiledIdentityConstraint/ConstraintRole", "Unique"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.CompiledIdentityConstraint/System.Xml.Schema.ConstraintRole Unique
void System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_set_Unique(System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_set_Unique");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "CompiledIdentityConstraint/ConstraintRole", "Unique", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.CompiledIdentityConstraint/System.Xml.Schema.ConstraintRole Key
System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_get_Key");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole>("System.Xml.Schema", "CompiledIdentityConstraint/ConstraintRole", "Key"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.CompiledIdentityConstraint/System.Xml.Schema.ConstraintRole Key
void System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_set_Key(System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_set_Key");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "CompiledIdentityConstraint/ConstraintRole", "Key", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.CompiledIdentityConstraint/System.Xml.Schema.ConstraintRole Keyref
System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_get_Keyref() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_get_Keyref");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole>("System.Xml.Schema", "CompiledIdentityConstraint/ConstraintRole", "Keyref"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.CompiledIdentityConstraint/System.Xml.Schema.ConstraintRole Keyref
void System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_set_Keyref(System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::_set_Keyref");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "CompiledIdentityConstraint/ConstraintRole", "Keyref", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::CompiledIdentityConstraint::ConstraintRole::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.ConstraintStruct
#include "System/Xml/Schema/ConstraintStruct.hpp"
// Including type: System.Xml.Schema.CompiledIdentityConstraint
#include "System/Xml/Schema/CompiledIdentityConstraint.hpp"
// Including type: System.Xml.Schema.SelectorActiveAxis
#include "System/Xml/Schema/SelectorActiveAxis.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.CompiledIdentityConstraint constraint
System::Xml::Schema::CompiledIdentityConstraint*& System::Xml::Schema::ConstraintStruct::dyn_constraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ConstraintStruct::dyn_constraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constraint"))->offset;
  return *reinterpret_cast<System::Xml::Schema::CompiledIdentityConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.SelectorActiveAxis axisSelector
System::Xml::Schema::SelectorActiveAxis*& System::Xml::Schema::ConstraintStruct::dyn_axisSelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ConstraintStruct::dyn_axisSelector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axisSelector"))->offset;
  return *reinterpret_cast<System::Xml::Schema::SelectorActiveAxis**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.ArrayList axisFields
System::Collections::ArrayList*& System::Xml::Schema::ConstraintStruct::dyn_axisFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ConstraintStruct::dyn_axisFields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axisFields"))->offset;
  return *reinterpret_cast<System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable qualifiedTable
System::Collections::Hashtable*& System::Xml::Schema::ConstraintStruct::dyn_qualifiedTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ConstraintStruct::dyn_qualifiedTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qualifiedTable"))->offset;
  return *reinterpret_cast<System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable keyrefTable
System::Collections::Hashtable*& System::Xml::Schema::ConstraintStruct::dyn_keyrefTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ConstraintStruct::dyn_keyrefTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyrefTable"))->offset;
  return *reinterpret_cast<System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 tableDim
int& System::Xml::Schema::ConstraintStruct::dyn_tableDim() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ConstraintStruct::dyn_tableDim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tableDim"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.ConstraintStruct.get_TableDim
int System::Xml::Schema::ConstraintStruct::get_TableDim() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ConstraintStruct::get_TableDim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TableDim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.LocatedActiveAxis
#include "System/Xml/Schema/LocatedActiveAxis.hpp"
// Including type: System.Xml.Schema.KeySequence
#include "System/Xml/Schema/KeySequence.hpp"
// Including type: System.Xml.Schema.Asttree
#include "System/Xml/Schema/Asttree.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 column
int& System::Xml::Schema::LocatedActiveAxis::dyn_column() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::LocatedActiveAxis::dyn_column");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "column"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean isMatched
bool& System::Xml::Schema::LocatedActiveAxis::dyn_isMatched() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::LocatedActiveAxis::dyn_isMatched");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isMatched"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.KeySequence Ks
System::Xml::Schema::KeySequence*& System::Xml::Schema::LocatedActiveAxis::dyn_Ks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::LocatedActiveAxis::dyn_Ks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ks"))->offset;
  return *reinterpret_cast<System::Xml::Schema::KeySequence**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.LocatedActiveAxis.get_Column
int System::Xml::Schema::LocatedActiveAxis::get_Column() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::LocatedActiveAxis::get_Column");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Column", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LocatedActiveAxis.Reactivate
void System::Xml::Schema::LocatedActiveAxis::Reactivate(System::Xml::Schema::KeySequence* ks) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::LocatedActiveAxis::Reactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ks);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SelectorActiveAxis
#include "System/Xml/Schema/SelectorActiveAxis.hpp"
// Including type: System.Xml.Schema.ConstraintStruct
#include "System/Xml/Schema/ConstraintStruct.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.Asttree
#include "System/Xml/Schema/Asttree.hpp"
// Including type: System.Xml.Schema.KeySequence
#include "System/Xml/Schema/KeySequence.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ConstraintStruct cs
System::Xml::Schema::ConstraintStruct*& System::Xml::Schema::SelectorActiveAxis::dyn_cs() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SelectorActiveAxis::dyn_cs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cs"))->offset;
  return *reinterpret_cast<System::Xml::Schema::ConstraintStruct**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList KSs
System::Collections::ArrayList*& System::Xml::Schema::SelectorActiveAxis::dyn_KSs() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SelectorActiveAxis::dyn_KSs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KSs"))->offset;
  return *reinterpret_cast<System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 KSpointer
int& System::Xml::Schema::SelectorActiveAxis::dyn_KSpointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SelectorActiveAxis::dyn_KSpointer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KSpointer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SelectorActiveAxis.get_lastDepth
int System::Xml::Schema::SelectorActiveAxis::get_lastDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SelectorActiveAxis::get_lastDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SelectorActiveAxis.PushKS
int System::Xml::Schema::SelectorActiveAxis::PushKS(int errline, int errcol) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SelectorActiveAxis::PushKS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushKS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errline), ::il2cpp_utils::ExtractType(errcol)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, errline, errcol);
}
// Autogenerated method: System.Xml.Schema.SelectorActiveAxis.PopKS
System::Xml::Schema::KeySequence* System::Xml::Schema::SelectorActiveAxis::PopKS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SelectorActiveAxis::PopKS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopKS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::KeySequence*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SelectorActiveAxis.EndElement
bool System::Xml::Schema::SelectorActiveAxis::EndElement(::StringW localname, ::StringW URN) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SelectorActiveAxis::EndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localname), ::il2cpp_utils::ExtractType(URN)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, localname, URN);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.KSStruct
#include "System/Xml/Schema/KSStruct.hpp"
// Including type: System.Xml.Schema.KeySequence
#include "System/Xml/Schema/KeySequence.hpp"
// Including type: System.Xml.Schema.LocatedActiveAxis
#include "System/Xml/Schema/LocatedActiveAxis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 depth
int& System::Xml::Schema::KSStruct::dyn_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::KSStruct::dyn_depth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.KeySequence ks
System::Xml::Schema::KeySequence*& System::Xml::Schema::KSStruct::dyn_ks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::KSStruct::dyn_ks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ks"))->offset;
  return *reinterpret_cast<System::Xml::Schema::KeySequence**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.LocatedActiveAxis[] fields
::ArrayW<System::Xml::Schema::LocatedActiveAxis*>& System::Xml::Schema::KSStruct::dyn_fields() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::KSStruct::dyn_fields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fields"))->offset;
  return *reinterpret_cast<::ArrayW<System::Xml::Schema::LocatedActiveAxis*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.TypedObject
#include "System/Xml/Schema/TypedObject.hpp"
// Including type: System.Xml.Schema.TypedObject/System.Xml.Schema.DecimalStruct
#include "System/Xml/Schema/TypedObject_DecimalStruct.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.TypedObject/System.Xml.Schema.DecimalStruct dstruct
System::Xml::Schema::TypedObject::DecimalStruct*& System::Xml::Schema::TypedObject::dyn_dstruct() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::dyn_dstruct");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dstruct"))->offset;
  return *reinterpret_cast<System::Xml::Schema::TypedObject::DecimalStruct**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object ovalue
::Il2CppObject*& System::Xml::Schema::TypedObject::dyn_ovalue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::dyn_ovalue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ovalue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String svalue
::StringW& System::Xml::Schema::TypedObject::dyn_svalue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::dyn_svalue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "svalue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDatatype xsdtype
System::Xml::Schema::XmlSchemaDatatype*& System::Xml::Schema::TypedObject::dyn_xsdtype() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::dyn_xsdtype");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xsdtype"))->offset;
  return *reinterpret_cast<System::Xml::Schema::XmlSchemaDatatype**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 dim
int& System::Xml::Schema::TypedObject::dyn_dim() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::dyn_dim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dim"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isList
bool& System::Xml::Schema::TypedObject::dyn_isList() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::dyn_isList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isList"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.TypedObject.get_Dim
int System::Xml::Schema::TypedObject::get_Dim() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::get_Dim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Dim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.TypedObject.get_IsList
bool System::Xml::Schema::TypedObject::get_IsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::get_IsList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.TypedObject.get_IsDecimal
bool System::Xml::Schema::TypedObject::get_IsDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::get_IsDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.TypedObject.get_Dvalue
::ArrayW<System::Decimal> System::Xml::Schema::TypedObject::get_Dvalue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::get_Dvalue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Dvalue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<System::Decimal>, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.TypedObject.get_Value
::Il2CppObject* System::Xml::Schema::TypedObject::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.TypedObject.get_Type
System::Xml::Schema::XmlSchemaDatatype* System::Xml::Schema::TypedObject::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaDatatype*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.TypedObject.SetDecimal
void System::Xml::Schema::TypedObject::SetDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::SetDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.TypedObject.ListDValueEquals
bool System::Xml::Schema::TypedObject::ListDValueEquals(System::Xml::Schema::TypedObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::ListDValueEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListDValueEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.Schema.TypedObject.Equals
bool System::Xml::Schema::TypedObject::Equals(System::Xml::Schema::TypedObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.Schema.TypedObject.ToString
::StringW System::Xml::Schema::TypedObject::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.TypedObject/System.Xml.Schema.DecimalStruct
#include "System/Xml/Schema/TypedObject_DecimalStruct.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean isDecimal
bool& System::Xml::Schema::TypedObject::DecimalStruct::dyn_isDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::DecimalStruct::dyn_isDecimal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDecimal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Decimal[] dvalue
::ArrayW<System::Decimal>& System::Xml::Schema::TypedObject::DecimalStruct::dyn_dvalue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::DecimalStruct::dyn_dvalue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dvalue"))->offset;
  return *reinterpret_cast<::ArrayW<System::Decimal>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.TypedObject/System.Xml.Schema.DecimalStruct.get_IsDecimal
bool System::Xml::Schema::TypedObject::DecimalStruct::get_IsDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::DecimalStruct::get_IsDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.TypedObject/System.Xml.Schema.DecimalStruct.set_IsDecimal
void System::Xml::Schema::TypedObject::DecimalStruct::set_IsDecimal(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::DecimalStruct::set_IsDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.TypedObject/System.Xml.Schema.DecimalStruct.get_Dvalue
::ArrayW<System::Decimal> System::Xml::Schema::TypedObject::DecimalStruct::get_Dvalue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::TypedObject::DecimalStruct::get_Dvalue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Dvalue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<System::Decimal>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.KeySequence
#include "System/Xml/Schema/KeySequence.hpp"
// Including type: System.Xml.Schema.TypedObject
#include "System/Xml/Schema/TypedObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.TypedObject[] ks
::ArrayW<System::Xml::Schema::TypedObject*>& System::Xml::Schema::KeySequence::dyn_ks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::KeySequence::dyn_ks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ks"))->offset;
  return *reinterpret_cast<::ArrayW<System::Xml::Schema::TypedObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 dim
int& System::Xml::Schema::KeySequence::dyn_dim() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::KeySequence::dyn_dim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dim"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hashcode
int& System::Xml::Schema::KeySequence::dyn_hashcode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::KeySequence::dyn_hashcode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashcode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 posline
int& System::Xml::Schema::KeySequence::dyn_posline() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::KeySequence::dyn_posline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posline"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 poscol
int& System::Xml::Schema::KeySequence::dyn_poscol() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::KeySequence::dyn_poscol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "poscol"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.KeySequence.get_PosLine
int System::Xml::Schema::KeySequence::get_PosLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::KeySequence::get_PosLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PosLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.KeySequence.get_PosCol
int System::Xml::Schema::KeySequence::get_PosCol() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::KeySequence::get_PosCol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PosCol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.KeySequence.get_Item
::Il2CppObject* System::Xml::Schema::KeySequence::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::KeySequence::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.Schema.KeySequence.set_Item
void System::Xml::Schema::KeySequence::set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::KeySequence::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Xml.Schema.KeySequence.IsQualified
bool System::Xml::Schema::KeySequence::IsQualified() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::KeySequence::IsQualified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsQualified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.KeySequence.GetHashCode
int System::Xml::Schema::KeySequence::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::KeySequence::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.KeySequence.Equals
bool System::Xml::Schema::KeySequence::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::KeySequence::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.Schema.KeySequence.ToString
::StringW System::Xml::Schema::KeySequence::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::KeySequence::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.UpaException
#include "System/Xml/Schema/UpaException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object particle1
::Il2CppObject*& System::Xml::Schema::UpaException::dyn_particle1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::UpaException::dyn_particle1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particle1"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object particle2
::Il2CppObject*& System::Xml::Schema::UpaException::dyn_particle2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::UpaException::dyn_particle2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particle2"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.UpaException.get_Particle1
::Il2CppObject* System::Xml::Schema::UpaException::get_Particle1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::UpaException::get_Particle1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Particle1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.UpaException.get_Particle2
::Il2CppObject* System::Xml::Schema::UpaException::get_Particle2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::UpaException::get_Particle2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Particle2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.NamespaceList
#include "System/Xml/Schema/NamespaceList.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 last
int& System::Xml::Schema::SymbolsDictionary::dyn_last() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SymbolsDictionary::dyn_last");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "last"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable names
System::Collections::Hashtable*& System::Xml::Schema::SymbolsDictionary::dyn_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SymbolsDictionary::dyn_names");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "names"))->offset;
  return *reinterpret_cast<System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable wildcards
System::Collections::Hashtable*& System::Xml::Schema::SymbolsDictionary::dyn_wildcards() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SymbolsDictionary::dyn_wildcards");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wildcards"))->offset;
  return *reinterpret_cast<System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList particles
System::Collections::ArrayList*& System::Xml::Schema::SymbolsDictionary::dyn_particles() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SymbolsDictionary::dyn_particles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particles"))->offset;
  return *reinterpret_cast<System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object particleLast
::Il2CppObject*& System::Xml::Schema::SymbolsDictionary::dyn_particleLast() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SymbolsDictionary::dyn_particleLast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particleLast"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isUpaEnforced
bool& System::Xml::Schema::SymbolsDictionary::dyn_isUpaEnforced() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SymbolsDictionary::dyn_isUpaEnforced");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isUpaEnforced"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.get_Count
int System::Xml::Schema::SymbolsDictionary::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SymbolsDictionary::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.get_IsUpaEnforced
bool System::Xml::Schema::SymbolsDictionary::get_IsUpaEnforced() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SymbolsDictionary::get_IsUpaEnforced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUpaEnforced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.set_IsUpaEnforced
void System::Xml::Schema::SymbolsDictionary::set_IsUpaEnforced(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SymbolsDictionary::set_IsUpaEnforced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsUpaEnforced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.get_Item
int System::Xml::Schema::SymbolsDictionary::get_Item(System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SymbolsDictionary::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.AddName
int System::Xml::Schema::SymbolsDictionary::AddName(System::Xml::XmlQualifiedName* name, ::Il2CppObject* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SymbolsDictionary::AddName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(particle)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name, particle);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.AddNamespaceList
void System::Xml::Schema::SymbolsDictionary::AddNamespaceList(System::Xml::Schema::NamespaceList* list, ::Il2CppObject* particle, bool allowLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SymbolsDictionary::AddNamespaceList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNamespaceList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(particle), ::il2cpp_utils::ExtractType(allowLocal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, list, particle, allowLocal);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.AddWildcard
void System::Xml::Schema::SymbolsDictionary::AddWildcard(::StringW wildcard, ::Il2CppObject* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SymbolsDictionary::AddWildcard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddWildcard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wildcard), ::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wildcard, particle);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.GetNamespaceListSymbols
System::Collections::ICollection* System::Xml::Schema::SymbolsDictionary::GetNamespaceListSymbols(System::Xml::Schema::NamespaceList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SymbolsDictionary::GetNamespaceListSymbols");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNamespaceListSymbols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ICollection*, false>(this, ___internal__method, list);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.Exists
bool System::Xml::Schema::SymbolsDictionary::Exists(System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SymbolsDictionary::Exists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.GetParticle
::Il2CppObject* System::Xml::Schema::SymbolsDictionary::GetParticle(int symbol) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SymbolsDictionary::GetParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(symbol)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, symbol);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.NameOf
::StringW System::Xml::Schema::SymbolsDictionary::NameOf(int symbol) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SymbolsDictionary::NameOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NameOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(symbol)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, symbol);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Position
#include "System/Xml/Schema/Position.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 symbol
int& System::Xml::Schema::Position::dyn_symbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Position::dyn_symbol");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbol"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object particle
::Il2CppObject*& System::Xml::Schema::Position::dyn_particle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Position::dyn_particle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particle"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Position..ctor
// ABORTED elsewhere.  System::Xml::Schema::Position::Position(int symbol, ::Il2CppObject* particle)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.Position
#include "System/Xml/Schema/Position.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList positions
System::Collections::ArrayList*& System::Xml::Schema::Positions::dyn_positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Positions::dyn_positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positions"))->offset;
  return *reinterpret_cast<System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Positions.get_Item
System::Xml::Schema::Position System::Xml::Schema::Positions::get_Item(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Positions::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::Position, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.Schema.Positions.get_Count
int System::Xml::Schema::Positions::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Positions::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Positions.Add
int System::Xml::Schema::Positions::Add(int symbol, ::Il2CppObject* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Positions::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(symbol), ::il2cpp_utils::ExtractType(particle)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, symbol, particle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SyntaxTreeNode
#include "System/Xml/Schema/SyntaxTreeNode.hpp"
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.SyntaxTreeNode.get_IsNullable
bool System::Xml::Schema::SyntaxTreeNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SyntaxTreeNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SyntaxTreeNode.get_IsRangeNode
bool System::Xml::Schema::SyntaxTreeNode::get_IsRangeNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SyntaxTreeNode::get_IsRangeNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRangeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SyntaxTreeNode.ExpandTree
void System::Xml::Schema::SyntaxTreeNode::ExpandTree(System::Xml::Schema::InteriorNode* parent, System::Xml::Schema::SymbolsDictionary* symbols, System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SyntaxTreeNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated method: System.Xml.Schema.SyntaxTreeNode.ConstructPos
void System::Xml::Schema::SyntaxTreeNode::ConstructPos(System::Xml::Schema::BitSet* firstpos, System::Xml::Schema::BitSet* lastpos, ::ArrayW<System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SyntaxTreeNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.LeafNode
#include "System/Xml/Schema/LeafNode.hpp"
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 pos
int& System::Xml::Schema::LeafNode::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::LeafNode::dyn_pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.LeafNode.get_Pos
int System::Xml::Schema::LeafNode::get_Pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::LeafNode::get_Pos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafNode.set_Pos
void System::Xml::Schema::LeafNode::set_Pos(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::LeafNode::set_Pos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.LeafNode.get_IsNullable
bool System::Xml::Schema::LeafNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::LeafNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafNode.ExpandTree
void System::Xml::Schema::LeafNode::ExpandTree(System::Xml::Schema::InteriorNode* parent, System::Xml::Schema::SymbolsDictionary* symbols, System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::LeafNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated method: System.Xml.Schema.LeafNode.ConstructPos
void System::Xml::Schema::LeafNode::ConstructPos(System::Xml::Schema::BitSet* firstpos, System::Xml::Schema::BitSet* lastpos, ::ArrayW<System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::LeafNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.NamespaceListNode
#include "System/Xml/Schema/NamespaceListNode.hpp"
// Including type: System.Xml.Schema.NamespaceList
#include "System/Xml/Schema/NamespaceList.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Xml.Schema.NamespaceList namespaceList
System::Xml::Schema::NamespaceList*& System::Xml::Schema::NamespaceListNode::dyn_namespaceList() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::NamespaceListNode::dyn_namespaceList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceList"))->offset;
  return *reinterpret_cast<System::Xml::Schema::NamespaceList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Object particle
::Il2CppObject*& System::Xml::Schema::NamespaceListNode::dyn_particle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::NamespaceListNode::dyn_particle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particle"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.NamespaceListNode.GetResolvedSymbols
System::Collections::ICollection* System::Xml::Schema::NamespaceListNode::GetResolvedSymbols(System::Xml::Schema::SymbolsDictionary* symbols) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::NamespaceListNode::GetResolvedSymbols");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResolvedSymbols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(symbols)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ICollection*, false>(this, ___internal__method, symbols);
}
// Autogenerated method: System.Xml.Schema.NamespaceListNode.get_IsNullable
bool System::Xml::Schema::NamespaceListNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::NamespaceListNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.NamespaceListNode.ExpandTree
void System::Xml::Schema::NamespaceListNode::ExpandTree(System::Xml::Schema::InteriorNode* parent, System::Xml::Schema::SymbolsDictionary* symbols, System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::NamespaceListNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated method: System.Xml.Schema.NamespaceListNode.ConstructPos
void System::Xml::Schema::NamespaceListNode::ConstructPos(System::Xml::Schema::BitSet* firstpos, System::Xml::Schema::BitSet* lastpos, ::ArrayW<System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::NamespaceListNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SyntaxTreeNode leftChild
System::Xml::Schema::SyntaxTreeNode*& System::Xml::Schema::InteriorNode::dyn_leftChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::InteriorNode::dyn_leftChild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftChild"))->offset;
  return *reinterpret_cast<System::Xml::Schema::SyntaxTreeNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SyntaxTreeNode rightChild
System::Xml::Schema::SyntaxTreeNode*& System::Xml::Schema::InteriorNode::dyn_rightChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::InteriorNode::dyn_rightChild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightChild"))->offset;
  return *reinterpret_cast<System::Xml::Schema::SyntaxTreeNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.get_LeftChild
System::Xml::Schema::SyntaxTreeNode* System::Xml::Schema::InteriorNode::get_LeftChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::InteriorNode::get_LeftChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::SyntaxTreeNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.set_LeftChild
void System::Xml::Schema::InteriorNode::set_LeftChild(System::Xml::Schema::SyntaxTreeNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::InteriorNode::set_LeftChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.get_RightChild
System::Xml::Schema::SyntaxTreeNode* System::Xml::Schema::InteriorNode::get_RightChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::InteriorNode::get_RightChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::SyntaxTreeNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.set_RightChild
void System::Xml::Schema::InteriorNode::set_RightChild(System::Xml::Schema::SyntaxTreeNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::InteriorNode::set_RightChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.ExpandTreeNoRecursive
void System::Xml::Schema::InteriorNode::ExpandTreeNoRecursive(System::Xml::Schema::InteriorNode* parent, System::Xml::Schema::SymbolsDictionary* symbols, System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::InteriorNode::ExpandTreeNoRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTreeNoRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.ExpandTree
void System::Xml::Schema::InteriorNode::ExpandTree(System::Xml::Schema::InteriorNode* parent, System::Xml::Schema::SymbolsDictionary* symbols, System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::InteriorNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SequenceNode
#include "System/Xml/Schema/SequenceNode.hpp"
// Including type: System.Xml.Schema.SequenceNode/System.Xml.Schema.SequenceConstructPosContext
#include "System/Xml/Schema/SequenceNode_SequenceConstructPosContext.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.SequenceNode.get_IsNullable
bool System::Xml::Schema::SequenceNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SequenceNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SequenceNode.ConstructPos
void System::Xml::Schema::SequenceNode::ConstructPos(System::Xml::Schema::BitSet* firstpos, System::Xml::Schema::BitSet* lastpos, ::ArrayW<System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SequenceNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated method: System.Xml.Schema.SequenceNode.ExpandTree
void System::Xml::Schema::SequenceNode::ExpandTree(System::Xml::Schema::InteriorNode* parent, System::Xml::Schema::SymbolsDictionary* symbols, System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SequenceNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SequenceNode/System.Xml.Schema.SequenceConstructPosContext
#include "System/Xml/Schema/SequenceNode_SequenceConstructPosContext.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.SequenceNode this_
System::Xml::Schema::SequenceNode*& System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_this_() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_this_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "this_"))->offset;
  return *reinterpret_cast<System::Xml::Schema::SequenceNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.BitSet firstpos
System::Xml::Schema::BitSet*& System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_firstpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_firstpos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstpos"))->offset;
  return *reinterpret_cast<System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.BitSet lastpos
System::Xml::Schema::BitSet*& System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_lastpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_lastpos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastpos"))->offset;
  return *reinterpret_cast<System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.BitSet lastposLeft
System::Xml::Schema::BitSet*& System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_lastposLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_lastposLeft");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastposLeft"))->offset;
  return *reinterpret_cast<System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.BitSet firstposRight
System::Xml::Schema::BitSet*& System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_firstposRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_firstposRight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstposRight"))->offset;
  return *reinterpret_cast<System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SequenceNode/System.Xml.Schema.SequenceConstructPosContext..ctor
System::Xml::Schema::SequenceNode::SequenceConstructPosContext::SequenceConstructPosContext(System::Xml::Schema::SequenceNode* node, System::Xml::Schema::BitSet* firstpos, System::Xml::Schema::BitSet* lastpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::SequenceNode::SequenceConstructPosContext::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, firstpos, lastpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.ChoiceNode
#include "System/Xml/Schema/ChoiceNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.ChoiceNode.ConstructChildPos
void System::Xml::Schema::ChoiceNode::ConstructChildPos(System::Xml::Schema::SyntaxTreeNode* child, System::Xml::Schema::BitSet* firstpos, System::Xml::Schema::BitSet* lastpos, ::ArrayW<System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ChoiceNode::ConstructChildPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "ChoiceNode", "ConstructChildPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child), ::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, child, firstpos, lastpos, followpos);
}
// Autogenerated method: System.Xml.Schema.ChoiceNode.get_IsNullable
bool System::Xml::Schema::ChoiceNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ChoiceNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ChoiceNode.ConstructPos
void System::Xml::Schema::ChoiceNode::ConstructPos(System::Xml::Schema::BitSet* firstpos, System::Xml::Schema::BitSet* lastpos, ::ArrayW<System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ChoiceNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated method: System.Xml.Schema.ChoiceNode.ExpandTree
void System::Xml::Schema::ChoiceNode::ExpandTree(System::Xml::Schema::InteriorNode* parent, System::Xml::Schema::SymbolsDictionary* symbols, System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ChoiceNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.PlusNode
#include "System/Xml/Schema/PlusNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.PlusNode.get_IsNullable
bool System::Xml::Schema::PlusNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::PlusNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.PlusNode.ConstructPos
void System::Xml::Schema::PlusNode::ConstructPos(System::Xml::Schema::BitSet* firstpos, System::Xml::Schema::BitSet* lastpos, ::ArrayW<System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::PlusNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.QmarkNode
#include "System/Xml/Schema/QmarkNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.QmarkNode.get_IsNullable
bool System::Xml::Schema::QmarkNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::QmarkNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.QmarkNode.ConstructPos
void System::Xml::Schema::QmarkNode::ConstructPos(System::Xml::Schema::BitSet* firstpos, System::Xml::Schema::BitSet* lastpos, ::ArrayW<System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::QmarkNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.StarNode
#include "System/Xml/Schema/StarNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.StarNode.get_IsNullable
bool System::Xml::Schema::StarNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::StarNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.StarNode.ConstructPos
void System::Xml::Schema::StarNode::ConstructPos(System::Xml::Schema::BitSet* firstpos, System::Xml::Schema::BitSet* lastpos, ::ArrayW<System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::StarNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.LeafRangeNode
#include "System/Xml/Schema/LeafRangeNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Decimal min
System::Decimal& System::Xml::Schema::LeafRangeNode::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::LeafRangeNode::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Decimal max
System::Decimal& System::Xml::Schema::LeafRangeNode::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::LeafRangeNode::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet nextIteration
System::Xml::Schema::BitSet*& System::Xml::Schema::LeafRangeNode::dyn_nextIteration() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::LeafRangeNode::dyn_nextIteration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextIteration"))->offset;
  return *reinterpret_cast<System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.LeafRangeNode.get_Max
System::Decimal System::Xml::Schema::LeafRangeNode::get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::LeafRangeNode::get_Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafRangeNode.get_Min
System::Decimal System::Xml::Schema::LeafRangeNode::get_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::LeafRangeNode::get_Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafRangeNode.get_NextIteration
System::Xml::Schema::BitSet* System::Xml::Schema::LeafRangeNode::get_NextIteration() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::LeafRangeNode::get_NextIteration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextIteration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::BitSet*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafRangeNode.set_NextIteration
void System::Xml::Schema::LeafRangeNode::set_NextIteration(System::Xml::Schema::BitSet* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::LeafRangeNode::set_NextIteration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NextIteration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.LeafRangeNode.get_IsRangeNode
bool System::Xml::Schema::LeafRangeNode::get_IsRangeNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::LeafRangeNode::get_IsRangeNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRangeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafRangeNode.ExpandTree
void System::Xml::Schema::LeafRangeNode::ExpandTree(System::Xml::Schema::InteriorNode* parent, System::Xml::Schema::SymbolsDictionary* symbols, System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::LeafRangeNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.ContentValidator
#include "System/Xml/Schema/ContentValidator.hpp"
// Including type: System.Xml.Schema.ValidationState
#include "System/Xml/Schema/ValidationState.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
// Including type: System.Xml.Schema.XmlSchemaParticle
#include "System/Xml/Schema/XmlSchemaParticle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.ContentValidator Empty
System::Xml::Schema::ContentValidator* System::Xml::Schema::ContentValidator::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::ContentValidator*>("System.Xml.Schema", "ContentValidator", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.ContentValidator Empty
void System::Xml::Schema::ContentValidator::_set_Empty(System::Xml::Schema::ContentValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ContentValidator", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.ContentValidator TextOnly
System::Xml::Schema::ContentValidator* System::Xml::Schema::ContentValidator::_get_TextOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::_get_TextOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::ContentValidator*>("System.Xml.Schema", "ContentValidator", "TextOnly"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.ContentValidator TextOnly
void System::Xml::Schema::ContentValidator::_set_TextOnly(System::Xml::Schema::ContentValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::_set_TextOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ContentValidator", "TextOnly", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.ContentValidator Mixed
System::Xml::Schema::ContentValidator* System::Xml::Schema::ContentValidator::_get_Mixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::_get_Mixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::ContentValidator*>("System.Xml.Schema", "ContentValidator", "Mixed"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.ContentValidator Mixed
void System::Xml::Schema::ContentValidator::_set_Mixed(System::Xml::Schema::ContentValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::_set_Mixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ContentValidator", "Mixed", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.ContentValidator Any
System::Xml::Schema::ContentValidator* System::Xml::Schema::ContentValidator::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::ContentValidator*>("System.Xml.Schema", "ContentValidator", "Any"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.ContentValidator Any
void System::Xml::Schema::ContentValidator::_set_Any(System::Xml::Schema::ContentValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ContentValidator", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaContentType contentType
System::Xml::Schema::XmlSchemaContentType& System::Xml::Schema::ContentValidator::dyn_contentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::dyn_contentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentType"))->offset;
  return *reinterpret_cast<System::Xml::Schema::XmlSchemaContentType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isOpen
bool& System::Xml::Schema::ContentValidator::dyn_isOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::dyn_isOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isEmptiable
bool& System::Xml::Schema::ContentValidator::dyn_isEmptiable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::dyn_isEmptiable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isEmptiable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.ContentValidator.get_ContentType
System::Xml::Schema::XmlSchemaContentType System::Xml::Schema::ContentValidator::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::get_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaContentType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ContentValidator.get_PreserveWhitespace
bool System::Xml::Schema::ContentValidator::get_PreserveWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::get_PreserveWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PreserveWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ContentValidator.get_IsEmptiable
bool System::Xml::Schema::ContentValidator::get_IsEmptiable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::get_IsEmptiable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmptiable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ContentValidator.get_IsOpen
bool System::Xml::Schema::ContentValidator::get_IsOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::get_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ContentValidator.set_IsOpen
void System::Xml::Schema::ContentValidator::set_IsOpen(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::set_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.ContentValidator..cctor
void System::Xml::Schema::ContentValidator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "ContentValidator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ContentValidator.InitValidation
void System::Xml::Schema::ContentValidator::InitValidation(System::Xml::Schema::ValidationState* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::InitValidation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Xml.Schema.ContentValidator.ValidateElement
::Il2CppObject* System::Xml::Schema::ContentValidator::ValidateElement(System::Xml::XmlQualifiedName* name, System::Xml::Schema::ValidationState* context, ByRef<int> errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::ValidateElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, context, byref(errorCode));
}
// Autogenerated method: System.Xml.Schema.ContentValidator.CompleteValidation
bool System::Xml::Schema::ContentValidator::CompleteValidation(System::Xml::Schema::ValidationState* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::CompleteValidation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Xml.Schema.ContentValidator.ExpectedElements
System::Collections::ArrayList* System::Xml::Schema::ContentValidator::ExpectedElements(System::Xml::Schema::ValidationState* context, bool isRequiredOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::ExpectedElements");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpectedElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(isRequiredOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ArrayList*, false>(this, ___internal__method, context, isRequiredOnly);
}
// Autogenerated method: System.Xml.Schema.ContentValidator.ExpectedParticles
System::Collections::ArrayList* System::Xml::Schema::ContentValidator::ExpectedParticles(System::Xml::Schema::ValidationState* context, bool isRequiredOnly, System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::ExpectedParticles");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpectedParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(isRequiredOnly), ::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ArrayList*, false>(this, ___internal__method, context, isRequiredOnly, schemaSet);
}
// Autogenerated method: System.Xml.Schema.ContentValidator.AddParticleToExpected
void System::Xml::Schema::ContentValidator::AddParticleToExpected(System::Xml::Schema::XmlSchemaParticle* p, System::Xml::Schema::XmlSchemaSet* schemaSet, System::Collections::ArrayList* particles) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::AddParticleToExpected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "ContentValidator", "AddParticleToExpected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(schemaSet), ::il2cpp_utils::ExtractType(particles)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, schemaSet, particles);
}
// Autogenerated method: System.Xml.Schema.ContentValidator.AddParticleToExpected
void System::Xml::Schema::ContentValidator::AddParticleToExpected(System::Xml::Schema::XmlSchemaParticle* p, System::Xml::Schema::XmlSchemaSet* schemaSet, System::Collections::ArrayList* particles, bool global) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ContentValidator::AddParticleToExpected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "ContentValidator", "AddParticleToExpected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(schemaSet), ::il2cpp_utils::ExtractType(particles), ::il2cpp_utils::ExtractType(global)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, schemaSet, particles, global);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.ParticleContentValidator
#include "System/Xml/Schema/ParticleContentValidator.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
// Including type: System.Xml.Schema.SyntaxTreeNode
#include "System/Xml/Schema/SyntaxTreeNode.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.NamespaceList
#include "System/Xml/Schema/NamespaceList.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Xml.Schema.ValidationState
#include "System/Xml/Schema/ValidationState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SymbolsDictionary symbols
System::Xml::Schema::SymbolsDictionary*& System::Xml::Schema::ParticleContentValidator::dyn_symbols() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::dyn_symbols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbols"))->offset;
  return *reinterpret_cast<System::Xml::Schema::SymbolsDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.Positions positions
System::Xml::Schema::Positions*& System::Xml::Schema::ParticleContentValidator::dyn_positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::dyn_positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positions"))->offset;
  return *reinterpret_cast<System::Xml::Schema::Positions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Stack stack
System::Collections::Stack*& System::Xml::Schema::ParticleContentValidator::dyn_stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::dyn_stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stack"))->offset;
  return *reinterpret_cast<System::Collections::Stack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SyntaxTreeNode contentNode
System::Xml::Schema::SyntaxTreeNode*& System::Xml::Schema::ParticleContentValidator::dyn_contentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::dyn_contentNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentNode"))->offset;
  return *reinterpret_cast<System::Xml::Schema::SyntaxTreeNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isPartial
bool& System::Xml::Schema::ParticleContentValidator::dyn_isPartial() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::dyn_isPartial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isPartial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minMaxNodesCount
int& System::Xml::Schema::ParticleContentValidator::dyn_minMaxNodesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::dyn_minMaxNodesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minMaxNodesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean enableUpaCheck
bool& System::Xml::Schema::ParticleContentValidator::dyn_enableUpaCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::dyn_enableUpaCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableUpaCheck"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.Start
void System::Xml::Schema::ParticleContentValidator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.OpenGroup
void System::Xml::Schema::ParticleContentValidator::OpenGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::OpenGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CloseGroup
void System::Xml::Schema::ParticleContentValidator::CloseGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::CloseGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.Exists
bool System::Xml::Schema::ParticleContentValidator::Exists(System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::Exists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddName
void System::Xml::Schema::ParticleContentValidator::AddName(System::Xml::XmlQualifiedName* name, ::Il2CppObject* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::AddName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, particle);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddNamespaceList
void System::Xml::Schema::ParticleContentValidator::AddNamespaceList(System::Xml::Schema::NamespaceList* namespaceList, ::Il2CppObject* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::AddNamespaceList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNamespaceList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceList), ::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, namespaceList, particle);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddLeafNode
void System::Xml::Schema::ParticleContentValidator::AddLeafNode(System::Xml::Schema::SyntaxTreeNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::AddLeafNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLeafNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddChoice
void System::Xml::Schema::ParticleContentValidator::AddChoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::AddChoice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChoice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddSequence
void System::Xml::Schema::ParticleContentValidator::AddSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::AddSequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddStar
void System::Xml::Schema::ParticleContentValidator::AddStar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::AddStar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddStar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddPlus
void System::Xml::Schema::ParticleContentValidator::AddPlus() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::AddPlus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPlus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddQMark
void System::Xml::Schema::ParticleContentValidator::AddQMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::AddQMark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddQMark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddLeafRange
void System::Xml::Schema::ParticleContentValidator::AddLeafRange(System::Decimal min, System::Decimal max) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::AddLeafRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLeafRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, min, max);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.Closure
void System::Xml::Schema::ParticleContentValidator::Closure(System::Xml::Schema::InteriorNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::Closure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Closure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.Finish
System::Xml::Schema::ContentValidator* System::Xml::Schema::ParticleContentValidator::Finish(bool useDFA) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useDFA)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::ContentValidator*, false>(this, ___internal__method, useDFA);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CalculateTotalFollowposForRangeNodes
::ArrayW<System::Xml::Schema::BitSet*> System::Xml::Schema::ParticleContentValidator::CalculateTotalFollowposForRangeNodes(System::Xml::Schema::BitSet* firstpos, ::ArrayW<System::Xml::Schema::BitSet*> followpos, ByRef<System::Xml::Schema::BitSet*> posWithRangeTerminals) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::CalculateTotalFollowposForRangeNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateTotalFollowposForRangeNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(followpos), ::il2cpp_utils::ExtractIndependentType<System::Xml::Schema::BitSet*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<System::Xml::Schema::BitSet*>, false>(this, ___internal__method, firstpos, followpos, byref(posWithRangeTerminals));
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CheckCMUPAWithLeafRangeNodes
void System::Xml::Schema::ParticleContentValidator::CheckCMUPAWithLeafRangeNodes(System::Xml::Schema::BitSet* curpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::CheckCMUPAWithLeafRangeNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCMUPAWithLeafRangeNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, curpos);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.GetApplicableMinMaxFollowPos
System::Xml::Schema::BitSet* System::Xml::Schema::ParticleContentValidator::GetApplicableMinMaxFollowPos(System::Xml::Schema::BitSet* curpos, System::Xml::Schema::BitSet* posWithRangeTerminals, ::ArrayW<System::Xml::Schema::BitSet*> minmaxFollowPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::GetApplicableMinMaxFollowPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicableMinMaxFollowPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curpos), ::il2cpp_utils::ExtractType(posWithRangeTerminals), ::il2cpp_utils::ExtractType(minmaxFollowPos)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::BitSet*, false>(this, ___internal__method, curpos, posWithRangeTerminals, minmaxFollowPos);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CheckUniqueParticleAttribution
void System::Xml::Schema::ParticleContentValidator::CheckUniqueParticleAttribution(System::Xml::Schema::BitSet* firstpos, ::ArrayW<System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::CheckUniqueParticleAttribution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckUniqueParticleAttribution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, followpos);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CheckUniqueParticleAttribution
void System::Xml::Schema::ParticleContentValidator::CheckUniqueParticleAttribution(System::Xml::Schema::BitSet* curpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::CheckUniqueParticleAttribution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckUniqueParticleAttribution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, curpos);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.BuildTransitionTable
::ArrayW<::ArrayW<int>> System::Xml::Schema::ParticleContentValidator::BuildTransitionTable(System::Xml::Schema::BitSet* firstpos, ::ArrayW<System::Xml::Schema::BitSet*> followpos, int endMarkerPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::BuildTransitionTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildTransitionTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(followpos), ::il2cpp_utils::ExtractType(endMarkerPos)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::ArrayW<int>>, false>(this, ___internal__method, firstpos, followpos, endMarkerPos);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.InitValidation
void System::Xml::Schema::ParticleContentValidator::InitValidation(System::Xml::Schema::ValidationState* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::InitValidation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.ValidateElement
::Il2CppObject* System::Xml::Schema::ParticleContentValidator::ValidateElement(System::Xml::XmlQualifiedName* name, System::Xml::Schema::ValidationState* context, ByRef<int> errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::ValidateElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, context, byref(errorCode));
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CompleteValidation
bool System::Xml::Schema::ParticleContentValidator::CompleteValidation(System::Xml::Schema::ValidationState* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::ParticleContentValidator::CompleteValidation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.DfaContentValidator
#include "System/Xml/Schema/DfaContentValidator.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.ValidationState
#include "System/Xml/Schema/ValidationState.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32[][] transitionTable
::ArrayW<::ArrayW<int>>& System::Xml::Schema::DfaContentValidator::dyn_transitionTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DfaContentValidator::dyn_transitionTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transitionTable"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<int>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SymbolsDictionary symbols
System::Xml::Schema::SymbolsDictionary*& System::Xml::Schema::DfaContentValidator::dyn_symbols() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DfaContentValidator::dyn_symbols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbols"))->offset;
  return *reinterpret_cast<System::Xml::Schema::SymbolsDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.DfaContentValidator.InitValidation
void System::Xml::Schema::DfaContentValidator::InitValidation(System::Xml::Schema::ValidationState* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DfaContentValidator::InitValidation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Xml.Schema.DfaContentValidator.ValidateElement
::Il2CppObject* System::Xml::Schema::DfaContentValidator::ValidateElement(System::Xml::XmlQualifiedName* name, System::Xml::Schema::ValidationState* context, ByRef<int> errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DfaContentValidator::ValidateElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, context, byref(errorCode));
}
// Autogenerated method: System.Xml.Schema.DfaContentValidator.CompleteValidation
bool System::Xml::Schema::DfaContentValidator::CompleteValidation(System::Xml::Schema::ValidationState* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DfaContentValidator::CompleteValidation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Xml.Schema.DfaContentValidator.ExpectedElements
System::Collections::ArrayList* System::Xml::Schema::DfaContentValidator::ExpectedElements(System::Xml::Schema::ValidationState* context, bool isRequiredOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DfaContentValidator::ExpectedElements");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpectedElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(isRequiredOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ArrayList*, false>(this, ___internal__method, context, isRequiredOnly);
}
// Autogenerated method: System.Xml.Schema.DfaContentValidator.ExpectedParticles
System::Collections::ArrayList* System::Xml::Schema::DfaContentValidator::ExpectedParticles(System::Xml::Schema::ValidationState* context, bool isRequiredOnly, System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DfaContentValidator::ExpectedParticles");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpectedParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(isRequiredOnly), ::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ArrayList*, false>(this, ___internal__method, context, isRequiredOnly, schemaSet);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.NfaContentValidator
#include "System/Xml/Schema/NfaContentValidator.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Xml.Schema.ValidationState
#include "System/Xml/Schema/ValidationState.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet firstpos
System::Xml::Schema::BitSet*& System::Xml::Schema::NfaContentValidator::dyn_firstpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::NfaContentValidator::dyn_firstpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstpos"))->offset;
  return *reinterpret_cast<System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet[] followpos
::ArrayW<System::Xml::Schema::BitSet*>& System::Xml::Schema::NfaContentValidator::dyn_followpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::NfaContentValidator::dyn_followpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "followpos"))->offset;
  return *reinterpret_cast<::ArrayW<System::Xml::Schema::BitSet*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SymbolsDictionary symbols
System::Xml::Schema::SymbolsDictionary*& System::Xml::Schema::NfaContentValidator::dyn_symbols() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::NfaContentValidator::dyn_symbols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbols"))->offset;
  return *reinterpret_cast<System::Xml::Schema::SymbolsDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.Positions positions
System::Xml::Schema::Positions*& System::Xml::Schema::NfaContentValidator::dyn_positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::NfaContentValidator::dyn_positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positions"))->offset;
  return *reinterpret_cast<System::Xml::Schema::Positions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endMarkerPos
int& System::Xml::Schema::NfaContentValidator::dyn_endMarkerPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::NfaContentValidator::dyn_endMarkerPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endMarkerPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.NfaContentValidator.InitValidation
void System::Xml::Schema::NfaContentValidator::InitValidation(System::Xml::Schema::ValidationState* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::NfaContentValidator::InitValidation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Xml.Schema.NfaContentValidator.ValidateElement
::Il2CppObject* System::Xml::Schema::NfaContentValidator::ValidateElement(System::Xml::XmlQualifiedName* name, System::Xml::Schema::ValidationState* context, ByRef<int> errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::NfaContentValidator::ValidateElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, context, byref(errorCode));
}
// Autogenerated method: System.Xml.Schema.NfaContentValidator.CompleteValidation
bool System::Xml::Schema::NfaContentValidator::CompleteValidation(System::Xml::Schema::ValidationState* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::NfaContentValidator::CompleteValidation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Xml.Schema.NfaContentValidator.ExpectedElements
System::Collections::ArrayList* System::Xml::Schema::NfaContentValidator::ExpectedElements(System::Xml::Schema::ValidationState* context, bool isRequiredOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::NfaContentValidator::ExpectedElements");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpectedElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(isRequiredOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ArrayList*, false>(this, ___internal__method, context, isRequiredOnly);
}
// Autogenerated method: System.Xml.Schema.NfaContentValidator.ExpectedParticles
System::Collections::ArrayList* System::Xml::Schema::NfaContentValidator::ExpectedParticles(System::Xml::Schema::ValidationState* context, bool isRequiredOnly, System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::NfaContentValidator::ExpectedParticles");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpectedParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(isRequiredOnly), ::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ArrayList*, false>(this, ___internal__method, context, isRequiredOnly, schemaSet);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.RangeContentValidator
#include "System/Xml/Schema/RangeContentValidator.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Xml.Schema.ValidationState
#include "System/Xml/Schema/ValidationState.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet firstpos
System::Xml::Schema::BitSet*& System::Xml::Schema::RangeContentValidator::dyn_firstpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RangeContentValidator::dyn_firstpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstpos"))->offset;
  return *reinterpret_cast<System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet[] followpos
::ArrayW<System::Xml::Schema::BitSet*>& System::Xml::Schema::RangeContentValidator::dyn_followpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RangeContentValidator::dyn_followpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "followpos"))->offset;
  return *reinterpret_cast<::ArrayW<System::Xml::Schema::BitSet*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet positionsWithRangeTerminals
System::Xml::Schema::BitSet*& System::Xml::Schema::RangeContentValidator::dyn_positionsWithRangeTerminals() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RangeContentValidator::dyn_positionsWithRangeTerminals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionsWithRangeTerminals"))->offset;
  return *reinterpret_cast<System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SymbolsDictionary symbols
System::Xml::Schema::SymbolsDictionary*& System::Xml::Schema::RangeContentValidator::dyn_symbols() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RangeContentValidator::dyn_symbols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbols"))->offset;
  return *reinterpret_cast<System::Xml::Schema::SymbolsDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.Positions positions
System::Xml::Schema::Positions*& System::Xml::Schema::RangeContentValidator::dyn_positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RangeContentValidator::dyn_positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positions"))->offset;
  return *reinterpret_cast<System::Xml::Schema::Positions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minMaxNodesCount
int& System::Xml::Schema::RangeContentValidator::dyn_minMaxNodesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RangeContentValidator::dyn_minMaxNodesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minMaxNodesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endMarkerPos
int& System::Xml::Schema::RangeContentValidator::dyn_endMarkerPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RangeContentValidator::dyn_endMarkerPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endMarkerPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.RangeContentValidator.InitValidation
void System::Xml::Schema::RangeContentValidator::InitValidation(System::Xml::Schema::ValidationState* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RangeContentValidator::InitValidation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Xml.Schema.RangeContentValidator.ValidateElement
::Il2CppObject* System::Xml::Schema::RangeContentValidator::ValidateElement(System::Xml::XmlQualifiedName* name, System::Xml::Schema::ValidationState* context, ByRef<int> errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RangeContentValidator::ValidateElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, context, byref(errorCode));
}
// Autogenerated method: System.Xml.Schema.RangeContentValidator.CompleteValidation
bool System::Xml::Schema::RangeContentValidator::CompleteValidation(System::Xml::Schema::ValidationState* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RangeContentValidator::CompleteValidation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Xml.Schema.RangeContentValidator.ExpectedElements
System::Collections::ArrayList* System::Xml::Schema::RangeContentValidator::ExpectedElements(System::Xml::Schema::ValidationState* context, bool isRequiredOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RangeContentValidator::ExpectedElements");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpectedElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(isRequiredOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ArrayList*, false>(this, ___internal__method, context, isRequiredOnly);
}
// Autogenerated method: System.Xml.Schema.RangeContentValidator.ExpectedParticles
System::Collections::ArrayList* System::Xml::Schema::RangeContentValidator::ExpectedParticles(System::Xml::Schema::ValidationState* context, bool isRequiredOnly, System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RangeContentValidator::ExpectedParticles");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpectedParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(isRequiredOnly), ::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ArrayList*, false>(this, ___internal__method, context, isRequiredOnly, schemaSet);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.AllElementsContentValidator
#include "System/Xml/Schema/AllElementsContentValidator.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.ValidationState
#include "System/Xml/Schema/ValidationState.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable elements
System::Collections::Hashtable*& System::Xml::Schema::AllElementsContentValidator::dyn_elements() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AllElementsContentValidator::dyn_elements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elements"))->offset;
  return *reinterpret_cast<System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] particles
::ArrayW<::Il2CppObject*>& System::Xml::Schema::AllElementsContentValidator::dyn_particles() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AllElementsContentValidator::dyn_particles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particles"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet isRequired
System::Xml::Schema::BitSet*& System::Xml::Schema::AllElementsContentValidator::dyn_isRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AllElementsContentValidator::dyn_isRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRequired"))->offset;
  return *reinterpret_cast<System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 countRequired
int& System::Xml::Schema::AllElementsContentValidator::dyn_countRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AllElementsContentValidator::dyn_countRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "countRequired"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.AllElementsContentValidator.AddElement
bool System::Xml::Schema::AllElementsContentValidator::AddElement(System::Xml::XmlQualifiedName* name, ::Il2CppObject* particle, bool isEmptiable) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AllElementsContentValidator::AddElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(particle), ::il2cpp_utils::ExtractType(isEmptiable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, particle, isEmptiable);
}
// Autogenerated method: System.Xml.Schema.AllElementsContentValidator.get_IsEmptiable
bool System::Xml::Schema::AllElementsContentValidator::get_IsEmptiable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AllElementsContentValidator::get_IsEmptiable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmptiable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.AllElementsContentValidator.InitValidation
void System::Xml::Schema::AllElementsContentValidator::InitValidation(System::Xml::Schema::ValidationState* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AllElementsContentValidator::InitValidation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Xml.Schema.AllElementsContentValidator.ValidateElement
::Il2CppObject* System::Xml::Schema::AllElementsContentValidator::ValidateElement(System::Xml::XmlQualifiedName* name, System::Xml::Schema::ValidationState* context, ByRef<int> errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AllElementsContentValidator::ValidateElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, context, byref(errorCode));
}
// Autogenerated method: System.Xml.Schema.AllElementsContentValidator.CompleteValidation
bool System::Xml::Schema::AllElementsContentValidator::CompleteValidation(System::Xml::Schema::ValidationState* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AllElementsContentValidator::CompleteValidation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Xml.Schema.AllElementsContentValidator.ExpectedElements
System::Collections::ArrayList* System::Xml::Schema::AllElementsContentValidator::ExpectedElements(System::Xml::Schema::ValidationState* context, bool isRequiredOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AllElementsContentValidator::ExpectedElements");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpectedElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(isRequiredOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ArrayList*, false>(this, ___internal__method, context, isRequiredOnly);
}
// Autogenerated method: System.Xml.Schema.AllElementsContentValidator.ExpectedParticles
System::Collections::ArrayList* System::Xml::Schema::AllElementsContentValidator::ExpectedParticles(System::Xml::Schema::ValidationState* context, bool isRequiredOnly, System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::AllElementsContentValidator::ExpectedParticles");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpectedParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(isRequiredOnly), ::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ArrayList*, false>(this, ___internal__method, context, isRequiredOnly, schemaSet);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaDatatypeVariety
#include "System/Xml/Schema/XmlSchemaDatatypeVariety.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety Atomic
System::Xml::Schema::XmlSchemaDatatypeVariety System::Xml::Schema::XmlSchemaDatatypeVariety::_get_Atomic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::XmlSchemaDatatypeVariety::_get_Atomic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::XmlSchemaDatatypeVariety>("System.Xml.Schema", "XmlSchemaDatatypeVariety", "Atomic"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety Atomic
void System::Xml::Schema::XmlSchemaDatatypeVariety::_set_Atomic(System::Xml::Schema::XmlSchemaDatatypeVariety value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::XmlSchemaDatatypeVariety::_set_Atomic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaDatatypeVariety", "Atomic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety List
System::Xml::Schema::XmlSchemaDatatypeVariety System::Xml::Schema::XmlSchemaDatatypeVariety::_get_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::XmlSchemaDatatypeVariety::_get_List");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::XmlSchemaDatatypeVariety>("System.Xml.Schema", "XmlSchemaDatatypeVariety", "List"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety List
void System::Xml::Schema::XmlSchemaDatatypeVariety::_set_List(System::Xml::Schema::XmlSchemaDatatypeVariety value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::XmlSchemaDatatypeVariety::_set_List");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaDatatypeVariety", "List", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety Union
System::Xml::Schema::XmlSchemaDatatypeVariety System::Xml::Schema::XmlSchemaDatatypeVariety::_get_Union() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::XmlSchemaDatatypeVariety::_get_Union");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::XmlSchemaDatatypeVariety>("System.Xml.Schema", "XmlSchemaDatatypeVariety", "Union"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety Union
void System::Xml::Schema::XmlSchemaDatatypeVariety::_set_Union(System::Xml::Schema::XmlSchemaDatatypeVariety value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::XmlSchemaDatatypeVariety::_set_Union");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaDatatypeVariety", "Union", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Xml::Schema::XmlSchemaDatatypeVariety::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::XmlSchemaDatatypeVariety::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XsdSimpleValue
#include "System/Xml/Schema/XsdSimpleValue.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType xmlType
System::Xml::Schema::XmlSchemaSimpleType*& System::Xml::Schema::XsdSimpleValue::dyn_xmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::XsdSimpleValue::dyn_xmlType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlType"))->offset;
  return *reinterpret_cast<System::Xml::Schema::XmlSchemaSimpleType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object typedValue
::Il2CppObject*& System::Xml::Schema::XsdSimpleValue::dyn_typedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::XsdSimpleValue::dyn_typedValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typedValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XsdSimpleValue.get_XmlType
System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::XsdSimpleValue::get_XmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::XsdSimpleValue::get_XmlType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaSimpleType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdSimpleValue.get_TypedValue
::Il2CppObject* System::Xml::Schema::XsdSimpleValue::get_TypedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::XsdSimpleValue::get_TypedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags Length
System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_get_Length");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "Length"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags Length
void System::Xml::Schema::RestrictionFlags::_set_Length(System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_set_Length");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "Length", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MinLength
System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MinLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_get_MinLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MinLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MinLength
void System::Xml::Schema::RestrictionFlags::_set_MinLength(System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_set_MinLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MinLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MaxLength
System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_get_MaxLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MaxLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MaxLength
void System::Xml::Schema::RestrictionFlags::_set_MaxLength(System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_set_MaxLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MaxLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags Pattern
System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_get_Pattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "Pattern"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags Pattern
void System::Xml::Schema::RestrictionFlags::_set_Pattern(System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_set_Pattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "Pattern", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags Enumeration
System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_Enumeration() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_get_Enumeration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "Enumeration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags Enumeration
void System::Xml::Schema::RestrictionFlags::_set_Enumeration(System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_set_Enumeration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "Enumeration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags WhiteSpace
System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_WhiteSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_get_WhiteSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "WhiteSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags WhiteSpace
void System::Xml::Schema::RestrictionFlags::_set_WhiteSpace(System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_set_WhiteSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "WhiteSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MaxInclusive
System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MaxInclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_get_MaxInclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MaxInclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MaxInclusive
void System::Xml::Schema::RestrictionFlags::_set_MaxInclusive(System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_set_MaxInclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MaxInclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MaxExclusive
System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MaxExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_get_MaxExclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MaxExclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MaxExclusive
void System::Xml::Schema::RestrictionFlags::_set_MaxExclusive(System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_set_MaxExclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MaxExclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MinInclusive
System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MinInclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_get_MinInclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MinInclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MinInclusive
void System::Xml::Schema::RestrictionFlags::_set_MinInclusive(System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_set_MinInclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MinInclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MinExclusive
System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MinExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_get_MinExclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MinExclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MinExclusive
void System::Xml::Schema::RestrictionFlags::_set_MinExclusive(System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_set_MinExclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MinExclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags TotalDigits
System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_TotalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_get_TotalDigits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "TotalDigits"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags TotalDigits
void System::Xml::Schema::RestrictionFlags::_set_TotalDigits(System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_set_TotalDigits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "TotalDigits", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags FractionDigits
System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_FractionDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_get_FractionDigits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "FractionDigits"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags FractionDigits
void System::Xml::Schema::RestrictionFlags::_set_FractionDigits(System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::_set_FractionDigits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "FractionDigits", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Xml::Schema::RestrictionFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Preserve
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::XmlSchemaWhiteSpace::_get_Preserve() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::XmlSchemaWhiteSpace::_get_Preserve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::XmlSchemaWhiteSpace>("System.Xml.Schema", "XmlSchemaWhiteSpace", "Preserve"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Preserve
void System::Xml::Schema::XmlSchemaWhiteSpace::_set_Preserve(System::Xml::Schema::XmlSchemaWhiteSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::XmlSchemaWhiteSpace::_set_Preserve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaWhiteSpace", "Preserve", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Replace
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::XmlSchemaWhiteSpace::_get_Replace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::XmlSchemaWhiteSpace::_get_Replace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::XmlSchemaWhiteSpace>("System.Xml.Schema", "XmlSchemaWhiteSpace", "Replace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Replace
void System::Xml::Schema::XmlSchemaWhiteSpace::_set_Replace(System::Xml::Schema::XmlSchemaWhiteSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::XmlSchemaWhiteSpace::_set_Replace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaWhiteSpace", "Replace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Collapse
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::XmlSchemaWhiteSpace::_get_Collapse() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::XmlSchemaWhiteSpace::_get_Collapse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::XmlSchemaWhiteSpace>("System.Xml.Schema", "XmlSchemaWhiteSpace", "Collapse"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Collapse
void System::Xml::Schema::XmlSchemaWhiteSpace::_set_Collapse(System::Xml::Schema::XmlSchemaWhiteSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::XmlSchemaWhiteSpace::_set_Collapse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaWhiteSpace", "Collapse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Xml::Schema::XmlSchemaWhiteSpace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::XmlSchemaWhiteSpace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.RestrictionFacets
#include "System/Xml/Schema/RestrictionFacets.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 Length
int& System::Xml::Schema::RestrictionFacets::dyn_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFacets::dyn_Length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 MinLength
int& System::Xml::Schema::RestrictionFacets::dyn_MinLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFacets::dyn_MinLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 MaxLength
int& System::Xml::Schema::RestrictionFacets::dyn_MaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFacets::dyn_MaxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.ArrayList Patterns
System::Collections::ArrayList*& System::Xml::Schema::RestrictionFacets::dyn_Patterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFacets::dyn_Patterns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Patterns"))->offset;
  return *reinterpret_cast<System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.ArrayList Enumeration
System::Collections::ArrayList*& System::Xml::Schema::RestrictionFacets::dyn_Enumeration() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFacets::dyn_Enumeration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Enumeration"))->offset;
  return *reinterpret_cast<System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.XmlSchemaWhiteSpace WhiteSpace
System::Xml::Schema::XmlSchemaWhiteSpace& System::Xml::Schema::RestrictionFacets::dyn_WhiteSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFacets::dyn_WhiteSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhiteSpace"))->offset;
  return *reinterpret_cast<System::Xml::Schema::XmlSchemaWhiteSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object MaxInclusive
::Il2CppObject*& System::Xml::Schema::RestrictionFacets::dyn_MaxInclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFacets::dyn_MaxInclusive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxInclusive"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object MaxExclusive
::Il2CppObject*& System::Xml::Schema::RestrictionFacets::dyn_MaxExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFacets::dyn_MaxExclusive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxExclusive"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object MinInclusive
::Il2CppObject*& System::Xml::Schema::RestrictionFacets::dyn_MinInclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFacets::dyn_MinInclusive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinInclusive"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object MinExclusive
::Il2CppObject*& System::Xml::Schema::RestrictionFacets::dyn_MinExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFacets::dyn_MinExclusive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinExclusive"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 TotalDigits
int& System::Xml::Schema::RestrictionFacets::dyn_TotalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFacets::dyn_TotalDigits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalDigits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 FractionDigits
int& System::Xml::Schema::RestrictionFacets::dyn_FractionDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFacets::dyn_FractionDigits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FractionDigits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.RestrictionFlags Flags
System::Xml::Schema::RestrictionFlags& System::Xml::Schema::RestrictionFacets::dyn_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFacets::dyn_Flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Flags"))->offset;
  return *reinterpret_cast<System::Xml::Schema::RestrictionFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.RestrictionFlags FixedFlags
System::Xml::Schema::RestrictionFlags& System::Xml::Schema::RestrictionFacets::dyn_FixedFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::RestrictionFacets::dyn_FixedFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FixedFlags"))->offset;
  return *reinterpret_cast<System::Xml::Schema::RestrictionFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.DatatypeImplementation
#include "System/Xml/Schema/DatatypeImplementation.hpp"
// Including type: System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap
#include "System/Xml/Schema/DatatypeImplementation_SchemaDatatypeMap.hpp"
// Including type: System.Xml.Schema.RestrictionFacets
#include "System/Xml/Schema/RestrictionFacets.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectTable
#include "System/Xml/Schema/XmlSchemaObjectTable.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable builtinTypes
System::Collections::Hashtable* System::Xml::Schema::DatatypeImplementation::_get_builtinTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_builtinTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("System.Xml.Schema", "DatatypeImplementation", "builtinTypes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable builtinTypes
void System::Xml::Schema::DatatypeImplementation::_set_builtinTypes(System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_builtinTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "builtinTypes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType[] enumToTypeCode
::ArrayW<System::Xml::Schema::XmlSchemaSimpleType*> System::Xml::Schema::DatatypeImplementation::_get_enumToTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_enumToTypeCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Xml::Schema::XmlSchemaSimpleType*>>("System.Xml.Schema", "DatatypeImplementation", "enumToTypeCode"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType[] enumToTypeCode
void System::Xml::Schema::DatatypeImplementation::_set_enumToTypeCode(::ArrayW<System::Xml::Schema::XmlSchemaSimpleType*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_enumToTypeCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "enumToTypeCode", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType anySimpleType
System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_anySimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_anySimpleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "anySimpleType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType anySimpleType
void System::Xml::Schema::DatatypeImplementation::_set_anySimpleType(System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_anySimpleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "anySimpleType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType anyAtomicType
System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_anyAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_anyAtomicType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "anyAtomicType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType anyAtomicType
void System::Xml::Schema::DatatypeImplementation::_set_anyAtomicType(System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_anyAtomicType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "anyAtomicType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType untypedAtomicType
System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_untypedAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_untypedAtomicType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "untypedAtomicType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType untypedAtomicType
void System::Xml::Schema::DatatypeImplementation::_set_untypedAtomicType(System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_untypedAtomicType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "untypedAtomicType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType yearMonthDurationType
System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_yearMonthDurationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_yearMonthDurationType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "yearMonthDurationType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType yearMonthDurationType
void System::Xml::Schema::DatatypeImplementation::_set_yearMonthDurationType(System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_yearMonthDurationType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "yearMonthDurationType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType dayTimeDurationType
System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_dayTimeDurationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_dayTimeDurationType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "dayTimeDurationType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType dayTimeDurationType
void System::Xml::Schema::DatatypeImplementation::_set_dayTimeDurationType(System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_dayTimeDurationType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "dayTimeDurationType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType normalizedStringTypeV1Compat
System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_normalizedStringTypeV1Compat() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_normalizedStringTypeV1Compat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "normalizedStringTypeV1Compat"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType normalizedStringTypeV1Compat
void System::Xml::Schema::DatatypeImplementation::_set_normalizedStringTypeV1Compat(System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_normalizedStringTypeV1Compat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "normalizedStringTypeV1Compat", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType tokenTypeV1Compat
System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_tokenTypeV1Compat() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_tokenTypeV1Compat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "tokenTypeV1Compat"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType tokenTypeV1Compat
void System::Xml::Schema::DatatypeImplementation::_set_tokenTypeV1Compat(System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_tokenTypeV1Compat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "tokenTypeV1Compat", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName QnAnySimpleType
System::Xml::XmlQualifiedName* System::Xml::Schema::DatatypeImplementation::_get_QnAnySimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_QnAnySimpleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlQualifiedName*>("System.Xml.Schema", "DatatypeImplementation", "QnAnySimpleType"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName QnAnySimpleType
void System::Xml::Schema::DatatypeImplementation::_set_QnAnySimpleType(System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_QnAnySimpleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "QnAnySimpleType", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName QnAnyType
System::Xml::XmlQualifiedName* System::Xml::Schema::DatatypeImplementation::_get_QnAnyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_QnAnyType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlQualifiedName*>("System.Xml.Schema", "DatatypeImplementation", "QnAnyType"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName QnAnyType
void System::Xml::Schema::DatatypeImplementation::_set_QnAnyType(System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_QnAnyType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "QnAnyType", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker stringFacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_stringFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_stringFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "stringFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker stringFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_stringFacetsChecker(System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_stringFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "stringFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker miscFacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_miscFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_miscFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "miscFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker miscFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_miscFacetsChecker(System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_miscFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "miscFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker numeric2FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_numeric2FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_numeric2FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "numeric2FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker numeric2FacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_numeric2FacetsChecker(System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_numeric2FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "numeric2FacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker binaryFacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_binaryFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_binaryFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "binaryFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker binaryFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_binaryFacetsChecker(System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_binaryFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "binaryFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker dateTimeFacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_dateTimeFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_dateTimeFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "dateTimeFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker dateTimeFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_dateTimeFacetsChecker(System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_dateTimeFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "dateTimeFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker durationFacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_durationFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_durationFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "durationFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker durationFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_durationFacetsChecker(System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_durationFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "durationFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker listFacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_listFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_listFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "listFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker listFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_listFacetsChecker(System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_listFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "listFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker qnameFacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_qnameFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_qnameFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "qnameFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker qnameFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_qnameFacetsChecker(System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_qnameFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "qnameFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker unionFacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_unionFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_unionFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "unionFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker unionFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_unionFacetsChecker(System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_unionFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "unionFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anySimpleType
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_anySimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_anySimpleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_anySimpleType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anySimpleType
void System::Xml::Schema::DatatypeImplementation::_set_c_anySimpleType(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_anySimpleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_anySimpleType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anyURI
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_anyURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_anyURI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_anyURI"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anyURI
void System::Xml::Schema::DatatypeImplementation::_set_c_anyURI(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_anyURI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_anyURI", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_base64Binary
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_base64Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_base64Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_base64Binary"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_base64Binary
void System::Xml::Schema::DatatypeImplementation::_set_c_base64Binary(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_base64Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_base64Binary", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_boolean
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_boolean"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_boolean
void System::Xml::Schema::DatatypeImplementation::_set_c_boolean(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_boolean", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_byte
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_byte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_byte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_byte"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_byte
void System::Xml::Schema::DatatypeImplementation::_set_c_byte(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_byte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_byte", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_char
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_char() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_char"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_char
void System::Xml::Schema::DatatypeImplementation::_set_c_char(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_char", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_date
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_date() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_date"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_date
void System::Xml::Schema::DatatypeImplementation::_set_c_date(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_date", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTime
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_dateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_dateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_dateTime"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTime
void System::Xml::Schema::DatatypeImplementation::_set_c_dateTime(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_dateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_dateTime", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTimeNoTz
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_dateTimeNoTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_dateTimeNoTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_dateTimeNoTz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTimeNoTz
void System::Xml::Schema::DatatypeImplementation::_set_c_dateTimeNoTz(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_dateTimeNoTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_dateTimeNoTz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTimeTz
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_dateTimeTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_dateTimeTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_dateTimeTz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTimeTz
void System::Xml::Schema::DatatypeImplementation::_set_c_dateTimeTz(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_dateTimeTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_dateTimeTz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_day
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_day() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_day");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_day"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_day
void System::Xml::Schema::DatatypeImplementation::_set_c_day(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_day");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_day", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_decimal
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_decimal"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_decimal
void System::Xml::Schema::DatatypeImplementation::_set_c_decimal(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_decimal", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_double
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_double() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_double"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_double
void System::Xml::Schema::DatatypeImplementation::_set_c_double(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_double", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_doubleXdr
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_doubleXdr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_doubleXdr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_doubleXdr"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_doubleXdr
void System::Xml::Schema::DatatypeImplementation::_set_c_doubleXdr(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_doubleXdr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_doubleXdr", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_duration
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_duration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_duration"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_duration
void System::Xml::Schema::DatatypeImplementation::_set_c_duration(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_duration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_duration", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENTITY
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_ENTITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_ENTITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_ENTITY"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENTITY
void System::Xml::Schema::DatatypeImplementation::_set_c_ENTITY(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_ENTITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_ENTITY", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENTITIES
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_ENTITIES() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_ENTITIES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_ENTITIES"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENTITIES
void System::Xml::Schema::DatatypeImplementation::_set_c_ENTITIES(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_ENTITIES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_ENTITIES", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENUMERATION
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_ENUMERATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_ENUMERATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_ENUMERATION"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENUMERATION
void System::Xml::Schema::DatatypeImplementation::_set_c_ENUMERATION(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_ENUMERATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_ENUMERATION", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_fixed
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_fixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_fixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_fixed"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_fixed
void System::Xml::Schema::DatatypeImplementation::_set_c_fixed(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_fixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_fixed", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_float
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_float() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_float"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_float
void System::Xml::Schema::DatatypeImplementation::_set_c_float(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_float", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_floatXdr
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_floatXdr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_floatXdr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_floatXdr"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_floatXdr
void System::Xml::Schema::DatatypeImplementation::_set_c_floatXdr(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_floatXdr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_floatXdr", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_hexBinary
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_hexBinary() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_hexBinary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_hexBinary"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_hexBinary
void System::Xml::Schema::DatatypeImplementation::_set_c_hexBinary(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_hexBinary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_hexBinary", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ID
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_ID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ID
void System::Xml::Schema::DatatypeImplementation::_set_c_ID(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_ID", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_IDREF
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_IDREF() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_IDREF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_IDREF"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_IDREF
void System::Xml::Schema::DatatypeImplementation::_set_c_IDREF(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_IDREF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_IDREF", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_IDREFS
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_IDREFS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_IDREFS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_IDREFS"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_IDREFS
void System::Xml::Schema::DatatypeImplementation::_set_c_IDREFS(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_IDREFS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_IDREFS", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_int
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_int() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_int"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_int
void System::Xml::Schema::DatatypeImplementation::_set_c_int(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_int", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_integer
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_integer"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_integer
void System::Xml::Schema::DatatypeImplementation::_set_c_integer(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_integer", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_language
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_language");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_language"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_language
void System::Xml::Schema::DatatypeImplementation::_set_c_language(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_language");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_language", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_long
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_long() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_long");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_long"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_long
void System::Xml::Schema::DatatypeImplementation::_set_c_long(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_long");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_long", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_month
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_month() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_month");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_month"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_month
void System::Xml::Schema::DatatypeImplementation::_set_c_month(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_month");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_month", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_monthDay
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_monthDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_monthDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_monthDay"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_monthDay
void System::Xml::Schema::DatatypeImplementation::_set_c_monthDay(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_monthDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_monthDay", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_Name
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_Name"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_Name
void System::Xml::Schema::DatatypeImplementation::_set_c_Name(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_Name", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NCName
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_NCName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_NCName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_NCName"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NCName
void System::Xml::Schema::DatatypeImplementation::_set_c_NCName(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_NCName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_NCName", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_negativeInteger
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_negativeInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_negativeInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_negativeInteger"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_negativeInteger
void System::Xml::Schema::DatatypeImplementation::_set_c_negativeInteger(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_negativeInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_negativeInteger", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NMTOKEN
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_NMTOKEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_NMTOKEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_NMTOKEN"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NMTOKEN
void System::Xml::Schema::DatatypeImplementation::_set_c_NMTOKEN(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_NMTOKEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_NMTOKEN", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NMTOKENS
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_NMTOKENS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_NMTOKENS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_NMTOKENS"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NMTOKENS
void System::Xml::Schema::DatatypeImplementation::_set_c_NMTOKENS(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_NMTOKENS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_NMTOKENS", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_nonNegativeInteger
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_nonNegativeInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_nonNegativeInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_nonNegativeInteger"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_nonNegativeInteger
void System::Xml::Schema::DatatypeImplementation::_set_c_nonNegativeInteger(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_nonNegativeInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_nonNegativeInteger", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_nonPositiveInteger
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_nonPositiveInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_nonPositiveInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_nonPositiveInteger"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_nonPositiveInteger
void System::Xml::Schema::DatatypeImplementation::_set_c_nonPositiveInteger(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_nonPositiveInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_nonPositiveInteger", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_normalizedString
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_normalizedString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_normalizedString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_normalizedString"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_normalizedString
void System::Xml::Schema::DatatypeImplementation::_set_c_normalizedString(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_normalizedString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_normalizedString", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NOTATION
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_NOTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_NOTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_NOTATION"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NOTATION
void System::Xml::Schema::DatatypeImplementation::_set_c_NOTATION(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_NOTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_NOTATION", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_positiveInteger
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_positiveInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_positiveInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_positiveInteger"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_positiveInteger
void System::Xml::Schema::DatatypeImplementation::_set_c_positiveInteger(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_positiveInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_positiveInteger", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_QName
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_QName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_QName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_QName"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_QName
void System::Xml::Schema::DatatypeImplementation::_set_c_QName(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_QName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_QName", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_QNameXdr
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_QNameXdr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_QNameXdr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_QNameXdr"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_QNameXdr
void System::Xml::Schema::DatatypeImplementation::_set_c_QNameXdr(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_QNameXdr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_QNameXdr", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_short
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_short() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_short");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_short"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_short
void System::Xml::Schema::DatatypeImplementation::_set_c_short(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_short");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_short", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_string
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_string() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_string");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_string"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_string
void System::Xml::Schema::DatatypeImplementation::_set_c_string(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_string");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_string", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_time
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_time");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_time"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_time
void System::Xml::Schema::DatatypeImplementation::_set_c_time(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_time");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_time", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_timeNoTz
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_timeNoTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_timeNoTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_timeNoTz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_timeNoTz
void System::Xml::Schema::DatatypeImplementation::_set_c_timeNoTz(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_timeNoTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_timeNoTz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_timeTz
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_timeTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_timeTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_timeTz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_timeTz
void System::Xml::Schema::DatatypeImplementation::_set_c_timeTz(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_timeTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_timeTz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_token
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_token");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_token"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_token
void System::Xml::Schema::DatatypeImplementation::_set_c_token(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_token");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_token", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedByte
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_unsignedByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_unsignedByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_unsignedByte"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedByte
void System::Xml::Schema::DatatypeImplementation::_set_c_unsignedByte(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_unsignedByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_unsignedByte", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedInt
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_unsignedInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_unsignedInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_unsignedInt"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedInt
void System::Xml::Schema::DatatypeImplementation::_set_c_unsignedInt(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_unsignedInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_unsignedInt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedLong
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_unsignedLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_unsignedLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_unsignedLong"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedLong
void System::Xml::Schema::DatatypeImplementation::_set_c_unsignedLong(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_unsignedLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_unsignedLong", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedShort
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_unsignedShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_unsignedShort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_unsignedShort"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedShort
void System::Xml::Schema::DatatypeImplementation::_set_c_unsignedShort(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_unsignedShort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_unsignedShort", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_uuid
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_uuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_uuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_uuid"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_uuid
void System::Xml::Schema::DatatypeImplementation::_set_c_uuid(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_uuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_uuid", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_year
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_year() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_year");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_year"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_year
void System::Xml::Schema::DatatypeImplementation::_set_c_year(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_year");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_year", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_yearMonth
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_yearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_yearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_yearMonth"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_yearMonth
void System::Xml::Schema::DatatypeImplementation::_set_c_yearMonth(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_yearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_yearMonth", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Xml.Schema.DatatypeImplementation c_normalizedStringV1Compat
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_normalizedStringV1Compat() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_normalizedStringV1Compat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_normalizedStringV1Compat"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Xml.Schema.DatatypeImplementation c_normalizedStringV1Compat
void System::Xml::Schema::DatatypeImplementation::_set_c_normalizedStringV1Compat(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_normalizedStringV1Compat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_normalizedStringV1Compat", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Xml.Schema.DatatypeImplementation c_tokenV1Compat
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_tokenV1Compat() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_tokenV1Compat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_tokenV1Compat"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Xml.Schema.DatatypeImplementation c_tokenV1Compat
void System::Xml::Schema::DatatypeImplementation::_set_c_tokenV1Compat(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_tokenV1Compat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_tokenV1Compat", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anyAtomicType
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_anyAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_anyAtomicType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_anyAtomicType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anyAtomicType
void System::Xml::Schema::DatatypeImplementation::_set_c_anyAtomicType(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_anyAtomicType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_anyAtomicType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dayTimeDuration
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_dayTimeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_dayTimeDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_dayTimeDuration"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dayTimeDuration
void System::Xml::Schema::DatatypeImplementation::_set_c_dayTimeDuration(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_dayTimeDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_dayTimeDuration", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_untypedAtomicType
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_untypedAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_untypedAtomicType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_untypedAtomicType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_untypedAtomicType
void System::Xml::Schema::DatatypeImplementation::_set_c_untypedAtomicType(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_untypedAtomicType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_untypedAtomicType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_yearMonthDuration
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_yearMonthDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_yearMonthDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_yearMonthDuration"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_yearMonthDuration
void System::Xml::Schema::DatatypeImplementation::_set_c_yearMonthDuration(System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_yearMonthDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_yearMonthDuration", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation[] c_tokenizedTypes
::ArrayW<System::Xml::Schema::DatatypeImplementation*> System::Xml::Schema::DatatypeImplementation::_get_c_tokenizedTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_tokenizedTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Xml::Schema::DatatypeImplementation*>>("System.Xml.Schema", "DatatypeImplementation", "c_tokenizedTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation[] c_tokenizedTypes
void System::Xml::Schema::DatatypeImplementation::_set_c_tokenizedTypes(::ArrayW<System::Xml::Schema::DatatypeImplementation*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_tokenizedTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_tokenizedTypes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation[] c_tokenizedTypesXsd
::ArrayW<System::Xml::Schema::DatatypeImplementation*> System::Xml::Schema::DatatypeImplementation::_get_c_tokenizedTypesXsd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_tokenizedTypesXsd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Xml::Schema::DatatypeImplementation*>>("System.Xml.Schema", "DatatypeImplementation", "c_tokenizedTypesXsd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation[] c_tokenizedTypesXsd
void System::Xml::Schema::DatatypeImplementation::_set_c_tokenizedTypesXsd(::ArrayW<System::Xml::Schema::DatatypeImplementation*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_tokenizedTypesXsd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_tokenizedTypesXsd", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap[] c_XdrTypes
::ArrayW<System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*> System::Xml::Schema::DatatypeImplementation::_get_c_XdrTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_XdrTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*>>("System.Xml.Schema", "DatatypeImplementation", "c_XdrTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap[] c_XdrTypes
void System::Xml::Schema::DatatypeImplementation::_set_c_XdrTypes(::ArrayW<System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_XdrTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_XdrTypes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap[] c_XsdTypes
::ArrayW<System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*> System::Xml::Schema::DatatypeImplementation::_get_c_XsdTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_get_c_XsdTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*>>("System.Xml.Schema", "DatatypeImplementation", "c_XsdTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap[] c_XsdTypes
void System::Xml::Schema::DatatypeImplementation::_set_c_XsdTypes(::ArrayW<System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::_set_c_XsdTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_XsdTypes", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDatatypeVariety variety
System::Xml::Schema::XmlSchemaDatatypeVariety& System::Xml::Schema::DatatypeImplementation::dyn_variety() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::dyn_variety");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "variety"))->offset;
  return *reinterpret_cast<System::Xml::Schema::XmlSchemaDatatypeVariety*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.RestrictionFacets restriction
System::Xml::Schema::RestrictionFacets*& System::Xml::Schema::DatatypeImplementation::dyn_restriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::dyn_restriction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "restriction"))->offset;
  return *reinterpret_cast<System::Xml::Schema::RestrictionFacets**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.DatatypeImplementation baseType
System::Xml::Schema::DatatypeImplementation*& System::Xml::Schema::DatatypeImplementation::dyn_baseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::dyn_baseType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseType"))->offset;
  return *reinterpret_cast<System::Xml::Schema::DatatypeImplementation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlValueConverter valueConverter
System::Xml::Schema::XmlValueConverter*& System::Xml::Schema::DatatypeImplementation::dyn_valueConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::dyn_valueConverter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueConverter"))->offset;
  return *reinterpret_cast<System::Xml::Schema::XmlValueConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaType parentSchemaType
System::Xml::Schema::XmlSchemaType*& System::Xml::Schema::DatatypeImplementation::dyn_parentSchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::dyn_parentSchemaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentSchemaType"))->offset;
  return *reinterpret_cast<System::Xml::Schema::XmlSchemaType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_AnySimpleType
System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::get_AnySimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::get_AnySimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "get_AnySimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_UntypedAtomicType
System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::get_UntypedAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::get_UntypedAtomicType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "get_UntypedAtomicType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_Base
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::get_Base() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::get_Base");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Base", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::DatatypeImplementation*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_ListValueType
System::Type* System::Xml::Schema::DatatypeImplementation::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_ValidRestrictionFlags
System::Xml::Schema::RestrictionFlags System::Xml::Schema::DatatypeImplementation::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidRestrictionFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation..cctor
void System::Xml::Schema::DatatypeImplementation::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.FromXmlTokenizedType
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::FromXmlTokenizedType(System::Xml::XmlTokenizedType token) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::FromXmlTokenizedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "FromXmlTokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::DatatypeImplementation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.FromXmlTokenizedTypeXsd
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::FromXmlTokenizedTypeXsd(System::Xml::XmlTokenizedType token) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::FromXmlTokenizedTypeXsd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "FromXmlTokenizedTypeXsd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::DatatypeImplementation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.FromXdrName
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::FromXdrName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::FromXdrName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "FromXdrName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::DatatypeImplementation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.FromTypeName
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::FromTypeName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::FromTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "FromTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::DatatypeImplementation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.StartBuiltinType
System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::StartBuiltinType(System::Xml::XmlQualifiedName* qname, System::Xml::Schema::XmlSchemaDatatype* dataType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::StartBuiltinType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "StartBuiltinType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname), ::il2cpp_utils::ExtractType(dataType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qname, dataType);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.FinishBuiltinType
void System::Xml::Schema::DatatypeImplementation::FinishBuiltinType(System::Xml::Schema::XmlSchemaSimpleType* derivedType, System::Xml::Schema::XmlSchemaSimpleType* baseType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::FinishBuiltinType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "FinishBuiltinType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedType), ::il2cpp_utils::ExtractType(baseType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, derivedType, baseType);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.CreateBuiltinTypes
void System::Xml::Schema::DatatypeImplementation::CreateBuiltinTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::CreateBuiltinTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "CreateBuiltinTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.GetSimpleTypeFromTypeCode
System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::GetSimpleTypeFromTypeCode(System::Xml::Schema::XmlTypeCode typeCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::GetSimpleTypeFromTypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "GetSimpleTypeFromTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeCode)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeCode);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.GetSimpleTypeFromXsdType
System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::GetSimpleTypeFromXsdType(System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::GetSimpleTypeFromXsdType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "GetSimpleTypeFromXsdType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qname);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.GetNormalizedStringTypeV1Compat
System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::GetNormalizedStringTypeV1Compat() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::GetNormalizedStringTypeV1Compat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "GetNormalizedStringTypeV1Compat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.GetTokenTypeV1Compat
System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::GetTokenTypeV1Compat() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::GetTokenTypeV1Compat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "GetTokenTypeV1Compat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.GetBuiltInTypes
::ArrayW<System::Xml::Schema::XmlSchemaSimpleType*> System::Xml::Schema::DatatypeImplementation::GetBuiltInTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::GetBuiltInTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "GetBuiltInTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<System::Xml::Schema::XmlSchemaSimpleType*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.GetPrimitiveTypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::DatatypeImplementation::GetPrimitiveTypeCode(System::Xml::Schema::XmlTypeCode typeCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::GetPrimitiveTypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "GetPrimitiveTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeCode)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeCode);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.DeriveByList
System::Xml::Schema::XmlSchemaDatatype* System::Xml::Schema::DatatypeImplementation::DeriveByList(int minSize, System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::DeriveByList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeriveByList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minSize), ::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaDatatype*, false>(this, ___internal__method, minSize, schemaType);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.DeriveByUnion
System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::DeriveByUnion(::ArrayW<System::Xml::Schema::XmlSchemaSimpleType*> types, System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::DeriveByUnion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "DeriveByUnion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::DatatypeImplementation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, types, schemaType);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.CreateValueConverter
System::Xml::Schema::XmlValueConverter* System::Xml::Schema::DatatypeImplementation::CreateValueConverter(System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.GetTypeName
::StringW System::Xml::Schema::DatatypeImplementation::GetTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::GetTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.Compare
int System::Xml::Schema::DatatypeImplementation::Compare(::ArrayW<uint8_t> value1, ::ArrayW<uint8_t> value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_ValueConverter
System::Xml::Schema::XmlValueConverter* System::Xml::Schema::DatatypeImplementation::get_ValueConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::get_ValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_TokenizedType
System::Xml::XmlTokenizedType System::Xml::Schema::DatatypeImplementation::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_ValueType
System::Type* System::Xml::Schema::DatatypeImplementation::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_Variety
System::Xml::Schema::XmlSchemaDatatypeVariety System::Xml::Schema::DatatypeImplementation::get_Variety() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::get_Variety");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Variety", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaDatatypeVariety, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::DatatypeImplementation::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_Restriction
System::Xml::Schema::RestrictionFacets* System::Xml::Schema::DatatypeImplementation::get_Restriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::get_Restriction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Restriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::RestrictionFacets*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_HasLexicalFacets
bool System::Xml::Schema::DatatypeImplementation::get_HasLexicalFacets() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::get_HasLexicalFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasLexicalFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_HasValueFacets
bool System::Xml::Schema::DatatypeImplementation::get_HasValueFacets() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::get_HasValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_BuiltInWhitespaceFacet
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::DatatypeImplementation::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.DeriveByRestriction
System::Xml::Schema::XmlSchemaDatatype* System::Xml::Schema::DatatypeImplementation::DeriveByRestriction(System::Xml::Schema::XmlSchemaObjectCollection* facets, System::Xml::XmlNameTable* nameTable, System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::DeriveByRestriction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeriveByRestriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(facets), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaDatatype*, false>(this, ___internal__method, facets, nameTable, schemaType);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.DeriveByList
System::Xml::Schema::XmlSchemaDatatype* System::Xml::Schema::DatatypeImplementation::DeriveByList(System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::DeriveByList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeriveByList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaDatatype*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.VerifySchemaValid
void System::Xml::Schema::DatatypeImplementation::VerifySchemaValid(System::Xml::Schema::XmlSchemaObjectTable* notations, System::Xml::Schema::XmlSchemaObject* caller) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::VerifySchemaValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySchemaValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notations), ::il2cpp_utils::ExtractType(caller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, notations, caller);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.IsDerivedFrom
bool System::Xml::Schema::DatatypeImplementation::IsDerivedFrom(System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::IsDerivedFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDerivedFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, datatype);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.IsEqual
bool System::Xml::Schema::DatatypeImplementation::IsEqual(::Il2CppObject* o1, ::Il2CppObject* o2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::IsEqual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o1), ::il2cpp_utils::ExtractType(o2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o1, o2);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.IsComparable
bool System::Xml::Schema::DatatypeImplementation::IsComparable(System::Xml::Schema::XmlSchemaDatatype* dtype) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::IsComparable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsComparable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dtype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, dtype);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.ParseValue
::Il2CppObject* System::Xml::Schema::DatatypeImplementation::ParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::ParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.ParseValue
::Il2CppObject* System::Xml::Schema::DatatypeImplementation::ParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, bool createAtomicValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::ParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractType(createAtomicValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr, createAtomicValue);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.TryParseValue
System::Exception* System::Xml::Schema::DatatypeImplementation::TryParseValue(::Il2CppObject* value, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* namespaceResolver, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(namespaceResolver), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, value, nameTable, namespaceResolver, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap
#include "System/Xml/Schema/DatatypeImplementation_SchemaDatatypeMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
::StringW& System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.DatatypeImplementation type
System::Xml::Schema::DatatypeImplementation*& System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<System::Xml::Schema::DatatypeImplementation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 parentIndex
int& System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_parentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_parentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap.get_Name
::StringW System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap.get_ParentIndex
int System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::get_ParentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::get_ParentIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap.op_Explicit
System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::operator System::Xml::Schema::DatatypeImplementation*() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation/SchemaDatatypeMap", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::DatatypeImplementation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap.CompareTo
int System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_List
#include "System/Xml/Schema/Datatype_List.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.DatatypeImplementation itemType
System::Xml::Schema::DatatypeImplementation*& System::Xml::Schema::Datatype_List::dyn_itemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_List::dyn_itemType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemType"))->offset;
  return *reinterpret_cast<System::Xml::Schema::DatatypeImplementation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minListSize
int& System::Xml::Schema::Datatype_List::dyn_minListSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_List::dyn_minListSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minListSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_ValueType
System::Type* System::Xml::Schema::Datatype_List::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_List::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_TokenizedType
System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_List::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_List::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_ListValueType
System::Type* System::Xml::Schema::Datatype_List::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_List::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_List::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_List::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_List::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_List::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_ValidRestrictionFlags
System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_List::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_List::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidRestrictionFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.CreateValueConverter
System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_List::CreateValueConverter(System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_List::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.Compare
int System::Xml::Schema::Datatype_List::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_List::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.TryParseValue
System::Exception* System::Xml::Schema::Datatype_List::TryParseValue(::Il2CppObject* value, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* namespaceResolver, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_List::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(namespaceResolver), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, value, nameTable, namespaceResolver, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_List.TryParseValue
System::Exception* System::Xml::Schema::Datatype_List::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_List::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_union
#include "System/Xml/Schema/Datatype_union.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
System::Type* System::Xml::Schema::Datatype_union::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_union::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_union", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_union::_set_atomicValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_union::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_union", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
System::Type* System::Xml::Schema::Datatype_union::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_union::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_union", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_union::_set_listValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_union::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_union", "listValueType", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType[] types
::ArrayW<System::Xml::Schema::XmlSchemaSimpleType*>& System::Xml::Schema::Datatype_union::dyn_types() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_union::dyn_types");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "types"))->offset;
  return *reinterpret_cast<::ArrayW<System::Xml::Schema::XmlSchemaSimpleType*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.get_BaseMemberTypes
::ArrayW<System::Xml::Schema::XmlSchemaSimpleType*> System::Xml::Schema::Datatype_union::get_BaseMemberTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_union::get_BaseMemberTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseMemberTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<System::Xml::Schema::XmlSchemaSimpleType*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.HasAtomicMembers
bool System::Xml::Schema::Datatype_union::HasAtomicMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_union::HasAtomicMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasAtomicMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.IsUnionBaseOf
bool System::Xml::Schema::Datatype_union::IsUnionBaseOf(System::Xml::Schema::DatatypeImplementation* derivedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_union::IsUnionBaseOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsUnionBaseOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedType);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.get_ValueType
System::Type* System::Xml::Schema::Datatype_union::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_union::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_union::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_union::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_union::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_union::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.get_ListValueType
System::Type* System::Xml::Schema::Datatype_union::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_union::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.get_ValidRestrictionFlags
System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_union::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_union::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidRestrictionFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_union..cctor
void System::Xml::Schema::Datatype_union::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_union::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_union", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.CreateValueConverter
System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_union::CreateValueConverter(System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_union::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.Compare
int System::Xml::Schema::Datatype_union::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_union::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.TryParseValue
System::Exception* System::Xml::Schema::Datatype_union::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_union::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_union.TryParseValue
System::Exception* System::Xml::Schema::Datatype_union::TryParseValue(::Il2CppObject* value, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_union::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, value, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_anySimpleType
#include "System/Xml/Schema/Datatype_anySimpleType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
System::Type* System::Xml::Schema::Datatype_anySimpleType::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anySimpleType::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_anySimpleType", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_anySimpleType::_set_atomicValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anySimpleType::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_anySimpleType", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
System::Type* System::Xml::Schema::Datatype_anySimpleType::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anySimpleType::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_anySimpleType", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_anySimpleType::_set_listValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anySimpleType::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_anySimpleType", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_anySimpleType::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anySimpleType::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_ValueType
System::Type* System::Xml::Schema::Datatype_anySimpleType::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anySimpleType::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_anySimpleType::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anySimpleType::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_ListValueType
System::Type* System::Xml::Schema::Datatype_anySimpleType::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anySimpleType::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_TokenizedType
System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_anySimpleType::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anySimpleType::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_ValidRestrictionFlags
System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_anySimpleType::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anySimpleType::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidRestrictionFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_BuiltInWhitespaceFacet
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_anySimpleType::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anySimpleType::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType..cctor
void System::Xml::Schema::Datatype_anySimpleType::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anySimpleType::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_anySimpleType", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.CreateValueConverter
System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_anySimpleType::CreateValueConverter(System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anySimpleType::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.Compare
int System::Xml::Schema::Datatype_anySimpleType::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anySimpleType::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.TryParseValue
System::Exception* System::Xml::Schema::Datatype_anySimpleType::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anySimpleType::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_anyAtomicType
#include "System/Xml/Schema/Datatype_anyAtomicType.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_anyAtomicType.get_BuiltInWhitespaceFacet
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_anyAtomicType::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anyAtomicType::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyAtomicType.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_anyAtomicType::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anyAtomicType::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyAtomicType.CreateValueConverter
System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_anyAtomicType::CreateValueConverter(System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anyAtomicType::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_untypedAtomicType
#include "System/Xml/Schema/Datatype_untypedAtomicType.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_untypedAtomicType.get_BuiltInWhitespaceFacet
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_untypedAtomicType::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_untypedAtomicType::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_untypedAtomicType.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_untypedAtomicType::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_untypedAtomicType::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_untypedAtomicType.CreateValueConverter
System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_untypedAtomicType::CreateValueConverter(System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_untypedAtomicType::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_string
#include "System/Xml/Schema/Datatype_string.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_string.get_BuiltInWhitespaceFacet
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_string::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_string::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_string::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_string::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_string::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_string::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.get_TokenizedType
System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_string::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_string::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.get_ValidRestrictionFlags
System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_string::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_string::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidRestrictionFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.CreateValueConverter
System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_string::CreateValueConverter(System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_string::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.TryParseValue
System::Exception* System::Xml::Schema::Datatype_string::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_string::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_boolean
#include "System/Xml/Schema/Datatype_boolean.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
System::Type* System::Xml::Schema::Datatype_boolean::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_boolean::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_boolean", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_boolean::_set_atomicValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_boolean::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_boolean", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
System::Type* System::Xml::Schema::Datatype_boolean::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_boolean::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_boolean", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_boolean::_set_listValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_boolean::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_boolean", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_boolean::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_boolean::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_boolean::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_boolean::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_ValueType
System::Type* System::Xml::Schema::Datatype_boolean::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_boolean::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_ListValueType
System::Type* System::Xml::Schema::Datatype_boolean::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_boolean::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_BuiltInWhitespaceFacet
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_boolean::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_boolean::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_ValidRestrictionFlags
System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_boolean::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_boolean::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidRestrictionFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean..cctor
void System::Xml::Schema::Datatype_boolean::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_boolean::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_boolean", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.CreateValueConverter
System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_boolean::CreateValueConverter(System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_boolean::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.Compare
int System::Xml::Schema::Datatype_boolean::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_boolean::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.TryParseValue
System::Exception* System::Xml::Schema::Datatype_boolean::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_boolean::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_float
#include "System/Xml/Schema/Datatype_float.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
System::Type* System::Xml::Schema::Datatype_float::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_float::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_float", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_float::_set_atomicValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_float::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_float", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
System::Type* System::Xml::Schema::Datatype_float::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_float::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_float", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_float::_set_listValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_float::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_float", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_float::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_float::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_float::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_float::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_ValueType
System::Type* System::Xml::Schema::Datatype_float::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_float::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_ListValueType
System::Type* System::Xml::Schema::Datatype_float::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_float::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_BuiltInWhitespaceFacet
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_float::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_float::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_ValidRestrictionFlags
System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_float::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_float::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidRestrictionFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float..cctor
void System::Xml::Schema::Datatype_float::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_float::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_float", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.CreateValueConverter
System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_float::CreateValueConverter(System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_float::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.Compare
int System::Xml::Schema::Datatype_float::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_float::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.TryParseValue
System::Exception* System::Xml::Schema::Datatype_float::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_float::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_double
#include "System/Xml/Schema/Datatype_double.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
System::Type* System::Xml::Schema::Datatype_double::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_double::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_double", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_double::_set_atomicValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_double::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_double", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
System::Type* System::Xml::Schema::Datatype_double::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_double::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_double", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_double::_set_listValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_double::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_double", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_double::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_double::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_double::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_double::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_ValueType
System::Type* System::Xml::Schema::Datatype_double::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_double::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_ListValueType
System::Type* System::Xml::Schema::Datatype_double::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_double::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_BuiltInWhitespaceFacet
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_double::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_double::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_ValidRestrictionFlags
System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_double::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_double::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidRestrictionFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double..cctor
void System::Xml::Schema::Datatype_double::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_double::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_double", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.CreateValueConverter
System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_double::CreateValueConverter(System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_double::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.Compare
int System::Xml::Schema::Datatype_double::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_double::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.TryParseValue
System::Exception* System::Xml::Schema::Datatype_double::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_double::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_decimal
#include "System/Xml/Schema/Datatype_decimal.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
System::Type* System::Xml::Schema::Datatype_decimal::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_decimal::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_decimal", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_decimal::_set_atomicValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_decimal::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_decimal", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
System::Type* System::Xml::Schema::Datatype_decimal::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_decimal::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_decimal", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_decimal::_set_listValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_decimal::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_decimal", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_decimal::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_decimal::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_decimal", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_decimal::_set_numeric10FacetsChecker(System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_decimal::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_decimal", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_decimal::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_decimal::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_decimal::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_decimal::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_ValueType
System::Type* System::Xml::Schema::Datatype_decimal::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_decimal::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_ListValueType
System::Type* System::Xml::Schema::Datatype_decimal::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_decimal::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_BuiltInWhitespaceFacet
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_decimal::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_decimal::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_ValidRestrictionFlags
System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_decimal::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_decimal::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidRestrictionFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal..cctor
void System::Xml::Schema::Datatype_decimal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_decimal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_decimal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.CreateValueConverter
System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_decimal::CreateValueConverter(System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_decimal::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.Compare
int System::Xml::Schema::Datatype_decimal::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_decimal::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.TryParseValue
System::Exception* System::Xml::Schema::Datatype_decimal::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_decimal::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_duration
#include "System/Xml/Schema/Datatype_duration.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
System::Type* System::Xml::Schema::Datatype_duration::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_duration::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_duration", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_duration::_set_atomicValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_duration::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_duration", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
System::Type* System::Xml::Schema::Datatype_duration::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_duration::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_duration", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_duration::_set_listValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_duration::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_duration", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_duration::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_duration::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_duration::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_duration::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_ValueType
System::Type* System::Xml::Schema::Datatype_duration::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_duration::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_ListValueType
System::Type* System::Xml::Schema::Datatype_duration::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_duration::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_BuiltInWhitespaceFacet
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_duration::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_duration::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_ValidRestrictionFlags
System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_duration::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_duration::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidRestrictionFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration..cctor
void System::Xml::Schema::Datatype_duration::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_duration::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_duration", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.CreateValueConverter
System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_duration::CreateValueConverter(System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_duration::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.Compare
int System::Xml::Schema::Datatype_duration::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_duration::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.TryParseValue
System::Exception* System::Xml::Schema::Datatype_duration::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_duration::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_yearMonthDuration
#include "System/Xml/Schema/Datatype_yearMonthDuration.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_yearMonthDuration.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_yearMonthDuration::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_yearMonthDuration::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_yearMonthDuration.TryParseValue
System::Exception* System::Xml::Schema::Datatype_yearMonthDuration::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_yearMonthDuration::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_dayTimeDuration
#include "System/Xml/Schema/Datatype_dayTimeDuration.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_dayTimeDuration.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_dayTimeDuration::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_dayTimeDuration::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dayTimeDuration.TryParseValue
System::Exception* System::Xml::Schema::Datatype_dayTimeDuration::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_dayTimeDuration::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_dateTimeBase
#include "System/Xml/Schema/Datatype_dateTimeBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
System::Type* System::Xml::Schema::Datatype_dateTimeBase::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_dateTimeBase::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_dateTimeBase", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_dateTimeBase::_set_atomicValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_dateTimeBase::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_dateTimeBase", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
System::Type* System::Xml::Schema::Datatype_dateTimeBase::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_dateTimeBase::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_dateTimeBase", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_dateTimeBase::_set_listValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_dateTimeBase::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_dateTimeBase", "listValueType", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XsdDateTimeFlags dateTimeFlags
System::Xml::Schema::XsdDateTimeFlags& System::Xml::Schema::Datatype_dateTimeBase::dyn_dateTimeFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_dateTimeBase::dyn_dateTimeFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dateTimeFlags"))->offset;
  return *reinterpret_cast<System::Xml::Schema::XsdDateTimeFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_dateTimeBase::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_dateTimeBase::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_dateTimeBase::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_dateTimeBase::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_ValueType
System::Type* System::Xml::Schema::Datatype_dateTimeBase::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_dateTimeBase::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_ListValueType
System::Type* System::Xml::Schema::Datatype_dateTimeBase::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_dateTimeBase::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_BuiltInWhitespaceFacet
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_dateTimeBase::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_dateTimeBase::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_ValidRestrictionFlags
System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_dateTimeBase::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_dateTimeBase::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidRestrictionFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase..cctor
void System::Xml::Schema::Datatype_dateTimeBase::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_dateTimeBase::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_dateTimeBase", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.CreateValueConverter
System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_dateTimeBase::CreateValueConverter(System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_dateTimeBase::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.Compare
int System::Xml::Schema::Datatype_dateTimeBase::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_dateTimeBase::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.TryParseValue
System::Exception* System::Xml::Schema::Datatype_dateTimeBase::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_dateTimeBase::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_dateTimeNoTimeZone
#include "System/Xml/Schema/Datatype_dateTimeNoTimeZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_dateTimeTimeZone
#include "System/Xml/Schema/Datatype_dateTimeTimeZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_dateTime
#include "System/Xml/Schema/Datatype_dateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_timeNoTimeZone
#include "System/Xml/Schema/Datatype_timeNoTimeZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_timeTimeZone
#include "System/Xml/Schema/Datatype_timeTimeZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_time
#include "System/Xml/Schema/Datatype_time.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_time.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_time::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_time::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_date
#include "System/Xml/Schema/Datatype_date.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_date.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_date::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_date::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_yearMonth
#include "System/Xml/Schema/Datatype_yearMonth.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_yearMonth.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_yearMonth::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_yearMonth::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_year
#include "System/Xml/Schema/Datatype_year.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_year.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_year::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_year::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_monthDay
#include "System/Xml/Schema/Datatype_monthDay.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_monthDay.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_monthDay::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_monthDay::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_day
#include "System/Xml/Schema/Datatype_day.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_day.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_day::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_day::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_month
#include "System/Xml/Schema/Datatype_month.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_month.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_month::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_month::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_hexBinary
#include "System/Xml/Schema/Datatype_hexBinary.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
System::Type* System::Xml::Schema::Datatype_hexBinary::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_hexBinary::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_hexBinary", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_hexBinary::_set_atomicValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_hexBinary::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_hexBinary", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
System::Type* System::Xml::Schema::Datatype_hexBinary::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_hexBinary::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_hexBinary", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_hexBinary::_set_listValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_hexBinary::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_hexBinary", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_hexBinary::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_hexBinary::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_hexBinary::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_hexBinary::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_ValueType
System::Type* System::Xml::Schema::Datatype_hexBinary::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_hexBinary::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_ListValueType
System::Type* System::Xml::Schema::Datatype_hexBinary::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_hexBinary::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_BuiltInWhitespaceFacet
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_hexBinary::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_hexBinary::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_ValidRestrictionFlags
System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_hexBinary::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_hexBinary::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidRestrictionFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary..cctor
void System::Xml::Schema::Datatype_hexBinary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_hexBinary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_hexBinary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.CreateValueConverter
System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_hexBinary::CreateValueConverter(System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_hexBinary::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.Compare
int System::Xml::Schema::Datatype_hexBinary::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_hexBinary::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.TryParseValue
System::Exception* System::Xml::Schema::Datatype_hexBinary::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_hexBinary::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_base64Binary
#include "System/Xml/Schema/Datatype_base64Binary.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
System::Type* System::Xml::Schema::Datatype_base64Binary::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_base64Binary::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_base64Binary", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_base64Binary::_set_atomicValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_base64Binary::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_base64Binary", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
System::Type* System::Xml::Schema::Datatype_base64Binary::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_base64Binary::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_base64Binary", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_base64Binary::_set_listValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_base64Binary::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_base64Binary", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_base64Binary::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_base64Binary::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_base64Binary::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_base64Binary::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_ValueType
System::Type* System::Xml::Schema::Datatype_base64Binary::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_base64Binary::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_ListValueType
System::Type* System::Xml::Schema::Datatype_base64Binary::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_base64Binary::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_BuiltInWhitespaceFacet
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_base64Binary::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_base64Binary::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_ValidRestrictionFlags
System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_base64Binary::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_base64Binary::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidRestrictionFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary..cctor
void System::Xml::Schema::Datatype_base64Binary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_base64Binary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_base64Binary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.CreateValueConverter
System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_base64Binary::CreateValueConverter(System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_base64Binary::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.Compare
int System::Xml::Schema::Datatype_base64Binary::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_base64Binary::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.TryParseValue
System::Exception* System::Xml::Schema::Datatype_base64Binary::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_base64Binary::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_anyURI
#include "System/Xml/Schema/Datatype_anyURI.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
System::Type* System::Xml::Schema::Datatype_anyURI::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anyURI::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_anyURI", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_anyURI::_set_atomicValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anyURI::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_anyURI", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
System::Type* System::Xml::Schema::Datatype_anyURI::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anyURI::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_anyURI", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_anyURI::_set_listValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anyURI::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_anyURI", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_anyURI::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anyURI::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_anyURI::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anyURI::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_ValueType
System::Type* System::Xml::Schema::Datatype_anyURI::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anyURI::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_HasValueFacets
bool System::Xml::Schema::Datatype_anyURI::get_HasValueFacets() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anyURI::get_HasValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_ListValueType
System::Type* System::Xml::Schema::Datatype_anyURI::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anyURI::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_BuiltInWhitespaceFacet
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_anyURI::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anyURI::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_ValidRestrictionFlags
System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_anyURI::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anyURI::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidRestrictionFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI..cctor
void System::Xml::Schema::Datatype_anyURI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anyURI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_anyURI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.CreateValueConverter
System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_anyURI::CreateValueConverter(System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anyURI::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.Compare
int System::Xml::Schema::Datatype_anyURI::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anyURI::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.TryParseValue
System::Exception* System::Xml::Schema::Datatype_anyURI::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_anyURI::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_QName
#include "System/Xml/Schema/Datatype_QName.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
System::Type* System::Xml::Schema::Datatype_QName::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_QName::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_QName", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_QName::_set_atomicValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_QName::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_QName", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
System::Type* System::Xml::Schema::Datatype_QName::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_QName::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_QName", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_QName::_set_listValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_QName::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_QName", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_QName::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_QName::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_QName::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_QName::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_TokenizedType
System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_QName::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_QName::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_ValidRestrictionFlags
System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_QName::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_QName::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidRestrictionFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_ValueType
System::Type* System::Xml::Schema::Datatype_QName::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_QName::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_ListValueType
System::Type* System::Xml::Schema::Datatype_QName::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_QName::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_BuiltInWhitespaceFacet
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_QName::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_QName::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName..cctor
void System::Xml::Schema::Datatype_QName::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_QName::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_QName", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.CreateValueConverter
System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_QName::CreateValueConverter(System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_QName::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.TryParseValue
System::Exception* System::Xml::Schema::Datatype_QName::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_QName::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_normalizedString
#include "System/Xml/Schema/Datatype_normalizedString.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_normalizedString.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_normalizedString::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_normalizedString::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_normalizedString.get_BuiltInWhitespaceFacet
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_normalizedString::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_normalizedString::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_normalizedString.get_HasValueFacets
bool System::Xml::Schema::Datatype_normalizedString::get_HasValueFacets() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_normalizedString::get_HasValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_normalizedStringV1Compat
#include "System/Xml/Schema/Datatype_normalizedStringV1Compat.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_normalizedStringV1Compat.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_normalizedStringV1Compat::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_normalizedStringV1Compat::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_normalizedStringV1Compat.get_HasValueFacets
bool System::Xml::Schema::Datatype_normalizedStringV1Compat::get_HasValueFacets() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_normalizedStringV1Compat::get_HasValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_token
#include "System/Xml/Schema/Datatype_token.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_token.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_token::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_token::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_token.get_BuiltInWhitespaceFacet
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_token::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_token::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_tokenV1Compat
#include "System/Xml/Schema/Datatype_tokenV1Compat.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_tokenV1Compat.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_tokenV1Compat::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_tokenV1Compat::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_language
#include "System/Xml/Schema/Datatype_language.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_language.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_language::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_language::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_NMTOKEN
#include "System/Xml/Schema/Datatype_NMTOKEN.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_NMTOKEN.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_NMTOKEN::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_NMTOKEN::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NMTOKEN.get_TokenizedType
System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_NMTOKEN::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_NMTOKEN::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_Name
#include "System/Xml/Schema/Datatype_Name.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_Name.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_Name::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_Name::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_NCName
#include "System/Xml/Schema/Datatype_NCName.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_NCName.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_NCName::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_NCName::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NCName.TryParseValue
System::Exception* System::Xml::Schema::Datatype_NCName::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_NCName::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_ID
#include "System/Xml/Schema/Datatype_ID.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_ID.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_ID::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_ID::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_ID.get_TokenizedType
System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_ID::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_ID::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_IDREF
#include "System/Xml/Schema/Datatype_IDREF.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_IDREF.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_IDREF::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_IDREF::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_IDREF.get_TokenizedType
System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_IDREF::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_IDREF::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_ENTITY
#include "System/Xml/Schema/Datatype_ENTITY.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_ENTITY.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_ENTITY::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_ENTITY::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_ENTITY.get_TokenizedType
System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_ENTITY::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_ENTITY::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_NOTATION
#include "System/Xml/Schema/Datatype_NOTATION.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectTable
#include "System/Xml/Schema/XmlSchemaObjectTable.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
System::Type* System::Xml::Schema::Datatype_NOTATION::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_NOTATION::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_NOTATION", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_NOTATION::_set_atomicValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_NOTATION::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_NOTATION", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
System::Type* System::Xml::Schema::Datatype_NOTATION::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_NOTATION::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_NOTATION", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_NOTATION::_set_listValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_NOTATION::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_NOTATION", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_NOTATION::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_NOTATION::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_NOTATION::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_NOTATION::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_TokenizedType
System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_NOTATION::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_NOTATION::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_ValidRestrictionFlags
System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_NOTATION::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_NOTATION::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidRestrictionFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_ValueType
System::Type* System::Xml::Schema::Datatype_NOTATION::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_NOTATION::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_ListValueType
System::Type* System::Xml::Schema::Datatype_NOTATION::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_NOTATION::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_BuiltInWhitespaceFacet
System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_NOTATION::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_NOTATION::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION..cctor
void System::Xml::Schema::Datatype_NOTATION::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_NOTATION::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_NOTATION", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.CreateValueConverter
System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_NOTATION::CreateValueConverter(System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_NOTATION::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.TryParseValue
System::Exception* System::Xml::Schema::Datatype_NOTATION::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_NOTATION::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.VerifySchemaValid
void System::Xml::Schema::Datatype_NOTATION::VerifySchemaValid(System::Xml::Schema::XmlSchemaObjectTable* notations, System::Xml::Schema::XmlSchemaObject* caller) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_NOTATION::VerifySchemaValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySchemaValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notations), ::il2cpp_utils::ExtractType(caller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, notations, caller);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_integer
#include "System/Xml/Schema/Datatype_integer.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_integer.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_integer::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_integer::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_integer.TryParseValue
System::Exception* System::Xml::Schema::Datatype_integer::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_integer::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_nonPositiveInteger
#include "System/Xml/Schema/Datatype_nonPositiveInteger.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_nonPositiveInteger::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_nonPositiveInteger::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_nonPositiveInteger", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_nonPositiveInteger::_set_numeric10FacetsChecker(System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_nonPositiveInteger::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_nonPositiveInteger", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_nonPositiveInteger.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_nonPositiveInteger::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_nonPositiveInteger::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonPositiveInteger.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_nonPositiveInteger::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_nonPositiveInteger::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonPositiveInteger.get_HasValueFacets
bool System::Xml::Schema::Datatype_nonPositiveInteger::get_HasValueFacets() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_nonPositiveInteger::get_HasValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonPositiveInteger..cctor
void System::Xml::Schema::Datatype_nonPositiveInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_nonPositiveInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_nonPositiveInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_negativeInteger
#include "System/Xml/Schema/Datatype_negativeInteger.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_negativeInteger::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_negativeInteger::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_negativeInteger", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_negativeInteger::_set_numeric10FacetsChecker(System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_negativeInteger::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_negativeInteger", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_negativeInteger.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_negativeInteger::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_negativeInteger::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_negativeInteger.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_negativeInteger::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_negativeInteger::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_negativeInteger..cctor
void System::Xml::Schema::Datatype_negativeInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_negativeInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_negativeInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_long
#include "System/Xml/Schema/Datatype_long.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
System::Type* System::Xml::Schema::Datatype_long::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_long::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_long", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_long::_set_atomicValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_long::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_long", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
System::Type* System::Xml::Schema::Datatype_long::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_long::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_long", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_long::_set_listValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_long::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_long", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_long::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_long::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_long", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_long::_set_numeric10FacetsChecker(System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_long::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_long", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_long::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_long::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_HasValueFacets
bool System::Xml::Schema::Datatype_long::get_HasValueFacets() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_long::get_HasValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_long::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_long::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_ValueType
System::Type* System::Xml::Schema::Datatype_long::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_long::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_ListValueType
System::Type* System::Xml::Schema::Datatype_long::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_long::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long..cctor
void System::Xml::Schema::Datatype_long::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_long::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_long", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.Compare
int System::Xml::Schema::Datatype_long::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_long::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.TryParseValue
System::Exception* System::Xml::Schema::Datatype_long::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_long::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_int
#include "System/Xml/Schema/Datatype_int.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
System::Type* System::Xml::Schema::Datatype_int::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_int::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_int", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_int::_set_atomicValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_int::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_int", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
System::Type* System::Xml::Schema::Datatype_int::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_int::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_int", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_int::_set_listValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_int::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_int", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_int::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_int::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_int", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_int::_set_numeric10FacetsChecker(System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_int::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_int", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_int.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_int::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_int::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_int::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_int::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.get_ValueType
System::Type* System::Xml::Schema::Datatype_int::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_int::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.get_ListValueType
System::Type* System::Xml::Schema::Datatype_int::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_int::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int..cctor
void System::Xml::Schema::Datatype_int::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_int::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_int", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.Compare
int System::Xml::Schema::Datatype_int::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_int::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.TryParseValue
System::Exception* System::Xml::Schema::Datatype_int::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_int::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_short
#include "System/Xml/Schema/Datatype_short.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
System::Type* System::Xml::Schema::Datatype_short::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_short::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_short", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_short::_set_atomicValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_short::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_short", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
System::Type* System::Xml::Schema::Datatype_short::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_short::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_short", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_short::_set_listValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_short::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_short", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_short::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_short::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_short", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_short::_set_numeric10FacetsChecker(System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_short::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_short", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_short.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_short::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_short::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_short::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_short::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.get_ValueType
System::Type* System::Xml::Schema::Datatype_short::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_short::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.get_ListValueType
System::Type* System::Xml::Schema::Datatype_short::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_short::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short..cctor
void System::Xml::Schema::Datatype_short::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_short::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_short", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.Compare
int System::Xml::Schema::Datatype_short::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_short::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.TryParseValue
System::Exception* System::Xml::Schema::Datatype_short::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_short::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_byte
#include "System/Xml/Schema/Datatype_byte.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
System::Type* System::Xml::Schema::Datatype_byte::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_byte::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_byte", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_byte::_set_atomicValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_byte::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_byte", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
System::Type* System::Xml::Schema::Datatype_byte::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_byte::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_byte", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_byte::_set_listValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_byte::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_byte", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_byte::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_byte::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_byte", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_byte::_set_numeric10FacetsChecker(System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_byte::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_byte", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_byte::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_byte::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_byte::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_byte::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.get_ValueType
System::Type* System::Xml::Schema::Datatype_byte::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_byte::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.get_ListValueType
System::Type* System::Xml::Schema::Datatype_byte::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_byte::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte..cctor
void System::Xml::Schema::Datatype_byte::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_byte::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_byte", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.Compare
int System::Xml::Schema::Datatype_byte::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_byte::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.TryParseValue
System::Exception* System::Xml::Schema::Datatype_byte::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_byte::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_nonNegativeInteger
#include "System/Xml/Schema/Datatype_nonNegativeInteger.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_nonNegativeInteger::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_nonNegativeInteger::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_nonNegativeInteger", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_nonNegativeInteger::_set_numeric10FacetsChecker(System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_nonNegativeInteger::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_nonNegativeInteger", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_nonNegativeInteger.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_nonNegativeInteger::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_nonNegativeInteger::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonNegativeInteger.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_nonNegativeInteger::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_nonNegativeInteger::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonNegativeInteger.get_HasValueFacets
bool System::Xml::Schema::Datatype_nonNegativeInteger::get_HasValueFacets() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_nonNegativeInteger::get_HasValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonNegativeInteger..cctor
void System::Xml::Schema::Datatype_nonNegativeInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_nonNegativeInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_nonNegativeInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_unsignedLong
#include "System/Xml/Schema/Datatype_unsignedLong.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
System::Type* System::Xml::Schema::Datatype_unsignedLong::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_unsignedLong::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_unsignedLong", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_unsignedLong::_set_atomicValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_unsignedLong::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedLong", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
System::Type* System::Xml::Schema::Datatype_unsignedLong::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_unsignedLong::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml.Schema", "Datatype_unsignedLong", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_unsignedLong::_set_listValueType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_unsignedLong::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedLong", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedLong::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_unsignedLong::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_unsignedLong", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_unsignedLong::_set_numeric10FacetsChecker(System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_unsignedLong::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedLong", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.get_FacetsChecker
System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedLong::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_unsignedLong::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.get_TypeCode
System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_unsignedLong::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_unsignedLong::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.get_ValueType
System::Type* System::Xml::Schema::Datatype_unsignedLong::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_unsignedLong::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.get_ListValueType
System::Type* System::Xml::Schema::Datatype_unsignedLong::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_unsignedLong::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong..cctor
void System::Xml::Schema::Datatype_unsignedLong::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_unsignedLong::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_unsignedLong", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.Compare
int System::Xml::Schema::Datatype_unsignedLong::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_unsignedLong::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.TryParseValue
System::Exception* System::Xml::Schema::Datatype_unsignedLong::TryParseValue(::StringW s, System::Xml::XmlNameTable* nameTable, System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Schema::Datatype_unsignedLong::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
