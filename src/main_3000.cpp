// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightPairRotationEventEffect/RotationData
#include "GlobalNamespace/LightPairRotationEventEffect_RotationData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean enabled
bool GlobalNamespace::LightPairRotationEventEffect::RotationData::_get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairRotationEventEffect::RotationData::_get_enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean enabled
void GlobalNamespace::LightPairRotationEventEffect::RotationData::_set_enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairRotationEventEffect::RotationData::_set_enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enabled"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationSpeed
float GlobalNamespace::LightPairRotationEventEffect::RotationData::_get_rotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairRotationEventEffect::RotationData::_get_rotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single rotationSpeed
void GlobalNamespace::LightPairRotationEventEffect::RotationData::_set_rotationSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairRotationEventEffect::RotationData::_set_rotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationSpeed"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion startRotation
UnityEngine::Quaternion GlobalNamespace::LightPairRotationEventEffect::RotationData::_get_startRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairRotationEventEffect::RotationData::_get_startRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startRotation"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Quaternion startRotation
void GlobalNamespace::LightPairRotationEventEffect::RotationData::_set_startRotation(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairRotationEventEffect::RotationData::_set_startRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startRotation"))->offset;
  *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transform
UnityEngine::Transform* GlobalNamespace::LightPairRotationEventEffect::RotationData::_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairRotationEventEffect::RotationData::_get_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Transform transform
void GlobalNamespace::LightPairRotationEventEffect::RotationData::_set_transform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairRotationEventEffect::RotationData::_set_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single startRotationAngle
float GlobalNamespace::LightPairRotationEventEffect::RotationData::_get_startRotationAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairRotationEventEffect::RotationData::_get_startRotationAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startRotationAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single startRotationAngle
void GlobalNamespace::LightPairRotationEventEffect::RotationData::_set_startRotationAngle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairRotationEventEffect::RotationData::_set_startRotationAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startRotationAngle"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationAngle
float GlobalNamespace::LightPairRotationEventEffect::RotationData::_get_rotationAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairRotationEventEffect::RotationData::_get_rotationAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single rotationAngle
void GlobalNamespace::LightPairRotationEventEffect::RotationData::_set_rotationAngle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairRotationEventEffect::RotationData::_set_rotationAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationAngle"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightPairSinMoveEventEffect
#include "GlobalNamespace/LightPairSinMoveEventEffect.hpp"
// Including type: LightPairSinMoveEventEffect/MovementData
#include "GlobalNamespace/LightPairSinMoveEventEffect_MovementData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kSpeedMultiplier
float GlobalNamespace::LightPairSinMoveEventEffect::_get_kSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_get_kSpeedMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LightPairSinMoveEventEffect", "kSpeedMultiplier"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSpeedMultiplier
void GlobalNamespace::LightPairSinMoveEventEffect::_set_kSpeedMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_set_kSpeedMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightPairSinMoveEventEffect", "kSpeedMultiplier", value));
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEventType _eventL
GlobalNamespace::BeatmapEventType GlobalNamespace::LightPairSinMoveEventEffect::_get__eventL() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_get__eventL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventL"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapEventType _eventL
void GlobalNamespace::LightPairSinMoveEventEffect::_set__eventL(GlobalNamespace::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_set__eventL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventL"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEventType _eventR
GlobalNamespace::BeatmapEventType GlobalNamespace::LightPairSinMoveEventEffect::_get__eventR() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_get__eventR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventR"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapEventType _eventR
void GlobalNamespace::LightPairSinMoveEventEffect::_set__eventR(GlobalNamespace::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_set__eventR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventR"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEventType _switchOverrideRandomValuesEvent
GlobalNamespace::BeatmapEventType GlobalNamespace::LightPairSinMoveEventEffect::_get__switchOverrideRandomValuesEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_get__switchOverrideRandomValuesEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_switchOverrideRandomValuesEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapEventType _switchOverrideRandomValuesEvent
void GlobalNamespace::LightPairSinMoveEventEffect::_set__switchOverrideRandomValuesEvent(GlobalNamespace::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_set__switchOverrideRandomValuesEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_switchOverrideRandomValuesEvent"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideRandomValues
bool GlobalNamespace::LightPairSinMoveEventEffect::_get__overrideRandomValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_get__overrideRandomValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideRandomValues"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _overrideRandomValues
void GlobalNamespace::LightPairSinMoveEventEffect::_set__overrideRandomValues(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_set__overrideRandomValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideRandomValues"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startValueOffset
float GlobalNamespace::LightPairSinMoveEventEffect::_get__startValueOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_get__startValueOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startValueOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _startValueOffset
void GlobalNamespace::LightPairSinMoveEventEffect::_set__startValueOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_set__startValueOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startValueOffset"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _startPositionOffset
UnityEngine::Vector3 GlobalNamespace::LightPairSinMoveEventEffect::_get__startPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_get__startPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startPositionOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 _startPositionOffset
void GlobalNamespace::LightPairSinMoveEventEffect::_set__startPositionOffset(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_set__startPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startPositionOffset"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _endPositionOffset
UnityEngine::Vector3 GlobalNamespace::LightPairSinMoveEventEffect::_get__endPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_get__endPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endPositionOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 _endPositionOffset
void GlobalNamespace::LightPairSinMoveEventEffect::_set__endPositionOffset(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_set__endPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endPositionOffset"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transformL
UnityEngine::Transform* GlobalNamespace::LightPairSinMoveEventEffect::_get__transformL() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_get__transformL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformL"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform _transformL
void GlobalNamespace::LightPairSinMoveEventEffect::_set__transformL(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_set__transformL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformL"))->offset;
  *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transformR
UnityEngine::Transform* GlobalNamespace::LightPairSinMoveEventEffect::_get__transformR() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_get__transformR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformR"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform _transformR
void GlobalNamespace::LightPairSinMoveEventEffect::_set__transformR(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_set__transformR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformR"))->offset;
  *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
GlobalNamespace::IBeatmapObjectCallbackController* GlobalNamespace::LightPairSinMoveEventEffect::_get__beatmapObjectCallbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_get__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
void GlobalNamespace::LightPairSinMoveEventEffect::_set__beatmapObjectCallbackController(GlobalNamespace::IBeatmapObjectCallbackController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_set__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private LightPairSinMoveEventEffect/MovementData _movementDataL
GlobalNamespace::LightPairSinMoveEventEffect::MovementData* GlobalNamespace::LightPairSinMoveEventEffect::_get__movementDataL() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_get__movementDataL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementDataL"))->offset;
  return *reinterpret_cast<GlobalNamespace::LightPairSinMoveEventEffect::MovementData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LightPairSinMoveEventEffect/MovementData _movementDataL
void GlobalNamespace::LightPairSinMoveEventEffect::_set__movementDataL(GlobalNamespace::LightPairSinMoveEventEffect::MovementData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_set__movementDataL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementDataL"))->offset;
  *reinterpret_cast<GlobalNamespace::LightPairSinMoveEventEffect::MovementData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private LightPairSinMoveEventEffect/MovementData _movementDataR
GlobalNamespace::LightPairSinMoveEventEffect::MovementData* GlobalNamespace::LightPairSinMoveEventEffect::_get__movementDataR() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_get__movementDataR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementDataR"))->offset;
  return *reinterpret_cast<GlobalNamespace::LightPairSinMoveEventEffect::MovementData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LightPairSinMoveEventEffect/MovementData _movementDataR
void GlobalNamespace::LightPairSinMoveEventEffect::_set__movementDataR(GlobalNamespace::LightPairSinMoveEventEffect::MovementData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_set__movementDataR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementDataR"))->offset;
  *reinterpret_cast<GlobalNamespace::LightPairSinMoveEventEffect::MovementData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _randomGenerationFrameNum
int GlobalNamespace::LightPairSinMoveEventEffect::_get__randomGenerationFrameNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_get__randomGenerationFrameNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomGenerationFrameNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _randomGenerationFrameNum
void GlobalNamespace::LightPairSinMoveEventEffect::_set__randomGenerationFrameNum(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_set__randomGenerationFrameNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomGenerationFrameNum"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _randomStartOffset
float GlobalNamespace::LightPairSinMoveEventEffect::_get__randomStartOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_get__randomStartOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomStartOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _randomStartOffset
void GlobalNamespace::LightPairSinMoveEventEffect::_set__randomStartOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::_set__randomStartOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomStartOffset"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: LightPairSinMoveEventEffect.Start
void GlobalNamespace::LightPairSinMoveEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightPairSinMoveEventEffect.Update
void GlobalNamespace::LightPairSinMoveEventEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightPairSinMoveEventEffect.OnDestroy
void GlobalNamespace::LightPairSinMoveEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightPairSinMoveEventEffect.HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
void GlobalNamespace::LightPairSinMoveEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapEventData);
}
// Autogenerated method: LightPairSinMoveEventEffect.UpdateMovementData
void GlobalNamespace::LightPairSinMoveEventEffect::UpdateMovementData(int beatmapEventDataValue, GlobalNamespace::LightPairSinMoveEventEffect::MovementData* movementData, float movementValueOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::UpdateMovementData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMovementData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventDataValue), ::il2cpp_utils::ExtractType(movementData), ::il2cpp_utils::ExtractType(movementValueOffset)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapEventDataValue, movementData, movementValueOffset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightPairSinMoveEventEffect/MovementData
#include "GlobalNamespace/LightPairSinMoveEventEffect_MovementData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean enabled
bool GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_get_enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean enabled
void GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_set_enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_set_enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enabled"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single speed
float GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_get_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_get_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single speed
void GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_set_speed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_set_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startPosition
UnityEngine::Vector3 GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_get_startPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_get_startPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Vector3 startPosition
void GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_set_startPosition(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_set_startPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPosition"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transform
UnityEngine::Transform* GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_get_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Transform transform
void GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_set_transform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_set_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single startMovementValue
float GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_get_startMovementValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_get_startMovementValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startMovementValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single startMovementValue
void GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_set_startMovementValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_set_startMovementValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startMovementValue"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single movementValue
float GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_get_movementValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_get_movementValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "movementValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single movementValue
void GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_set_movementValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_set_movementValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "movementValue"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single side
float GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_get_side() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_get_side");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "side"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single side
void GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_set_side(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightPairSinMoveEventEffect::MovementData::_set_side");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "side"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightRotationEventEffect
#include "GlobalNamespace/LightRotationEventEffect.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kSpeedMultiplier
float GlobalNamespace::LightRotationEventEffect::_get_kSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::_get_kSpeedMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LightRotationEventEffect", "kSpeedMultiplier"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSpeedMultiplier
void GlobalNamespace::LightRotationEventEffect::_set_kSpeedMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::_set_kSpeedMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightRotationEventEffect", "kSpeedMultiplier", value));
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEventType _event
GlobalNamespace::BeatmapEventType GlobalNamespace::LightRotationEventEffect::_get__event() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::_get__event");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_event"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapEventType _event
void GlobalNamespace::LightRotationEventEffect::_set__event(GlobalNamespace::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::_set__event");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_event"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _rotationVector
UnityEngine::Vector3 GlobalNamespace::LightRotationEventEffect::_get__rotationVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::_get__rotationVector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationVector"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 _rotationVector
void GlobalNamespace::LightRotationEventEffect::_set__rotationVector(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::_set__rotationVector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationVector"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotationSpeedMultiplier
float GlobalNamespace::LightRotationEventEffect::_get__rotationSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::_get__rotationSpeedMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationSpeedMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _rotationSpeedMultiplier
void GlobalNamespace::LightRotationEventEffect::_set__rotationSpeedMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::_set__rotationSpeedMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationSpeedMultiplier"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
GlobalNamespace::IBeatmapObjectCallbackController* GlobalNamespace::LightRotationEventEffect::_get__beatmapObjectCallbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::_get__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
void GlobalNamespace::LightRotationEventEffect::_set__beatmapObjectCallbackController(GlobalNamespace::IBeatmapObjectCallbackController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::_set__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
UnityEngine::Transform* GlobalNamespace::LightRotationEventEffect::_get__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::_get__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform _transform
void GlobalNamespace::LightRotationEventEffect::_set__transform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::_set__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _startRotation
UnityEngine::Quaternion GlobalNamespace::LightRotationEventEffect::_get__startRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::_get__startRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startRotation"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Quaternion _startRotation
void GlobalNamespace::LightRotationEventEffect::_set__startRotation(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::_set__startRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startRotation"))->offset;
  *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotationSpeed
float GlobalNamespace::LightRotationEventEffect::_get__rotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::_get__rotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _rotationSpeed
void GlobalNamespace::LightRotationEventEffect::_set__rotationSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::_set__rotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationSpeed"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: LightRotationEventEffect.Start
void GlobalNamespace::LightRotationEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightRotationEventEffect.Update
void GlobalNamespace::LightRotationEventEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightRotationEventEffect.OnDestroy
void GlobalNamespace::LightRotationEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightRotationEventEffect.HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
void GlobalNamespace::LightRotationEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightRotationEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapEventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightSwitchEventEffect
#include "GlobalNamespace/LightSwitchEventEffect.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: LightWithIdManager
#include "GlobalNamespace/LightWithIdManager.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kFadeSpeed
float GlobalNamespace::LightSwitchEventEffect::_get_kFadeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get_kFadeSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LightSwitchEventEffect", "kFadeSpeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kFadeSpeed
void GlobalNamespace::LightSwitchEventEffect::_set_kFadeSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set_kFadeSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightSwitchEventEffect", "kFadeSpeed", value));
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _lightColor0
GlobalNamespace::ColorSO* GlobalNamespace::LightSwitchEventEffect::_get__lightColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__lightColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor0"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ColorSO _lightColor0
void GlobalNamespace::LightSwitchEventEffect::_set__lightColor0(GlobalNamespace::ColorSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__lightColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor0"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _lightColor1
GlobalNamespace::ColorSO* GlobalNamespace::LightSwitchEventEffect::_get__lightColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__lightColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor1"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ColorSO _lightColor1
void GlobalNamespace::LightSwitchEventEffect::_set__lightColor1(GlobalNamespace::ColorSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__lightColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor1"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _highlightColor0
GlobalNamespace::ColorSO* GlobalNamespace::LightSwitchEventEffect::_get__highlightColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__highlightColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor0"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ColorSO _highlightColor0
void GlobalNamespace::LightSwitchEventEffect::_set__highlightColor0(GlobalNamespace::ColorSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__highlightColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor0"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _highlightColor1
GlobalNamespace::ColorSO* GlobalNamespace::LightSwitchEventEffect::_get__highlightColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__highlightColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor1"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ColorSO _highlightColor1
void GlobalNamespace::LightSwitchEventEffect::_set__highlightColor1(GlobalNamespace::ColorSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__highlightColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor1"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _lightColor0Boost
GlobalNamespace::ColorSO* GlobalNamespace::LightSwitchEventEffect::_get__lightColor0Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__lightColor0Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor0Boost"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ColorSO _lightColor0Boost
void GlobalNamespace::LightSwitchEventEffect::_set__lightColor0Boost(GlobalNamespace::ColorSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__lightColor0Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor0Boost"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _lightColor1Boost
GlobalNamespace::ColorSO* GlobalNamespace::LightSwitchEventEffect::_get__lightColor1Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__lightColor1Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor1Boost"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ColorSO _lightColor1Boost
void GlobalNamespace::LightSwitchEventEffect::_set__lightColor1Boost(GlobalNamespace::ColorSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__lightColor1Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor1Boost"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _highlightColor0Boost
GlobalNamespace::ColorSO* GlobalNamespace::LightSwitchEventEffect::_get__highlightColor0Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__highlightColor0Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor0Boost"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ColorSO _highlightColor0Boost
void GlobalNamespace::LightSwitchEventEffect::_set__highlightColor0Boost(GlobalNamespace::ColorSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__highlightColor0Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor0Boost"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _highlightColor1Boost
GlobalNamespace::ColorSO* GlobalNamespace::LightSwitchEventEffect::_get__highlightColor1Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__highlightColor1Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor1Boost"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ColorSO _highlightColor1Boost
void GlobalNamespace::LightSwitchEventEffect::_set__highlightColor1Boost(GlobalNamespace::ColorSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__highlightColor1Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor1Boost"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _offColorIntensity
float GlobalNamespace::LightSwitchEventEffect::_get__offColorIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__offColorIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offColorIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _offColorIntensity
void GlobalNamespace::LightSwitchEventEffect::_set__offColorIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__offColorIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offColorIntensity"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lightOnStart
bool GlobalNamespace::LightSwitchEventEffect::_get__lightOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__lightOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightOnStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _lightOnStart
void GlobalNamespace::LightSwitchEventEffect::_set__lightOnStart(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__lightOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightOnStart"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lightsID
int GlobalNamespace::LightSwitchEventEffect::_get__lightsID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__lightsID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightsID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _lightsID
void GlobalNamespace::LightSwitchEventEffect::_set__lightsID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__lightsID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightsID"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEventType _event
GlobalNamespace::BeatmapEventType GlobalNamespace::LightSwitchEventEffect::_get__event() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__event");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_event"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapEventType _event
void GlobalNamespace::LightSwitchEventEffect::_set__event(GlobalNamespace::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__event");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_event"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEventType _colorBoostEvent
GlobalNamespace::BeatmapEventType GlobalNamespace::LightSwitchEventEffect::_get__colorBoostEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__colorBoostEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorBoostEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapEventType _colorBoostEvent
void GlobalNamespace::LightSwitchEventEffect::_set__colorBoostEvent(GlobalNamespace::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__colorBoostEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorBoostEvent"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly LightWithIdManager _lightManager
GlobalNamespace::LightWithIdManager* GlobalNamespace::LightSwitchEventEffect::_get__lightManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__lightManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::LightWithIdManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly LightWithIdManager _lightManager
void GlobalNamespace::LightSwitchEventEffect::_set__lightManager(GlobalNamespace::LightWithIdManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__lightManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightManager"))->offset;
  *reinterpret_cast<GlobalNamespace::LightWithIdManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
GlobalNamespace::IBeatmapObjectCallbackController* GlobalNamespace::LightSwitchEventEffect::_get__beatmapObjectCallbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
void GlobalNamespace::LightSwitchEventEffect::_set__beatmapObjectCallbackController(GlobalNamespace::IBeatmapObjectCallbackController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lightIsOn
bool GlobalNamespace::LightSwitchEventEffect::_get__lightIsOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__lightIsOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightIsOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _lightIsOn
void GlobalNamespace::LightSwitchEventEffect::_set__lightIsOn(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__lightIsOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightIsOn"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _offColor
UnityEngine::Color GlobalNamespace::LightSwitchEventEffect::_get__offColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__offColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _offColor
void GlobalNamespace::LightSwitchEventEffect::_set__offColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__offColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _highlightValue
float GlobalNamespace::LightSwitchEventEffect::_get__highlightValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__highlightValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _highlightValue
void GlobalNamespace::LightSwitchEventEffect::_set__highlightValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__highlightValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightValue"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _afterHighlightColor
UnityEngine::Color GlobalNamespace::LightSwitchEventEffect::_get__afterHighlightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__afterHighlightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_afterHighlightColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _afterHighlightColor
void GlobalNamespace::LightSwitchEventEffect::_set__afterHighlightColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__afterHighlightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_afterHighlightColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _highlightColor
UnityEngine::Color GlobalNamespace::LightSwitchEventEffect::_get__highlightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__highlightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _highlightColor
void GlobalNamespace::LightSwitchEventEffect::_set__highlightColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__highlightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool GlobalNamespace::LightSwitchEventEffect::_get__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _initialized
void GlobalNamespace::LightSwitchEventEffect::_set__initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _colorBoost
bool GlobalNamespace::LightSwitchEventEffect::_get__colorBoost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__colorBoost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorBoost"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _colorBoost
void GlobalNamespace::LightSwitchEventEffect::_set__colorBoost(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__colorBoost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorBoost"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prevLightSwitchBeatmapEventDataValue
int GlobalNamespace::LightSwitchEventEffect::_get__prevLightSwitchBeatmapEventDataValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_get__prevLightSwitchBeatmapEventDataValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevLightSwitchBeatmapEventDataValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _prevLightSwitchBeatmapEventDataValue
void GlobalNamespace::LightSwitchEventEffect::_set__prevLightSwitchBeatmapEventDataValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::_set__prevLightSwitchBeatmapEventDataValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevLightSwitchBeatmapEventDataValue"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: LightSwitchEventEffect.get_lightsId
int GlobalNamespace::LightSwitchEventEffect::get_lightsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::get_lightsId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightsId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightSwitchEventEffect.Start
void GlobalNamespace::LightSwitchEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightSwitchEventEffect.OnDestroy
void GlobalNamespace::LightSwitchEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightSwitchEventEffect.Update
void GlobalNamespace::LightSwitchEventEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightSwitchEventEffect.HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
void GlobalNamespace::LightSwitchEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapEventData);
}
// Autogenerated method: LightSwitchEventEffect.ProcessLightSwitchEvent
void GlobalNamespace::LightSwitchEventEffect::ProcessLightSwitchEvent(int beatmapEventDataValue, bool updateColorsOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::ProcessLightSwitchEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLightSwitchEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventDataValue), ::il2cpp_utils::ExtractType(updateColorsOnly)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapEventDataValue, updateColorsOnly);
}
// Autogenerated method: LightSwitchEventEffect.GetNormalColor
UnityEngine::Color GlobalNamespace::LightSwitchEventEffect::GetNormalColor(int beatmapEventValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::GetNormalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNormalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventValue)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method, beatmapEventValue);
}
// Autogenerated method: LightSwitchEventEffect.GetHighlightColor
UnityEngine::Color GlobalNamespace::LightSwitchEventEffect::GetHighlightColor(int beatmapEventValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::GetHighlightColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHighlightColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventValue)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method, beatmapEventValue);
}
// Autogenerated method: LightSwitchEventEffect.SetColor
void GlobalNamespace::LightSwitchEventEffect::SetColor(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightSwitchEventEffect::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionClearedEnvironmentEffect
#include "GlobalNamespace/MissionClearedEnvironmentEffect.hpp"
// Including type: MissionObjectiveCheckersManager
#include "GlobalNamespace/MissionObjectiveCheckersManager.hpp"
// Including type: BeatmapObjectCallbackController
#include "GlobalNamespace/BeatmapObjectCallbackController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionObjectiveCheckersManager _missionObjectiveCheckersManager
GlobalNamespace::MissionObjectiveCheckersManager* GlobalNamespace::MissionClearedEnvironmentEffect::_get__missionObjectiveCheckersManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionClearedEnvironmentEffect::_get__missionObjectiveCheckersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveCheckersManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionObjectiveCheckersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionObjectiveCheckersManager _missionObjectiveCheckersManager
void GlobalNamespace::MissionClearedEnvironmentEffect::_set__missionObjectiveCheckersManager(GlobalNamespace::MissionObjectiveCheckersManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionClearedEnvironmentEffect::_set__missionObjectiveCheckersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveCheckersManager"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionObjectiveCheckersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapObjectCallbackController _beatmapObjectCallbackController
GlobalNamespace::BeatmapObjectCallbackController* GlobalNamespace::MissionClearedEnvironmentEffect::_get__beatmapObjectCallbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionClearedEnvironmentEffect::_get__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapObjectCallbackController _beatmapObjectCallbackController
void GlobalNamespace::MissionClearedEnvironmentEffect::_set__beatmapObjectCallbackController(GlobalNamespace::BeatmapObjectCallbackController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionClearedEnvironmentEffect::_set__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MissionClearedEnvironmentEffect.Awake
void GlobalNamespace::MissionClearedEnvironmentEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionClearedEnvironmentEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionClearedEnvironmentEffect.OnDestroy
void GlobalNamespace::MissionClearedEnvironmentEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionClearedEnvironmentEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionClearedEnvironmentEffect.HandleMissionObjectiveCheckersManagerObjectiveWasCleared
void GlobalNamespace::MissionClearedEnvironmentEffect::HandleMissionObjectiveCheckersManagerObjectiveWasCleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionClearedEnvironmentEffect::HandleMissionObjectiveCheckersManagerObjectiveWasCleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionObjectiveCheckersManagerObjectiveWasCleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteTrailEffect
#include "GlobalNamespace/NoteTrailEffect.hpp"
// Including type: NoteMovement
#include "GlobalNamespace/NoteMovement.hpp"
// Including type: NoteTrailParticleSystem
#include "GlobalNamespace/NoteTrailParticleSystem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _particlesPerFrame
int GlobalNamespace::NoteTrailEffect::_get__particlesPerFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteTrailEffect::_get__particlesPerFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particlesPerFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _particlesPerFrame
void GlobalNamespace::NoteTrailEffect::_set__particlesPerFrame(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteTrailEffect::_set__particlesPerFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particlesPerFrame"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxSpawnDistance
float GlobalNamespace::NoteTrailEffect::_get__maxSpawnDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteTrailEffect::_get__maxSpawnDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxSpawnDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _maxSpawnDistance
void GlobalNamespace::NoteTrailEffect::_set__maxSpawnDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteTrailEffect::_set__maxSpawnDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxSpawnDistance"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private NoteMovement _noteMovement
GlobalNamespace::NoteMovement* GlobalNamespace::NoteTrailEffect::_get__noteMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteTrailEffect::_get__noteMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteMovement"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteMovement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private NoteMovement _noteMovement
void GlobalNamespace::NoteTrailEffect::_set__noteMovement(GlobalNamespace::NoteMovement* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteTrailEffect::_set__noteMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteMovement"))->offset;
  *reinterpret_cast<GlobalNamespace::NoteMovement**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private NoteTrailParticleSystem _noteTrailParticleSystem
GlobalNamespace::NoteTrailParticleSystem* GlobalNamespace::NoteTrailEffect::_get__noteTrailParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteTrailEffect::_get__noteTrailParticleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteTrailParticleSystem"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteTrailParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private NoteTrailParticleSystem _noteTrailParticleSystem
void GlobalNamespace::NoteTrailEffect::_set__noteTrailParticleSystem(GlobalNamespace::NoteTrailParticleSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteTrailEffect::_set__noteTrailParticleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteTrailParticleSystem"))->offset;
  *reinterpret_cast<GlobalNamespace::NoteTrailParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: NoteTrailEffect.Awake
void GlobalNamespace::NoteTrailEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteTrailEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteTrailEffect.OnDestroy
void GlobalNamespace::NoteTrailEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteTrailEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteTrailEffect.Update
void GlobalNamespace::NoteTrailEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteTrailEffect::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteTrailEffect.HandleNoteMovementDidInit
void GlobalNamespace::NoteTrailEffect::HandleNoteMovementDidInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteTrailEffect::HandleNoteMovementDidInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteMovementDidInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteTrailEffect.HandleNoteDidStartJump
void GlobalNamespace::NoteTrailEffect::HandleNoteDidStartJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteTrailEffect::HandleNoteDidStartJump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteDidStartJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObstacleSaberSparkleEffect
#include "GlobalNamespace/ObstacleSaberSparkleEffect.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _sparkleParticleSystem
UnityEngine::ParticleSystem* GlobalNamespace::ObstacleSaberSparkleEffect::_get__sparkleParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffect::_get__sparkleParticleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparkleParticleSystem"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.ParticleSystem _sparkleParticleSystem
void GlobalNamespace::ObstacleSaberSparkleEffect::_set__sparkleParticleSystem(UnityEngine::ParticleSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffect::_set__sparkleParticleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparkleParticleSystem"))->offset;
  *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _burnParticleSystem
UnityEngine::ParticleSystem* GlobalNamespace::ObstacleSaberSparkleEffect::_get__burnParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffect::_get__burnParticleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burnParticleSystem"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.ParticleSystem _burnParticleSystem
void GlobalNamespace::ObstacleSaberSparkleEffect::_set__burnParticleSystem(UnityEngine::ParticleSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffect::_set__burnParticleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burnParticleSystem"))->offset;
  *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmissionModule _sparkleParticleSystemEmissionModule
UnityEngine::ParticleSystem::EmissionModule GlobalNamespace::ObstacleSaberSparkleEffect::_get__sparkleParticleSystemEmissionModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffect::_get__sparkleParticleSystemEmissionModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparkleParticleSystemEmissionModule"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem::EmissionModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.ParticleSystem/UnityEngine.EmissionModule _sparkleParticleSystemEmissionModule
void GlobalNamespace::ObstacleSaberSparkleEffect::_set__sparkleParticleSystemEmissionModule(UnityEngine::ParticleSystem::EmissionModule value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffect::_set__sparkleParticleSystemEmissionModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparkleParticleSystemEmissionModule"))->offset;
  *reinterpret_cast<UnityEngine::ParticleSystem::EmissionModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmissionModule _burnParticleSystemEmissionModule
UnityEngine::ParticleSystem::EmissionModule GlobalNamespace::ObstacleSaberSparkleEffect::_get__burnParticleSystemEmissionModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffect::_get__burnParticleSystemEmissionModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burnParticleSystemEmissionModule"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem::EmissionModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.ParticleSystem/UnityEngine.EmissionModule _burnParticleSystemEmissionModule
void GlobalNamespace::ObstacleSaberSparkleEffect::_set__burnParticleSystemEmissionModule(UnityEngine::ParticleSystem::EmissionModule value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffect::_set__burnParticleSystemEmissionModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burnParticleSystemEmissionModule"))->offset;
  *reinterpret_cast<UnityEngine::ParticleSystem::EmissionModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: ObstacleSaberSparkleEffect.set_color
void GlobalNamespace::ObstacleSaberSparkleEffect::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffect::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleSaberSparkleEffect.Awake
void GlobalNamespace::ObstacleSaberSparkleEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleSaberSparkleEffect.SetPositionAndRotation
void GlobalNamespace::ObstacleSaberSparkleEffect::SetPositionAndRotation(UnityEngine::Vector3 pos, UnityEngine::Quaternion rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffect::SetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pos, rot);
}
// Autogenerated method: ObstacleSaberSparkleEffect.StartEmission
void GlobalNamespace::ObstacleSaberSparkleEffect::StartEmission() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffect::StartEmission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartEmission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleSaberSparkleEffect.StopEmission
void GlobalNamespace::ObstacleSaberSparkleEffect::StopEmission() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffect::StopEmission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopEmission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ParticleSystemEventEffect
#include "GlobalNamespace/ParticleSystemEventEffect.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSO _lightColor0
GlobalNamespace::ColorSO* GlobalNamespace::ParticleSystemEventEffect::_get__lightColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_get__lightColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor0"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ColorSO _lightColor0
void GlobalNamespace::ParticleSystemEventEffect::_set__lightColor0(GlobalNamespace::ColorSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_set__lightColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor0"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _lightColor1
GlobalNamespace::ColorSO* GlobalNamespace::ParticleSystemEventEffect::_get__lightColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_get__lightColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor1"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ColorSO _lightColor1
void GlobalNamespace::ParticleSystemEventEffect::_set__lightColor1(GlobalNamespace::ColorSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_set__lightColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor1"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _highlightColor0
GlobalNamespace::ColorSO* GlobalNamespace::ParticleSystemEventEffect::_get__highlightColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_get__highlightColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor0"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ColorSO _highlightColor0
void GlobalNamespace::ParticleSystemEventEffect::_set__highlightColor0(GlobalNamespace::ColorSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_set__highlightColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor0"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _highlightColor1
GlobalNamespace::ColorSO* GlobalNamespace::ParticleSystemEventEffect::_get__highlightColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_get__highlightColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor1"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ColorSO _highlightColor1
void GlobalNamespace::ParticleSystemEventEffect::_set__highlightColor1(GlobalNamespace::ColorSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_set__highlightColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor1"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lightOnStart
bool GlobalNamespace::ParticleSystemEventEffect::_get__lightOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_get__lightOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightOnStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _lightOnStart
void GlobalNamespace::ParticleSystemEventEffect::_set__lightOnStart(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_set__lightOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightOnStart"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEventType _colorEvent
GlobalNamespace::BeatmapEventType GlobalNamespace::ParticleSystemEventEffect::_get__colorEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_get__colorEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapEventType _colorEvent
void GlobalNamespace::ParticleSystemEventEffect::_set__colorEvent(GlobalNamespace::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_set__colorEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorEvent"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _particleSystem
UnityEngine::ParticleSystem* GlobalNamespace::ParticleSystemEventEffect::_get__particleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_get__particleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSystem"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.ParticleSystem _particleSystem
void GlobalNamespace::ParticleSystemEventEffect::_set__particleSystem(UnityEngine::ParticleSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_set__particleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSystem"))->offset;
  *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
GlobalNamespace::IBeatmapObjectCallbackController* GlobalNamespace::ParticleSystemEventEffect::_get__beatmapObjectCallbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_get__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
void GlobalNamespace::ParticleSystemEventEffect::_set__beatmapObjectCallbackController(GlobalNamespace::IBeatmapObjectCallbackController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_set__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lightIsOn
bool GlobalNamespace::ParticleSystemEventEffect::_get__lightIsOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_get__lightIsOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightIsOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _lightIsOn
void GlobalNamespace::ParticleSystemEventEffect::_set__lightIsOn(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_set__lightIsOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightIsOn"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _offColor
UnityEngine::Color GlobalNamespace::ParticleSystemEventEffect::_get__offColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_get__offColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _offColor
void GlobalNamespace::ParticleSystemEventEffect::_set__offColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_set__offColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _highlightValue
float GlobalNamespace::ParticleSystemEventEffect::_get__highlightValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_get__highlightValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _highlightValue
void GlobalNamespace::ParticleSystemEventEffect::_set__highlightValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_set__highlightValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightValue"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _afterHighlightColor
UnityEngine::Color GlobalNamespace::ParticleSystemEventEffect::_get__afterHighlightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_get__afterHighlightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_afterHighlightColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _afterHighlightColor
void GlobalNamespace::ParticleSystemEventEffect::_set__afterHighlightColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_set__afterHighlightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_afterHighlightColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _highlightColor
UnityEngine::Color GlobalNamespace::ParticleSystemEventEffect::_get__highlightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_get__highlightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _highlightColor
void GlobalNamespace::ParticleSystemEventEffect::_set__highlightColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_set__highlightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single kFadeSpeed
float GlobalNamespace::ParticleSystemEventEffect::_get_kFadeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_get_kFadeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kFadeSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single kFadeSpeed
void GlobalNamespace::ParticleSystemEventEffect::_set_kFadeSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_set_kFadeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kFadeSpeed"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _particleSpeedMultiplier
float GlobalNamespace::ParticleSystemEventEffect::_get__particleSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_get__particleSpeedMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSpeedMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _particleSpeedMultiplier
void GlobalNamespace::ParticleSystemEventEffect::_set__particleSpeedMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_set__particleSpeedMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSpeedMultiplier"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.MainModule _mainModule
UnityEngine::ParticleSystem::MainModule GlobalNamespace::ParticleSystemEventEffect::_get__mainModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_get__mainModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainModule"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem::MainModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.ParticleSystem/UnityEngine.MainModule _mainModule
void GlobalNamespace::ParticleSystemEventEffect::_set__mainModule(UnityEngine::ParticleSystem::MainModule value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_set__mainModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainModule"))->offset;
  *reinterpret_cast<UnityEngine::ParticleSystem::MainModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.Particle[] _particles
::Array<UnityEngine::ParticleSystem::Particle>* GlobalNamespace::ParticleSystemEventEffect::_get__particles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_get__particles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particles"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::ParticleSystem::Particle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.ParticleSystem/UnityEngine.Particle[] _particles
void GlobalNamespace::ParticleSystemEventEffect::_set__particles(::Array<UnityEngine::ParticleSystem::Particle>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_set__particles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particles"))->offset;
  *reinterpret_cast<::Array<UnityEngine::ParticleSystem::Particle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _particleColor
UnityEngine::Color GlobalNamespace::ParticleSystemEventEffect::_get__particleColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_get__particleColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _particleColor
void GlobalNamespace::ParticleSystemEventEffect::_set__particleColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_set__particleColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _particleSpeed
float GlobalNamespace::ParticleSystemEventEffect::_get__particleSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_get__particleSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _particleSpeed
void GlobalNamespace::ParticleSystemEventEffect::_set__particleSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::_set__particleSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSpeed"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: ParticleSystemEventEffect.Start
void GlobalNamespace::ParticleSystemEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ParticleSystemEventEffect.OnDestroy
void GlobalNamespace::ParticleSystemEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ParticleSystemEventEffect.Update
void GlobalNamespace::ParticleSystemEventEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ParticleSystemEventEffect.HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
void GlobalNamespace::ParticleSystemEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapEventData);
}
// Autogenerated method: ParticleSystemEventEffect.RefreshParticles
void GlobalNamespace::ParticleSystemEventEffect::RefreshParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParticleSystemEventEffect::RefreshParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberClashEffect
#include "GlobalNamespace/SaberClashEffect.hpp"
// Including type: Libraries.HM.HMLib.VR.HapticPresetSO
#include "Libraries/HM/HMLib/VR/HapticPresetSO.hpp"
// Including type: SaberClashChecker
#include "GlobalNamespace/SaberClashChecker.hpp"
// Including type: HapticFeedbackController
#include "GlobalNamespace/HapticFeedbackController.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _sparkleParticleSystem
UnityEngine::ParticleSystem* GlobalNamespace::SaberClashEffect::_get__sparkleParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::_get__sparkleParticleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparkleParticleSystem"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.ParticleSystem _sparkleParticleSystem
void GlobalNamespace::SaberClashEffect::_set__sparkleParticleSystem(UnityEngine::ParticleSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::_set__sparkleParticleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparkleParticleSystem"))->offset;
  *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _glowParticleSystem
UnityEngine::ParticleSystem* GlobalNamespace::SaberClashEffect::_get__glowParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::_get__glowParticleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowParticleSystem"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.ParticleSystem _glowParticleSystem
void GlobalNamespace::SaberClashEffect::_set__glowParticleSystem(UnityEngine::ParticleSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::_set__glowParticleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowParticleSystem"))->offset;
  *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private Libraries.HM.HMLib.VR.HapticPresetSO _rumblePreset
Libraries::HM::HMLib::VR::HapticPresetSO* GlobalNamespace::SaberClashEffect::_get__rumblePreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::_get__rumblePreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rumblePreset"))->offset;
  return *reinterpret_cast<Libraries::HM::HMLib::VR::HapticPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private Libraries.HM.HMLib.VR.HapticPresetSO _rumblePreset
void GlobalNamespace::SaberClashEffect::_set__rumblePreset(Libraries::HM::HMLib::VR::HapticPresetSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::_set__rumblePreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rumblePreset"))->offset;
  *reinterpret_cast<Libraries::HM::HMLib::VR::HapticPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private SaberClashChecker _saberClashChecker
GlobalNamespace::SaberClashChecker* GlobalNamespace::SaberClashEffect::_get__saberClashChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::_get__saberClashChecker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberClashChecker"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberClashChecker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private SaberClashChecker _saberClashChecker
void GlobalNamespace::SaberClashEffect::_set__saberClashChecker(GlobalNamespace::SaberClashChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::_set__saberClashChecker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberClashChecker"))->offset;
  *reinterpret_cast<GlobalNamespace::SaberClashChecker**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HapticFeedbackController _hapticFeedbackController
GlobalNamespace::HapticFeedbackController* GlobalNamespace::SaberClashEffect::_get__hapticFeedbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::_get__hapticFeedbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hapticFeedbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::HapticFeedbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HapticFeedbackController _hapticFeedbackController
void GlobalNamespace::SaberClashEffect::_set__hapticFeedbackController(GlobalNamespace::HapticFeedbackController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::_set__hapticFeedbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hapticFeedbackController"))->offset;
  *reinterpret_cast<GlobalNamespace::HapticFeedbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ColorManager _colorManager
GlobalNamespace::ColorManager* GlobalNamespace::SaberClashEffect::_get__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::_get__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ColorManager _colorManager
void GlobalNamespace::SaberClashEffect::_set__colorManager(GlobalNamespace::ColorManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::_set__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmissionModule _sparkleParticleSystemEmmisionModule
UnityEngine::ParticleSystem::EmissionModule GlobalNamespace::SaberClashEffect::_get__sparkleParticleSystemEmmisionModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::_get__sparkleParticleSystemEmmisionModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparkleParticleSystemEmmisionModule"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem::EmissionModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.ParticleSystem/UnityEngine.EmissionModule _sparkleParticleSystemEmmisionModule
void GlobalNamespace::SaberClashEffect::_set__sparkleParticleSystemEmmisionModule(UnityEngine::ParticleSystem::EmissionModule value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::_set__sparkleParticleSystemEmmisionModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparkleParticleSystemEmmisionModule"))->offset;
  *reinterpret_cast<UnityEngine::ParticleSystem::EmissionModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmissionModule _glowParticleSystemEmmisionModule
UnityEngine::ParticleSystem::EmissionModule GlobalNamespace::SaberClashEffect::_get__glowParticleSystemEmmisionModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::_get__glowParticleSystemEmmisionModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowParticleSystemEmmisionModule"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem::EmissionModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.ParticleSystem/UnityEngine.EmissionModule _glowParticleSystemEmmisionModule
void GlobalNamespace::SaberClashEffect::_set__glowParticleSystemEmmisionModule(UnityEngine::ParticleSystem::EmissionModule value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::_set__glowParticleSystemEmmisionModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowParticleSystemEmmisionModule"))->offset;
  *reinterpret_cast<UnityEngine::ParticleSystem::EmissionModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sabersAreClashing
bool GlobalNamespace::SaberClashEffect::_get__sabersAreClashing() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::_get__sabersAreClashing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sabersAreClashing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _sabersAreClashing
void GlobalNamespace::SaberClashEffect::_set__sabersAreClashing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::_set__sabersAreClashing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sabersAreClashing"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: SaberClashEffect.Start
void GlobalNamespace::SaberClashEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SaberClashEffect.OnDisable
void GlobalNamespace::SaberClashEffect::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SaberClashEffect.LateUpdate
void GlobalNamespace::SaberClashEffect::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashEffect::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TunnelSmokeEventEffect
#include "GlobalNamespace/TunnelSmokeEventEffect.hpp"
// Including type: BeatmapObjectCallbackController
#include "GlobalNamespace/BeatmapObjectCallbackController.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kSpeedMultiplier
float GlobalNamespace::TunnelSmokeEventEffect::_get_kSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::_get_kSpeedMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "TunnelSmokeEventEffect", "kSpeedMultiplier"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSpeedMultiplier
void GlobalNamespace::TunnelSmokeEventEffect::_set_kSpeedMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::_set_kSpeedMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TunnelSmokeEventEffect", "kSpeedMultiplier", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxParticles
int GlobalNamespace::TunnelSmokeEventEffect::_get_kMaxParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::_get_kMaxParticles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "TunnelSmokeEventEffect", "kMaxParticles"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxParticles
void GlobalNamespace::TunnelSmokeEventEffect::_set_kMaxParticles(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::_set_kMaxParticles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TunnelSmokeEventEffect", "kMaxParticles", value));
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEventType _event
GlobalNamespace::BeatmapEventType GlobalNamespace::TunnelSmokeEventEffect::_get__event() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::_get__event");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_event"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapEventType _event
void GlobalNamespace::TunnelSmokeEventEffect::_set__event(GlobalNamespace::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::_set__event");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_event"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _particleSystem
UnityEngine::ParticleSystem* GlobalNamespace::TunnelSmokeEventEffect::_get__particleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::_get__particleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSystem"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.ParticleSystem _particleSystem
void GlobalNamespace::TunnelSmokeEventEffect::_set__particleSystem(UnityEngine::ParticleSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::_set__particleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSystem"))->offset;
  *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapObjectCallbackController _beatmapObjectCallbackController
GlobalNamespace::BeatmapObjectCallbackController* GlobalNamespace::TunnelSmokeEventEffect::_get__beatmapObjectCallbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::_get__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapObjectCallbackController _beatmapObjectCallbackController
void GlobalNamespace::TunnelSmokeEventEffect::_set__beatmapObjectCallbackController(GlobalNamespace::BeatmapObjectCallbackController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::_set__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.MainModule _mainModule
UnityEngine::ParticleSystem::MainModule GlobalNamespace::TunnelSmokeEventEffect::_get__mainModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::_get__mainModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainModule"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem::MainModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.ParticleSystem/UnityEngine.MainModule _mainModule
void GlobalNamespace::TunnelSmokeEventEffect::_set__mainModule(UnityEngine::ParticleSystem::MainModule value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::_set__mainModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainModule"))->offset;
  *reinterpret_cast<UnityEngine::ParticleSystem::MainModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.ShapeModule _shapeModule
UnityEngine::ParticleSystem::ShapeModule GlobalNamespace::TunnelSmokeEventEffect::_get__shapeModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::_get__shapeModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shapeModule"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem::ShapeModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.ParticleSystem/UnityEngine.ShapeModule _shapeModule
void GlobalNamespace::TunnelSmokeEventEffect::_set__shapeModule(UnityEngine::ParticleSystem::ShapeModule value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::_set__shapeModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shapeModule"))->offset;
  *reinterpret_cast<UnityEngine::ParticleSystem::ShapeModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.Particle[] _particles
::Array<UnityEngine::ParticleSystem::Particle>* GlobalNamespace::TunnelSmokeEventEffect::_get__particles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::_get__particles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particles"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::ParticleSystem::Particle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.ParticleSystem/UnityEngine.Particle[] _particles
void GlobalNamespace::TunnelSmokeEventEffect::_set__particles(::Array<UnityEngine::ParticleSystem::Particle>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::_set__particles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particles"))->offset;
  *reinterpret_cast<::Array<UnityEngine::ParticleSystem::Particle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: TunnelSmokeEventEffect.Start
void GlobalNamespace::TunnelSmokeEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TunnelSmokeEventEffect.OnDestroy
void GlobalNamespace::TunnelSmokeEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TunnelSmokeEventEffect.HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
void GlobalNamespace::TunnelSmokeEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TunnelSmokeEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapEventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSpawnRotation
#include "GlobalNamespace/EnvironmentSpawnRotation.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: SpawnRotationProcessor
#include "GlobalNamespace/SpawnRotationProcessor.hpp"
// Including type: BeatmapEventCallbackData
#include "GlobalNamespace/BeatmapEventCallbackData.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE380D8
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _spawnRotationID
int GlobalNamespace::EnvironmentSpawnRotation::_get__spawnRotationID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_get__spawnRotationID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EnvironmentSpawnRotation", "_spawnRotationID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _spawnRotationID
void GlobalNamespace::EnvironmentSpawnRotation::_set__spawnRotationID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_set__spawnRotationID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSpawnRotation", "_spawnRotationID", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _numberOfActiveEnvironmentSpawnRotationObjects
int GlobalNamespace::EnvironmentSpawnRotation::_get__numberOfActiveEnvironmentSpawnRotationObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_get__numberOfActiveEnvironmentSpawnRotationObjects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EnvironmentSpawnRotation", "_numberOfActiveEnvironmentSpawnRotationObjects"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _numberOfActiveEnvironmentSpawnRotationObjects
void GlobalNamespace::EnvironmentSpawnRotation::_set__numberOfActiveEnvironmentSpawnRotationObjects(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_set__numberOfActiveEnvironmentSpawnRotationObjects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSpawnRotation", "_numberOfActiveEnvironmentSpawnRotationObjects", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _aheadTime
float GlobalNamespace::EnvironmentSpawnRotation::_get__aheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_get__aheadTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_aheadTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _aheadTime
void GlobalNamespace::EnvironmentSpawnRotation::_set__aheadTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_set__aheadTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_aheadTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _smooth
float GlobalNamespace::EnvironmentSpawnRotation::_get__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_get__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _smooth
void GlobalNamespace::EnvironmentSpawnRotation::_set__smooth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_set__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
GlobalNamespace::IBeatmapObjectCallbackController* GlobalNamespace::EnvironmentSpawnRotation::_get__beatmapObjectCallbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_get__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
void GlobalNamespace::EnvironmentSpawnRotation::_set__beatmapObjectCallbackController(GlobalNamespace::IBeatmapObjectCallbackController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_set__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly SpawnRotationProcessor _spawnRotationProcessor
GlobalNamespace::SpawnRotationProcessor* GlobalNamespace::EnvironmentSpawnRotation::_get__spawnRotationProcessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_get__spawnRotationProcessor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnRotationProcessor"))->offset;
  return *reinterpret_cast<GlobalNamespace::SpawnRotationProcessor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly SpawnRotationProcessor _spawnRotationProcessor
void GlobalNamespace::EnvironmentSpawnRotation::_set__spawnRotationProcessor(GlobalNamespace::SpawnRotationProcessor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_set__spawnRotationProcessor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnRotationProcessor"))->offset;
  *reinterpret_cast<GlobalNamespace::SpawnRotationProcessor**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEventCallbackData _eventCallbackData
GlobalNamespace::BeatmapEventCallbackData* GlobalNamespace::EnvironmentSpawnRotation::_get__eventCallbackData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_get__eventCallbackData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventCallbackData"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapEventCallbackData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapEventCallbackData _eventCallbackData
void GlobalNamespace::EnvironmentSpawnRotation::_set__eventCallbackData(GlobalNamespace::BeatmapEventCallbackData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_set__eventCallbackData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventCallbackData"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapEventCallbackData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentRotation
float GlobalNamespace::EnvironmentSpawnRotation::_get__currentRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_get__currentRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _currentRotation
void GlobalNamespace::EnvironmentSpawnRotation::_set__currentRotation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_set__currentRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentRotation"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _prevRotation
float GlobalNamespace::EnvironmentSpawnRotation::_get__prevRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_get__prevRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _prevRotation
void GlobalNamespace::EnvironmentSpawnRotation::_set__prevRotation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::_set__prevRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevRotation"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: EnvironmentSpawnRotation.get_targetRotation
float GlobalNamespace::EnvironmentSpawnRotation::get_targetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::get_targetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation.Awake
void GlobalNamespace::EnvironmentSpawnRotation::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation.OnEnable
void GlobalNamespace::EnvironmentSpawnRotation::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation.OnDisable
void GlobalNamespace::EnvironmentSpawnRotation::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation.Start
void GlobalNamespace::EnvironmentSpawnRotation::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation.OnDestroy
void GlobalNamespace::EnvironmentSpawnRotation::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation.BeatmapEventAtNoteSpawnCallback
void GlobalNamespace::EnvironmentSpawnRotation::BeatmapEventAtNoteSpawnCallback(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::BeatmapEventAtNoteSpawnCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeatmapEventAtNoteSpawnCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapEventData);
}
// Autogenerated method: EnvironmentSpawnRotation.FixedUpdate
void GlobalNamespace::EnvironmentSpawnRotation::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation.LateUpdate
void GlobalNamespace::EnvironmentSpawnRotation::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation..cctor
void GlobalNamespace::EnvironmentSpawnRotation::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSpawnRotation::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EnvironmentSpawnRotation", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FlickeringNeonSign
#include "GlobalNamespace/FlickeringNeonSign.hpp"
// Including type: FlickeringNeonSign/<FlickeringCoroutine>d__16
#include "GlobalNamespace/FlickeringNeonSign_-FlickeringCoroutine-d__16.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: RandomObjectPicker`1
#include "GlobalNamespace/RandomObjectPicker_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpriteRenderer _flickeringSprite
UnityEngine::SpriteRenderer* GlobalNamespace::FlickeringNeonSign::_get__flickeringSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_get__flickeringSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flickeringSprite"))->offset;
  return *reinterpret_cast<UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.SpriteRenderer _flickeringSprite
void GlobalNamespace::FlickeringNeonSign::_set__flickeringSprite(UnityEngine::SpriteRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_set__flickeringSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flickeringSprite"))->offset;
  *reinterpret_cast<UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight _light
GlobalNamespace::TubeBloomPrePassLight* GlobalNamespace::FlickeringNeonSign::_get__light() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_get__light");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_light"))->offset;
  return *reinterpret_cast<GlobalNamespace::TubeBloomPrePassLight**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TubeBloomPrePassLight _light
void GlobalNamespace::FlickeringNeonSign::_set__light(GlobalNamespace::TubeBloomPrePassLight* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_set__light");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_light"))->offset;
  *reinterpret_cast<GlobalNamespace::TubeBloomPrePassLight**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem[] _particleSystems
::Array<UnityEngine::ParticleSystem*>* GlobalNamespace::FlickeringNeonSign::_get__particleSystems() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_get__particleSystems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSystems"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::ParticleSystem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.ParticleSystem[] _particleSystems
void GlobalNamespace::FlickeringNeonSign::_set__particleSystems(::Array<UnityEngine::ParticleSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_set__particleSystems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSystems"))->offset;
  *reinterpret_cast<::Array<UnityEngine::ParticleSystem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minOnDelay
float GlobalNamespace::FlickeringNeonSign::_get__minOnDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_get__minOnDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minOnDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _minOnDelay
void GlobalNamespace::FlickeringNeonSign::_set__minOnDelay(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_set__minOnDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minOnDelay"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxOnDelay
float GlobalNamespace::FlickeringNeonSign::_get__maxOnDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_get__maxOnDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxOnDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _maxOnDelay
void GlobalNamespace::FlickeringNeonSign::_set__maxOnDelay(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_set__maxOnDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxOnDelay"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minOffDelay
float GlobalNamespace::FlickeringNeonSign::_get__minOffDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_get__minOffDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minOffDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _minOffDelay
void GlobalNamespace::FlickeringNeonSign::_set__minOffDelay(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_set__minOffDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minOffDelay"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxOffDelay
float GlobalNamespace::FlickeringNeonSign::_get__maxOffDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_get__maxOffDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxOffDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _maxOffDelay
void GlobalNamespace::FlickeringNeonSign::_set__maxOffDelay(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_set__maxOffDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxOffDelay"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _spriteOnColor
UnityEngine::Color GlobalNamespace::FlickeringNeonSign::_get__spriteOnColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_get__spriteOnColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spriteOnColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _spriteOnColor
void GlobalNamespace::FlickeringNeonSign::_set__spriteOnColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_set__spriteOnColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spriteOnColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _lightOnColor
UnityEngine::Color GlobalNamespace::FlickeringNeonSign::_get__lightOnColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_get__lightOnColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightOnColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _lightOnColor
void GlobalNamespace::FlickeringNeonSign::_set__lightOnColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_set__lightOnColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightOnColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _onMaterial
UnityEngine::Material* GlobalNamespace::FlickeringNeonSign::_get__onMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_get__onMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Material _onMaterial
void GlobalNamespace::FlickeringNeonSign::_set__onMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_set__onMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onMaterial"))->offset;
  *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _offMaterial
UnityEngine::Material* GlobalNamespace::FlickeringNeonSign::_get__offMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_get__offMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Material _offMaterial
void GlobalNamespace::FlickeringNeonSign::_set__offMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_set__offMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offMaterial"))->offset;
  *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _sparksAudioClips
::Array<UnityEngine::AudioClip*>* GlobalNamespace::FlickeringNeonSign::_get__sparksAudioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_get__sparksAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparksAudioClips"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AudioClip[] _sparksAudioClips
void GlobalNamespace::FlickeringNeonSign::_set__sparksAudioClips(::Array<UnityEngine::AudioClip*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_set__sparksAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparksAudioClips"))->offset;
  *reinterpret_cast<::Array<UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private RandomObjectPicker`1<UnityEngine.AudioClip> _sparksAudioClipPicker
GlobalNamespace::RandomObjectPicker_1<UnityEngine::AudioClip*>* GlobalNamespace::FlickeringNeonSign::_get__sparksAudioClipPicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_get__sparksAudioClipPicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparksAudioClipPicker"))->offset;
  return *reinterpret_cast<GlobalNamespace::RandomObjectPicker_1<UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private RandomObjectPicker`1<UnityEngine.AudioClip> _sparksAudioClipPicker
void GlobalNamespace::FlickeringNeonSign::_set__sparksAudioClipPicker(GlobalNamespace::RandomObjectPicker_1<UnityEngine::AudioClip*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::_set__sparksAudioClipPicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparksAudioClipPicker"))->offset;
  *reinterpret_cast<GlobalNamespace::RandomObjectPicker_1<UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: FlickeringNeonSign.Awake
void GlobalNamespace::FlickeringNeonSign::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign.Start
void GlobalNamespace::FlickeringNeonSign::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign.OnEnable
void GlobalNamespace::FlickeringNeonSign::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign.FlickeringCoroutine
System::Collections::IEnumerator* GlobalNamespace::FlickeringNeonSign::FlickeringCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::FlickeringCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlickeringCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign.SetOn
void GlobalNamespace::FlickeringNeonSign::SetOn(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::SetOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, on);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FlickeringNeonSign/<FlickeringCoroutine>d__16
#include "GlobalNamespace/FlickeringNeonSign_-FlickeringCoroutine-d__16.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::_get_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::_set_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::_get_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::_set_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public FlickeringNeonSign <>4__this
GlobalNamespace::FlickeringNeonSign* GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::_get_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::FlickeringNeonSign**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public FlickeringNeonSign <>4__this
void GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::_set_$$4__this(GlobalNamespace::FlickeringNeonSign* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::_set_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<GlobalNamespace::FlickeringNeonSign**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: FlickeringNeonSign/<FlickeringCoroutine>d__16.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign/<FlickeringCoroutine>d__16.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign/<FlickeringCoroutine>d__16.System.IDisposable.Dispose
void GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign/<FlickeringCoroutine>d__16.MoveNext
bool GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign/<FlickeringCoroutine>d__16.System.Collections.IEnumerator.Reset
void GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingCar
#include "GlobalNamespace/FlyingCar.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _startZ
float GlobalNamespace::FlyingCar::_get__startZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingCar::_get__startZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _startZ
void GlobalNamespace::FlyingCar::_set__startZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingCar::_set__startZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startZ"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _endZ
float GlobalNamespace::FlyingCar::_get__endZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingCar::_get__endZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _endZ
void GlobalNamespace::FlyingCar::_set__endZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingCar::_set__endZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endZ"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _speed
float GlobalNamespace::FlyingCar::_get__speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingCar::_get__speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _speed
void GlobalNamespace::FlyingCar::_set__speed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingCar::_set__speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speed"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _progress
float GlobalNamespace::FlyingCar::_get__progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingCar::_get__progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _progress
void GlobalNamespace::FlyingCar::_set__progress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingCar::_set__progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progress"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _pos
UnityEngine::Vector3 GlobalNamespace::FlyingCar::_get__pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingCar::_get__pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 _pos
void GlobalNamespace::FlyingCar::_set__pos(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingCar::_set__pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: FlyingCar.Start
void GlobalNamespace::FlyingCar::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingCar::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FlyingCar.Update
void GlobalNamespace::FlyingCar::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingCar::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FlyingCar.UpdatePos
void GlobalNamespace::FlyingCar::UpdatePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingCar::UpdatePos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingGameHUDRotation
#include "GlobalNamespace/FlyingGameHUDRotation.hpp"
// Including type: BeatLineManager
#include "GlobalNamespace/BeatLineManager.hpp"
// Including type: EnvironmentSpawnRotation
#include "GlobalNamespace/EnvironmentSpawnRotation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _smooth
float GlobalNamespace::FlyingGameHUDRotation::_get__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingGameHUDRotation::_get__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _smooth
void GlobalNamespace::FlyingGameHUDRotation::_set__smooth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingGameHUDRotation::_set__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatLineManager _beatLineManager
GlobalNamespace::BeatLineManager* GlobalNamespace::FlyingGameHUDRotation::_get__beatLineManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingGameHUDRotation::_get__beatLineManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatLineManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatLineManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly BeatLineManager _beatLineManager
void GlobalNamespace::FlyingGameHUDRotation::_set__beatLineManager(GlobalNamespace::BeatLineManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingGameHUDRotation::_set__beatLineManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatLineManager"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatLineManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentSpawnRotation _environmentSpawnRotation
GlobalNamespace::EnvironmentSpawnRotation* GlobalNamespace::FlyingGameHUDRotation::_get__environmentSpawnRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingGameHUDRotation::_get__environmentSpawnRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentSpawnRotation"))->offset;
  return *reinterpret_cast<GlobalNamespace::EnvironmentSpawnRotation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly EnvironmentSpawnRotation _environmentSpawnRotation
void GlobalNamespace::FlyingGameHUDRotation::_set__environmentSpawnRotation(GlobalNamespace::EnvironmentSpawnRotation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingGameHUDRotation::_set__environmentSpawnRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentSpawnRotation"))->offset;
  *reinterpret_cast<GlobalNamespace::EnvironmentSpawnRotation**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _prevYAngle
float GlobalNamespace::FlyingGameHUDRotation::_get__prevYAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingGameHUDRotation::_get__prevYAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevYAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _prevYAngle
void GlobalNamespace::FlyingGameHUDRotation::_set__prevYAngle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingGameHUDRotation::_set__prevYAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevYAngle"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _yAngle
float GlobalNamespace::FlyingGameHUDRotation::_get__yAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingGameHUDRotation::_get__yAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _yAngle
void GlobalNamespace::FlyingGameHUDRotation::_set__yAngle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingGameHUDRotation::_set__yAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yAngle"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: FlyingGameHUDRotation.Start
void GlobalNamespace::FlyingGameHUDRotation::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingGameHUDRotation::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FlyingGameHUDRotation.FixedUpdate
void GlobalNamespace::FlyingGameHUDRotation::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingGameHUDRotation::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FlyingGameHUDRotation.LateUpdate
void GlobalNamespace::FlyingGameHUDRotation::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingGameHUDRotation::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MovementBeatmapEventEffect
#include "GlobalNamespace/MovementBeatmapEventEffect.hpp"
// Including type: MovementBeatmapEventEffect/MovementData
#include "GlobalNamespace/MovementBeatmapEventEffect_MovementData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapEventType _beatmapEventType
GlobalNamespace::BeatmapEventType GlobalNamespace::MovementBeatmapEventEffect::_get__beatmapEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::_get__beatmapEventType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEventType"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapEventType _beatmapEventType
void GlobalNamespace::MovementBeatmapEventEffect::_set__beatmapEventType(GlobalNamespace::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::_set__beatmapEventType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEventType"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _transitionSpeed
float GlobalNamespace::MovementBeatmapEventEffect::_get__transitionSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::_get__transitionSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transitionSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _transitionSpeed
void GlobalNamespace::MovementBeatmapEventEffect::_set__transitionSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::_set__transitionSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transitionSpeed"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MovementBeatmapEventEffect/MovementData[] _movementData
::Array<GlobalNamespace::MovementBeatmapEventEffect::MovementData*>* GlobalNamespace::MovementBeatmapEventEffect::_get__movementData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::_get__movementData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementData"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::MovementBeatmapEventEffect::MovementData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MovementBeatmapEventEffect/MovementData[] _movementData
void GlobalNamespace::MovementBeatmapEventEffect::_set__movementData(::Array<GlobalNamespace::MovementBeatmapEventEffect::MovementData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::_set__movementData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementData"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::MovementBeatmapEventEffect::MovementData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] _transforms
::Array<UnityEngine::Transform*>* GlobalNamespace::MovementBeatmapEventEffect::_get__transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::_get__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform[] _transforms
void GlobalNamespace::MovementBeatmapEventEffect::_set__transforms(::Array<UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::_set__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  *reinterpret_cast<::Array<UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
GlobalNamespace::IBeatmapObjectCallbackController* GlobalNamespace::MovementBeatmapEventEffect::_get__beatmapObjectCallbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::_get__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
void GlobalNamespace::MovementBeatmapEventEffect::_set__beatmapObjectCallbackController(GlobalNamespace::IBeatmapObjectCallbackController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::_set__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentMovementDataIdx
int GlobalNamespace::MovementBeatmapEventEffect::_get__currentMovementDataIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::_get__currentMovementDataIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentMovementDataIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _currentMovementDataIdx
void GlobalNamespace::MovementBeatmapEventEffect::_set__currentMovementDataIdx(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::_set__currentMovementDataIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentMovementDataIdx"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _currentPositionOffset
UnityEngine::Vector3 GlobalNamespace::MovementBeatmapEventEffect::_get__currentPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::_get__currentPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPositionOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 _currentPositionOffset
void GlobalNamespace::MovementBeatmapEventEffect::_set__currentPositionOffset(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::_set__currentPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPositionOffset"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _prevPositionOffset
UnityEngine::Vector3 GlobalNamespace::MovementBeatmapEventEffect::_get__prevPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::_get__prevPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPositionOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 _prevPositionOffset
void GlobalNamespace::MovementBeatmapEventEffect::_set__prevPositionOffset(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::_set__prevPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPositionOffset"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _startLocalPositions
::Array<UnityEngine::Vector3>* GlobalNamespace::MovementBeatmapEventEffect::_get__startLocalPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::_get__startLocalPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startLocalPositions"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3[] _startLocalPositions
void GlobalNamespace::MovementBeatmapEventEffect::_set__startLocalPositions(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::_set__startLocalPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startLocalPositions"))->offset;
  *reinterpret_cast<::Array<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MovementBeatmapEventEffect.Start
void GlobalNamespace::MovementBeatmapEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MovementBeatmapEventEffect.OnDestroy
void GlobalNamespace::MovementBeatmapEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MovementBeatmapEventEffect.FixedUpdate
void GlobalNamespace::MovementBeatmapEventEffect::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MovementBeatmapEventEffect.LateUpdate
void GlobalNamespace::MovementBeatmapEventEffect::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MovementBeatmapEventEffect.HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
void GlobalNamespace::MovementBeatmapEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapEventData);
}
// Autogenerated method: MovementBeatmapEventEffect.SetLocalPositionOffsetsForAllObjects
void GlobalNamespace::MovementBeatmapEventEffect::SetLocalPositionOffsetsForAllObjects(UnityEngine::Vector3 localPositionOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::SetLocalPositionOffsetsForAllObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPositionOffsetsForAllObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localPositionOffset)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, localPositionOffset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MovementBeatmapEventEffect/MovementData
#include "GlobalNamespace/MovementBeatmapEventEffect_MovementData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _localPositionOffset
UnityEngine::Vector3 GlobalNamespace::MovementBeatmapEventEffect::MovementData::_get__localPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::MovementData::_get__localPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPositionOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 _localPositionOffset
void GlobalNamespace::MovementBeatmapEventEffect::MovementData::_set__localPositionOffset(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::MovementData::_set__localPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPositionOffset"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MovementBeatmapEventEffect/MovementData.get_localPositionOffset
UnityEngine::Vector3 GlobalNamespace::MovementBeatmapEventEffect::MovementData::get_localPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementBeatmapEventEffect::MovementData::get_localPositionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPositionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RectangleFakeGlow
#include "GlobalNamespace/RectangleFakeGlow.hpp"
// Including type: MaterialPropertyBlockController
#include "GlobalNamespace/MaterialPropertyBlockController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE38310
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _colorID
int GlobalNamespace::RectangleFakeGlow::_get__colorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::_get__colorID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "RectangleFakeGlow", "_colorID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _colorID
void GlobalNamespace::RectangleFakeGlow::_set__colorID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::_set__colorID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RectangleFakeGlow", "_colorID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE38320
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _sizeParamsID
int GlobalNamespace::RectangleFakeGlow::_get__sizeParamsID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::_get__sizeParamsID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "RectangleFakeGlow", "_sizeParamsID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _sizeParamsID
void GlobalNamespace::RectangleFakeGlow::_set__sizeParamsID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::_set__sizeParamsID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RectangleFakeGlow", "_sizeParamsID", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _size
UnityEngine::Vector2 GlobalNamespace::RectangleFakeGlow::_get__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::_get__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector2 _size
void GlobalNamespace::RectangleFakeGlow::_set__size(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::_set__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  *reinterpret_cast<UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _edgeSize
float GlobalNamespace::RectangleFakeGlow::_get__edgeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::_get__edgeSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_edgeSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _edgeSize
void GlobalNamespace::RectangleFakeGlow::_set__edgeSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::_set__edgeSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_edgeSize"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
UnityEngine::Color GlobalNamespace::RectangleFakeGlow::_get__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::_get__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _color
void GlobalNamespace::RectangleFakeGlow::_set__color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::_set__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockController _materialPropertyBlockController
GlobalNamespace::MaterialPropertyBlockController* GlobalNamespace::RectangleFakeGlow::_get__materialPropertyBlockController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::_get__materialPropertyBlockController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlockController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MaterialPropertyBlockController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MaterialPropertyBlockController _materialPropertyBlockController
void GlobalNamespace::RectangleFakeGlow::_set__materialPropertyBlockController(GlobalNamespace::MaterialPropertyBlockController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::_set__materialPropertyBlockController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlockController"))->offset;
  *reinterpret_cast<GlobalNamespace::MaterialPropertyBlockController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: RectangleFakeGlow.get_color
UnityEngine::Color GlobalNamespace::RectangleFakeGlow::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RectangleFakeGlow.set_color
void GlobalNamespace::RectangleFakeGlow::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: RectangleFakeGlow.Awake
void GlobalNamespace::RectangleFakeGlow::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RectangleFakeGlow.OnEnable
void GlobalNamespace::RectangleFakeGlow::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RectangleFakeGlow.OnDisable
void GlobalNamespace::RectangleFakeGlow::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RectangleFakeGlow.Refresh
void GlobalNamespace::RectangleFakeGlow::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RectangleFakeGlow..cctor
void GlobalNamespace::RectangleFakeGlow::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlow::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RectangleFakeGlow", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RectangleFakeGlowLightWithId
#include "GlobalNamespace/RectangleFakeGlowLightWithId.hpp"
// Including type: RectangleFakeGlow
#include "GlobalNamespace/RectangleFakeGlow.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _minAlpha
float GlobalNamespace::RectangleFakeGlowLightWithId::_get__minAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlowLightWithId::_get__minAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _minAlpha
void GlobalNamespace::RectangleFakeGlowLightWithId::_set__minAlpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlowLightWithId::_set__minAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minAlpha"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _alphaMul
float GlobalNamespace::RectangleFakeGlowLightWithId::_get__alphaMul() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlowLightWithId::_get__alphaMul");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alphaMul"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _alphaMul
void GlobalNamespace::RectangleFakeGlowLightWithId::_set__alphaMul(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlowLightWithId::_set__alphaMul");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alphaMul"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private RectangleFakeGlow _rectangleFakeGlow
GlobalNamespace::RectangleFakeGlow* GlobalNamespace::RectangleFakeGlowLightWithId::_get__rectangleFakeGlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlowLightWithId::_get__rectangleFakeGlow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectangleFakeGlow"))->offset;
  return *reinterpret_cast<GlobalNamespace::RectangleFakeGlow**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private RectangleFakeGlow _rectangleFakeGlow
void GlobalNamespace::RectangleFakeGlowLightWithId::_set__rectangleFakeGlow(GlobalNamespace::RectangleFakeGlow* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlowLightWithId::_set__rectangleFakeGlow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectangleFakeGlow"))->offset;
  *reinterpret_cast<GlobalNamespace::RectangleFakeGlow**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: RectangleFakeGlowLightWithId.get_color
UnityEngine::Color GlobalNamespace::RectangleFakeGlowLightWithId::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlowLightWithId::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RectangleFakeGlowLightWithId.ColorWasSet
void GlobalNamespace::RectangleFakeGlowLightWithId::ColorWasSet(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RectangleFakeGlowLightWithId::ColorWasSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RotateBySpawnRotation
#include "GlobalNamespace/RotateBySpawnRotation.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: SpawnRotationProcessor
#include "GlobalNamespace/SpawnRotationProcessor.hpp"
// Including type: BeatmapEventCallbackData
#include "GlobalNamespace/BeatmapEventCallbackData.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _aheadTime
float GlobalNamespace::RotateBySpawnRotation::_get__aheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::_get__aheadTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_aheadTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _aheadTime
void GlobalNamespace::RotateBySpawnRotation::_set__aheadTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::_set__aheadTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_aheadTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _smooth
float GlobalNamespace::RotateBySpawnRotation::_get__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::_get__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _smooth
void GlobalNamespace::RotateBySpawnRotation::_set__smooth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::_set__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
GlobalNamespace::IBeatmapObjectCallbackController* GlobalNamespace::RotateBySpawnRotation::_get__beatmapObjectCallbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::_get__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
void GlobalNamespace::RotateBySpawnRotation::_set__beatmapObjectCallbackController(GlobalNamespace::IBeatmapObjectCallbackController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::_set__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly SpawnRotationProcessor _spawnRotationProcessor
GlobalNamespace::SpawnRotationProcessor* GlobalNamespace::RotateBySpawnRotation::_get__spawnRotationProcessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::_get__spawnRotationProcessor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnRotationProcessor"))->offset;
  return *reinterpret_cast<GlobalNamespace::SpawnRotationProcessor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly SpawnRotationProcessor _spawnRotationProcessor
void GlobalNamespace::RotateBySpawnRotation::_set__spawnRotationProcessor(GlobalNamespace::SpawnRotationProcessor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::_set__spawnRotationProcessor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnRotationProcessor"))->offset;
  *reinterpret_cast<GlobalNamespace::SpawnRotationProcessor**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEventCallbackData _eventCallbackData
GlobalNamespace::BeatmapEventCallbackData* GlobalNamespace::RotateBySpawnRotation::_get__eventCallbackData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::_get__eventCallbackData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventCallbackData"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapEventCallbackData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapEventCallbackData _eventCallbackData
void GlobalNamespace::RotateBySpawnRotation::_set__eventCallbackData(GlobalNamespace::BeatmapEventCallbackData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::_set__eventCallbackData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventCallbackData"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapEventCallbackData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentRotation
float GlobalNamespace::RotateBySpawnRotation::_get__currentRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::_get__currentRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _currentRotation
void GlobalNamespace::RotateBySpawnRotation::_set__currentRotation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::_set__currentRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentRotation"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _prevRotation
float GlobalNamespace::RotateBySpawnRotation::_get__prevRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::_get__prevRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _prevRotation
void GlobalNamespace::RotateBySpawnRotation::_set__prevRotation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::_set__prevRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevRotation"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: RotateBySpawnRotation.Awake
void GlobalNamespace::RotateBySpawnRotation::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RotateBySpawnRotation.Start
void GlobalNamespace::RotateBySpawnRotation::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RotateBySpawnRotation.OnDestroy
void GlobalNamespace::RotateBySpawnRotation::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RotateBySpawnRotation.BeatmapEventAtNoteSpawnCallback
void GlobalNamespace::RotateBySpawnRotation::BeatmapEventAtNoteSpawnCallback(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::BeatmapEventAtNoteSpawnCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeatmapEventAtNoteSpawnCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapEventData);
}
// Autogenerated method: RotateBySpawnRotation.FixedUpdate
void GlobalNamespace::RotateBySpawnRotation::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RotateBySpawnRotation.LateUpdate
void GlobalNamespace::RotateBySpawnRotation::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RotateBySpawnRotation::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpawnChevronObjectPoolsInstaller
#include "GlobalNamespace/SpawnChevronObjectPoolsInstaller.hpp"
// Including type: SpawnRotationChevron
#include "GlobalNamespace/SpawnRotationChevron.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SpawnRotationChevron _spawnRotationChevronPrefab
GlobalNamespace::SpawnRotationChevron* GlobalNamespace::SpawnChevronObjectPoolsInstaller::_get__spawnRotationChevronPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnChevronObjectPoolsInstaller::_get__spawnRotationChevronPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnRotationChevronPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::SpawnRotationChevron**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private SpawnRotationChevron _spawnRotationChevronPrefab
void GlobalNamespace::SpawnChevronObjectPoolsInstaller::_set__spawnRotationChevronPrefab(GlobalNamespace::SpawnRotationChevron* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnChevronObjectPoolsInstaller::_set__spawnRotationChevronPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnRotationChevronPrefab"))->offset;
  *reinterpret_cast<GlobalNamespace::SpawnRotationChevron**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: SpawnChevronObjectPoolsInstaller.InstallBindings
void GlobalNamespace::SpawnChevronObjectPoolsInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnChevronObjectPoolsInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SpawnRotationChevron
#include "GlobalNamespace/SpawnRotationChevron.hpp"
// Including type: SpawnRotationChevron/Pool
#include "GlobalNamespace/SpawnRotationChevron_Pool.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight[] _lights
::Array<GlobalNamespace::TubeBloomPrePassLight*>* GlobalNamespace::SpawnRotationChevron::_get__lights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevron::_get__lights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lights"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::TubeBloomPrePassLight*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TubeBloomPrePassLight[] _lights
void GlobalNamespace::SpawnRotationChevron::_set__lights(::Array<GlobalNamespace::TubeBloomPrePassLight*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevron::_set__lights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lights"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::TubeBloomPrePassLight*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
UnityEngine::Color GlobalNamespace::SpawnRotationChevron::_get__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevron::_get__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _color
void GlobalNamespace::SpawnRotationChevron::_set__color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevron::_set__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lightAmount
float GlobalNamespace::SpawnRotationChevron::_get__lightAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevron::_get__lightAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _lightAmount
void GlobalNamespace::SpawnRotationChevron::_set__lightAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevron::_set__lightAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightAmount"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: SpawnRotationChevron.SetLightAmount
void GlobalNamespace::SpawnRotationChevron::SetLightAmount(float amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevron::SetLightAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLightAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amount)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, amount);
}
// Autogenerated method: SpawnRotationChevron.UpdateLights
void GlobalNamespace::SpawnRotationChevron::UpdateLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevron::UpdateLights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpawnRotationChevron.ColorWasSet
void GlobalNamespace::SpawnRotationChevron::ColorWasSet(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevron::ColorWasSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpawnRotationChevron/Pool
#include "GlobalNamespace/SpawnRotationChevron_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpawnRotationChevronManager
#include "GlobalNamespace/SpawnRotationChevronManager.hpp"
// Including type: SpawnRotationChevronManager/DirectionData
#include "GlobalNamespace/SpawnRotationChevronManager_DirectionData.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: BeatmapObjectSpawnController
#include "GlobalNamespace/BeatmapObjectSpawnController.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: SpawnRotationProcessor
#include "GlobalNamespace/SpawnRotationProcessor.hpp"
// Including type: BeatmapObjectCallbackData
#include "GlobalNamespace/BeatmapObjectCallbackData.hpp"
// Including type: BeatmapEventCallbackData
#include "GlobalNamespace/BeatmapEventCallbackData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: SpawnRotationChevron/Pool
#include "GlobalNamespace/SpawnRotationChevron_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _fadeInTime
float GlobalNamespace::SpawnRotationChevronManager::_get__fadeInTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_get__fadeInTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _fadeInTime
void GlobalNamespace::SpawnRotationChevronManager::_set__fadeInTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_set__fadeInTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fadeOutTime
float GlobalNamespace::SpawnRotationChevronManager::_get__fadeOutTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_get__fadeOutTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeOutTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _fadeOutTime
void GlobalNamespace::SpawnRotationChevronManager::_set__fadeOutTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_set__fadeOutTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeOutTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _jumpStartOffsetTime
float GlobalNamespace::SpawnRotationChevronManager::_get__jumpStartOffsetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_get__jumpStartOffsetTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jumpStartOffsetTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _jumpStartOffsetTime
void GlobalNamespace::SpawnRotationChevronManager::_set__jumpStartOffsetTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_set__jumpStartOffsetTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jumpStartOffsetTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cutOffsetTime
float GlobalNamespace::SpawnRotationChevronManager::_get__cutOffsetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_get__cutOffsetTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutOffsetTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _cutOffsetTime
void GlobalNamespace::SpawnRotationChevronManager::_set__cutOffsetTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_set__cutOffsetTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutOffsetTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _fadeInLightAmountCurve
UnityEngine::AnimationCurve* GlobalNamespace::SpawnRotationChevronManager::_get__fadeInLightAmountCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_get__fadeInLightAmountCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInLightAmountCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationCurve _fadeInLightAmountCurve
void GlobalNamespace::SpawnRotationChevronManager::_set__fadeInLightAmountCurve(UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_set__fadeInLightAmountCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInLightAmountCurve"))->offset;
  *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _fadeOutLightAmountCurve
UnityEngine::AnimationCurve* GlobalNamespace::SpawnRotationChevronManager::_get__fadeOutLightAmountCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_get__fadeOutLightAmountCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeOutLightAmountCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AnimationCurve _fadeOutLightAmountCurve
void GlobalNamespace::SpawnRotationChevronManager::_set__fadeOutLightAmountCurve(UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_set__fadeOutLightAmountCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeOutLightAmountCurve"))->offset;
  *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly SpawnRotationChevron/Pool _chevronPool
GlobalNamespace::SpawnRotationChevron::Pool* GlobalNamespace::SpawnRotationChevronManager::_get__chevronPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_get__chevronPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_chevronPool"))->offset;
  return *reinterpret_cast<GlobalNamespace::SpawnRotationChevron::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly SpawnRotationChevron/Pool _chevronPool
void GlobalNamespace::SpawnRotationChevronManager::_set__chevronPool(GlobalNamespace::SpawnRotationChevron::Pool* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_set__chevronPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_chevronPool"))->offset;
  *reinterpret_cast<GlobalNamespace::SpawnRotationChevron::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSyncController
GlobalNamespace::IAudioTimeSource* GlobalNamespace::SpawnRotationChevronManager::_get__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_get__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IAudioTimeSource _audioTimeSyncController
void GlobalNamespace::SpawnRotationChevronManager::_set__audioTimeSyncController(GlobalNamespace::IAudioTimeSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_set__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  *reinterpret_cast<GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectSpawnController _beatmapObjectSpawnController
GlobalNamespace::BeatmapObjectSpawnController* GlobalNamespace::SpawnRotationChevronManager::_get__beatmapObjectSpawnController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_get__beatmapObjectSpawnController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectSpawnController"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectSpawnController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly BeatmapObjectSpawnController _beatmapObjectSpawnController
void GlobalNamespace::SpawnRotationChevronManager::_set__beatmapObjectSpawnController(GlobalNamespace::BeatmapObjectSpawnController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_set__beatmapObjectSpawnController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectSpawnController"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapObjectSpawnController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
GlobalNamespace::IBeatmapObjectCallbackController* GlobalNamespace::SpawnRotationChevronManager::_get__beatmapObjectCallbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_get__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
void GlobalNamespace::SpawnRotationChevronManager::_set__beatmapObjectCallbackController(GlobalNamespace::IBeatmapObjectCallbackController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_set__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly SpawnRotationProcessor _spawnRotationProcessor
GlobalNamespace::SpawnRotationProcessor* GlobalNamespace::SpawnRotationChevronManager::_get__spawnRotationProcessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_get__spawnRotationProcessor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnRotationProcessor"))->offset;
  return *reinterpret_cast<GlobalNamespace::SpawnRotationProcessor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly SpawnRotationProcessor _spawnRotationProcessor
void GlobalNamespace::SpawnRotationChevronManager::_set__spawnRotationProcessor(GlobalNamespace::SpawnRotationProcessor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_set__spawnRotationProcessor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnRotationProcessor"))->offset;
  *reinterpret_cast<GlobalNamespace::SpawnRotationProcessor**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapObjectCallbackData _beatmapObjectCallbackData
GlobalNamespace::BeatmapObjectCallbackData* GlobalNamespace::SpawnRotationChevronManager::_get__beatmapObjectCallbackData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_get__beatmapObjectCallbackData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackData"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectCallbackData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapObjectCallbackData _beatmapObjectCallbackData
void GlobalNamespace::SpawnRotationChevronManager::_set__beatmapObjectCallbackData(GlobalNamespace::BeatmapObjectCallbackData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_set__beatmapObjectCallbackData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackData"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapObjectCallbackData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEventCallbackData _beatmapEventCallbackData
GlobalNamespace::BeatmapEventCallbackData* GlobalNamespace::SpawnRotationChevronManager::_get__beatmapEventCallbackData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_get__beatmapEventCallbackData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEventCallbackData"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapEventCallbackData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapEventCallbackData _beatmapEventCallbackData
void GlobalNamespace::SpawnRotationChevronManager::_set__beatmapEventCallbackData(GlobalNamespace::BeatmapEventCallbackData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_set__beatmapEventCallbackData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEventCallbackData"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapEventCallbackData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,SpawnRotationChevronManager/DirectionData> _directionToDataDictionary
System::Collections::Generic::Dictionary_2<int, GlobalNamespace::SpawnRotationChevronManager::DirectionData*>* GlobalNamespace::SpawnRotationChevronManager::_get__directionToDataDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_get__directionToDataDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionToDataDictionary"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<int, GlobalNamespace::SpawnRotationChevronManager::DirectionData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.Dictionary`2<System.Int32,SpawnRotationChevronManager/DirectionData> _directionToDataDictionary
void GlobalNamespace::SpawnRotationChevronManager::_set__directionToDataDictionary(System::Collections::Generic::Dictionary_2<int, GlobalNamespace::SpawnRotationChevronManager::DirectionData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_set__directionToDataDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionToDataDictionary"))->offset;
  *reinterpret_cast<System::Collections::Generic::Dictionary_2<int, GlobalNamespace::SpawnRotationChevronManager::DirectionData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.Int32> _activeDirections
System::Collections::Generic::HashSet_1<int>* GlobalNamespace::SpawnRotationChevronManager::_get__activeDirections() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_get__activeDirections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeDirections"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.HashSet`1<System.Int32> _activeDirections
void GlobalNamespace::SpawnRotationChevronManager::_set__activeDirections(System::Collections::Generic::HashSet_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_set__activeDirections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeDirections"))->offset;
  *reinterpret_cast<System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> _reusableDirectionsList
System::Collections::Generic::List_1<int>* GlobalNamespace::SpawnRotationChevronManager::_get__reusableDirectionsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_get__reusableDirectionsList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reusableDirectionsList"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<System.Int32> _reusableDirectionsList
void GlobalNamespace::SpawnRotationChevronManager::_set__reusableDirectionsList(System::Collections::Generic::List_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_set__reusableDirectionsList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reusableDirectionsList"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _moveDuration
float GlobalNamespace::SpawnRotationChevronManager::_get__moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_get__moveDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _moveDuration
void GlobalNamespace::SpawnRotationChevronManager::_set__moveDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_set__moveDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveDuration"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _halfJumpDuration
float GlobalNamespace::SpawnRotationChevronManager::_get__halfJumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_get__halfJumpDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_halfJumpDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _halfJumpDuration
void GlobalNamespace::SpawnRotationChevronManager::_set__halfJumpDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::_set__halfJumpDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_halfJumpDuration"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: SpawnRotationChevronManager.Start
void GlobalNamespace::SpawnRotationChevronManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpawnRotationChevronManager.Update
void GlobalNamespace::SpawnRotationChevronManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpawnRotationChevronManager.OnDestroy
void GlobalNamespace::SpawnRotationChevronManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpawnRotationChevronManager.HandleBeatmapObjectCallback
void GlobalNamespace::SpawnRotationChevronManager::HandleBeatmapObjectCallback(GlobalNamespace::BeatmapObjectData* beatmapObjectData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::HandleBeatmapObjectCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapObjectData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapObjectData);
}
// Autogenerated method: SpawnRotationChevronManager.HandleBeatmapEventCallback
void GlobalNamespace::SpawnRotationChevronManager::HandleBeatmapEventCallback(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::HandleBeatmapEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapEventData);
}
// Autogenerated method: SpawnRotationChevronManager.HandleBeatmapObjectSpawnControllerDidInit
void GlobalNamespace::SpawnRotationChevronManager::HandleBeatmapObjectSpawnControllerDidInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::HandleBeatmapObjectSpawnControllerDidInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectSpawnControllerDidInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpawnRotationChevronManager/DirectionData
#include "GlobalNamespace/SpawnRotationChevronManager_DirectionData.hpp"
// Including type: SpawnRotationChevron
#include "GlobalNamespace/SpawnRotationChevron.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SpawnRotationChevron chevron
GlobalNamespace::SpawnRotationChevron* GlobalNamespace::SpawnRotationChevronManager::DirectionData::_get_chevron() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::DirectionData::_get_chevron");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chevron"))->offset;
  return *reinterpret_cast<GlobalNamespace::SpawnRotationChevron**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public SpawnRotationChevron chevron
void GlobalNamespace::SpawnRotationChevronManager::DirectionData::_set_chevron(GlobalNamespace::SpawnRotationChevron* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::DirectionData::_set_chevron");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chevron"))->offset;
  *reinterpret_cast<GlobalNamespace::SpawnRotationChevron**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean fullyLid
bool GlobalNamespace::SpawnRotationChevronManager::DirectionData::_get_fullyLid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::DirectionData::_get_fullyLid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullyLid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean fullyLid
void GlobalNamespace::SpawnRotationChevronManager::DirectionData::_set_fullyLid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::DirectionData::_set_fullyLid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullyLid"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeOutStartTime
float GlobalNamespace::SpawnRotationChevronManager::DirectionData::_get_fadeOutStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::DirectionData::_get_fadeOutStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeOutStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single fadeOutStartTime
void GlobalNamespace::SpawnRotationChevronManager::DirectionData::_set_fadeOutStartTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::DirectionData::_set_fadeOutStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeOutStartTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeInEndTime
float GlobalNamespace::SpawnRotationChevronManager::DirectionData::_get_fadeInEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::DirectionData::_get_fadeInEndTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeInEndTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single fadeInEndTime
void GlobalNamespace::SpawnRotationChevronManager::DirectionData::_set_fadeInEndTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationChevronManager::DirectionData::_set_fadeInEndTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeInEndTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BasicSpectrogramData
#include "GlobalNamespace/BasicSpectrogramData.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kNumberOfSamples
int GlobalNamespace::BasicSpectrogramData::_get_kNumberOfSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::_get_kNumberOfSamples");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BasicSpectrogramData", "kNumberOfSamples"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kNumberOfSamples
void GlobalNamespace::BasicSpectrogramData::_set_kNumberOfSamples(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::_set_kNumberOfSamples");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicSpectrogramData", "kNumberOfSamples", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
UnityEngine::AudioSource* GlobalNamespace::BasicSpectrogramData::_get__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::_get__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AudioSource _audioSource
void GlobalNamespace::BasicSpectrogramData::_set__audioSource(UnityEngine::AudioSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::_set__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  *reinterpret_cast<UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _instantChangeThreshold
float GlobalNamespace::BasicSpectrogramData::_get__instantChangeThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::_get__instantChangeThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_instantChangeThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _instantChangeThreshold
void GlobalNamespace::BasicSpectrogramData::_set__instantChangeThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::_set__instantChangeThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_instantChangeThreshold"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasData
bool GlobalNamespace::BasicSpectrogramData::_get__hasData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::_get__hasData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasData"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _hasData
void GlobalNamespace::BasicSpectrogramData::_set__hasData(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::_set__hasData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasData"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasProcessedData
bool GlobalNamespace::BasicSpectrogramData::_get__hasProcessedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::_get__hasProcessedData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasProcessedData"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _hasProcessedData
void GlobalNamespace::BasicSpectrogramData::_set__hasProcessedData(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::_set__hasProcessedData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasProcessedData"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _samples
::Array<float>* GlobalNamespace::BasicSpectrogramData::_get__samples() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::_get__samples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_samples"))->offset;
  return *reinterpret_cast<::Array<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single[] _samples
void GlobalNamespace::BasicSpectrogramData::_set__samples(::Array<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::_set__samples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_samples"))->offset;
  *reinterpret_cast<::Array<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Single> _processedSamples
System::Collections::Generic::List_1<float>* GlobalNamespace::BasicSpectrogramData::_get__processedSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::_get__processedSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_processedSamples"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<System.Single> _processedSamples
void GlobalNamespace::BasicSpectrogramData::_set__processedSamples(System::Collections::Generic::List_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::_set__processedSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_processedSamples"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: BasicSpectrogramData.get_Samples
::Array<float>* GlobalNamespace::BasicSpectrogramData::get_Samples() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::get_Samples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Samples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<float>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BasicSpectrogramData.get_ProcessedSamples
System::Collections::Generic::List_1<float>* GlobalNamespace::BasicSpectrogramData::get_ProcessedSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::get_ProcessedSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessedSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<float>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BasicSpectrogramData.Awake
void GlobalNamespace::BasicSpectrogramData::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BasicSpectrogramData.LateUpdate
void GlobalNamespace::BasicSpectrogramData::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BasicSpectrogramData.ProcessSamples
void GlobalNamespace::BasicSpectrogramData::ProcessSamples(::Array<float>* sourceSamples, System::Collections::Generic::List_1<float>* processedSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicSpectrogramData::ProcessSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceSamples), ::il2cpp_utils::ExtractType(processedSamples)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sourceSamples, processedSamples);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Spectrogram
#include "GlobalNamespace/Spectrogram.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: BasicSpectrogramData
#include "GlobalNamespace/BasicSpectrogramData.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE38490
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _spectrogramDataID
int GlobalNamespace::Spectrogram::_get__spectrogramDataID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Spectrogram::_get__spectrogramDataID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "Spectrogram", "_spectrogramDataID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _spectrogramDataID
void GlobalNamespace::Spectrogram::_set__spectrogramDataID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Spectrogram::_set__spectrogramDataID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Spectrogram", "_spectrogramDataID", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
UnityEngine::MaterialPropertyBlock* GlobalNamespace::Spectrogram::_get__materialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Spectrogram::_get__materialPropertyBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MaterialPropertyBlock*>("", "Spectrogram", "_materialPropertyBlock"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
void GlobalNamespace::Spectrogram::_set__materialPropertyBlock(UnityEngine::MaterialPropertyBlock* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Spectrogram::_set__materialPropertyBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Spectrogram", "_materialPropertyBlock", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer[] _meshRenderers
::Array<UnityEngine::MeshRenderer*>* GlobalNamespace::Spectrogram::_get__meshRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Spectrogram::_get__meshRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshRenderers"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::MeshRenderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.MeshRenderer[] _meshRenderers
void GlobalNamespace::Spectrogram::_set__meshRenderers(::Array<UnityEngine::MeshRenderer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Spectrogram::_set__meshRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshRenderers"))->offset;
  *reinterpret_cast<::Array<UnityEngine::MeshRenderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly BasicSpectrogramData _spectrogramData
GlobalNamespace::BasicSpectrogramData* GlobalNamespace::Spectrogram::_get__spectrogramData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Spectrogram::_get__spectrogramData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spectrogramData"))->offset;
  return *reinterpret_cast<GlobalNamespace::BasicSpectrogramData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly BasicSpectrogramData _spectrogramData
void GlobalNamespace::Spectrogram::_set__spectrogramData(GlobalNamespace::BasicSpectrogramData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Spectrogram::_set__spectrogramData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spectrogramData"))->offset;
  *reinterpret_cast<GlobalNamespace::BasicSpectrogramData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Spectrogram.Awake
void GlobalNamespace::Spectrogram::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Spectrogram::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Spectrogram.Update
void GlobalNamespace::Spectrogram::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Spectrogram::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Spectrogram..cctor
void GlobalNamespace::Spectrogram::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Spectrogram::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Spectrogram", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StaticEnvironmentLights
#include "GlobalNamespace/StaticEnvironmentLights.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] _lightColors
::Array<UnityEngine::Color>* GlobalNamespace::StaticEnvironmentLights::_get__lightColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StaticEnvironmentLights::_get__lightColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColors"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color[] _lightColors
void GlobalNamespace::StaticEnvironmentLights::_set__lightColors(::Array<UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StaticEnvironmentLights::_set__lightColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColors"))->offset;
  *reinterpret_cast<::Array<UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material[] _materials
::Array<UnityEngine::Material*>* GlobalNamespace::StaticEnvironmentLights::_get__materials() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StaticEnvironmentLights::_get__materials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materials"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Material*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Material[] _materials
void GlobalNamespace::StaticEnvironmentLights::_set__materials(::Array<UnityEngine::Material*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StaticEnvironmentLights::_set__materials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materials"))->offset;
  *reinterpret_cast<::Array<UnityEngine::Material*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: StaticEnvironmentLights.Awake
void GlobalNamespace::StaticEnvironmentLights::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StaticEnvironmentLights::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrackLaneRing
#include "GlobalNamespace/TrackLaneRing.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _prevRotZ
float GlobalNamespace::TrackLaneRing::_get__prevRotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::_get__prevRotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevRotZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _prevRotZ
void GlobalNamespace::TrackLaneRing::_set__prevRotZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::_set__prevRotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevRotZ"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotZ
float GlobalNamespace::TrackLaneRing::_get__rotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::_get__rotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _rotZ
void GlobalNamespace::TrackLaneRing::_set__rotZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::_set__rotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotZ"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _destRotZ
float GlobalNamespace::TrackLaneRing::_get__destRotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::_get__destRotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_destRotZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _destRotZ
void GlobalNamespace::TrackLaneRing::_set__destRotZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::_set__destRotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_destRotZ"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotationSpeed
float GlobalNamespace::TrackLaneRing::_get__rotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::_get__rotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _rotationSpeed
void GlobalNamespace::TrackLaneRing::_set__rotationSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::_set__rotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationSpeed"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _prevPosZ
float GlobalNamespace::TrackLaneRing::_get__prevPosZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::_get__prevPosZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPosZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _prevPosZ
void GlobalNamespace::TrackLaneRing::_set__prevPosZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::_set__prevPosZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPosZ"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _posZ
float GlobalNamespace::TrackLaneRing::_get__posZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::_get__posZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_posZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _posZ
void GlobalNamespace::TrackLaneRing::_set__posZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::_set__posZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_posZ"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _destPosZ
float GlobalNamespace::TrackLaneRing::_get__destPosZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::_get__destPosZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_destPosZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _destPosZ
void GlobalNamespace::TrackLaneRing::_set__destPosZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::_set__destPosZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_destPosZ"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _moveSpeed
float GlobalNamespace::TrackLaneRing::_get__moveSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::_get__moveSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _moveSpeed
void GlobalNamespace::TrackLaneRing::_set__moveSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::_set__moveSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveSpeed"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _positionOffset
UnityEngine::Vector3 GlobalNamespace::TrackLaneRing::_get__positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::_get__positionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 _positionOffset
void GlobalNamespace::TrackLaneRing::_set__positionOffset(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::_set__positionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionOffset"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
UnityEngine::Transform* GlobalNamespace::TrackLaneRing::_get__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::_get__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform _transform
void GlobalNamespace::TrackLaneRing::_set__transform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::_set__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: TrackLaneRing.get_destRotZ
float GlobalNamespace::TrackLaneRing::get_destRotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::get_destRotZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_destRotZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrackLaneRing.Init
void GlobalNamespace::TrackLaneRing::Init(UnityEngine::Vector3 position, UnityEngine::Vector3 positionOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(positionOffset)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, position, positionOffset);
}
// Autogenerated method: TrackLaneRing.FixedUpdateRing
void GlobalNamespace::TrackLaneRing::FixedUpdateRing(float fixedDeltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::FixedUpdateRing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdateRing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixedDeltaTime)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, fixedDeltaTime);
}
// Autogenerated method: TrackLaneRing.LateUpdateRing
void GlobalNamespace::TrackLaneRing::LateUpdateRing(float interpolationFactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::LateUpdateRing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdateRing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interpolationFactor)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, interpolationFactor);
}
// Autogenerated method: TrackLaneRing.SetDestRotation
void GlobalNamespace::TrackLaneRing::SetDestRotation(float destRotZ, float rotateSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::SetDestRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDestRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destRotZ), ::il2cpp_utils::ExtractType(rotateSpeed)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, destRotZ, rotateSpeed);
}
// Autogenerated method: TrackLaneRing.GetRotation
float GlobalNamespace::TrackLaneRing::GetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::GetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrackLaneRing.GetDestinationRotation
float GlobalNamespace::TrackLaneRing::GetDestinationRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::GetDestinationRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDestinationRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrackLaneRing.SetPosition
void GlobalNamespace::TrackLaneRing::SetPosition(float destPosZ, float moveSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRing::SetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destPosZ), ::il2cpp_utils::ExtractType(moveSpeed)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, destPosZ, moveSpeed);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TrackLaneRingsManager
#include "GlobalNamespace/TrackLaneRingsManager.hpp"
// Including type: TrackLaneRing
#include "GlobalNamespace/TrackLaneRing.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TrackLaneRing _trackLaneRingPrefab
GlobalNamespace::TrackLaneRing* GlobalNamespace::TrackLaneRingsManager::_get__trackLaneRingPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::_get__trackLaneRingPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackLaneRingPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::TrackLaneRing**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TrackLaneRing _trackLaneRingPrefab
void GlobalNamespace::TrackLaneRingsManager::_set__trackLaneRingPrefab(GlobalNamespace::TrackLaneRing* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::_set__trackLaneRingPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackLaneRingPrefab"))->offset;
  *reinterpret_cast<GlobalNamespace::TrackLaneRing**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _ringCount
int GlobalNamespace::TrackLaneRingsManager::_get__ringCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::_get__ringCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _ringCount
void GlobalNamespace::TrackLaneRingsManager::_set__ringCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::_set__ringCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringCount"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _ringPositionStep
float GlobalNamespace::TrackLaneRingsManager::_get__ringPositionStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::_get__ringPositionStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringPositionStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _ringPositionStep
void GlobalNamespace::TrackLaneRingsManager::_set__ringPositionStep(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::_set__ringPositionStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringPositionStep"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _spawnAsChildren
bool GlobalNamespace::TrackLaneRingsManager::_get__spawnAsChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::_get__spawnAsChildren");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnAsChildren"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _spawnAsChildren
void GlobalNamespace::TrackLaneRingsManager::_set__spawnAsChildren(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::_set__spawnAsChildren");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnAsChildren"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private TrackLaneRing[] _rings
::Array<GlobalNamespace::TrackLaneRing*>* GlobalNamespace::TrackLaneRingsManager::_get__rings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::_get__rings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rings"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::TrackLaneRing*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TrackLaneRing[] _rings
void GlobalNamespace::TrackLaneRingsManager::_set__rings(::Array<GlobalNamespace::TrackLaneRing*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::_set__rings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rings"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::TrackLaneRing*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: TrackLaneRingsManager.get_ringPositionStep
float GlobalNamespace::TrackLaneRingsManager::get_ringPositionStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::get_ringPositionStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ringPositionStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrackLaneRingsManager.get_Rings
::Array<GlobalNamespace::TrackLaneRing*>* GlobalNamespace::TrackLaneRingsManager::get_Rings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::get_Rings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Rings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::TrackLaneRing*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrackLaneRingsManager.Awake
void GlobalNamespace::TrackLaneRingsManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrackLaneRingsManager.FixedUpdate
void GlobalNamespace::TrackLaneRingsManager::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrackLaneRingsManager.LateUpdate
void GlobalNamespace::TrackLaneRingsManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrackLaneRingsManager.OnDrawGizmosSelected
void GlobalNamespace::TrackLaneRingsManager::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsManager::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrackLaneRingsPositionStepEffectSpawner
#include "GlobalNamespace/TrackLaneRingsPositionStepEffectSpawner.hpp"
// Including type: TrackLaneRingsManager
#include "GlobalNamespace/TrackLaneRingsManager.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TrackLaneRingsManager _trackLaneRingsManager
GlobalNamespace::TrackLaneRingsManager* GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_get__trackLaneRingsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_get__trackLaneRingsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackLaneRingsManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::TrackLaneRingsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TrackLaneRingsManager _trackLaneRingsManager
void GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_set__trackLaneRingsManager(GlobalNamespace::TrackLaneRingsManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_set__trackLaneRingsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackLaneRingsManager"))->offset;
  *reinterpret_cast<GlobalNamespace::TrackLaneRingsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEventType _beatmapEventType
GlobalNamespace::BeatmapEventType GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_get__beatmapEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_get__beatmapEventType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEventType"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapEventType _beatmapEventType
void GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_set__beatmapEventType(GlobalNamespace::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_set__beatmapEventType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEventType"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minPositionStep
float GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_get__minPositionStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_get__minPositionStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minPositionStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _minPositionStep
void GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_set__minPositionStep(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_set__minPositionStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minPositionStep"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxPositionStep
float GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_get__maxPositionStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_get__maxPositionStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxPositionStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _maxPositionStep
void GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_set__maxPositionStep(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_set__maxPositionStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxPositionStep"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _moveSpeed
float GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_get__moveSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_get__moveSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _moveSpeed
void GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_set__moveSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_set__moveSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveSpeed"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
GlobalNamespace::IBeatmapObjectCallbackController* GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_get__beatmapObjectCallbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_get__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
void GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_set__beatmapObjectCallbackController(GlobalNamespace::IBeatmapObjectCallbackController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_set__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _prevWasMinStep
bool GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_get__prevWasMinStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_get__prevWasMinStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevWasMinStep"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _prevWasMinStep
void GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_set__prevWasMinStep(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::_set__prevWasMinStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevWasMinStep"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: TrackLaneRingsPositionStepEffectSpawner.Start
void GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrackLaneRingsPositionStepEffectSpawner.OnDestroy
void GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrackLaneRingsPositionStepEffectSpawner.HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
void GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapEventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrackLaneRingsRotationEffect
#include "GlobalNamespace/TrackLaneRingsRotationEffect.hpp"
// Including type: TrackLaneRingsRotationEffect/RingRotationEffect
#include "GlobalNamespace/TrackLaneRingsRotationEffect_RingRotationEffect.hpp"
// Including type: TrackLaneRingsManager
#include "GlobalNamespace/TrackLaneRingsManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TrackLaneRingsManager _trackLaneRingsManager
GlobalNamespace::TrackLaneRingsManager* GlobalNamespace::TrackLaneRingsRotationEffect::_get__trackLaneRingsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::_get__trackLaneRingsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackLaneRingsManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::TrackLaneRingsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TrackLaneRingsManager _trackLaneRingsManager
void GlobalNamespace::TrackLaneRingsRotationEffect::_set__trackLaneRingsManager(GlobalNamespace::TrackLaneRingsManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::_set__trackLaneRingsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackLaneRingsManager"))->offset;
  *reinterpret_cast<GlobalNamespace::TrackLaneRingsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startupRotationAngle
float GlobalNamespace::TrackLaneRingsRotationEffect::_get__startupRotationAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::_get__startupRotationAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startupRotationAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _startupRotationAngle
void GlobalNamespace::TrackLaneRingsRotationEffect::_set__startupRotationAngle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::_set__startupRotationAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startupRotationAngle"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startupRotationStep
float GlobalNamespace::TrackLaneRingsRotationEffect::_get__startupRotationStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::_get__startupRotationStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startupRotationStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _startupRotationStep
void GlobalNamespace::TrackLaneRingsRotationEffect::_set__startupRotationStep(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::_set__startupRotationStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startupRotationStep"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _startupRotationPropagationSpeed
int GlobalNamespace::TrackLaneRingsRotationEffect::_get__startupRotationPropagationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::_get__startupRotationPropagationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startupRotationPropagationSpeed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _startupRotationPropagationSpeed
void GlobalNamespace::TrackLaneRingsRotationEffect::_set__startupRotationPropagationSpeed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::_set__startupRotationPropagationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startupRotationPropagationSpeed"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startupRotationFlexySpeed
float GlobalNamespace::TrackLaneRingsRotationEffect::_get__startupRotationFlexySpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::_get__startupRotationFlexySpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startupRotationFlexySpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _startupRotationFlexySpeed
void GlobalNamespace::TrackLaneRingsRotationEffect::_set__startupRotationFlexySpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::_set__startupRotationFlexySpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startupRotationFlexySpeed"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<TrackLaneRingsRotationEffect/RingRotationEffect> _activeRingRotationEffects
System::Collections::Generic::List_1<GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*>* GlobalNamespace::TrackLaneRingsRotationEffect::_get__activeRingRotationEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::_get__activeRingRotationEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeRingRotationEffects"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<TrackLaneRingsRotationEffect/RingRotationEffect> _activeRingRotationEffects
void GlobalNamespace::TrackLaneRingsRotationEffect::_set__activeRingRotationEffects(System::Collections::Generic::List_1<GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::_set__activeRingRotationEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeRingRotationEffects"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<TrackLaneRingsRotationEffect/RingRotationEffect> _ringRotationEffectsPool
System::Collections::Generic::List_1<GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*>* GlobalNamespace::TrackLaneRingsRotationEffect::_get__ringRotationEffectsPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::_get__ringRotationEffectsPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringRotationEffectsPool"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<TrackLaneRingsRotationEffect/RingRotationEffect> _ringRotationEffectsPool
void GlobalNamespace::TrackLaneRingsRotationEffect::_set__ringRotationEffectsPool(System::Collections::Generic::List_1<GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::_set__ringRotationEffectsPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringRotationEffectsPool"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> ringRotationEffectsToDelete
System::Collections::Generic::List_1<int>* GlobalNamespace::TrackLaneRingsRotationEffect::_get_ringRotationEffectsToDelete() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::_get_ringRotationEffectsToDelete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ringRotationEffectsToDelete"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<System.Int32> ringRotationEffectsToDelete
void GlobalNamespace::TrackLaneRingsRotationEffect::_set_ringRotationEffectsToDelete(System::Collections::Generic::List_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::_set_ringRotationEffectsToDelete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ringRotationEffectsToDelete"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: TrackLaneRingsRotationEffect.Awake
void GlobalNamespace::TrackLaneRingsRotationEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffect.Start
void GlobalNamespace::TrackLaneRingsRotationEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffect.FixedUpdate
void GlobalNamespace::TrackLaneRingsRotationEffect::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffect.AddRingRotationEffect
void GlobalNamespace::TrackLaneRingsRotationEffect::AddRingRotationEffect(float angle, float step, int propagationSpeed, float flexySpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::AddRingRotationEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRingRotationEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(step), ::il2cpp_utils::ExtractType(propagationSpeed), ::il2cpp_utils::ExtractType(flexySpeed)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, angle, step, propagationSpeed, flexySpeed);
}
// Autogenerated method: TrackLaneRingsRotationEffect.GetFirstRingRotationAngle
float GlobalNamespace::TrackLaneRingsRotationEffect::GetFirstRingRotationAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::GetFirstRingRotationAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstRingRotationAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffect.GetFirstRingDestinationRotationAngle
float GlobalNamespace::TrackLaneRingsRotationEffect::GetFirstRingDestinationRotationAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::GetFirstRingDestinationRotationAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstRingDestinationRotationAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffect.SpawnRingRotationEffect
GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect* GlobalNamespace::TrackLaneRingsRotationEffect::SpawnRingRotationEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::SpawnRingRotationEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnRingRotationEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffect.RecycleRingRotationEffect
void GlobalNamespace::TrackLaneRingsRotationEffect::RecycleRingRotationEffect(GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect* ringRotationEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::RecycleRingRotationEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecycleRingRotationEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ringRotationEffect)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, ringRotationEffect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrackLaneRingsRotationEffect/RingRotationEffect
#include "GlobalNamespace/TrackLaneRingsRotationEffect_RingRotationEffect.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single rotationAngle
float GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::_get_rotationAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::_get_rotationAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single rotationAngle
void GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::_set_rotationAngle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::_set_rotationAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationAngle"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationStep
float GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::_get_rotationStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::_get_rotationStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single rotationStep
void GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::_set_rotationStep(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::_set_rotationStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationStep"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationFlexySpeed
float GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::_get_rotationFlexySpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::_get_rotationFlexySpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationFlexySpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single rotationFlexySpeed
void GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::_set_rotationFlexySpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::_set_rotationFlexySpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationFlexySpeed"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 rotationPropagationSpeed
int GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::_get_rotationPropagationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::_get_rotationPropagationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationPropagationSpeed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 rotationPropagationSpeed
void GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::_set_rotationPropagationSpeed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::_set_rotationPropagationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationPropagationSpeed"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 progressPos
int GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::_get_progressPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::_get_progressPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 progressPos
void GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::_set_progressPos(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::_set_progressPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressPos"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrackLaneRingsRotationEffectSpawner
#include "GlobalNamespace/TrackLaneRingsRotationEffectSpawner.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: TrackLaneRingsRotationEffect
#include "GlobalNamespace/TrackLaneRingsRotationEffect.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TrackLaneRingsRotationEffect _trackLaneRingsRotationEffect
GlobalNamespace::TrackLaneRingsRotationEffect* GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_get__trackLaneRingsRotationEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_get__trackLaneRingsRotationEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackLaneRingsRotationEffect"))->offset;
  return *reinterpret_cast<GlobalNamespace::TrackLaneRingsRotationEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TrackLaneRingsRotationEffect _trackLaneRingsRotationEffect
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_set__trackLaneRingsRotationEffect(GlobalNamespace::TrackLaneRingsRotationEffect* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_set__trackLaneRingsRotationEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackLaneRingsRotationEffect"))->offset;
  *reinterpret_cast<GlobalNamespace::TrackLaneRingsRotationEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEventType _beatmapEventType
GlobalNamespace::BeatmapEventType GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_get__beatmapEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_get__beatmapEventType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEventType"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapEventType _beatmapEventType
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_set__beatmapEventType(GlobalNamespace::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_set__beatmapEventType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEventType"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotation
float GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_get__rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_get__rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _rotation
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_set__rotation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_set__rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotation"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotationStep
float GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_get__rotationStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_get__rotationStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _rotationStep
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_set__rotationStep(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_set__rotationStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationStep"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private TrackLaneRingsRotationEffectSpawner/RotationStepType _rotationStepType
GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_get__rotationStepType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_get__rotationStepType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationStepType"))->offset;
  return *reinterpret_cast<GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TrackLaneRingsRotationEffectSpawner/RotationStepType _rotationStepType
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_set__rotationStepType(GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_set__rotationStepType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationStepType"))->offset;
  *reinterpret_cast<GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _rotationPropagationSpeed
int GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_get__rotationPropagationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_get__rotationPropagationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationPropagationSpeed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _rotationPropagationSpeed
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_set__rotationPropagationSpeed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_set__rotationPropagationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationPropagationSpeed"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotationFlexySpeed
float GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_get__rotationFlexySpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_get__rotationFlexySpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationFlexySpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _rotationFlexySpeed
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_set__rotationFlexySpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_set__rotationFlexySpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationFlexySpeed"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
GlobalNamespace::IBeatmapObjectCallbackController* GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_get__beatmapObjectCallbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_get__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_set__beatmapObjectCallbackController(GlobalNamespace::IBeatmapObjectCallbackController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::_set__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: TrackLaneRingsRotationEffectSpawner.Start
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffectSpawner.OnDestroy
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffectSpawner.HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapEventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrackLaneRingsRotationEffectSpawner/RotationStepType
#include "GlobalNamespace/TrackLaneRingsRotationEffectSpawner.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TrackLaneRingsRotationEffectSpawner/RotationStepType Range0ToMax
GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_get_Range0ToMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_get_Range0ToMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType>("", "TrackLaneRingsRotationEffectSpawner/RotationStepType", "Range0ToMax"));
}
// Autogenerated static field setter
// Set static field: static public TrackLaneRingsRotationEffectSpawner/RotationStepType Range0ToMax
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_set_Range0ToMax(GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_set_Range0ToMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TrackLaneRingsRotationEffectSpawner/RotationStepType", "Range0ToMax", value));
}
// Autogenerated static field getter
// Get static field: static public TrackLaneRingsRotationEffectSpawner/RotationStepType Range
GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_get_Range() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_get_Range");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType>("", "TrackLaneRingsRotationEffectSpawner/RotationStepType", "Range"));
}
// Autogenerated static field setter
// Set static field: static public TrackLaneRingsRotationEffectSpawner/RotationStepType Range
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_set_Range(GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_set_Range");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TrackLaneRingsRotationEffectSpawner/RotationStepType", "Range", value));
}
// Autogenerated static field getter
// Get static field: static public TrackLaneRingsRotationEffectSpawner/RotationStepType MaxOr0
GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_get_MaxOr0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_get_MaxOr0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType>("", "TrackLaneRingsRotationEffectSpawner/RotationStepType", "MaxOr0"));
}
// Autogenerated static field setter
// Set static field: static public TrackLaneRingsRotationEffectSpawner/RotationStepType MaxOr0
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_set_MaxOr0(GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_set_MaxOr0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TrackLaneRingsRotationEffectSpawner/RotationStepType", "MaxOr0", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ComboUIController
#include "GlobalNamespace/ComboUIController.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: IScoreController
#include "GlobalNamespace/IScoreController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _comboText
TMPro::TextMeshProUGUI* GlobalNamespace::ComboUIController::_get__comboText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::_get__comboText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comboText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _comboText
void GlobalNamespace::ComboUIController::_set__comboText(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::_set__comboText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comboText"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator _animator
UnityEngine::Animator* GlobalNamespace::ComboUIController::_get__animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::_get__animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animator"))->offset;
  return *reinterpret_cast<UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Animator _animator
void GlobalNamespace::ComboUIController::_set__animator(UnityEngine::Animator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::_set__animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animator"))->offset;
  *reinterpret_cast<UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IScoreController _scoreController
GlobalNamespace::IScoreController* GlobalNamespace::ComboUIController::_get__scoreController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::_get__scoreController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IScoreController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IScoreController _scoreController
void GlobalNamespace::ComboUIController::_set__scoreController(GlobalNamespace::IScoreController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::_set__scoreController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreController"))->offset;
  *reinterpret_cast<GlobalNamespace::IScoreController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _comboLostID
int GlobalNamespace::ComboUIController::_get__comboLostID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::_get__comboLostID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comboLostID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _comboLostID
void GlobalNamespace::ComboUIController::_set__comboLostID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::_set__comboLostID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comboLostID"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _comboLost
bool GlobalNamespace::ComboUIController::_get__comboLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::_get__comboLost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comboLost"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _comboLost
void GlobalNamespace::ComboUIController::_set__comboLost(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::_set__comboLost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comboLost"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: ComboUIController.Start
void GlobalNamespace::ComboUIController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ComboUIController.OnEnable
void GlobalNamespace::ComboUIController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ComboUIController.OnDisable
void GlobalNamespace::ComboUIController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ComboUIController.RegisterForEvents
void GlobalNamespace::ComboUIController::RegisterForEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::RegisterForEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterForEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ComboUIController.UnregisterFromEvents
void GlobalNamespace::ComboUIController::UnregisterFromEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::UnregisterFromEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterFromEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ComboUIController.HandleComboDidChange
void GlobalNamespace::ComboUIController::HandleComboDidChange(int combo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::HandleComboDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleComboDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(combo)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, combo);
}
// Autogenerated method: ComboUIController.HandleComboBreakingEventHappened
void GlobalNamespace::ComboUIController::HandleComboBreakingEventHappened() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ComboUIController::HandleComboBreakingEventHappened");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleComboBreakingEventHappened", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CoreGameHUDController
#include "GlobalNamespace/CoreGameHUDController.hpp"
// Including type: CoreGameHUDController/InitData
#include "GlobalNamespace/CoreGameHUDController_InitData.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _songProgressPanelGO
UnityEngine::GameObject* GlobalNamespace::CoreGameHUDController::_get__songProgressPanelGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::_get__songProgressPanelGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songProgressPanelGO"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _songProgressPanelGO
void GlobalNamespace::CoreGameHUDController::_set__songProgressPanelGO(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::_set__songProgressPanelGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songProgressPanelGO"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _relativeScoreGO
UnityEngine::GameObject* GlobalNamespace::CoreGameHUDController::_get__relativeScoreGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::_get__relativeScoreGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeScoreGO"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _relativeScoreGO
void GlobalNamespace::CoreGameHUDController::_set__relativeScoreGO(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::_set__relativeScoreGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeScoreGO"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _immediateRankGO
UnityEngine::GameObject* GlobalNamespace::CoreGameHUDController::_get__immediateRankGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::_get__immediateRankGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_immediateRankGO"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _immediateRankGO
void GlobalNamespace::CoreGameHUDController::_set__immediateRankGO(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::_set__immediateRankGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_immediateRankGO"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _energyPanelGO
UnityEngine::GameObject* GlobalNamespace::CoreGameHUDController::_get__energyPanelGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::_get__energyPanelGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_energyPanelGO"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _energyPanelGO
void GlobalNamespace::CoreGameHUDController::_set__energyPanelGO(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::_set__energyPanelGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_energyPanelGO"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _canvasGroup
UnityEngine::CanvasGroup* GlobalNamespace::CoreGameHUDController::_get__canvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::_get__canvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroup"))->offset;
  return *reinterpret_cast<UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.CanvasGroup _canvasGroup
void GlobalNamespace::CoreGameHUDController::_set__canvasGroup(UnityEngine::CanvasGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::_set__canvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroup"))->offset;
  *reinterpret_cast<UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly CoreGameHUDController/InitData _initData
GlobalNamespace::CoreGameHUDController::InitData* GlobalNamespace::CoreGameHUDController::_get__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::_get__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::CoreGameHUDController::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly CoreGameHUDController/InitData _initData
void GlobalNamespace::CoreGameHUDController::_set__initData(GlobalNamespace::CoreGameHUDController::InitData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::_set__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  *reinterpret_cast<GlobalNamespace::CoreGameHUDController::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: CoreGameHUDController.set_alpha
void GlobalNamespace::CoreGameHUDController::set_alpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::set_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: CoreGameHUDController.Start
void GlobalNamespace::CoreGameHUDController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CoreGameHUDController/InitData
#include "GlobalNamespace/CoreGameHUDController_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean hide
bool GlobalNamespace::CoreGameHUDController::InitData::_get_hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::InitData::_get_hide");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hide"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean hide
void GlobalNamespace::CoreGameHUDController::InitData::_set_hide(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::InitData::_set_hide");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hide"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean showEnergyPanel
bool GlobalNamespace::CoreGameHUDController::InitData::_get_showEnergyPanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::InitData::_get_showEnergyPanel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showEnergyPanel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean showEnergyPanel
void GlobalNamespace::CoreGameHUDController::InitData::_set_showEnergyPanel(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::InitData::_set_showEnergyPanel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showEnergyPanel"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean advancedHUD
bool GlobalNamespace::CoreGameHUDController::InitData::_get_advancedHUD() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::InitData::_get_advancedHUD");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "advancedHUD"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean advancedHUD
void GlobalNamespace::CoreGameHUDController::InitData::_set_advancedHUD(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CoreGameHUDController::InitData::_set_advancedHUD");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "advancedHUD"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FeverModeUIPanel
#include "GlobalNamespace/FeverModeUIPanel.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: IScoreController
#include "GlobalNamespace/IScoreController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _feverBGTextRectTransform
UnityEngine::RectTransform* GlobalNamespace::FeverModeUIPanel::_get__feverBGTextRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FeverModeUIPanel::_get__feverBGTextRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_feverBGTextRectTransform"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.RectTransform _feverBGTextRectTransform
void GlobalNamespace::FeverModeUIPanel::_set__feverBGTextRectTransform(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FeverModeUIPanel::_set__feverBGTextRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_feverBGTextRectTransform"))->offset;
  *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private IScoreController _scoreController
GlobalNamespace::IScoreController* GlobalNamespace::FeverModeUIPanel::_get__scoreController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FeverModeUIPanel::_get__scoreController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IScoreController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private IScoreController _scoreController
void GlobalNamespace::FeverModeUIPanel::_set__scoreController(GlobalNamespace::IScoreController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FeverModeUIPanel::_set__scoreController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreController"))->offset;
  *reinterpret_cast<GlobalNamespace::IScoreController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _feverTextRectWidth
float GlobalNamespace::FeverModeUIPanel::_get__feverTextRectWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FeverModeUIPanel::_get__feverTextRectWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_feverTextRectWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _feverTextRectWidth
void GlobalNamespace::FeverModeUIPanel::_set__feverTextRectWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FeverModeUIPanel::_set__feverTextRectWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_feverTextRectWidth"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: FeverModeUIPanel.Start
void GlobalNamespace::FeverModeUIPanel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FeverModeUIPanel::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FeverModeUIPanel.OnDestroy
void GlobalNamespace::FeverModeUIPanel::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FeverModeUIPanel::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FeverModeUIPanel.Update
void GlobalNamespace::FeverModeUIPanel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FeverModeUIPanel::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FeverModeUIPanel.SetProgress
void GlobalNamespace::FeverModeUIPanel::SetProgress(float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FeverModeUIPanel::SetProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progress)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, progress);
}
// Autogenerated method: FeverModeUIPanel.HandleFeverModeDidStart
void GlobalNamespace::FeverModeUIPanel::HandleFeverModeDidStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FeverModeUIPanel::HandleFeverModeDidStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFeverModeDidStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FeverModeUIPanel.HandleFeverModeDidFinish
void GlobalNamespace::FeverModeUIPanel::HandleFeverModeDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FeverModeUIPanel::HandleFeverModeDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFeverModeDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FeverModeUIPanel.HandleFeverModeChargeProgressDidChange
void GlobalNamespace::FeverModeUIPanel::HandleFeverModeChargeProgressDidChange(float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FeverModeUIPanel::HandleFeverModeChargeProgressDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFeverModeChargeProgressDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progress)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, progress);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameEnergyUIPanel
#include "GlobalNamespace/GameEnergyUIPanel.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: IGameEnergyCounter
#include "GlobalNamespace/IGameEnergyCounter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _energyBar
UnityEngine::UI::Image* GlobalNamespace::GameEnergyUIPanel::_get__energyBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::_get__energyBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_energyBar"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.UI.Image _energyBar
void GlobalNamespace::GameEnergyUIPanel::_set__energyBar(UnityEngine::UI::Image* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::_set__energyBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_energyBar"))->offset;
  *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableDirector _playableDirector
UnityEngine::Playables::PlayableDirector* GlobalNamespace::GameEnergyUIPanel::_get__playableDirector() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::_get__playableDirector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playableDirector"))->offset;
  return *reinterpret_cast<UnityEngine::Playables::PlayableDirector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Playables.PlayableDirector _playableDirector
void GlobalNamespace::GameEnergyUIPanel::_set__playableDirector(UnityEngine::Playables::PlayableDirector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::_set__playableDirector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playableDirector"))->offset;
  *reinterpret_cast<UnityEngine::Playables::PlayableDirector**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _batteryLifeSegmentPrefab
UnityEngine::UI::Image* GlobalNamespace::GameEnergyUIPanel::_get__batteryLifeSegmentPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::_get__batteryLifeSegmentPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_batteryLifeSegmentPrefab"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.UI.Image _batteryLifeSegmentPrefab
void GlobalNamespace::GameEnergyUIPanel::_set__batteryLifeSegmentPrefab(UnityEngine::UI::Image* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::_set__batteryLifeSegmentPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_batteryLifeSegmentPrefab"))->offset;
  *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _batterySegmentSeparatorWidth
float GlobalNamespace::GameEnergyUIPanel::_get__batterySegmentSeparatorWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::_get__batterySegmentSeparatorWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_batterySegmentSeparatorWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _batterySegmentSeparatorWidth
void GlobalNamespace::GameEnergyUIPanel::_set__batterySegmentSeparatorWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::_set__batterySegmentSeparatorWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_batterySegmentSeparatorWidth"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _batterySegmentHorizontalPadding
float GlobalNamespace::GameEnergyUIPanel::_get__batterySegmentHorizontalPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::_get__batterySegmentHorizontalPadding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_batterySegmentHorizontalPadding"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _batterySegmentHorizontalPadding
void GlobalNamespace::GameEnergyUIPanel::_set__batterySegmentHorizontalPadding(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::_set__batterySegmentHorizontalPadding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_batterySegmentHorizontalPadding"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IGameEnergyCounter _gameEnergyCounter
GlobalNamespace::IGameEnergyCounter* GlobalNamespace::GameEnergyUIPanel::_get__gameEnergyCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::_get__gameEnergyCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameEnergyCounter"))->offset;
  return *reinterpret_cast<GlobalNamespace::IGameEnergyCounter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IGameEnergyCounter _gameEnergyCounter
void GlobalNamespace::GameEnergyUIPanel::_set__gameEnergyCounter(GlobalNamespace::IGameEnergyCounter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::_set__gameEnergyCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameEnergyCounter"))->offset;
  *reinterpret_cast<GlobalNamespace::IGameEnergyCounter**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.UI.Image> _batteryLifeSegments
System::Collections::Generic::List_1<UnityEngine::UI::Image*>* GlobalNamespace::GameEnergyUIPanel::_get__batteryLifeSegments() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::_get__batteryLifeSegments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_batteryLifeSegments"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::UI::Image*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<UnityEngine.UI.Image> _batteryLifeSegments
void GlobalNamespace::GameEnergyUIPanel::_set__batteryLifeSegments(System::Collections::Generic::List_1<UnityEngine::UI::Image*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::_set__batteryLifeSegments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_batteryLifeSegments"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::UI::Image*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _activeBatteryLifeSegmentsCount
int GlobalNamespace::GameEnergyUIPanel::_get__activeBatteryLifeSegmentsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::_get__activeBatteryLifeSegmentsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeBatteryLifeSegmentsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _activeBatteryLifeSegmentsCount
void GlobalNamespace::GameEnergyUIPanel::_set__activeBatteryLifeSegmentsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::_set__activeBatteryLifeSegmentsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeBatteryLifeSegmentsCount"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _energyBarRectTransform
UnityEngine::RectTransform* GlobalNamespace::GameEnergyUIPanel::_get__energyBarRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::_get__energyBarRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_energyBarRectTransform"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.RectTransform _energyBarRectTransform
void GlobalNamespace::GameEnergyUIPanel::_set__energyBarRectTransform(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::_set__energyBarRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_energyBarRectTransform"))->offset;
  *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: GameEnergyUIPanel.Start
void GlobalNamespace::GameEnergyUIPanel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameEnergyUIPanel.Init
void GlobalNamespace::GameEnergyUIPanel::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameEnergyUIPanel.OnDestroy
void GlobalNamespace::GameEnergyUIPanel::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameEnergyUIPanel.CreateUIForBatteryEnergyType
void GlobalNamespace::GameEnergyUIPanel::CreateUIForBatteryEnergyType(int batteryLives) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::CreateUIForBatteryEnergyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUIForBatteryEnergyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(batteryLives)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, batteryLives);
}
// Autogenerated method: GameEnergyUIPanel.RefreshEnergyUI
void GlobalNamespace::GameEnergyUIPanel::RefreshEnergyUI(float energy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::RefreshEnergyUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshEnergyUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(energy)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, energy);
}
// Autogenerated method: GameEnergyUIPanel.HandleGameEnergyCounterDidInit
void GlobalNamespace::GameEnergyUIPanel::HandleGameEnergyCounterDidInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::HandleGameEnergyCounterDidInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameEnergyCounterDidInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameEnergyUIPanel.HandleGameEnergyDidChange
void GlobalNamespace::GameEnergyUIPanel::HandleGameEnergyDidChange(float energy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyUIPanel::HandleGameEnergyDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameEnergyDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(energy)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, energy);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ImmediateRankUIPanel
#include "GlobalNamespace/ImmediateRankUIPanel.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: RelativeScoreAndImmediateRankCounter
#include "GlobalNamespace/RelativeScoreAndImmediateRankCounter.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _rankText
TMPro::TextMeshProUGUI* GlobalNamespace::ImmediateRankUIPanel::_get__rankText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImmediateRankUIPanel::_get__rankText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rankText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _rankText
void GlobalNamespace::ImmediateRankUIPanel::_set__rankText(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImmediateRankUIPanel::_set__rankText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rankText"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _relativeScoreText
TMPro::TextMeshProUGUI* GlobalNamespace::ImmediateRankUIPanel::_get__relativeScoreText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImmediateRankUIPanel::_get__relativeScoreText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeScoreText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _relativeScoreText
void GlobalNamespace::ImmediateRankUIPanel::_set__relativeScoreText(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImmediateRankUIPanel::_set__relativeScoreText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeScoreText"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private RelativeScoreAndImmediateRankCounter _relativeScoreAndImmediateRankCounter
GlobalNamespace::RelativeScoreAndImmediateRankCounter* GlobalNamespace::ImmediateRankUIPanel::_get__relativeScoreAndImmediateRankCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImmediateRankUIPanel::_get__relativeScoreAndImmediateRankCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeScoreAndImmediateRankCounter"))->offset;
  return *reinterpret_cast<GlobalNamespace::RelativeScoreAndImmediateRankCounter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private RelativeScoreAndImmediateRankCounter _relativeScoreAndImmediateRankCounter
void GlobalNamespace::ImmediateRankUIPanel::_set__relativeScoreAndImmediateRankCounter(GlobalNamespace::RelativeScoreAndImmediateRankCounter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImmediateRankUIPanel::_set__relativeScoreAndImmediateRankCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeScoreAndImmediateRankCounter"))->offset;
  *reinterpret_cast<GlobalNamespace::RelativeScoreAndImmediateRankCounter**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder _stringBuilder
System::Text::StringBuilder* GlobalNamespace::ImmediateRankUIPanel::_get__stringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImmediateRankUIPanel::_get__stringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringBuilder"))->offset;
  return *reinterpret_cast<System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Text.StringBuilder _stringBuilder
void GlobalNamespace::ImmediateRankUIPanel::_set__stringBuilder(System::Text::StringBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImmediateRankUIPanel::_set__stringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringBuilder"))->offset;
  *reinterpret_cast<System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _prevRelativeScore
float GlobalNamespace::ImmediateRankUIPanel::_get__prevRelativeScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImmediateRankUIPanel::_get__prevRelativeScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevRelativeScore"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _prevRelativeScore
void GlobalNamespace::ImmediateRankUIPanel::_set__prevRelativeScore(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImmediateRankUIPanel::_set__prevRelativeScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevRelativeScore"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private RankModel/Rank _prevImmediateRank
GlobalNamespace::RankModel::Rank GlobalNamespace::ImmediateRankUIPanel::_get__prevImmediateRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImmediateRankUIPanel::_get__prevImmediateRank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevImmediateRank"))->offset;
  return *reinterpret_cast<GlobalNamespace::RankModel::Rank*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private RankModel/Rank _prevImmediateRank
void GlobalNamespace::ImmediateRankUIPanel::_set__prevImmediateRank(GlobalNamespace::RankModel::Rank value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImmediateRankUIPanel::_set__prevImmediateRank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevImmediateRank"))->offset;
  *reinterpret_cast<GlobalNamespace::RankModel::Rank*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: ImmediateRankUIPanel.Start
void GlobalNamespace::ImmediateRankUIPanel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImmediateRankUIPanel::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ImmediateRankUIPanel.HandleRelativeScoreAndImmediateRankCounterRelativeScoreOrImmediateRankDidChange
void GlobalNamespace::ImmediateRankUIPanel::HandleRelativeScoreAndImmediateRankCounterRelativeScoreOrImmediateRankDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImmediateRankUIPanel::HandleRelativeScoreAndImmediateRankCounterRelativeScoreOrImmediateRankDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRelativeScoreAndImmediateRankCounterRelativeScoreOrImmediateRankDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ImmediateRankUIPanel.RefreshUI
void GlobalNamespace::ImmediateRankUIPanel::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImmediateRankUIPanel::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionObjectiveGameUIView
#include "GlobalNamespace/MissionObjectiveGameUIView.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: MissionObjectiveChecker
#include "GlobalNamespace/MissionObjectiveChecker.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _notFailedIcon
UnityEngine::Sprite* GlobalNamespace::MissionObjectiveGameUIView::_get__notFailedIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_get__notFailedIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notFailedIcon"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Sprite _notFailedIcon
void GlobalNamespace::MissionObjectiveGameUIView::_set__notFailedIcon(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_set__notFailedIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notFailedIcon"))->offset;
  *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _failedIcon
UnityEngine::Sprite* GlobalNamespace::MissionObjectiveGameUIView::_get__failedIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_get__failedIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failedIcon"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Sprite _failedIcon
void GlobalNamespace::MissionObjectiveGameUIView::_set__failedIcon(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_set__failedIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failedIcon"))->offset;
  *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _notClearedIcon
UnityEngine::Sprite* GlobalNamespace::MissionObjectiveGameUIView::_get__notClearedIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_get__notClearedIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notClearedIcon"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Sprite _notClearedIcon
void GlobalNamespace::MissionObjectiveGameUIView::_set__notClearedIcon(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_set__notClearedIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notClearedIcon"))->offset;
  *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _clearedIcon
UnityEngine::Sprite* GlobalNamespace::MissionObjectiveGameUIView::_get__clearedIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_get__clearedIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedIcon"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Sprite _clearedIcon
void GlobalNamespace::MissionObjectiveGameUIView::_set__clearedIcon(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_set__clearedIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedIcon"))->offset;
  *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _resultIcon
UnityEngine::UI::Image* GlobalNamespace::MissionObjectiveGameUIView::_get__resultIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_get__resultIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultIcon"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.UI.Image _resultIcon
void GlobalNamespace::MissionObjectiveGameUIView::_set__resultIcon(UnityEngine::UI::Image* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_set__resultIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultIcon"))->offset;
  *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _finalClearIconColor
UnityEngine::Color GlobalNamespace::MissionObjectiveGameUIView::_get__finalClearIconColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_get__finalClearIconColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalClearIconColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _finalClearIconColor
void GlobalNamespace::MissionObjectiveGameUIView::_set__finalClearIconColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_set__finalClearIconColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalClearIconColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _finalFailIconColor
UnityEngine::Color GlobalNamespace::MissionObjectiveGameUIView::_get__finalFailIconColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_get__finalFailIconColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalFailIconColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _finalFailIconColor
void GlobalNamespace::MissionObjectiveGameUIView::_set__finalFailIconColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_set__finalFailIconColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalFailIconColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _nonFinalIconColor
UnityEngine::Color GlobalNamespace::MissionObjectiveGameUIView::_get__nonFinalIconColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_get__nonFinalIconColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nonFinalIconColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _nonFinalIconColor
void GlobalNamespace::MissionObjectiveGameUIView::_set__nonFinalIconColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_set__nonFinalIconColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nonFinalIconColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _clearedPS
UnityEngine::ParticleSystem* GlobalNamespace::MissionObjectiveGameUIView::_get__clearedPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_get__clearedPS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedPS"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.ParticleSystem _clearedPS
void GlobalNamespace::MissionObjectiveGameUIView::_set__clearedPS(UnityEngine::ParticleSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_set__clearedPS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedPS"))->offset;
  *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfParticles
int GlobalNamespace::MissionObjectiveGameUIView::_get__numberOfParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_get__numberOfParticles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfParticles"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _numberOfParticles
void GlobalNamespace::MissionObjectiveGameUIView::_set__numberOfParticles(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_set__numberOfParticles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfParticles"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _nameText
TMPro::TextMeshProUGUI* GlobalNamespace::MissionObjectiveGameUIView::_get__nameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_get__nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _nameText
void GlobalNamespace::MissionObjectiveGameUIView::_set__nameText(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_set__nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameText"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _valueText
TMPro::TextMeshProUGUI* GlobalNamespace::MissionObjectiveGameUIView::_get__valueText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_get__valueText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valueText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _valueText
void GlobalNamespace::MissionObjectiveGameUIView::_set__valueText(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_set__valueText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valueText"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _conditionText
TMPro::TextMeshProUGUI* GlobalNamespace::MissionObjectiveGameUIView::_get__conditionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_get__conditionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_conditionText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _conditionText
void GlobalNamespace::MissionObjectiveGameUIView::_set__conditionText(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_set__conditionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_conditionText"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MissionObjectiveChecker _missionObjectiveChecker
GlobalNamespace::MissionObjectiveChecker* GlobalNamespace::MissionObjectiveGameUIView::_get__missionObjectiveChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_get__missionObjectiveChecker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveChecker"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionObjectiveChecker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionObjectiveChecker _missionObjectiveChecker
void GlobalNamespace::MissionObjectiveGameUIView::_set__missionObjectiveChecker(GlobalNamespace::MissionObjectiveChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::_set__missionObjectiveChecker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveChecker"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionObjectiveChecker**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MissionObjectiveGameUIView.SetMissionObjectiveChecker
void GlobalNamespace::MissionObjectiveGameUIView::SetMissionObjectiveChecker(GlobalNamespace::MissionObjectiveChecker* missionObjectiveChecker) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::SetMissionObjectiveChecker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMissionObjectiveChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionObjectiveChecker)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, missionObjectiveChecker);
}
// Autogenerated method: MissionObjectiveGameUIView.HandleMissionObjectiveStatusDidChange
void GlobalNamespace::MissionObjectiveGameUIView::HandleMissionObjectiveStatusDidChange(GlobalNamespace::MissionObjectiveChecker* missionObjectiveChecker) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::HandleMissionObjectiveStatusDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionObjectiveStatusDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionObjectiveChecker)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, missionObjectiveChecker);
}
// Autogenerated method: MissionObjectiveGameUIView.HandleMissionObjectiveCheckedValueDidChange
void GlobalNamespace::MissionObjectiveGameUIView::HandleMissionObjectiveCheckedValueDidChange(GlobalNamespace::MissionObjectiveChecker* missionObjectiveChecker) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::HandleMissionObjectiveCheckedValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionObjectiveCheckedValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionObjectiveChecker)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, missionObjectiveChecker);
}
// Autogenerated method: MissionObjectiveGameUIView.RefreshIcon
void GlobalNamespace::MissionObjectiveGameUIView::RefreshIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::RefreshIcon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshIcon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionObjectiveGameUIView.RefreshValue
void GlobalNamespace::MissionObjectiveGameUIView::RefreshValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveGameUIView::RefreshValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionObjectivesGameUIController
#include "GlobalNamespace/MissionObjectivesGameUIController.hpp"
// Including type: MissionObjectiveGameUIView
#include "GlobalNamespace/MissionObjectiveGameUIView.hpp"
// Including type: MissionObjectiveCheckersManager
#include "GlobalNamespace/MissionObjectiveCheckersManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionObjectiveGameUIView _missionObjectiveGameUIViewPrefab
GlobalNamespace::MissionObjectiveGameUIView* GlobalNamespace::MissionObjectivesGameUIController::_get__missionObjectiveGameUIViewPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectivesGameUIController::_get__missionObjectiveGameUIViewPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveGameUIViewPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionObjectiveGameUIView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionObjectiveGameUIView _missionObjectiveGameUIViewPrefab
void GlobalNamespace::MissionObjectivesGameUIController::_set__missionObjectiveGameUIViewPrefab(GlobalNamespace::MissionObjectiveGameUIView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectivesGameUIController::_set__missionObjectiveGameUIViewPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveGameUIViewPrefab"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionObjectiveGameUIView**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _separator
float GlobalNamespace::MissionObjectivesGameUIController::_get__separator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectivesGameUIController::_get__separator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_separator"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _separator
void GlobalNamespace::MissionObjectivesGameUIController::_set__separator(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectivesGameUIController::_set__separator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_separator"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _elementWidth
float GlobalNamespace::MissionObjectivesGameUIController::_get__elementWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectivesGameUIController::_get__elementWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _elementWidth
void GlobalNamespace::MissionObjectivesGameUIController::_set__elementWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectivesGameUIController::_set__elementWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementWidth"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MissionObjectiveCheckersManager _missionObjectiveCheckersManager
GlobalNamespace::MissionObjectiveCheckersManager* GlobalNamespace::MissionObjectivesGameUIController::_get__missionObjectiveCheckersManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectivesGameUIController::_get__missionObjectiveCheckersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveCheckersManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionObjectiveCheckersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionObjectiveCheckersManager _missionObjectiveCheckersManager
void GlobalNamespace::MissionObjectivesGameUIController::_set__missionObjectiveCheckersManager(GlobalNamespace::MissionObjectiveCheckersManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectivesGameUIController::_set__missionObjectiveCheckersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveCheckersManager"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionObjectiveCheckersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<MissionObjectiveGameUIView> _missionObjectiveGameUIViews
System::Collections::Generic::List_1<GlobalNamespace::MissionObjectiveGameUIView*>* GlobalNamespace::MissionObjectivesGameUIController::_get__missionObjectiveGameUIViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectivesGameUIController::_get__missionObjectiveGameUIViews");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveGameUIViews"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::MissionObjectiveGameUIView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<MissionObjectiveGameUIView> _missionObjectiveGameUIViews
void GlobalNamespace::MissionObjectivesGameUIController::_set__missionObjectiveGameUIViews(System::Collections::Generic::List_1<GlobalNamespace::MissionObjectiveGameUIView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectivesGameUIController::_set__missionObjectiveGameUIViews");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveGameUIViews"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::MissionObjectiveGameUIView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MissionObjectivesGameUIController.Start
void GlobalNamespace::MissionObjectivesGameUIController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectivesGameUIController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionObjectivesGameUIController.OnDestroy
void GlobalNamespace::MissionObjectivesGameUIController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectivesGameUIController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionObjectivesGameUIController.HandleMissionObjectiveCheckersManagerObjectivesListDidChange
void GlobalNamespace::MissionObjectivesGameUIController::HandleMissionObjectiveCheckersManagerObjectivesListDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectivesGameUIController::HandleMissionObjectiveCheckersManagerObjectivesListDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionObjectiveCheckersManagerObjectivesListDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionObjectivesGameUIController.CreateUIElements
void GlobalNamespace::MissionObjectivesGameUIController::CreateUIElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectivesGameUIController::CreateUIElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUIElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLeaderboardPanelController
#include "GlobalNamespace/MultiplayerLeaderboardPanelController.hpp"
// Including type: MultiplayerLeaderboardPanelItem
#include "GlobalNamespace/MultiplayerLeaderboardPanelItem.hpp"
// Including type: MultiplayerScoreProvider
#include "GlobalNamespace/MultiplayerScoreProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MultiplayerLeaderboardPanelItem[] _items
::Array<GlobalNamespace::MultiplayerLeaderboardPanelItem*>* GlobalNamespace::MultiplayerLeaderboardPanelController::_get__items() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelController::_get__items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_items"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::MultiplayerLeaderboardPanelItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MultiplayerLeaderboardPanelItem[] _items
void GlobalNamespace::MultiplayerLeaderboardPanelController::_set__items(::Array<GlobalNamespace::MultiplayerLeaderboardPanelItem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelController::_set__items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_items"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::MultiplayerLeaderboardPanelItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerScoreProvider _scoreProvider
GlobalNamespace::MultiplayerScoreProvider* GlobalNamespace::MultiplayerLeaderboardPanelController::_get__scoreProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelController::_get__scoreProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreProvider"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerScoreProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly MultiplayerScoreProvider _scoreProvider
void GlobalNamespace::MultiplayerLeaderboardPanelController::_set__scoreProvider(GlobalNamespace::MultiplayerScoreProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelController::_set__scoreProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreProvider"))->offset;
  *reinterpret_cast<GlobalNamespace::MultiplayerScoreProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MultiplayerLeaderboardPanelController.Start
void GlobalNamespace::MultiplayerLeaderboardPanelController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLeaderboardPanelController.Update
void GlobalNamespace::MultiplayerLeaderboardPanelController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLeaderboardPanelItem
#include "GlobalNamespace/MultiplayerLeaderboardPanelItem.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _playerNameText
TMPro::TextMeshProUGUI* GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__playerNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__playerNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerNameText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _playerNameText
void GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__playerNameText(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__playerNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerNameText"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _scoreText
TMPro::TextMeshProUGUI* GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__scoreText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__scoreText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _scoreText
void GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__scoreText(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__scoreText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreText"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _positionText
TMPro::TextMeshProUGUI* GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__positionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__positionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _positionText
void GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__positionText(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__positionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionText"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _backgroundImage
UnityEngine::UI::Image* GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__backgroundImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__backgroundImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.UI.Image _backgroundImage
void GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__backgroundImage(UnityEngine::UI::Image* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__backgroundImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundImage"))->offset;
  *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _normalPlayerTextColor
UnityEngine::Color GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__normalPlayerTextColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__normalPlayerTextColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalPlayerTextColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _normalPlayerTextColor
void GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__normalPlayerTextColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__normalPlayerTextColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalPlayerTextColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _failedPlayerTextColor
UnityEngine::Color GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__failedPlayerTextColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__failedPlayerTextColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failedPlayerTextColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _failedPlayerTextColor
void GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__failedPlayerTextColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__failedPlayerTextColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failedPlayerTextColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _firstPlayerBackgroundColor
UnityEngine::Color GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__firstPlayerBackgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__firstPlayerBackgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstPlayerBackgroundColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _firstPlayerBackgroundColor
void GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__firstPlayerBackgroundColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__firstPlayerBackgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstPlayerBackgroundColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _lastPlayerBackgroundColor
UnityEngine::Color GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__lastPlayerBackgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__lastPlayerBackgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastPlayerBackgroundColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _lastPlayerBackgroundColor
void GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__lastPlayerBackgroundColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__lastPlayerBackgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastPlayerBackgroundColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prevPosition
int GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__prevPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__prevPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _prevPosition
void GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__prevPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__prevPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPosition"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _prevPlayerName
::Il2CppString* GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__prevPlayerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__prevPlayerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPlayerName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _prevPlayerName
void GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__prevPlayerName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__prevPlayerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPlayerName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prevScore
int GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__prevScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__prevScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _prevScore
void GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__prevScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__prevScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevScore"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _prevFailed
bool GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__prevFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__prevFailed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevFailed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _prevFailed
void GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__prevFailed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__prevFailed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevFailed"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prevNumberOfPlayers
int GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__prevNumberOfPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_get__prevNumberOfPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevNumberOfPlayers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _prevNumberOfPlayers
void GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__prevNumberOfPlayers(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::_set__prevNumberOfPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevNumberOfPlayers"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MultiplayerLeaderboardPanelItem.set_hide
void GlobalNamespace::MultiplayerLeaderboardPanelItem::set_hide(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::set_hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerLeaderboardPanelItem.SetData
void GlobalNamespace::MultiplayerLeaderboardPanelItem::SetData(int position, ::Il2CppString* playerName, int score, bool failed, int numberOfPlayers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLeaderboardPanelItem::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(playerName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(failed), ::il2cpp_utils::ExtractType(numberOfPlayers)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, position, playerName, score, failed, numberOfPlayers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerPositionHUDController
#include "GlobalNamespace/MultiplayerPositionHUDController.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: MultiplayerScoreProvider
#include "GlobalNamespace/MultiplayerScoreProvider.hpp"
// Including type: MultiplayerPlayersManager
#include "GlobalNamespace/MultiplayerPlayersManager.hpp"
// Including type: CoreGameHUDController/InitData
#include "GlobalNamespace/CoreGameHUDController_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _playerCountText
TMPro::TextMeshProUGUI* GlobalNamespace::MultiplayerPositionHUDController::_get__playerCountText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::_get__playerCountText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerCountText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _playerCountText
void GlobalNamespace::MultiplayerPositionHUDController::_set__playerCountText(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::_set__playerCountText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerCountText"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _positionText
TMPro::TextMeshProUGUI* GlobalNamespace::MultiplayerPositionHUDController::_get__positionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::_get__positionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _positionText
void GlobalNamespace::MultiplayerPositionHUDController::_set__positionText(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::_set__positionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionText"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _canvasGroup
UnityEngine::CanvasGroup* GlobalNamespace::MultiplayerPositionHUDController::_get__canvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::_get__canvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroup"))->offset;
  return *reinterpret_cast<UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.CanvasGroup _canvasGroup
void GlobalNamespace::MultiplayerPositionHUDController::_set__canvasGroup(UnityEngine::CanvasGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::_set__canvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroup"))->offset;
  *reinterpret_cast<UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _firstPlayerAnimationGo
UnityEngine::GameObject* GlobalNamespace::MultiplayerPositionHUDController::_get__firstPlayerAnimationGo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::_get__firstPlayerAnimationGo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstPlayerAnimationGo"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _firstPlayerAnimationGo
void GlobalNamespace::MultiplayerPositionHUDController::_set__firstPlayerAnimationGo(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::_set__firstPlayerAnimationGo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstPlayerAnimationGo"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerScoreProvider _scoreProvider
GlobalNamespace::MultiplayerScoreProvider* GlobalNamespace::MultiplayerPositionHUDController::_get__scoreProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::_get__scoreProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreProvider"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerScoreProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly MultiplayerScoreProvider _scoreProvider
void GlobalNamespace::MultiplayerPositionHUDController::_set__scoreProvider(GlobalNamespace::MultiplayerScoreProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::_set__scoreProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreProvider"))->offset;
  *reinterpret_cast<GlobalNamespace::MultiplayerScoreProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerPlayersManager _playersManager
GlobalNamespace::MultiplayerPlayersManager* GlobalNamespace::MultiplayerPositionHUDController::_get__playersManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::_get__playersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerPlayersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly MultiplayerPlayersManager _playersManager
void GlobalNamespace::MultiplayerPositionHUDController::_set__playersManager(GlobalNamespace::MultiplayerPlayersManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::_set__playersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersManager"))->offset;
  *reinterpret_cast<GlobalNamespace::MultiplayerPlayersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly CoreGameHUDController/InitData _initData
GlobalNamespace::CoreGameHUDController::InitData* GlobalNamespace::MultiplayerPositionHUDController::_get__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::_get__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::CoreGameHUDController::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly CoreGameHUDController/InitData _initData
void GlobalNamespace::MultiplayerPositionHUDController::_set__initData(GlobalNamespace::CoreGameHUDController::InitData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::_set__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  *reinterpret_cast<GlobalNamespace::CoreGameHUDController::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prevPosition
int GlobalNamespace::MultiplayerPositionHUDController::_get__prevPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::_get__prevPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _prevPosition
void GlobalNamespace::MultiplayerPositionHUDController::_set__prevPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::_set__prevPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPosition"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MultiplayerPositionHUDController.set_alpha
void GlobalNamespace::MultiplayerPositionHUDController::set_alpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::set_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerPositionHUDController.Start
void GlobalNamespace::MultiplayerPositionHUDController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerPositionHUDController.Update
void GlobalNamespace::MultiplayerPositionHUDController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerPositionHUDController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RelativeScoreAndImmediateRankCounter
#include "GlobalNamespace/RelativeScoreAndImmediateRankCounter.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: IScoreController
#include "GlobalNamespace/IScoreController.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameplayModifiersModelSO _gameplayModifiersModel
GlobalNamespace::GameplayModifiersModelSO* GlobalNamespace::RelativeScoreAndImmediateRankCounter::_get__gameplayModifiersModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::_get__gameplayModifiersModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiersModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayModifiersModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private GameplayModifiersModelSO _gameplayModifiersModel
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::_set__gameplayModifiersModel(GlobalNamespace::GameplayModifiersModelSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::_set__gameplayModifiersModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiersModel"))->offset;
  *reinterpret_cast<GlobalNamespace::GameplayModifiersModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IScoreController _scoreController
GlobalNamespace::IScoreController* GlobalNamespace::RelativeScoreAndImmediateRankCounter::_get__scoreController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::_get__scoreController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IScoreController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IScoreController _scoreController
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::_set__scoreController(GlobalNamespace::IScoreController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::_set__scoreController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreController"))->offset;
  *reinterpret_cast<GlobalNamespace::IScoreController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly GameplayModifiers _gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::RelativeScoreAndImmediateRankCounter::_get__gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::_get__gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiers"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly GameplayModifiers _gameplayModifiers
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::_set__gameplayModifiers(GlobalNamespace::GameplayModifiers* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::_set__gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiers"))->offset;
  *reinterpret_cast<GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action relativeScoreOrImmediateRankDidChangeEvent
System::Action* GlobalNamespace::RelativeScoreAndImmediateRankCounter::_get_relativeScoreOrImmediateRankDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::_get_relativeScoreOrImmediateRankDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "relativeScoreOrImmediateRankDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action relativeScoreOrImmediateRankDidChangeEvent
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::_set_relativeScoreOrImmediateRankDidChangeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::_set_relativeScoreOrImmediateRankDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "relativeScoreOrImmediateRankDidChangeEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single <relativeScore>k__BackingField
float GlobalNamespace::RelativeScoreAndImmediateRankCounter::_get_$relativeScore$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::_get_$relativeScore$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<relativeScore>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single <relativeScore>k__BackingField
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::_set_$relativeScore$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::_set_$relativeScore$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<relativeScore>k__BackingField"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private RankModel/Rank <immediateRank>k__BackingField
GlobalNamespace::RankModel::Rank GlobalNamespace::RelativeScoreAndImmediateRankCounter::_get_$immediateRank$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::_get_$immediateRank$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<immediateRank>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::RankModel::Rank*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private RankModel/Rank <immediateRank>k__BackingField
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::_set_$immediateRank$k__BackingField(GlobalNamespace::RankModel::Rank value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::_set_$immediateRank$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<immediateRank>k__BackingField"))->offset;
  *reinterpret_cast<GlobalNamespace::RankModel::Rank*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: RelativeScoreAndImmediateRankCounter.get_relativeScore
float GlobalNamespace::RelativeScoreAndImmediateRankCounter::get_relativeScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::get_relativeScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_relativeScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RelativeScoreAndImmediateRankCounter.set_relativeScore
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::set_relativeScore(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::set_relativeScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_relativeScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: RelativeScoreAndImmediateRankCounter.get_immediateRank
GlobalNamespace::RankModel::Rank GlobalNamespace::RelativeScoreAndImmediateRankCounter::get_immediateRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::get_immediateRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_immediateRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::RankModel::Rank, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RelativeScoreAndImmediateRankCounter.set_immediateRank
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::set_immediateRank(GlobalNamespace::RankModel::Rank value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::set_immediateRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_immediateRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: RelativeScoreAndImmediateRankCounter.add_relativeScoreOrImmediateRankDidChangeEvent
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::add_relativeScoreOrImmediateRankDidChangeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::add_relativeScoreOrImmediateRankDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_relativeScoreOrImmediateRankDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: RelativeScoreAndImmediateRankCounter.remove_relativeScoreOrImmediateRankDidChangeEvent
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::remove_relativeScoreOrImmediateRankDidChangeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::remove_relativeScoreOrImmediateRankDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_relativeScoreOrImmediateRankDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: RelativeScoreAndImmediateRankCounter.Start
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RelativeScoreAndImmediateRankCounter.OnDestroy
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RelativeScoreAndImmediateRankCounter.HandleScoreControllerImmediateMaxPossibleScoreDidChange
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::HandleScoreControllerImmediateMaxPossibleScoreDidChange(int immediateMaxPossibleScore, int immediateMaxPossibleModifiedScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::HandleScoreControllerImmediateMaxPossibleScoreDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleScoreControllerImmediateMaxPossibleScoreDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(immediateMaxPossibleScore), ::il2cpp_utils::ExtractType(immediateMaxPossibleModifiedScore)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, immediateMaxPossibleScore, immediateMaxPossibleModifiedScore);
}
// Autogenerated method: RelativeScoreAndImmediateRankCounter.UpdateRelativeScoreAndImmediateRank
void GlobalNamespace::RelativeScoreAndImmediateRankCounter::UpdateRelativeScoreAndImmediateRank(int score, int modifiedScore, int maxPossibleScore, int maxPossibleModifiedScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RelativeScoreAndImmediateRankCounter::UpdateRelativeScoreAndImmediateRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRelativeScoreAndImmediateRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(modifiedScore), ::il2cpp_utils::ExtractType(maxPossibleScore), ::il2cpp_utils::ExtractType(maxPossibleModifiedScore)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, score, modifiedScore, maxPossibleScore, maxPossibleModifiedScore);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ScoreMultiplierUIController
#include "GlobalNamespace/ScoreMultiplierUIController.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: IScoreController
#include "GlobalNamespace/IScoreController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI[] _multiplierTexts
::Array<TMPro::TextMeshProUGUI*>* GlobalNamespace::ScoreMultiplierUIController::_get__multiplierTexts() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::_get__multiplierTexts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplierTexts"))->offset;
  return *reinterpret_cast<::Array<TMPro::TextMeshProUGUI*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI[] _multiplierTexts
void GlobalNamespace::ScoreMultiplierUIController::_set__multiplierTexts(::Array<TMPro::TextMeshProUGUI*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::_set__multiplierTexts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplierTexts"))->offset;
  *reinterpret_cast<::Array<TMPro::TextMeshProUGUI*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _multiplierProgressImage
UnityEngine::UI::Image* GlobalNamespace::ScoreMultiplierUIController::_get__multiplierProgressImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::_get__multiplierProgressImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplierProgressImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.UI.Image _multiplierProgressImage
void GlobalNamespace::ScoreMultiplierUIController::_set__multiplierProgressImage(UnityEngine::UI::Image* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::_set__multiplierProgressImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplierProgressImage"))->offset;
  *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator _multiplierAnimator
UnityEngine::Animator* GlobalNamespace::ScoreMultiplierUIController::_get__multiplierAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::_get__multiplierAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplierAnimator"))->offset;
  return *reinterpret_cast<UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Animator _multiplierAnimator
void GlobalNamespace::ScoreMultiplierUIController::_set__multiplierAnimator(UnityEngine::Animator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::_set__multiplierAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplierAnimator"))->offset;
  *reinterpret_cast<UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private IScoreController _scoreController
GlobalNamespace::IScoreController* GlobalNamespace::ScoreMultiplierUIController::_get__scoreController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::_get__scoreController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IScoreController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private IScoreController _scoreController
void GlobalNamespace::ScoreMultiplierUIController::_set__scoreController(GlobalNamespace::IScoreController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::_set__scoreController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreController"))->offset;
  *reinterpret_cast<GlobalNamespace::IScoreController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prevMultiplier
int GlobalNamespace::ScoreMultiplierUIController::_get__prevMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::_get__prevMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevMultiplier"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _prevMultiplier
void GlobalNamespace::ScoreMultiplierUIController::_set__prevMultiplier(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::_set__prevMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevMultiplier"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _multiplierIncreasedTriggerId
int GlobalNamespace::ScoreMultiplierUIController::_get__multiplierIncreasedTriggerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::_get__multiplierIncreasedTriggerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplierIncreasedTriggerId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _multiplierIncreasedTriggerId
void GlobalNamespace::ScoreMultiplierUIController::_set__multiplierIncreasedTriggerId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::_set__multiplierIncreasedTriggerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplierIncreasedTriggerId"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _progressTarget
float GlobalNamespace::ScoreMultiplierUIController::_get__progressTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::_get__progressTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progressTarget"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _progressTarget
void GlobalNamespace::ScoreMultiplierUIController::_set__progressTarget(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::_set__progressTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progressTarget"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: ScoreMultiplierUIController.Start
void GlobalNamespace::ScoreMultiplierUIController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScoreMultiplierUIController.OnEnable
void GlobalNamespace::ScoreMultiplierUIController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScoreMultiplierUIController.OnDisable
void GlobalNamespace::ScoreMultiplierUIController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScoreMultiplierUIController.RegisterForEvents
void GlobalNamespace::ScoreMultiplierUIController::RegisterForEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::RegisterForEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterForEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScoreMultiplierUIController.UnregisterFromEvents
void GlobalNamespace::ScoreMultiplierUIController::UnregisterFromEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::UnregisterFromEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterFromEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScoreMultiplierUIController.Update
void GlobalNamespace::ScoreMultiplierUIController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScoreMultiplierUIController.HandleMultiplierDidChange
void GlobalNamespace::ScoreMultiplierUIController::HandleMultiplierDidChange(int multiplier, float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreMultiplierUIController::HandleMultiplierDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplierDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplier), ::il2cpp_utils::ExtractType(progress)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, multiplier, progress);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScoreUIController
#include "GlobalNamespace/ScoreUIController.hpp"
// Including type: ScoreUIController/InitData
#include "GlobalNamespace/ScoreUIController_InitData.hpp"
// Including type: ScoreUIController/ScoreDisplayType
#include "GlobalNamespace/ScoreUIController_ScoreDisplayType.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: IScoreController
#include "GlobalNamespace/IScoreController.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxNumberOfDigits
int GlobalNamespace::ScoreUIController::_get_kMaxNumberOfDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::_get_kMaxNumberOfDigits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ScoreUIController", "kMaxNumberOfDigits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxNumberOfDigits
void GlobalNamespace::ScoreUIController::_set_kMaxNumberOfDigits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::_set_kMaxNumberOfDigits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreUIController", "kMaxNumberOfDigits", value));
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _scoreText
TMPro::TextMeshProUGUI* GlobalNamespace::ScoreUIController::_get__scoreText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::_get__scoreText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _scoreText
void GlobalNamespace::ScoreUIController::_set__scoreText(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::_set__scoreText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreText"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ScoreUIController/InitData _initData
GlobalNamespace::ScoreUIController::InitData* GlobalNamespace::ScoreUIController::_get__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::_get__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::ScoreUIController::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ScoreUIController/InitData _initData
void GlobalNamespace::ScoreUIController::_set__initData(GlobalNamespace::ScoreUIController::InitData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::_set__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  *reinterpret_cast<GlobalNamespace::ScoreUIController::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IScoreController _scoreController
GlobalNamespace::IScoreController* GlobalNamespace::ScoreUIController::_get__scoreController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::_get__scoreController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IScoreController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IScoreController _scoreController
void GlobalNamespace::ScoreUIController::_set__scoreController(GlobalNamespace::IScoreController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::_set__scoreController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreController"))->offset;
  *reinterpret_cast<GlobalNamespace::IScoreController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder _stringBuilder
System::Text::StringBuilder* GlobalNamespace::ScoreUIController::_get__stringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::_get__stringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringBuilder"))->offset;
  return *reinterpret_cast<System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Text.StringBuilder _stringBuilder
void GlobalNamespace::ScoreUIController::_set__stringBuilder(System::Text::StringBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::_set__stringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringBuilder"))->offset;
  *reinterpret_cast<System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: ScoreUIController.Start
void GlobalNamespace::ScoreUIController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScoreUIController.OnEnable
void GlobalNamespace::ScoreUIController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScoreUIController.OnDisable
void GlobalNamespace::ScoreUIController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScoreUIController.RegisterForEvents
void GlobalNamespace::ScoreUIController::RegisterForEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::RegisterForEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterForEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScoreUIController.UnregisterFromEvents
void GlobalNamespace::ScoreUIController::UnregisterFromEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::UnregisterFromEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterFromEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScoreUIController.HandleScoreDidChangeRealtime
void GlobalNamespace::ScoreUIController::HandleScoreDidChangeRealtime(int rawScore, int modifiedScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::HandleScoreDidChangeRealtime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleScoreDidChangeRealtime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawScore), ::il2cpp_utils::ExtractType(modifiedScore)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, rawScore, modifiedScore);
}
// Autogenerated method: ScoreUIController.UpdateScore
void GlobalNamespace::ScoreUIController::UpdateScore(int rawScore, int modifiedScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::UpdateScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawScore), ::il2cpp_utils::ExtractType(modifiedScore)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, rawScore, modifiedScore);
}
// Autogenerated method: ScoreUIController.Append000Number
void GlobalNamespace::ScoreUIController::Append000Number(System::Text::StringBuilder* stringBuilder, int number) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::Append000Number");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ScoreUIController", "Append000Number", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringBuilder), ::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stringBuilder, number);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScoreUIController/InitData
#include "GlobalNamespace/ScoreUIController_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ScoreUIController/ScoreDisplayType scoreDisplayType
GlobalNamespace::ScoreUIController::ScoreDisplayType GlobalNamespace::ScoreUIController::InitData::_get_scoreDisplayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::InitData::_get_scoreDisplayType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scoreDisplayType"))->offset;
  return *reinterpret_cast<GlobalNamespace::ScoreUIController::ScoreDisplayType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ScoreUIController/ScoreDisplayType scoreDisplayType
void GlobalNamespace::ScoreUIController::InitData::_set_scoreDisplayType(GlobalNamespace::ScoreUIController::ScoreDisplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::InitData::_set_scoreDisplayType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scoreDisplayType"))->offset;
  *reinterpret_cast<GlobalNamespace::ScoreUIController::ScoreDisplayType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScoreUIController/ScoreDisplayType
#include "GlobalNamespace/ScoreUIController_ScoreDisplayType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ScoreUIController/ScoreDisplayType RawScore
GlobalNamespace::ScoreUIController::ScoreDisplayType GlobalNamespace::ScoreUIController::ScoreDisplayType::_get_RawScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::ScoreDisplayType::_get_RawScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::ScoreUIController::ScoreDisplayType>("", "ScoreUIController/ScoreDisplayType", "RawScore"));
}
// Autogenerated static field setter
// Set static field: static public ScoreUIController/ScoreDisplayType RawScore
void GlobalNamespace::ScoreUIController::ScoreDisplayType::_set_RawScore(GlobalNamespace::ScoreUIController::ScoreDisplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::ScoreDisplayType::_set_RawScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreUIController/ScoreDisplayType", "RawScore", value));
}
// Autogenerated static field getter
// Get static field: static public ScoreUIController/ScoreDisplayType ModifiedScore
GlobalNamespace::ScoreUIController::ScoreDisplayType GlobalNamespace::ScoreUIController::ScoreDisplayType::_get_ModifiedScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::ScoreDisplayType::_get_ModifiedScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::ScoreUIController::ScoreDisplayType>("", "ScoreUIController/ScoreDisplayType", "ModifiedScore"));
}
// Autogenerated static field setter
// Set static field: static public ScoreUIController/ScoreDisplayType ModifiedScore
void GlobalNamespace::ScoreUIController::ScoreDisplayType::_set_ModifiedScore(GlobalNamespace::ScoreUIController::ScoreDisplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::ScoreDisplayType::_set_ModifiedScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreUIController/ScoreDisplayType", "ModifiedScore", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::ScoreUIController::ScoreDisplayType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::ScoreDisplayType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::ScoreUIController::ScoreDisplayType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreUIController::ScoreDisplayType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SetApplicationVersionText
#include "GlobalNamespace/SetApplicationVersionText.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro _versionText
TMPro::TextMeshPro* GlobalNamespace::SetApplicationVersionText::_get__versionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetApplicationVersionText::_get__versionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_versionText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshPro _versionText
void GlobalNamespace::SetApplicationVersionText::_set__versionText(TMPro::TextMeshPro* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetApplicationVersionText::_set__versionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_versionText"))->offset;
  *reinterpret_cast<TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: SetApplicationVersionText.Start
void GlobalNamespace::SetApplicationVersionText::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetApplicationVersionText::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongProgressUIController
#include "GlobalNamespace/SongProgressUIController.hpp"
// Including type: UnityEngine.UI.Slider
#include "UnityEngine/UI/Slider.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Slider _slider
UnityEngine::UI::Slider* GlobalNamespace::SongProgressUIController::_get__slider() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_get__slider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_slider"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Slider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.UI.Slider _slider
void GlobalNamespace::SongProgressUIController::_set__slider(UnityEngine::UI::Slider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_set__slider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_slider"))->offset;
  *reinterpret_cast<UnityEngine::UI::Slider**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _progressImage
UnityEngine::UI::Image* GlobalNamespace::SongProgressUIController::_get__progressImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_get__progressImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progressImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.UI.Image _progressImage
void GlobalNamespace::SongProgressUIController::_set__progressImage(UnityEngine::UI::Image* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_set__progressImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progressImage"))->offset;
  *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _durationMinutesText
TMPro::TextMeshProUGUI* GlobalNamespace::SongProgressUIController::_get__durationMinutesText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_get__durationMinutesText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_durationMinutesText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _durationMinutesText
void GlobalNamespace::SongProgressUIController::_set__durationMinutesText(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_set__durationMinutesText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_durationMinutesText"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _durationSecondsText
TMPro::TextMeshProUGUI* GlobalNamespace::SongProgressUIController::_get__durationSecondsText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_get__durationSecondsText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_durationSecondsText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _durationSecondsText
void GlobalNamespace::SongProgressUIController::_set__durationSecondsText(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_set__durationSecondsText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_durationSecondsText"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _progressMinutesText
TMPro::TextMeshProUGUI* GlobalNamespace::SongProgressUIController::_get__progressMinutesText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_get__progressMinutesText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progressMinutesText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _progressMinutesText
void GlobalNamespace::SongProgressUIController::_set__progressMinutesText(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_set__progressMinutesText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progressMinutesText"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _progressSecondsText
TMPro::TextMeshProUGUI* GlobalNamespace::SongProgressUIController::_get__progressSecondsText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_get__progressSecondsText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progressSecondsText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _progressSecondsText
void GlobalNamespace::SongProgressUIController::_set__progressSecondsText(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_set__progressSecondsText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progressSecondsText"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController* GlobalNamespace::SongProgressUIController::_get__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_get__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly AudioTimeSyncController _audioTimeSyncController
void GlobalNamespace::SongProgressUIController::_set__audioTimeSyncController(GlobalNamespace::AudioTimeSyncController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_set__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prevMinutes
int GlobalNamespace::SongProgressUIController::_get__prevMinutes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_get__prevMinutes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevMinutes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _prevMinutes
void GlobalNamespace::SongProgressUIController::_set__prevMinutes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_set__prevMinutes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevMinutes"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prevSeconds
int GlobalNamespace::SongProgressUIController::_get__prevSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_get__prevSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevSeconds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _prevSeconds
void GlobalNamespace::SongProgressUIController::_set__prevSeconds(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_set__prevSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevSeconds"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder _stringBuilder
System::Text::StringBuilder* GlobalNamespace::SongProgressUIController::_get__stringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_get__stringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringBuilder"))->offset;
  return *reinterpret_cast<System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Text.StringBuilder _stringBuilder
void GlobalNamespace::SongProgressUIController::_set__stringBuilder(System::Text::StringBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_set__stringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringBuilder"))->offset;
  *reinterpret_cast<System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _progressImageRectTransform
UnityEngine::RectTransform* GlobalNamespace::SongProgressUIController::_get__progressImageRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_get__progressImageRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progressImageRectTransform"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.RectTransform _progressImageRectTransform
void GlobalNamespace::SongProgressUIController::_set__progressImageRectTransform(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::_set__progressImageRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progressImageRectTransform"))->offset;
  *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: SongProgressUIController.Start
void GlobalNamespace::SongProgressUIController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongProgressUIController.Update
void GlobalNamespace::SongProgressUIController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongProgressUIController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EventsTestGameplayManager
#include "GlobalNamespace/EventsTestGameplayManager.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
GlobalNamespace::IBeatmapObjectCallbackController* GlobalNamespace::EventsTestGameplayManager::_get__beatmapObjectCallbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestGameplayManager::_get__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
void GlobalNamespace::EventsTestGameplayManager::_set__beatmapObjectCallbackController(GlobalNamespace::IBeatmapObjectCallbackController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestGameplayManager::_set__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEventType _beatmapEventType
GlobalNamespace::BeatmapEventType GlobalNamespace::EventsTestGameplayManager::_get__beatmapEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestGameplayManager::_get__beatmapEventType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEventType"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapEventType _beatmapEventType
void GlobalNamespace::EventsTestGameplayManager::_set__beatmapEventType(GlobalNamespace::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestGameplayManager::_set__beatmapEventType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEventType"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.KeyCode,BeatmapEventType> _beatmapEventTypeBindings
System::Collections::Generic::Dictionary_2<UnityEngine::KeyCode, GlobalNamespace::BeatmapEventType>* GlobalNamespace::EventsTestGameplayManager::_get__beatmapEventTypeBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestGameplayManager::_get__beatmapEventTypeBindings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEventTypeBindings"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<UnityEngine::KeyCode, GlobalNamespace::BeatmapEventType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.KeyCode,BeatmapEventType> _beatmapEventTypeBindings
void GlobalNamespace::EventsTestGameplayManager::_set__beatmapEventTypeBindings(System::Collections::Generic::Dictionary_2<UnityEngine::KeyCode, GlobalNamespace::BeatmapEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestGameplayManager::_set__beatmapEventTypeBindings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEventTypeBindings"))->offset;
  *reinterpret_cast<System::Collections::Generic::Dictionary_2<UnityEngine::KeyCode, GlobalNamespace::BeatmapEventType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.KeyCode,System.Int32> _beatmapValuesBindings
System::Collections::Generic::Dictionary_2<UnityEngine::KeyCode, int>* GlobalNamespace::EventsTestGameplayManager::_get__beatmapValuesBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestGameplayManager::_get__beatmapValuesBindings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapValuesBindings"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<UnityEngine::KeyCode, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.KeyCode,System.Int32> _beatmapValuesBindings
void GlobalNamespace::EventsTestGameplayManager::_set__beatmapValuesBindings(System::Collections::Generic::Dictionary_2<UnityEngine::KeyCode, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestGameplayManager::_set__beatmapValuesBindings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapValuesBindings"))->offset;
  *reinterpret_cast<System::Collections::Generic::Dictionary_2<UnityEngine::KeyCode, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _rotatingLasers
bool GlobalNamespace::EventsTestGameplayManager::_get__rotatingLasers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestGameplayManager::_get__rotatingLasers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotatingLasers"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _rotatingLasers
void GlobalNamespace::EventsTestGameplayManager::_set__rotatingLasers(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestGameplayManager::_set__rotatingLasers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotatingLasers"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: EventsTestGameplayManager.Awake
void GlobalNamespace::EventsTestGameplayManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestGameplayManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EventsTestGameplayManager.Update
void GlobalNamespace::EventsTestGameplayManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestGameplayManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ILevelEndActions
#include "GlobalNamespace/ILevelEndActions.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILevelEndActions.add_levelFailedEvent
void GlobalNamespace::ILevelEndActions::add_levelFailedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelEndActions::add_levelFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ILevelEndActions.remove_levelFailedEvent
void GlobalNamespace::ILevelEndActions::remove_levelFailedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelEndActions::remove_levelFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ILevelEndActions.add_levelFinishedEvent
void GlobalNamespace::ILevelEndActions::add_levelFinishedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelEndActions::add_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ILevelEndActions.remove_levelFinishedEvent
void GlobalNamespace::ILevelEndActions::remove_levelFinishedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelEndActions::remove_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightmappingGameplayManager
#include "GlobalNamespace/LightmappingGameplayManager.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
GlobalNamespace::IBeatmapObjectCallbackController* GlobalNamespace::LightmappingGameplayManager::_get__beatmapObjectCallbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmappingGameplayManager::_get__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
void GlobalNamespace::LightmappingGameplayManager::_set__beatmapObjectCallbackController(GlobalNamespace::IBeatmapObjectCallbackController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmappingGameplayManager::_set__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: LightmappingGameplayManager.Start
void GlobalNamespace::LightmappingGameplayManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmappingGameplayManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelGameplayManager
#include "GlobalNamespace/MissionLevelGameplayManager.hpp"
// Including type: MissionLevelGameplayManager/InitData
#include "GlobalNamespace/MissionLevelGameplayManager_InitData.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: MissionLevelGameplayManager/<Start>d__16
#include "GlobalNamespace/MissionLevelGameplayManager_-Start-d__16.hpp"
// Including type: MissionObjectiveCheckersManager
#include "GlobalNamespace/MissionObjectiveCheckersManager.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: GameSongController
#include "GlobalNamespace/GameSongController.hpp"
// Including type: GameEnergyCounter
#include "GlobalNamespace/GameEnergyCounter.hpp"
// Including type: PauseController
#include "GlobalNamespace/PauseController.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionObjectiveCheckersManager _missionObjectiveCheckersManager
GlobalNamespace::MissionObjectiveCheckersManager* GlobalNamespace::MissionLevelGameplayManager::_get__missionObjectiveCheckersManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::_get__missionObjectiveCheckersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveCheckersManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionObjectiveCheckersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionObjectiveCheckersManager _missionObjectiveCheckersManager
void GlobalNamespace::MissionLevelGameplayManager::_set__missionObjectiveCheckersManager(GlobalNamespace::MissionObjectiveCheckersManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::_set__missionObjectiveCheckersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveCheckersManager"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionObjectiveCheckersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly GameScenesManager _gameScenesManager
GlobalNamespace::GameScenesManager* GlobalNamespace::MissionLevelGameplayManager::_get__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::_get__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly GameScenesManager _gameScenesManager
void GlobalNamespace::MissionLevelGameplayManager::_set__gameScenesManager(GlobalNamespace::GameScenesManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::_set__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  *reinterpret_cast<GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly GameSongController _gameSongController
GlobalNamespace::GameSongController* GlobalNamespace::MissionLevelGameplayManager::_get__gameSongController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::_get__gameSongController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameSongController"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameSongController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly GameSongController _gameSongController
void GlobalNamespace::MissionLevelGameplayManager::_set__gameSongController(GlobalNamespace::GameSongController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::_set__gameSongController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameSongController"))->offset;
  *reinterpret_cast<GlobalNamespace::GameSongController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly GameEnergyCounter _gameEnergyCounter
GlobalNamespace::GameEnergyCounter* GlobalNamespace::MissionLevelGameplayManager::_get__gameEnergyCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::_get__gameEnergyCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameEnergyCounter"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameEnergyCounter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly GameEnergyCounter _gameEnergyCounter
void GlobalNamespace::MissionLevelGameplayManager::_set__gameEnergyCounter(GlobalNamespace::GameEnergyCounter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::_set__gameEnergyCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameEnergyCounter"))->offset;
  *reinterpret_cast<GlobalNamespace::GameEnergyCounter**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly PauseController _pauseController
GlobalNamespace::PauseController* GlobalNamespace::MissionLevelGameplayManager::_get__pauseController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::_get__pauseController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pauseController"))->offset;
  return *reinterpret_cast<GlobalNamespace::PauseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly PauseController _pauseController
void GlobalNamespace::MissionLevelGameplayManager::_set__pauseController(GlobalNamespace::PauseController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::_set__pauseController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pauseController"))->offset;
  *reinterpret_cast<GlobalNamespace::PauseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly MissionLevelGameplayManager/InitData _initData
GlobalNamespace::MissionLevelGameplayManager::InitData* GlobalNamespace::MissionLevelGameplayManager::_get__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::_get__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionLevelGameplayManager::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly MissionLevelGameplayManager/InitData _initData
void GlobalNamespace::MissionLevelGameplayManager::_set__initData(GlobalNamespace::MissionLevelGameplayManager::InitData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::_set__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionLevelGameplayManager::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action levelFailedEvent
System::Action* GlobalNamespace::MissionLevelGameplayManager::_get_levelFailedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::_get_levelFailedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelFailedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action levelFailedEvent
void GlobalNamespace::MissionLevelGameplayManager::_set_levelFailedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::_set_levelFailedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelFailedEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action levelFinishedEvent
System::Action* GlobalNamespace::MissionLevelGameplayManager::_get_levelFinishedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::_get_levelFinishedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelFinishedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action levelFinishedEvent
void GlobalNamespace::MissionLevelGameplayManager::_set_levelFinishedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::_set_levelFinishedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelFinishedEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MissionLevelGameplayManager/GameState _gameState
GlobalNamespace::MissionLevelGameplayManager::GameState GlobalNamespace::MissionLevelGameplayManager::_get__gameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::_get__gameState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameState"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionLevelGameplayManager::GameState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionLevelGameplayManager/GameState _gameState
void GlobalNamespace::MissionLevelGameplayManager::_set__gameState(GlobalNamespace::MissionLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::_set__gameState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameState"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionLevelGameplayManager::GameState*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MissionLevelGameplayManager.add_levelFailedEvent
void GlobalNamespace::MissionLevelGameplayManager::add_levelFailedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::add_levelFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MissionLevelGameplayManager.remove_levelFailedEvent
void GlobalNamespace::MissionLevelGameplayManager::remove_levelFailedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::remove_levelFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MissionLevelGameplayManager.add_levelFinishedEvent
void GlobalNamespace::MissionLevelGameplayManager::add_levelFinishedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::add_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MissionLevelGameplayManager.remove_levelFinishedEvent
void GlobalNamespace::MissionLevelGameplayManager::remove_levelFinishedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::remove_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MissionLevelGameplayManager.Awake
void GlobalNamespace::MissionLevelGameplayManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager.Start
System::Collections::IEnumerator* GlobalNamespace::MissionLevelGameplayManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager.OnDestroy
void GlobalNamespace::MissionLevelGameplayManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager.HandleGameEnergyDidReach0
void GlobalNamespace::MissionLevelGameplayManager::HandleGameEnergyDidReach0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::HandleGameEnergyDidReach0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameEnergyDidReach0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager.HandleMissionObjectiveCheckersManagerObjectiveDidFail
void GlobalNamespace::MissionLevelGameplayManager::HandleMissionObjectiveCheckersManagerObjectiveDidFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::HandleMissionObjectiveCheckersManagerObjectiveDidFail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionObjectiveCheckersManagerObjectiveDidFail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager.HandleSongDidFinish
void GlobalNamespace::MissionLevelGameplayManager::HandleSongDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::HandleSongDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSongDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager.HandlePauseControllerCanPause
void GlobalNamespace::MissionLevelGameplayManager::HandlePauseControllerCanPause(System::Action_1<bool>* canPause) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::HandlePauseControllerCanPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePauseControllerCanPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canPause)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, canPause);
}
// Autogenerated method: MissionLevelGameplayManager.HandlePauseControllerDidPause
void GlobalNamespace::MissionLevelGameplayManager::HandlePauseControllerDidPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::HandlePauseControllerDidPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePauseControllerDidPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager.HandlePauseControllerDidResume
void GlobalNamespace::MissionLevelGameplayManager::HandlePauseControllerDidResume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::HandlePauseControllerDidResume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePauseControllerDidResume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelGameplayManager/InitData
#include "GlobalNamespace/MissionLevelGameplayManager_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean failOn0Energy
bool GlobalNamespace::MissionLevelGameplayManager::InitData::_get_failOn0Energy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::InitData::_get_failOn0Energy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "failOn0Energy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean failOn0Energy
void GlobalNamespace::MissionLevelGameplayManager::InitData::_set_failOn0Energy(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::InitData::_set_failOn0Energy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "failOn0Energy"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelGameplayManager/GameState
#include "GlobalNamespace/MissionLevelGameplayManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MissionLevelGameplayManager/GameState Intro
GlobalNamespace::MissionLevelGameplayManager::GameState GlobalNamespace::MissionLevelGameplayManager::GameState::_get_Intro() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_get_Intro");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionLevelGameplayManager::GameState>("", "MissionLevelGameplayManager/GameState", "Intro"));
}
// Autogenerated static field setter
// Set static field: static public MissionLevelGameplayManager/GameState Intro
void GlobalNamespace::MissionLevelGameplayManager::GameState::_set_Intro(GlobalNamespace::MissionLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_set_Intro");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionLevelGameplayManager/GameState", "Intro", value));
}
// Autogenerated static field getter
// Get static field: static public MissionLevelGameplayManager/GameState Playing
GlobalNamespace::MissionLevelGameplayManager::GameState GlobalNamespace::MissionLevelGameplayManager::GameState::_get_Playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_get_Playing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionLevelGameplayManager::GameState>("", "MissionLevelGameplayManager/GameState", "Playing"));
}
// Autogenerated static field setter
// Set static field: static public MissionLevelGameplayManager/GameState Playing
void GlobalNamespace::MissionLevelGameplayManager::GameState::_set_Playing(GlobalNamespace::MissionLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_set_Playing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionLevelGameplayManager/GameState", "Playing", value));
}
// Autogenerated static field getter
// Get static field: static public MissionLevelGameplayManager/GameState Paused
GlobalNamespace::MissionLevelGameplayManager::GameState GlobalNamespace::MissionLevelGameplayManager::GameState::_get_Paused() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_get_Paused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionLevelGameplayManager::GameState>("", "MissionLevelGameplayManager/GameState", "Paused"));
}
// Autogenerated static field setter
// Set static field: static public MissionLevelGameplayManager/GameState Paused
void GlobalNamespace::MissionLevelGameplayManager::GameState::_set_Paused(GlobalNamespace::MissionLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_set_Paused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionLevelGameplayManager/GameState", "Paused", value));
}
// Autogenerated static field getter
// Get static field: static public MissionLevelGameplayManager/GameState Finished
GlobalNamespace::MissionLevelGameplayManager::GameState GlobalNamespace::MissionLevelGameplayManager::GameState::_get_Finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_get_Finished");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionLevelGameplayManager::GameState>("", "MissionLevelGameplayManager/GameState", "Finished"));
}
// Autogenerated static field setter
// Set static field: static public MissionLevelGameplayManager/GameState Finished
void GlobalNamespace::MissionLevelGameplayManager::GameState::_set_Finished(GlobalNamespace::MissionLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_set_Finished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionLevelGameplayManager/GameState", "Finished", value));
}
// Autogenerated static field getter
// Get static field: static public MissionLevelGameplayManager/GameState Failed
GlobalNamespace::MissionLevelGameplayManager::GameState GlobalNamespace::MissionLevelGameplayManager::GameState::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionLevelGameplayManager::GameState>("", "MissionLevelGameplayManager/GameState", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public MissionLevelGameplayManager/GameState Failed
void GlobalNamespace::MissionLevelGameplayManager::GameState::_set_Failed(GlobalNamespace::MissionLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionLevelGameplayManager/GameState", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::MissionLevelGameplayManager::GameState::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::MissionLevelGameplayManager::GameState::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::GameState::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionLevelGameplayManager/<Start>d__16
#include "GlobalNamespace/MissionLevelGameplayManager_-Start-d__16.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::_get_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::_set_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::_get_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::_set_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MissionLevelGameplayManager <>4__this
GlobalNamespace::MissionLevelGameplayManager* GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::_get_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionLevelGameplayManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MissionLevelGameplayManager <>4__this
void GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::_set_$$4__this(GlobalNamespace::MissionLevelGameplayManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::_set_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionLevelGameplayManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MissionLevelGameplayManager/<Start>d__16.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager/<Start>d__16.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager/<Start>d__16.System.IDisposable.Dispose
void GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager/<Start>d__16.MoveNext
bool GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelGameplayManager/<Start>d__16.System.Collections.IEnumerator.Reset
void GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelGameplayManager::$Start$d__16::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MockLevelEndActions
#include "GlobalNamespace/MockLevelEndActions.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action levelFailedEvent
System::Action* GlobalNamespace::MockLevelEndActions::_get_levelFailedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockLevelEndActions::_get_levelFailedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelFailedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action levelFailedEvent
void GlobalNamespace::MockLevelEndActions::_set_levelFailedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockLevelEndActions::_set_levelFailedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelFailedEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action levelFinishedEvent
System::Action* GlobalNamespace::MockLevelEndActions::_get_levelFinishedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockLevelEndActions::_get_levelFinishedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelFinishedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action levelFinishedEvent
void GlobalNamespace::MockLevelEndActions::_set_levelFinishedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockLevelEndActions::_set_levelFinishedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelFinishedEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MockLevelEndActions.add_levelFailedEvent
void GlobalNamespace::MockLevelEndActions::add_levelFailedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockLevelEndActions::add_levelFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MockLevelEndActions.remove_levelFailedEvent
void GlobalNamespace::MockLevelEndActions::remove_levelFailedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockLevelEndActions::remove_levelFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MockLevelEndActions.add_levelFinishedEvent
void GlobalNamespace::MockLevelEndActions::add_levelFinishedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockLevelEndActions::add_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MockLevelEndActions.remove_levelFinishedEvent
void GlobalNamespace::MockLevelEndActions::remove_levelFinishedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockLevelEndActions::remove_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelGameplayManager
#include "GlobalNamespace/StandardLevelGameplayManager.hpp"
// Including type: StandardLevelGameplayManager/InitData
#include "GlobalNamespace/StandardLevelGameplayManager_InitData.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: StandardLevelGameplayManager/<Start>d__15
#include "GlobalNamespace/StandardLevelGameplayManager_-Start-d__15.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: GameSongController
#include "GlobalNamespace/GameSongController.hpp"
// Including type: GameEnergyCounter
#include "GlobalNamespace/GameEnergyCounter.hpp"
// Including type: PauseController
#include "GlobalNamespace/PauseController.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly GameScenesManager _gameScenesManager
GlobalNamespace::GameScenesManager* GlobalNamespace::StandardLevelGameplayManager::_get__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::_get__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly GameScenesManager _gameScenesManager
void GlobalNamespace::StandardLevelGameplayManager::_set__gameScenesManager(GlobalNamespace::GameScenesManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::_set__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  *reinterpret_cast<GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly GameSongController _gameSongController
GlobalNamespace::GameSongController* GlobalNamespace::StandardLevelGameplayManager::_get__gameSongController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::_get__gameSongController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameSongController"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameSongController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly GameSongController _gameSongController
void GlobalNamespace::StandardLevelGameplayManager::_set__gameSongController(GlobalNamespace::GameSongController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::_set__gameSongController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameSongController"))->offset;
  *reinterpret_cast<GlobalNamespace::GameSongController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly GameEnergyCounter _gameEnergyCounter
GlobalNamespace::GameEnergyCounter* GlobalNamespace::StandardLevelGameplayManager::_get__gameEnergyCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::_get__gameEnergyCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameEnergyCounter"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameEnergyCounter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly GameEnergyCounter _gameEnergyCounter
void GlobalNamespace::StandardLevelGameplayManager::_set__gameEnergyCounter(GlobalNamespace::GameEnergyCounter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::_set__gameEnergyCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameEnergyCounter"))->offset;
  *reinterpret_cast<GlobalNamespace::GameEnergyCounter**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly PauseController _pauseController
GlobalNamespace::PauseController* GlobalNamespace::StandardLevelGameplayManager::_get__pauseController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::_get__pauseController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pauseController"))->offset;
  return *reinterpret_cast<GlobalNamespace::PauseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly PauseController _pauseController
void GlobalNamespace::StandardLevelGameplayManager::_set__pauseController(GlobalNamespace::PauseController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::_set__pauseController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pauseController"))->offset;
  *reinterpret_cast<GlobalNamespace::PauseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly StandardLevelGameplayManager/InitData _initData
GlobalNamespace::StandardLevelGameplayManager::InitData* GlobalNamespace::StandardLevelGameplayManager::_get__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::_get__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::StandardLevelGameplayManager::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly StandardLevelGameplayManager/InitData _initData
void GlobalNamespace::StandardLevelGameplayManager::_set__initData(GlobalNamespace::StandardLevelGameplayManager::InitData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::_set__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  *reinterpret_cast<GlobalNamespace::StandardLevelGameplayManager::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action levelFailedEvent
System::Action* GlobalNamespace::StandardLevelGameplayManager::_get_levelFailedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::_get_levelFailedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelFailedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action levelFailedEvent
void GlobalNamespace::StandardLevelGameplayManager::_set_levelFailedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::_set_levelFailedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelFailedEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action levelFinishedEvent
System::Action* GlobalNamespace::StandardLevelGameplayManager::_get_levelFinishedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::_get_levelFinishedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelFinishedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action levelFinishedEvent
void GlobalNamespace::StandardLevelGameplayManager::_set_levelFinishedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::_set_levelFinishedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelFinishedEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private StandardLevelGameplayManager/GameState _gameState
GlobalNamespace::StandardLevelGameplayManager::GameState GlobalNamespace::StandardLevelGameplayManager::_get__gameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::_get__gameState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameState"))->offset;
  return *reinterpret_cast<GlobalNamespace::StandardLevelGameplayManager::GameState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private StandardLevelGameplayManager/GameState _gameState
void GlobalNamespace::StandardLevelGameplayManager::_set__gameState(GlobalNamespace::StandardLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::_set__gameState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameState"))->offset;
  *reinterpret_cast<GlobalNamespace::StandardLevelGameplayManager::GameState*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: StandardLevelGameplayManager.add_levelFailedEvent
void GlobalNamespace::StandardLevelGameplayManager::add_levelFailedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::add_levelFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StandardLevelGameplayManager.remove_levelFailedEvent
void GlobalNamespace::StandardLevelGameplayManager::remove_levelFailedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::remove_levelFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StandardLevelGameplayManager.add_levelFinishedEvent
void GlobalNamespace::StandardLevelGameplayManager::add_levelFinishedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::add_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StandardLevelGameplayManager.remove_levelFinishedEvent
void GlobalNamespace::StandardLevelGameplayManager::remove_levelFinishedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::remove_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StandardLevelGameplayManager.Awake
void GlobalNamespace::StandardLevelGameplayManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager.Start
System::Collections::IEnumerator* GlobalNamespace::StandardLevelGameplayManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager.OnDestroy
void GlobalNamespace::StandardLevelGameplayManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager.Update
void GlobalNamespace::StandardLevelGameplayManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager.HandleGameEnergyDidReach0
void GlobalNamespace::StandardLevelGameplayManager::HandleGameEnergyDidReach0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::HandleGameEnergyDidReach0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameEnergyDidReach0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager.HandleSongDidFinish
void GlobalNamespace::StandardLevelGameplayManager::HandleSongDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::HandleSongDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSongDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager.HandlePauseControllerCanPause
void GlobalNamespace::StandardLevelGameplayManager::HandlePauseControllerCanPause(System::Action_1<bool>* canPause) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::HandlePauseControllerCanPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePauseControllerCanPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canPause)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, canPause);
}
// Autogenerated method: StandardLevelGameplayManager.HandlePauseControllerDidPause
void GlobalNamespace::StandardLevelGameplayManager::HandlePauseControllerDidPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::HandlePauseControllerDidPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePauseControllerDidPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager.HandlePauseControllerDidResume
void GlobalNamespace::StandardLevelGameplayManager::HandlePauseControllerDidResume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::HandlePauseControllerDidResume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePauseControllerDidResume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelGameplayManager/InitData
#include "GlobalNamespace/StandardLevelGameplayManager_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean failOn0Energy
bool GlobalNamespace::StandardLevelGameplayManager::InitData::_get_failOn0Energy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::InitData::_get_failOn0Energy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "failOn0Energy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean failOn0Energy
void GlobalNamespace::StandardLevelGameplayManager::InitData::_set_failOn0Energy(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::InitData::_set_failOn0Energy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "failOn0Energy"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelGameplayManager/GameState
#include "GlobalNamespace/StandardLevelGameplayManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public StandardLevelGameplayManager/GameState Intro
GlobalNamespace::StandardLevelGameplayManager::GameState GlobalNamespace::StandardLevelGameplayManager::GameState::_get_Intro() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_get_Intro");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardLevelGameplayManager::GameState>("", "StandardLevelGameplayManager/GameState", "Intro"));
}
// Autogenerated static field setter
// Set static field: static public StandardLevelGameplayManager/GameState Intro
void GlobalNamespace::StandardLevelGameplayManager::GameState::_set_Intro(GlobalNamespace::StandardLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_set_Intro");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelGameplayManager/GameState", "Intro", value));
}
// Autogenerated static field getter
// Get static field: static public StandardLevelGameplayManager/GameState Playing
GlobalNamespace::StandardLevelGameplayManager::GameState GlobalNamespace::StandardLevelGameplayManager::GameState::_get_Playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_get_Playing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardLevelGameplayManager::GameState>("", "StandardLevelGameplayManager/GameState", "Playing"));
}
// Autogenerated static field setter
// Set static field: static public StandardLevelGameplayManager/GameState Playing
void GlobalNamespace::StandardLevelGameplayManager::GameState::_set_Playing(GlobalNamespace::StandardLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_set_Playing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelGameplayManager/GameState", "Playing", value));
}
// Autogenerated static field getter
// Get static field: static public StandardLevelGameplayManager/GameState Paused
GlobalNamespace::StandardLevelGameplayManager::GameState GlobalNamespace::StandardLevelGameplayManager::GameState::_get_Paused() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_get_Paused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardLevelGameplayManager::GameState>("", "StandardLevelGameplayManager/GameState", "Paused"));
}
// Autogenerated static field setter
// Set static field: static public StandardLevelGameplayManager/GameState Paused
void GlobalNamespace::StandardLevelGameplayManager::GameState::_set_Paused(GlobalNamespace::StandardLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_set_Paused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelGameplayManager/GameState", "Paused", value));
}
// Autogenerated static field getter
// Get static field: static public StandardLevelGameplayManager/GameState Finished
GlobalNamespace::StandardLevelGameplayManager::GameState GlobalNamespace::StandardLevelGameplayManager::GameState::_get_Finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_get_Finished");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardLevelGameplayManager::GameState>("", "StandardLevelGameplayManager/GameState", "Finished"));
}
// Autogenerated static field setter
// Set static field: static public StandardLevelGameplayManager/GameState Finished
void GlobalNamespace::StandardLevelGameplayManager::GameState::_set_Finished(GlobalNamespace::StandardLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_set_Finished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelGameplayManager/GameState", "Finished", value));
}
// Autogenerated static field getter
// Get static field: static public StandardLevelGameplayManager/GameState Failed
GlobalNamespace::StandardLevelGameplayManager::GameState GlobalNamespace::StandardLevelGameplayManager::GameState::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardLevelGameplayManager::GameState>("", "StandardLevelGameplayManager/GameState", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public StandardLevelGameplayManager/GameState Failed
void GlobalNamespace::StandardLevelGameplayManager::GameState::_set_Failed(GlobalNamespace::StandardLevelGameplayManager::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelGameplayManager/GameState", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::StandardLevelGameplayManager::GameState::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::StandardLevelGameplayManager::GameState::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::GameState::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelGameplayManager/<Start>d__15
#include "GlobalNamespace/StandardLevelGameplayManager_-Start-d__15.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::_get_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::_set_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::_get_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::_set_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public StandardLevelGameplayManager <>4__this
GlobalNamespace::StandardLevelGameplayManager* GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::_get_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::StandardLevelGameplayManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public StandardLevelGameplayManager <>4__this
void GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::_set_$$4__this(GlobalNamespace::StandardLevelGameplayManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::_set_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<GlobalNamespace::StandardLevelGameplayManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: StandardLevelGameplayManager/<Start>d__15.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager/<Start>d__15.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager/<Start>d__15.System.IDisposable.Dispose
void GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager/<Start>d__15.MoveNext
bool GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelGameplayManager/<Start>d__15.System.Collections.IEnumerator.Reset
void GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelGameplayManager::$Start$d__15::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrailerGameplayManager
#include "GlobalNamespace/TrailerGameplayManager.hpp"
// Including type: TrailerGameplayManager/<Start>d__4
#include "GlobalNamespace/TrailerGameplayManager_-Start-d__4.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: GameSongController
#include "GlobalNamespace/GameSongController.hpp"
// Including type: MainCamera
#include "GlobalNamespace/MainCamera.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disableMainCamera
bool GlobalNamespace::TrailerGameplayManager::_get__disableMainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::_get__disableMainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disableMainCamera"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _disableMainCamera
void GlobalNamespace::TrailerGameplayManager::_set__disableMainCamera(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::_set__disableMainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disableMainCamera"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private GameScenesManager _gameScenesManager
GlobalNamespace::GameScenesManager* GlobalNamespace::TrailerGameplayManager::_get__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::_get__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private GameScenesManager _gameScenesManager
void GlobalNamespace::TrailerGameplayManager::_set__gameScenesManager(GlobalNamespace::GameScenesManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::_set__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  *reinterpret_cast<GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private GameSongController _gameSongController
GlobalNamespace::GameSongController* GlobalNamespace::TrailerGameplayManager::_get__gameSongController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::_get__gameSongController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameSongController"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameSongController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private GameSongController _gameSongController
void GlobalNamespace::TrailerGameplayManager::_set__gameSongController(GlobalNamespace::GameSongController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::_set__gameSongController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameSongController"))->offset;
  *reinterpret_cast<GlobalNamespace::GameSongController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MainCamera _mainCamera
GlobalNamespace::MainCamera* GlobalNamespace::TrailerGameplayManager::_get__mainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::_get__mainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainCamera"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MainCamera _mainCamera
void GlobalNamespace::TrailerGameplayManager::_set__mainCamera(GlobalNamespace::MainCamera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::_set__mainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainCamera"))->offset;
  *reinterpret_cast<GlobalNamespace::MainCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: TrailerGameplayManager.Start
System::Collections::IEnumerator* GlobalNamespace::TrailerGameplayManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TrailerGameplayManager/<Start>d__4
#include "GlobalNamespace/TrailerGameplayManager_-Start-d__4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int GlobalNamespace::TrailerGameplayManager::$Start$d__4::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::$Start$d__4::_get_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void GlobalNamespace::TrailerGameplayManager::$Start$d__4::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::$Start$d__4::_set_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* GlobalNamespace::TrailerGameplayManager::$Start$d__4::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::$Start$d__4::_get_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void GlobalNamespace::TrailerGameplayManager::$Start$d__4::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::$Start$d__4::_set_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public TrailerGameplayManager <>4__this
GlobalNamespace::TrailerGameplayManager* GlobalNamespace::TrailerGameplayManager::$Start$d__4::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::$Start$d__4::_get_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::TrailerGameplayManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public TrailerGameplayManager <>4__this
void GlobalNamespace::TrailerGameplayManager::$Start$d__4::_set_$$4__this(GlobalNamespace::TrailerGameplayManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::$Start$d__4::_set_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<GlobalNamespace::TrailerGameplayManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: TrailerGameplayManager/<Start>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TrailerGameplayManager::$Start$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::$Start$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrailerGameplayManager/<Start>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TrailerGameplayManager::$Start$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::$Start$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrailerGameplayManager/<Start>d__4.System.IDisposable.Dispose
void GlobalNamespace::TrailerGameplayManager::$Start$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::$Start$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrailerGameplayManager/<Start>d__4.MoveNext
bool GlobalNamespace::TrailerGameplayManager::$Start$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::$Start$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TrailerGameplayManager/<Start>d__4.System.Collections.IEnumerator.Reset
void GlobalNamespace::TrailerGameplayManager::$Start$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrailerGameplayManager::$Start$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: WaypointsTestGameplayManager
#include "GlobalNamespace/WaypointsTestGameplayManager.hpp"
// Including type: BTSCharacterSpawnController
#include "GlobalNamespace/BTSCharacterSpawnController.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: StandardGameplaySceneSetupData
#include "GlobalNamespace/StandardGameplaySceneSetupData.hpp"
// Including type: GameplayCoreSceneSetupData
#include "GlobalNamespace/GameplayCoreSceneSetupData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _outerCapsuleStart
UnityEngine::Vector3 GlobalNamespace::WaypointsTestGameplayManager::_get__outerCapsuleStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_get__outerCapsuleStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outerCapsuleStart"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 _outerCapsuleStart
void GlobalNamespace::WaypointsTestGameplayManager::_set__outerCapsuleStart(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_set__outerCapsuleStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outerCapsuleStart"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _outerCapsuleEnd
UnityEngine::Vector3 GlobalNamespace::WaypointsTestGameplayManager::_get__outerCapsuleEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_get__outerCapsuleEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outerCapsuleEnd"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 _outerCapsuleEnd
void GlobalNamespace::WaypointsTestGameplayManager::_set__outerCapsuleEnd(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_set__outerCapsuleEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outerCapsuleEnd"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _outerCapsuleRadius
float GlobalNamespace::WaypointsTestGameplayManager::_get__outerCapsuleRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_get__outerCapsuleRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outerCapsuleRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _outerCapsuleRadius
void GlobalNamespace::WaypointsTestGameplayManager::_set__outerCapsuleRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_set__outerCapsuleRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outerCapsuleRadius"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _innerSphereOffset
UnityEngine::Vector3 GlobalNamespace::WaypointsTestGameplayManager::_get__innerSphereOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_get__innerSphereOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerSphereOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 _innerSphereOffset
void GlobalNamespace::WaypointsTestGameplayManager::_set__innerSphereOffset(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_set__innerSphereOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerSphereOffset"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _innerSphereRadius
float GlobalNamespace::WaypointsTestGameplayManager::_get__innerSphereRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_get__innerSphereRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerSphereRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _innerSphereRadius
void GlobalNamespace::WaypointsTestGameplayManager::_set__innerSphereRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_set__innerSphereRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerSphereRadius"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _layersToColliderWith
UnityEngine::LayerMask GlobalNamespace::WaypointsTestGameplayManager::_get__layersToColliderWith() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_get__layersToColliderWith");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_layersToColliderWith"))->offset;
  return *reinterpret_cast<UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.LayerMask _layersToColliderWith
void GlobalNamespace::WaypointsTestGameplayManager::_set__layersToColliderWith(UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_set__layersToColliderWith");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_layersToColliderWith"))->offset;
  *reinterpret_cast<UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly BTSCharacterSpawnController _characterSpawnController
GlobalNamespace::BTSCharacterSpawnController* GlobalNamespace::WaypointsTestGameplayManager::_get__characterSpawnController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_get__characterSpawnController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_characterSpawnController"))->offset;
  return *reinterpret_cast<GlobalNamespace::BTSCharacterSpawnController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly BTSCharacterSpawnController _characterSpawnController
void GlobalNamespace::WaypointsTestGameplayManager::_set__characterSpawnController(GlobalNamespace::BTSCharacterSpawnController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_set__characterSpawnController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_characterSpawnController"))->offset;
  *reinterpret_cast<GlobalNamespace::BTSCharacterSpawnController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSource
GlobalNamespace::IAudioTimeSource* GlobalNamespace::WaypointsTestGameplayManager::_get__audioTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_get__audioTimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSource"))->offset;
  return *reinterpret_cast<GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IAudioTimeSource _audioTimeSource
void GlobalNamespace::WaypointsTestGameplayManager::_set__audioTimeSource(GlobalNamespace::IAudioTimeSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_set__audioTimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSource"))->offset;
  *reinterpret_cast<GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly StandardGameplaySceneSetupData _standardSceneSetupData
GlobalNamespace::StandardGameplaySceneSetupData* GlobalNamespace::WaypointsTestGameplayManager::_get__standardSceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_get__standardSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardSceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::StandardGameplaySceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly StandardGameplaySceneSetupData _standardSceneSetupData
void GlobalNamespace::WaypointsTestGameplayManager::_set__standardSceneSetupData(GlobalNamespace::StandardGameplaySceneSetupData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_set__standardSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardSceneSetupData"))->offset;
  *reinterpret_cast<GlobalNamespace::StandardGameplaySceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly GameplayCoreSceneSetupData _levelSceneSetupData
GlobalNamespace::GameplayCoreSceneSetupData* GlobalNamespace::WaypointsTestGameplayManager::_get__levelSceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_get__levelSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelSceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayCoreSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly GameplayCoreSceneSetupData _levelSceneSetupData
void GlobalNamespace::WaypointsTestGameplayManager::_set__levelSceneSetupData(GlobalNamespace::GameplayCoreSceneSetupData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_set__levelSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelSceneSetupData"))->offset;
  *reinterpret_cast<GlobalNamespace::GameplayCoreSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _target
UnityEngine::Transform* GlobalNamespace::WaypointsTestGameplayManager::_get__target() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_get__target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_target"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform _target
void GlobalNamespace::WaypointsTestGameplayManager::_set__target(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_set__target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_target"))->offset;
  *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _firstPosSaved
bool GlobalNamespace::WaypointsTestGameplayManager::_get__firstPosSaved() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_get__firstPosSaved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstPosSaved"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _firstPosSaved
void GlobalNamespace::WaypointsTestGameplayManager::_set__firstPosSaved(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_set__firstPosSaved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstPosSaved"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _speedSaved
bool GlobalNamespace::WaypointsTestGameplayManager::_get__speedSaved() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_get__speedSaved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speedSaved"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _speedSaved
void GlobalNamespace::WaypointsTestGameplayManager::_set__speedSaved(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_set__speedSaved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speedSaved"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _lastFramePos
UnityEngine::Vector3 GlobalNamespace::WaypointsTestGameplayManager::_get__lastFramePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_get__lastFramePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFramePos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 _lastFramePos
void GlobalNamespace::WaypointsTestGameplayManager::_set__lastFramePos(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_set__lastFramePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFramePos"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastFrameSpeed
float GlobalNamespace::WaypointsTestGameplayManager::_get__lastFrameSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_get__lastFrameSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFrameSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _lastFrameSpeed
void GlobalNamespace::WaypointsTestGameplayManager::_set__lastFrameSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_set__lastFrameSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFrameSpeed"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _biggestFrameSpeed
float GlobalNamespace::WaypointsTestGameplayManager::_get__biggestFrameSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_get__biggestFrameSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_biggestFrameSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _biggestFrameSpeed
void GlobalNamespace::WaypointsTestGameplayManager::_set__biggestFrameSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_set__biggestFrameSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_biggestFrameSpeed"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _biggestFrameSpeedSongTime
float GlobalNamespace::WaypointsTestGameplayManager::_get__biggestFrameSpeedSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_get__biggestFrameSpeedSongTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_biggestFrameSpeedSongTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _biggestFrameSpeedSongTime
void GlobalNamespace::WaypointsTestGameplayManager::_set__biggestFrameSpeedSongTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_set__biggestFrameSpeedSongTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_biggestFrameSpeedSongTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _biggestAcceleration
float GlobalNamespace::WaypointsTestGameplayManager::_get__biggestAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_get__biggestAcceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_biggestAcceleration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _biggestAcceleration
void GlobalNamespace::WaypointsTestGameplayManager::_set__biggestAcceleration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_set__biggestAcceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_biggestAcceleration"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _biggestAccelerationSongTime
float GlobalNamespace::WaypointsTestGameplayManager::_get__biggestAccelerationSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_get__biggestAccelerationSongTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_biggestAccelerationSongTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _biggestAccelerationSongTime
void GlobalNamespace::WaypointsTestGameplayManager::_set__biggestAccelerationSongTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::_set__biggestAccelerationSongTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_biggestAccelerationSongTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: WaypointsTestGameplayManager.Start
void GlobalNamespace::WaypointsTestGameplayManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: WaypointsTestGameplayManager.LateUpdate
void GlobalNamespace::WaypointsTestGameplayManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: WaypointsTestGameplayManager.OnDestroy
void GlobalNamespace::WaypointsTestGameplayManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: WaypointsTestGameplayManager.GetBar
::Il2CppString* GlobalNamespace::WaypointsTestGameplayManager::GetBar(float songTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::GetBar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTime)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, songTime);
}
// Autogenerated method: WaypointsTestGameplayManager.OnDrawGizmos
void GlobalNamespace::WaypointsTestGameplayManager::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestGameplayManager::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GamePause
#include "GlobalNamespace/GamePause.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: GameEnergyCounter
#include "GlobalNamespace/GameEnergyCounter.hpp"
// Including type: IScoreController
#include "GlobalNamespace/IScoreController.hpp"
// Including type: BeatmapObjectExecutionRatingsRecorder
#include "GlobalNamespace/BeatmapObjectExecutionRatingsRecorder.hpp"
// Including type: SongController
#include "GlobalNamespace/SongController.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: AudioListenerController
#include "GlobalNamespace/AudioListenerController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action didPauseEvent
System::Action* GlobalNamespace::GamePause::_get_didPauseEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::_get_didPauseEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPauseEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action didPauseEvent
void GlobalNamespace::GamePause::_set_didPauseEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::_set_didPauseEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPauseEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action willResumeEvent
System::Action* GlobalNamespace::GamePause::_get_willResumeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::_get_willResumeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "willResumeEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action willResumeEvent
void GlobalNamespace::GamePause::_set_willResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::_set_willResumeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "willResumeEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action didResumeEvent
System::Action* GlobalNamespace::GamePause::_get_didResumeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::_get_didResumeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didResumeEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action didResumeEvent
void GlobalNamespace::GamePause::_set_didResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::_set_didResumeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didResumeEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private GameEnergyCounter _gameEnergyCounter
GlobalNamespace::GameEnergyCounter* GlobalNamespace::GamePause::_get__gameEnergyCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::_get__gameEnergyCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameEnergyCounter"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameEnergyCounter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private GameEnergyCounter _gameEnergyCounter
void GlobalNamespace::GamePause::_set__gameEnergyCounter(GlobalNamespace::GameEnergyCounter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::_set__gameEnergyCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameEnergyCounter"))->offset;
  *reinterpret_cast<GlobalNamespace::GameEnergyCounter**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private IScoreController _scoreController
GlobalNamespace::IScoreController* GlobalNamespace::GamePause::_get__scoreController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::_get__scoreController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IScoreController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private IScoreController _scoreController
void GlobalNamespace::GamePause::_set__scoreController(GlobalNamespace::IScoreController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::_set__scoreController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreController"))->offset;
  *reinterpret_cast<GlobalNamespace::IScoreController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapObjectExecutionRatingsRecorder _beatmapObjectExecutionRatingsRecorder
GlobalNamespace::BeatmapObjectExecutionRatingsRecorder* GlobalNamespace::GamePause::_get__beatmapObjectExecutionRatingsRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::_get__beatmapObjectExecutionRatingsRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectExecutionRatingsRecorder"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectExecutionRatingsRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapObjectExecutionRatingsRecorder _beatmapObjectExecutionRatingsRecorder
void GlobalNamespace::GamePause::_set__beatmapObjectExecutionRatingsRecorder(GlobalNamespace::BeatmapObjectExecutionRatingsRecorder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::_set__beatmapObjectExecutionRatingsRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectExecutionRatingsRecorder"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapObjectExecutionRatingsRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private SongController _songController
GlobalNamespace::SongController* GlobalNamespace::GamePause::_get__songController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::_get__songController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songController"))->offset;
  return *reinterpret_cast<GlobalNamespace::SongController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private SongController _songController
void GlobalNamespace::GamePause::_set__songController(GlobalNamespace::SongController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::_set__songController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songController"))->offset;
  *reinterpret_cast<GlobalNamespace::SongController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private SaberManager _saberManager
GlobalNamespace::SaberManager* GlobalNamespace::GamePause::_get__saberManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::_get__saberManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private SaberManager _saberManager
void GlobalNamespace::GamePause::_set__saberManager(GlobalNamespace::SaberManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::_set__saberManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberManager"))->offset;
  *reinterpret_cast<GlobalNamespace::SaberManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private AudioListenerController _audioListenerController
GlobalNamespace::AudioListenerController* GlobalNamespace::GamePause::_get__audioListenerController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::_get__audioListenerController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioListenerController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioListenerController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private AudioListenerController _audioListenerController
void GlobalNamespace::GamePause::_set__audioListenerController(GlobalNamespace::AudioListenerController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::_set__audioListenerController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioListenerController"))->offset;
  *reinterpret_cast<GlobalNamespace::AudioListenerController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _pause
bool GlobalNamespace::GamePause::_get__pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::_get__pause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pause"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _pause
void GlobalNamespace::GamePause::_set__pause(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::_set__pause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pause"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: GamePause.add_didPauseEvent
void GlobalNamespace::GamePause::add_didPauseEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::add_didPauseEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPauseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GamePause.remove_didPauseEvent
void GlobalNamespace::GamePause::remove_didPauseEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::remove_didPauseEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPauseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GamePause.add_willResumeEvent
void GlobalNamespace::GamePause::add_willResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::add_willResumeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_willResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GamePause.remove_willResumeEvent
void GlobalNamespace::GamePause::remove_willResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::remove_willResumeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_willResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GamePause.add_didResumeEvent
void GlobalNamespace::GamePause::add_didResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::add_didResumeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GamePause.remove_didResumeEvent
void GlobalNamespace::GamePause::remove_didResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::remove_didResumeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GamePause.Pause
void GlobalNamespace::GamePause::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::Pause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GamePause.WillResume
void GlobalNamespace::GamePause::WillResume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::WillResume");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WillResume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GamePause.Resume
void GlobalNamespace::GamePause::Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GamePause::Resume");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IGamePause
#include "GlobalNamespace/IGamePause.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IGamePause.add_didPauseEvent
void GlobalNamespace::IGamePause::add_didPauseEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGamePause::add_didPauseEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPauseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGamePause.remove_didPauseEvent
void GlobalNamespace::IGamePause::remove_didPauseEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGamePause::remove_didPauseEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPauseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGamePause.add_willResumeEvent
void GlobalNamespace::IGamePause::add_willResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGamePause::add_willResumeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_willResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGamePause.remove_willResumeEvent
void GlobalNamespace::IGamePause::remove_willResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGamePause::remove_willResumeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_willResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGamePause.add_didResumeEvent
void GlobalNamespace::IGamePause::add_didResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGamePause::add_didResumeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGamePause.remove_didResumeEvent
void GlobalNamespace::IGamePause::remove_didResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGamePause::remove_didResumeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGamePause.Pause
void GlobalNamespace::IGamePause::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGamePause::Pause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IGamePause.WillResume
void GlobalNamespace::IGamePause::WillResume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGamePause::WillResume");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WillResume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IGamePause.Resume
void GlobalNamespace::IGamePause::Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGamePause::Resume");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalPlayerInGameMenuInitData
#include "GlobalNamespace/LocalPlayerInGameMenuInitData.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly IPreviewBeatmapLevel previewBeatmapLevel
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::LocalPlayerInGameMenuInitData::_get_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalPlayerInGameMenuInitData::_get_previewBeatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewBeatmapLevel"))->offset;
  return *reinterpret_cast<GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly IPreviewBeatmapLevel previewBeatmapLevel
void GlobalNamespace::LocalPlayerInGameMenuInitData::_set_previewBeatmapLevel(GlobalNamespace::IPreviewBeatmapLevel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalPlayerInGameMenuInitData::_set_previewBeatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewBeatmapLevel"))->offset;
  *reinterpret_cast<GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapDifficulty beatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::LocalPlayerInGameMenuInitData::_get_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalPlayerInGameMenuInitData::_get_beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapDifficulty"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly BeatmapDifficulty beatmapDifficulty
void GlobalNamespace::LocalPlayerInGameMenuInitData::_set_beatmapDifficulty(GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalPlayerInGameMenuInitData::_set_beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapDifficulty"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapCharacteristicSO beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::LocalPlayerInGameMenuInitData::_get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalPlayerInGameMenuInitData::_get_beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapCharacteristic"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly BeatmapCharacteristicSO beatmapCharacteristic
void GlobalNamespace::LocalPlayerInGameMenuInitData::_set_beatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalPlayerInGameMenuInitData::_set_beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapCharacteristic"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean hasSong
bool GlobalNamespace::LocalPlayerInGameMenuInitData::_get_hasSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalPlayerInGameMenuInitData::_get_hasSong");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasSong"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean hasSong
void GlobalNamespace::LocalPlayerInGameMenuInitData::_set_hasSong(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalPlayerInGameMenuInitData::_set_hasSong");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasSong"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DelayedMenuButtonTrigger
#include "GlobalNamespace/DelayedMenuButtonTrigger.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: VRControllersInputManager
#include "GlobalNamespace/VRControllersInputManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action menuButtonTriggeredEvent
System::Action* GlobalNamespace::DelayedMenuButtonTrigger::_get_menuButtonTriggeredEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DelayedMenuButtonTrigger::_get_menuButtonTriggeredEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuButtonTriggeredEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action menuButtonTriggeredEvent
void GlobalNamespace::DelayedMenuButtonTrigger::_set_menuButtonTriggeredEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DelayedMenuButtonTrigger::_set_menuButtonTriggeredEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuButtonTriggeredEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _pressDuration
float GlobalNamespace::DelayedMenuButtonTrigger::_get__pressDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DelayedMenuButtonTrigger::_get__pressDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _pressDuration
void GlobalNamespace::DelayedMenuButtonTrigger::_set__pressDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DelayedMenuButtonTrigger::_set__pressDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressDuration"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timer
float GlobalNamespace::DelayedMenuButtonTrigger::_get__timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DelayedMenuButtonTrigger::_get__timer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _timer
void GlobalNamespace::DelayedMenuButtonTrigger::_set__timer(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DelayedMenuButtonTrigger::_set__timer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timer"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _waitingForButtonRelease
bool GlobalNamespace::DelayedMenuButtonTrigger::_get__waitingForButtonRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DelayedMenuButtonTrigger::_get__waitingForButtonRelease");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waitingForButtonRelease"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _waitingForButtonRelease
void GlobalNamespace::DelayedMenuButtonTrigger::_set__waitingForButtonRelease(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DelayedMenuButtonTrigger::_set__waitingForButtonRelease");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waitingForButtonRelease"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private VRControllersInputManager _vrControllersInputManager
GlobalNamespace::VRControllersInputManager* GlobalNamespace::DelayedMenuButtonTrigger::_get__vrControllersInputManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DelayedMenuButtonTrigger::_get__vrControllersInputManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrControllersInputManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRControllersInputManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private VRControllersInputManager _vrControllersInputManager
void GlobalNamespace::DelayedMenuButtonTrigger::_set__vrControllersInputManager(GlobalNamespace::VRControllersInputManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DelayedMenuButtonTrigger::_set__vrControllersInputManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrControllersInputManager"))->offset;
  *reinterpret_cast<GlobalNamespace::VRControllersInputManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: DelayedMenuButtonTrigger.add_menuButtonTriggeredEvent
void GlobalNamespace::DelayedMenuButtonTrigger::add_menuButtonTriggeredEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DelayedMenuButtonTrigger::add_menuButtonTriggeredEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_menuButtonTriggeredEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: DelayedMenuButtonTrigger.remove_menuButtonTriggeredEvent
void GlobalNamespace::DelayedMenuButtonTrigger::remove_menuButtonTriggeredEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DelayedMenuButtonTrigger::remove_menuButtonTriggeredEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_menuButtonTriggeredEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: DelayedMenuButtonTrigger.Tick
void GlobalNamespace::DelayedMenuButtonTrigger::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DelayedMenuButtonTrigger::Tick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Tick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IMenuButtonTrigger
#include "GlobalNamespace/IMenuButtonTrigger.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IMenuButtonTrigger.add_menuButtonTriggeredEvent
void GlobalNamespace::IMenuButtonTrigger::add_menuButtonTriggeredEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuButtonTrigger::add_menuButtonTriggeredEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_menuButtonTriggeredEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuButtonTrigger.remove_menuButtonTriggeredEvent
void GlobalNamespace::IMenuButtonTrigger::remove_menuButtonTriggeredEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuButtonTrigger::remove_menuButtonTriggeredEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_menuButtonTriggeredEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InstantMenuButtonTrigger
#include "GlobalNamespace/InstantMenuButtonTrigger.hpp"
// Including type: VRControllersInputManager
#include "GlobalNamespace/VRControllersInputManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly VRControllersInputManager _vrControllersInputManager
GlobalNamespace::VRControllersInputManager* GlobalNamespace::InstantMenuButtonTrigger::_get__vrControllersInputManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InstantMenuButtonTrigger::_get__vrControllersInputManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrControllersInputManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRControllersInputManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly VRControllersInputManager _vrControllersInputManager
void GlobalNamespace::InstantMenuButtonTrigger::_set__vrControllersInputManager(GlobalNamespace::VRControllersInputManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InstantMenuButtonTrigger::_set__vrControllersInputManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrControllersInputManager"))->offset;
  *reinterpret_cast<GlobalNamespace::VRControllersInputManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action menuButtonTriggeredEvent
System::Action* GlobalNamespace::InstantMenuButtonTrigger::_get_menuButtonTriggeredEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InstantMenuButtonTrigger::_get_menuButtonTriggeredEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuButtonTriggeredEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action menuButtonTriggeredEvent
void GlobalNamespace::InstantMenuButtonTrigger::_set_menuButtonTriggeredEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InstantMenuButtonTrigger::_set_menuButtonTriggeredEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuButtonTriggeredEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: InstantMenuButtonTrigger.add_menuButtonTriggeredEvent
void GlobalNamespace::InstantMenuButtonTrigger::add_menuButtonTriggeredEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InstantMenuButtonTrigger::add_menuButtonTriggeredEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_menuButtonTriggeredEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: InstantMenuButtonTrigger.remove_menuButtonTriggeredEvent
void GlobalNamespace::InstantMenuButtonTrigger::remove_menuButtonTriggeredEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InstantMenuButtonTrigger::remove_menuButtonTriggeredEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_menuButtonTriggeredEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: InstantMenuButtonTrigger.Tick
void GlobalNamespace::InstantMenuButtonTrigger::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InstantMenuButtonTrigger::Tick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Tick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MockPause
#include "GlobalNamespace/MockPause.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action didPauseEvent
System::Action* GlobalNamespace::MockPause::_get_didPauseEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPause::_get_didPauseEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPauseEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action didPauseEvent
void GlobalNamespace::MockPause::_set_didPauseEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPause::_set_didPauseEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPauseEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action willResumeEvent
System::Action* GlobalNamespace::MockPause::_get_willResumeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPause::_get_willResumeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "willResumeEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action willResumeEvent
void GlobalNamespace::MockPause::_set_willResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPause::_set_willResumeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "willResumeEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action didResumeEvent
System::Action* GlobalNamespace::MockPause::_get_didResumeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPause::_get_didResumeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didResumeEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action didResumeEvent
void GlobalNamespace::MockPause::_set_didResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPause::_set_didResumeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didResumeEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MockPause.add_didPauseEvent
void GlobalNamespace::MockPause::add_didPauseEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPause::add_didPauseEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPauseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MockPause.remove_didPauseEvent
void GlobalNamespace::MockPause::remove_didPauseEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPause::remove_didPauseEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPauseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MockPause.add_willResumeEvent
void GlobalNamespace::MockPause::add_willResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPause::add_willResumeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_willResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MockPause.remove_willResumeEvent
void GlobalNamespace::MockPause::remove_willResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPause::remove_willResumeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_willResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MockPause.add_didResumeEvent
void GlobalNamespace::MockPause::add_didResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPause::add_didResumeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MockPause.remove_didResumeEvent
void GlobalNamespace::MockPause::remove_didResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPause::remove_didResumeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MockPause.Pause
void GlobalNamespace::MockPause::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPause::Pause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MockPause.WillResume
void GlobalNamespace::MockPause::WillResume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPause::WillResume");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WillResume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MockPause.Resume
void GlobalNamespace::MockPause::Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPause::Resume");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLocalActivePlayerInGameMenuController
#include "GlobalNamespace/MultiplayerLocalActivePlayerInGameMenuController.hpp"
// Including type: MultiplayerLocalActivePlayerInGameMenuController/<>c__DisplayClass18_0
#include "GlobalNamespace/MultiplayerLocalActivePlayerInGameMenuController_--c__DisplayClass18_0.hpp"
// Including type: MultiplayerLocalActivePlayerInGameMenuViewController
#include "GlobalNamespace/MultiplayerLocalActivePlayerInGameMenuViewController.hpp"
// Including type: IMenuButtonTrigger
#include "GlobalNamespace/IMenuButtonTrigger.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLocalActivePlayerInGameMenuViewController _inGameMenuViewController
GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_get__inGameMenuViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_get__inGameMenuViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inGameMenuViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly MultiplayerLocalActivePlayerInGameMenuViewController _inGameMenuViewController
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_set__inGameMenuViewController(GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_set__inGameMenuViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inGameMenuViewController"))->offset;
  *reinterpret_cast<GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IMenuButtonTrigger _menuButtonTrigger
GlobalNamespace::IMenuButtonTrigger* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_get__menuButtonTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_get__menuButtonTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuButtonTrigger"))->offset;
  return *reinterpret_cast<GlobalNamespace::IMenuButtonTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IMenuButtonTrigger _menuButtonTrigger
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_set__menuButtonTrigger(GlobalNamespace::IMenuButtonTrigger* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_set__menuButtonTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuButtonTrigger"))->offset;
  *reinterpret_cast<GlobalNamespace::IMenuButtonTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IVRPlatformHelper _vrPlatformHelper
GlobalNamespace::IVRPlatformHelper* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_get__vrPlatformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_get__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  return *reinterpret_cast<GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IVRPlatformHelper _vrPlatformHelper
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_set__vrPlatformHelper(GlobalNamespace::IVRPlatformHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_set__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  *reinterpret_cast<GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerController _multiplayerController
GlobalNamespace::MultiplayerController* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_get__multiplayerController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_get__multiplayerController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly MultiplayerController _multiplayerController
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_set__multiplayerController(GlobalNamespace::MultiplayerController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_set__multiplayerController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerController"))->offset;
  *reinterpret_cast<GlobalNamespace::MultiplayerController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberManager _saberManager
GlobalNamespace::SaberManager* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_get__saberManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_get__saberManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly SaberManager _saberManager
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_set__saberManager(GlobalNamespace::SaberManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_set__saberManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberManager"))->offset;
  *reinterpret_cast<GlobalNamespace::SaberManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
GlobalNamespace::BeatmapObjectManager* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_get__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_get__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly BeatmapObjectManager _beatmapObjectManager
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_set__beatmapObjectManager(GlobalNamespace::BeatmapObjectManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_set__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action didGiveUpEvent
System::Action* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_get_didGiveUpEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_get_didGiveUpEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didGiveUpEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action didGiveUpEvent
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_set_didGiveUpEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_set_didGiveUpEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didGiveUpEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Action`1<System.Boolean>> canShowInGameMenuEvent
System::Action_1<System::Action_1<bool>*>* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_get_canShowInGameMenuEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_get_canShowInGameMenuEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canShowInGameMenuEvent"))->offset;
  return *reinterpret_cast<System::Action_1<System::Action_1<bool>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<System.Action`1<System.Boolean>> canShowInGameMenuEvent
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_set_canShowInGameMenuEvent(System::Action_1<System::Action_1<bool>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_set_canShowInGameMenuEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canShowInGameMenuEvent"))->offset;
  *reinterpret_cast<System::Action_1<System::Action_1<bool>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action requestsDisconnectEvent
System::Action* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_get_requestsDisconnectEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_get_requestsDisconnectEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestsDisconnectEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action requestsDisconnectEvent
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_set_requestsDisconnectEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_set_requestsDisconnectEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestsDisconnectEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _gameMenuIsShown
bool GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_get__gameMenuIsShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_get__gameMenuIsShown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameMenuIsShown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _gameMenuIsShown
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_set__gameMenuIsShown(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::_set__gameMenuIsShown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameMenuIsShown"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuController.get_gameMenuIsShown
bool GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::get_gameMenuIsShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::get_gameMenuIsShown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameMenuIsShown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuController.get_canShowInGameMenu
bool GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::get_canShowInGameMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::get_canShowInGameMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canShowInGameMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuController.add_didGiveUpEvent
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::add_didGiveUpEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::add_didGiveUpEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didGiveUpEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuController.remove_didGiveUpEvent
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::remove_didGiveUpEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::remove_didGiveUpEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didGiveUpEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuController.add_canShowInGameMenuEvent
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::add_canShowInGameMenuEvent(System::Action_1<System::Action_1<bool>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::add_canShowInGameMenuEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_canShowInGameMenuEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuController.remove_canShowInGameMenuEvent
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::remove_canShowInGameMenuEvent(System::Action_1<System::Action_1<bool>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::remove_canShowInGameMenuEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_canShowInGameMenuEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuController.add_requestsDisconnectEvent
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::add_requestsDisconnectEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::add_requestsDisconnectEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_requestsDisconnectEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuController.remove_requestsDisconnectEvent
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::remove_requestsDisconnectEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::remove_requestsDisconnectEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_requestsDisconnectEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuController.Start
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuController.OnDestroy
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuController.OnApplicationPause
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::OnApplicationPause(bool pauseStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pauseStatus)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pauseStatus);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuController.ShowInGameMenu
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::ShowInGameMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::ShowInGameMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowInGameMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuController.HideInGameMenu
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::HideInGameMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::HideInGameMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideInGameMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuController.HandleMenuButtonTriggered
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::HandleMenuButtonTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::HandleMenuButtonTriggered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuButtonTriggered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuController.HandleInputFocusWasCaptured
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::HandleInputFocusWasCaptured() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::HandleInputFocusWasCaptured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFocusWasCaptured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuController.HandleInGameMenuViewControllerDidPressResumeButton
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::HandleInGameMenuViewControllerDidPressResumeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::HandleInGameMenuViewControllerDidPressResumeButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInGameMenuViewControllerDidPressResumeButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuController.HandleInGameMenuViewControllerDidPressGiveUpButton
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::HandleInGameMenuViewControllerDidPressGiveUpButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::HandleInGameMenuViewControllerDidPressGiveUpButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInGameMenuViewControllerDidPressGiveUpButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuController.HandleInGameMenuViewControllerDidPressDisconnectButton
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::HandleInGameMenuViewControllerDidPressDisconnectButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::HandleInGameMenuViewControllerDidPressDisconnectButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInGameMenuViewControllerDidPressDisconnectButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuController.HandleStateChanged
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::HandleStateChanged(GlobalNamespace::MultiplayerController::State state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::HandleStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLocalActivePlayerInGameMenuController/<>c__DisplayClass18_0
#include "GlobalNamespace/MultiplayerLocalActivePlayerInGameMenuController_--c__DisplayClass18_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean value
bool GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::$$c__DisplayClass18_0::_get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::$$c__DisplayClass18_0::_get_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean value
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::$$c__DisplayClass18_0::_set_value(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::$$c__DisplayClass18_0::_set_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuController/<>c__DisplayClass18_0.<get_canShowInGameMenu>b__0
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::$$c__DisplayClass18_0::$get_canShowInGameMenu$b__0(bool newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::$$c__DisplayClass18_0::<get_canShowInGameMenu>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_canShowInGameMenu>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newValue)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, newValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLocalActivePlayerInGameMenuViewController
#include "GlobalNamespace/MultiplayerLocalActivePlayerInGameMenuViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: Polyglot.LocalizedTextMeshProUGUI
#include "Polyglot/LocalizedTextMeshProUGUI.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: DisconnectPromptView
#include "GlobalNamespace/DisconnectPromptView.hpp"
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: LocalPlayerInGameMenuInitData
#include "GlobalNamespace/LocalPlayerInGameMenuInitData.hpp"
// Including type: VRControllersInputManager
#include "GlobalNamespace/VRControllersInputManager.hpp"
// Including type: MultiplayerLocalPlayerDisconnectHelper
#include "GlobalNamespace/MultiplayerLocalPlayerDisconnectHelper.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kDisabledInteractionDuration
float GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get_kDisabledInteractionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get_kDisabledInteractionDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MultiplayerLocalActivePlayerInGameMenuViewController", "kDisabledInteractionDuration"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kDisabledInteractionDuration
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set_kDisabledInteractionDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set_kDisabledInteractionDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLocalActivePlayerInGameMenuViewController", "kDisabledInteractionDuration", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _disconnectButton
UnityEngine::UI::Button* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__disconnectButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__disconnectButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disconnectButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.UI.Button _disconnectButton
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__disconnectButton(UnityEngine::UI::Button* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__disconnectButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disconnectButton"))->offset;
  *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private Polyglot.LocalizedTextMeshProUGUI _disconnectButtonLocalizedText
Polyglot::LocalizedTextMeshProUGUI* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__disconnectButtonLocalizedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__disconnectButtonLocalizedText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disconnectButtonLocalizedText"))->offset;
  return *reinterpret_cast<Polyglot::LocalizedTextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private Polyglot.LocalizedTextMeshProUGUI _disconnectButtonLocalizedText
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__disconnectButtonLocalizedText(Polyglot::LocalizedTextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__disconnectButtonLocalizedText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disconnectButtonLocalizedText"))->offset;
  *reinterpret_cast<Polyglot::LocalizedTextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _giveUpButton
UnityEngine::UI::Button* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__giveUpButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__giveUpButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_giveUpButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.UI.Button _giveUpButton
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__giveUpButton(UnityEngine::UI::Button* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__giveUpButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_giveUpButton"))->offset;
  *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _resumeButton
UnityEngine::UI::Button* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__resumeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__resumeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resumeButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.UI.Button _resumeButton
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__resumeButton(UnityEngine::UI::Button* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__resumeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resumeButton"))->offset;
  *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _mainBar
UnityEngine::GameObject* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__mainBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__mainBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainBar"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _mainBar
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__mainBar(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__mainBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainBar"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private DisconnectPromptView _disconnectPromptView
GlobalNamespace::DisconnectPromptView* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__disconnectPromptView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__disconnectPromptView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disconnectPromptView"))->offset;
  return *reinterpret_cast<GlobalNamespace::DisconnectPromptView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private DisconnectPromptView _disconnectPromptView
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__disconnectPromptView(GlobalNamespace::DisconnectPromptView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__disconnectPromptView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disconnectPromptView"))->offset;
  *reinterpret_cast<GlobalNamespace::DisconnectPromptView**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private LevelBar _levelBar
GlobalNamespace::LevelBar* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__levelBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__levelBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelBar"))->offset;
  return *reinterpret_cast<GlobalNamespace::LevelBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LevelBar _levelBar
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__levelBar(GlobalNamespace::LevelBar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__levelBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelBar"))->offset;
  *reinterpret_cast<GlobalNamespace::LevelBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _menuWrapperGameObject
UnityEngine::GameObject* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__menuWrapperGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__menuWrapperGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuWrapperGameObject"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _menuWrapperGameObject
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__menuWrapperGameObject(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__menuWrapperGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuWrapperGameObject"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _menuControllersGameObject
UnityEngine::GameObject* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__menuControllersGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__menuControllersGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuControllersGameObject"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _menuControllersGameObject
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__menuControllersGameObject(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__menuControllersGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuControllersGameObject"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IConnectedPlayer _connectedPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__connectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayer"))->offset;
  return *reinterpret_cast<GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IConnectedPlayer _connectedPlayer
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__connectedPlayer(GlobalNamespace::IConnectedPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__connectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayer"))->offset;
  *reinterpret_cast<GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly LocalPlayerInGameMenuInitData _localPlayerInGameMenuInitData
GlobalNamespace::LocalPlayerInGameMenuInitData* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__localPlayerInGameMenuInitData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__localPlayerInGameMenuInitData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerInGameMenuInitData"))->offset;
  return *reinterpret_cast<GlobalNamespace::LocalPlayerInGameMenuInitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly LocalPlayerInGameMenuInitData _localPlayerInGameMenuInitData
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__localPlayerInGameMenuInitData(GlobalNamespace::LocalPlayerInGameMenuInitData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__localPlayerInGameMenuInitData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerInGameMenuInitData"))->offset;
  *reinterpret_cast<GlobalNamespace::LocalPlayerInGameMenuInitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly VRControllersInputManager _vrControllersInputManager
GlobalNamespace::VRControllersInputManager* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__vrControllersInputManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__vrControllersInputManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrControllersInputManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRControllersInputManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly VRControllersInputManager _vrControllersInputManager
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__vrControllersInputManager(GlobalNamespace::VRControllersInputManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__vrControllersInputManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrControllersInputManager"))->offset;
  *reinterpret_cast<GlobalNamespace::VRControllersInputManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLocalPlayerDisconnectHelper _disconnectHelper
GlobalNamespace::MultiplayerLocalPlayerDisconnectHelper* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__disconnectHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__disconnectHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disconnectHelper"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLocalPlayerDisconnectHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly MultiplayerLocalPlayerDisconnectHelper _disconnectHelper
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__disconnectHelper(GlobalNamespace::MultiplayerLocalPlayerDisconnectHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__disconnectHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disconnectHelper"))->offset;
  *reinterpret_cast<GlobalNamespace::MultiplayerLocalPlayerDisconnectHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action didPressDisconnectButtonEvent
System::Action* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get_didPressDisconnectButtonEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get_didPressDisconnectButtonEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPressDisconnectButtonEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action didPressDisconnectButtonEvent
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set_didPressDisconnectButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set_didPressDisconnectButtonEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPressDisconnectButtonEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action didPressGiveUpButtonEvent
System::Action* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get_didPressGiveUpButtonEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get_didPressGiveUpButtonEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPressGiveUpButtonEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action didPressGiveUpButtonEvent
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set_didPressGiveUpButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set_didPressGiveUpButtonEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPressGiveUpButtonEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action didPressResumeButtonEvent
System::Action* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get_didPressResumeButtonEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get_didPressResumeButtonEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPressResumeButtonEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action didPressResumeButtonEvent
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set_didPressResumeButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set_didPressResumeButtonEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPressResumeButtonEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder _buttonBinder
HMUI::ButtonBinder* GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ButtonBinder _buttonBinder
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__buttonBinder(HMUI::ButtonBinder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _disabledInteractionRemainingTime
float GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__disabledInteractionRemainingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_get__disabledInteractionRemainingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledInteractionRemainingTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _disabledInteractionRemainingTime
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__disabledInteractionRemainingTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::_set__disabledInteractionRemainingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledInteractionRemainingTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuViewController.add_didPressDisconnectButtonEvent
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::add_didPressDisconnectButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::add_didPressDisconnectButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressDisconnectButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuViewController.remove_didPressDisconnectButtonEvent
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::remove_didPressDisconnectButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::remove_didPressDisconnectButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressDisconnectButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuViewController.add_didPressGiveUpButtonEvent
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::add_didPressGiveUpButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::add_didPressGiveUpButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressGiveUpButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuViewController.remove_didPressGiveUpButtonEvent
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::remove_didPressGiveUpButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::remove_didPressGiveUpButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressGiveUpButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuViewController.add_didPressResumeButtonEvent
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::add_didPressResumeButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::add_didPressResumeButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressResumeButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuViewController.remove_didPressResumeButtonEvent
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::remove_didPressResumeButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::remove_didPressResumeButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressResumeButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuViewController.Awake
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuViewController.Start
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuViewController.OnDestroy
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuViewController.Update
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuViewController.ShowMenu
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::ShowMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::ShowMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuViewController.HideMenu
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::HideMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::HideMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuViewController.DisconnectButtonPressed
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::DisconnectButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::DisconnectButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuViewController.HandleDisconnectPromptViewDidViewFinish
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::HandleDisconnectPromptViewDidViewFinish(bool disconnect) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::HandleDisconnectPromptViewDidViewFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDisconnectPromptViewDidViewFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnect)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disconnect);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuViewController.GiveUpButtonPressed
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::GiveUpButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::GiveUpButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GiveUpButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuViewController.ResumeButtonPressed
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::ResumeButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::ResumeButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResumeButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActivePlayerInGameMenuViewController.<HandleDisconnectPromptViewDidViewFinish>b__32_0
void GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::$HandleDisconnectPromptViewDidViewFinish$b__32_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::<HandleDisconnectPromptViewDidViewFinish>b__32_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleDisconnectPromptViewDidViewFinish>b__32_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLocalInactivePlayerInGameMenuViewController
#include "GlobalNamespace/MultiplayerLocalInactivePlayerInGameMenuViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: Polyglot.LocalizedTextMeshProUGUI
#include "Polyglot/LocalizedTextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: DisconnectPromptView
#include "GlobalNamespace/DisconnectPromptView.hpp"
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: LocalPlayerInGameMenuInitData
#include "GlobalNamespace/LocalPlayerInGameMenuInitData.hpp"
// Including type: MultiplayerLocalPlayerDisconnectHelper
#include "GlobalNamespace/MultiplayerLocalPlayerDisconnectHelper.hpp"
// Including type: Tweening.TweeningManager
#include "Tweening/TweeningManager.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
// Including type: Tweening.Tween
#include "Tweening/Tween.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _disconnectButton
UnityEngine::UI::Button* GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__disconnectButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__disconnectButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disconnectButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.UI.Button _disconnectButton
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__disconnectButton(UnityEngine::UI::Button* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__disconnectButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disconnectButton"))->offset;
  *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private Polyglot.LocalizedTextMeshProUGUI _disconnectButtonLocalizedText
Polyglot::LocalizedTextMeshProUGUI* GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__disconnectButtonLocalizedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__disconnectButtonLocalizedText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disconnectButtonLocalizedText"))->offset;
  return *reinterpret_cast<Polyglot::LocalizedTextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private Polyglot.LocalizedTextMeshProUGUI _disconnectButtonLocalizedText
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__disconnectButtonLocalizedText(Polyglot::LocalizedTextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__disconnectButtonLocalizedText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disconnectButtonLocalizedText"))->offset;
  *reinterpret_cast<Polyglot::LocalizedTextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _detailsToggle
UnityEngine::UI::Toggle* GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__detailsToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__detailsToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_detailsToggle"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.UI.Toggle _detailsToggle
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__detailsToggle(UnityEngine::UI::Toggle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__detailsToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_detailsToggle"))->offset;
  *reinterpret_cast<UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _globalCanvasGroup
UnityEngine::CanvasGroup* GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__globalCanvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__globalCanvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_globalCanvasGroup"))->offset;
  return *reinterpret_cast<UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.CanvasGroup _globalCanvasGroup
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__globalCanvasGroup(UnityEngine::CanvasGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__globalCanvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_globalCanvasGroup"))->offset;
  *reinterpret_cast<UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _mainBar
UnityEngine::GameObject* GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__mainBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__mainBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainBar"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _mainBar
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__mainBar(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__mainBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainBar"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private DisconnectPromptView _disconnectPromptView
GlobalNamespace::DisconnectPromptView* GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__disconnectPromptView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__disconnectPromptView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disconnectPromptView"))->offset;
  return *reinterpret_cast<GlobalNamespace::DisconnectPromptView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private DisconnectPromptView _disconnectPromptView
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__disconnectPromptView(GlobalNamespace::DisconnectPromptView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__disconnectPromptView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disconnectPromptView"))->offset;
  *reinterpret_cast<GlobalNamespace::DisconnectPromptView**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private LevelBar _levelBar
GlobalNamespace::LevelBar* GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__levelBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__levelBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelBar"))->offset;
  return *reinterpret_cast<GlobalNamespace::LevelBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LevelBar _levelBar
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__levelBar(GlobalNamespace::LevelBar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__levelBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelBar"))->offset;
  *reinterpret_cast<GlobalNamespace::LevelBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _dontOwnSongGameObject
UnityEngine::GameObject* GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__dontOwnSongGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__dontOwnSongGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dontOwnSongGameObject"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _dontOwnSongGameObject
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__dontOwnSongGameObject(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__dontOwnSongGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dontOwnSongGameObject"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _detailsGameObject
UnityEngine::GameObject* GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__detailsGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__detailsGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_detailsGameObject"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _detailsGameObject
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__detailsGameObject(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__detailsGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_detailsGameObject"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly LocalPlayerInGameMenuInitData _localPlayerInGameMenuInitData
GlobalNamespace::LocalPlayerInGameMenuInitData* GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__localPlayerInGameMenuInitData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__localPlayerInGameMenuInitData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerInGameMenuInitData"))->offset;
  return *reinterpret_cast<GlobalNamespace::LocalPlayerInGameMenuInitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly LocalPlayerInGameMenuInitData _localPlayerInGameMenuInitData
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__localPlayerInGameMenuInitData(GlobalNamespace::LocalPlayerInGameMenuInitData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__localPlayerInGameMenuInitData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerInGameMenuInitData"))->offset;
  *reinterpret_cast<GlobalNamespace::LocalPlayerInGameMenuInitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLocalPlayerDisconnectHelper _disconnectHelper
GlobalNamespace::MultiplayerLocalPlayerDisconnectHelper* GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__disconnectHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__disconnectHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disconnectHelper"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLocalPlayerDisconnectHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly MultiplayerLocalPlayerDisconnectHelper _disconnectHelper
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__disconnectHelper(GlobalNamespace::MultiplayerLocalPlayerDisconnectHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__disconnectHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disconnectHelper"))->offset;
  *reinterpret_cast<GlobalNamespace::MultiplayerLocalPlayerDisconnectHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerController _multiplayerController
GlobalNamespace::MultiplayerController* GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__multiplayerController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__multiplayerController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly MultiplayerController _multiplayerController
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__multiplayerController(GlobalNamespace::MultiplayerController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__multiplayerController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerController"))->offset;
  *reinterpret_cast<GlobalNamespace::MultiplayerController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.TweeningManager _tweeningManager
Tweening::TweeningManager* GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  return *reinterpret_cast<Tweening::TweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly Tweening.TweeningManager _tweeningManager
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__tweeningManager(Tweening::TweeningManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  *reinterpret_cast<Tweening::TweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ButtonBinder _buttonBinder
HMUI::ButtonBinder* GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly HMUI.ButtonBinder _buttonBinder
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__buttonBinder(HMUI::ButtonBinder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ToggleBinder _toggleBinder
HMUI::ToggleBinder* GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__toggleBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__toggleBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggleBinder"))->offset;
  return *reinterpret_cast<HMUI::ToggleBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly HMUI.ToggleBinder _toggleBinder
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__toggleBinder(HMUI::ToggleBinder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__toggleBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggleBinder"))->offset;
  *reinterpret_cast<HMUI::ToggleBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween _fadeOutTween
Tweening::Tween* GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__fadeOutTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_get__fadeOutTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeOutTween"))->offset;
  return *reinterpret_cast<Tweening::Tween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private Tweening.Tween _fadeOutTween
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__fadeOutTween(Tweening::Tween* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::_set__fadeOutTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeOutTween"))->offset;
  *reinterpret_cast<Tweening::Tween**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MultiplayerLocalInactivePlayerInGameMenuViewController.OnEnable
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalInactivePlayerInGameMenuViewController.OnDisable
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalInactivePlayerInGameMenuViewController.Start
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalInactivePlayerInGameMenuViewController.OnDestroy
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalInactivePlayerInGameMenuViewController.DisconnectButtonPressed
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::DisconnectButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::DisconnectButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalInactivePlayerInGameMenuViewController.DetailsToggleValueChanged
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::DetailsToggleValueChanged(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::DetailsToggleValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetailsToggleValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, isOn);
}
// Autogenerated method: MultiplayerLocalInactivePlayerInGameMenuViewController.HandleDisconnectPromptViewDidViewFinish
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::HandleDisconnectPromptViewDidViewFinish(bool disconnect) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::HandleDisconnectPromptViewDidViewFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDisconnectPromptViewDidViewFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnect)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disconnect);
}
// Autogenerated method: MultiplayerLocalInactivePlayerInGameMenuViewController.HandleStateChanged
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::HandleStateChanged(GlobalNamespace::MultiplayerController::State state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::HandleStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated method: MultiplayerLocalInactivePlayerInGameMenuViewController.<HandleDisconnectPromptViewDidViewFinish>b__22_0
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::$HandleDisconnectPromptViewDidViewFinish$b__22_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::<HandleDisconnectPromptViewDidViewFinish>b__22_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleDisconnectPromptViewDidViewFinish>b__22_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLocalInactivePlayerInGameMenuViewController.<HandleStateChanged>b__23_0
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::$HandleStateChanged$b__23_0(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::<HandleStateChanged>b__23_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleStateChanged>b__23_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, val);
}
// Autogenerated method: MultiplayerLocalInactivePlayerInGameMenuViewController.<HandleStateChanged>b__23_1
void GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::$HandleStateChanged$b__23_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalInactivePlayerInGameMenuViewController::<HandleStateChanged>b__23_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleStateChanged>b__23_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerSpectatingSpotPickerViewController
#include "GlobalNamespace/MultiplayerSpectatingSpotPickerViewController.hpp"
// Including type: StepValuePicker
#include "GlobalNamespace/StepValuePicker.hpp"
// Including type: MultiplayerSpectatorController
#include "GlobalNamespace/MultiplayerSpectatorController.hpp"
// Including type: IMultiplayerSpectatingSpot
#include "GlobalNamespace/IMultiplayerSpectatingSpot.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private StepValuePicker _stepValuePicker
GlobalNamespace::StepValuePicker* GlobalNamespace::MultiplayerSpectatingSpotPickerViewController::_get__stepValuePicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotPickerViewController::_get__stepValuePicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stepValuePicker"))->offset;
  return *reinterpret_cast<GlobalNamespace::StepValuePicker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private StepValuePicker _stepValuePicker
void GlobalNamespace::MultiplayerSpectatingSpotPickerViewController::_set__stepValuePicker(GlobalNamespace::StepValuePicker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotPickerViewController::_set__stepValuePicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stepValuePicker"))->offset;
  *reinterpret_cast<GlobalNamespace::StepValuePicker**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerSpectatorController _spectatorController
GlobalNamespace::MultiplayerSpectatorController* GlobalNamespace::MultiplayerSpectatingSpotPickerViewController::_get__spectatorController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotPickerViewController::_get__spectatorController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spectatorController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerSpectatorController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly MultiplayerSpectatorController _spectatorController
void GlobalNamespace::MultiplayerSpectatingSpotPickerViewController::_set__spectatorController(GlobalNamespace::MultiplayerSpectatorController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotPickerViewController::_set__spectatorController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spectatorController"))->offset;
  *reinterpret_cast<GlobalNamespace::MultiplayerSpectatorController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MultiplayerSpectatingSpotPickerViewController.Start
void GlobalNamespace::MultiplayerSpectatingSpotPickerViewController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotPickerViewController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatingSpotPickerViewController.OnDestroy
void GlobalNamespace::MultiplayerSpectatingSpotPickerViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotPickerViewController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatingSpotPickerViewController.HandleSpectatingSpotDidChangeEvent
void GlobalNamespace::MultiplayerSpectatingSpotPickerViewController::HandleSpectatingSpotDidChangeEvent(GlobalNamespace::IMultiplayerSpectatingSpot* spectatingSpot) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotPickerViewController::HandleSpectatingSpotDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSpectatingSpotDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spectatingSpot)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, spectatingSpot);
}
// Autogenerated method: MultiplayerSpectatingSpotPickerViewController.RefreshSpectatingSpotName
void GlobalNamespace::MultiplayerSpectatingSpotPickerViewController::RefreshSpectatingSpotName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotPickerViewController::RefreshSpectatingSpotName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSpectatingSpotName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatingSpotPickerViewController.HandleIncButtonWasPressed
void GlobalNamespace::MultiplayerSpectatingSpotPickerViewController::HandleIncButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotPickerViewController::HandleIncButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleIncButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatingSpotPickerViewController.HandleDecButtonWasPressed
void GlobalNamespace::MultiplayerSpectatingSpotPickerViewController::HandleDecButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotPickerViewController::HandleDecButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDecButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PauseAnimationController
#include "GlobalNamespace/PauseAnimationController.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator _animator
UnityEngine::Animator* GlobalNamespace::PauseAnimationController::_get__animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseAnimationController::_get__animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animator"))->offset;
  return *reinterpret_cast<UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Animator _animator
void GlobalNamespace::PauseAnimationController::_set__animator(UnityEngine::Animator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseAnimationController::_set__animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animator"))->offset;
  *reinterpret_cast<UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action resumeFromPauseAnimationDidFinishEvent
System::Action* GlobalNamespace::PauseAnimationController::_get_resumeFromPauseAnimationDidFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseAnimationController::_get_resumeFromPauseAnimationDidFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resumeFromPauseAnimationDidFinishEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action resumeFromPauseAnimationDidFinishEvent
void GlobalNamespace::PauseAnimationController::_set_resumeFromPauseAnimationDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseAnimationController::_set_resumeFromPauseAnimationDidFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resumeFromPauseAnimationDidFinishEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: PauseAnimationController.add_resumeFromPauseAnimationDidFinishEvent
void GlobalNamespace::PauseAnimationController::add_resumeFromPauseAnimationDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseAnimationController::add_resumeFromPauseAnimationDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_resumeFromPauseAnimationDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PauseAnimationController.remove_resumeFromPauseAnimationDidFinishEvent
void GlobalNamespace::PauseAnimationController::remove_resumeFromPauseAnimationDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseAnimationController::remove_resumeFromPauseAnimationDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_resumeFromPauseAnimationDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PauseAnimationController.Awake
void GlobalNamespace::PauseAnimationController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseAnimationController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseAnimationController.StartEnterPauseAnimation
void GlobalNamespace::PauseAnimationController::StartEnterPauseAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseAnimationController::StartEnterPauseAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartEnterPauseAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseAnimationController.StartResumeFromPauseAnimation
void GlobalNamespace::PauseAnimationController::StartResumeFromPauseAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseAnimationController::StartResumeFromPauseAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartResumeFromPauseAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseAnimationController.EnterPauseAnimationDidFinish
void GlobalNamespace::PauseAnimationController::EnterPauseAnimationDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseAnimationController::EnterPauseAnimationDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnterPauseAnimationDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseAnimationController.ResumeFromPauseAnimationDidFinish
void GlobalNamespace::PauseAnimationController::ResumeFromPauseAnimationDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseAnimationController::ResumeFromPauseAnimationDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResumeFromPauseAnimationDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PauseController
#include "GlobalNamespace/PauseController.hpp"
// Including type: PauseController/<>c__DisplayClass20_0
#include "GlobalNamespace/PauseController_--c__DisplayClass20_0.hpp"
// Including type: PauseMenuManager
#include "GlobalNamespace/PauseMenuManager.hpp"
// Including type: IGamePause
#include "GlobalNamespace/IGamePause.hpp"
// Including type: IMenuButtonTrigger
#include "GlobalNamespace/IMenuButtonTrigger.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: ILevelRestartController
#include "GlobalNamespace/ILevelRestartController.hpp"
// Including type: IReturnToMenuController
#include "GlobalNamespace/IReturnToMenuController.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly PauseMenuManager _pauseMenuManager
GlobalNamespace::PauseMenuManager* GlobalNamespace::PauseController::_get__pauseMenuManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_get__pauseMenuManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pauseMenuManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::PauseMenuManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly PauseMenuManager _pauseMenuManager
void GlobalNamespace::PauseController::_set__pauseMenuManager(GlobalNamespace::PauseMenuManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_set__pauseMenuManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pauseMenuManager"))->offset;
  *reinterpret_cast<GlobalNamespace::PauseMenuManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IGamePause _gamePause
GlobalNamespace::IGamePause* GlobalNamespace::PauseController::_get__gamePause() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_get__gamePause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gamePause"))->offset;
  return *reinterpret_cast<GlobalNamespace::IGamePause**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IGamePause _gamePause
void GlobalNamespace::PauseController::_set__gamePause(GlobalNamespace::IGamePause* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_set__gamePause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gamePause"))->offset;
  *reinterpret_cast<GlobalNamespace::IGamePause**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IMenuButtonTrigger _menuButtonTrigger
GlobalNamespace::IMenuButtonTrigger* GlobalNamespace::PauseController::_get__menuButtonTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_get__menuButtonTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuButtonTrigger"))->offset;
  return *reinterpret_cast<GlobalNamespace::IMenuButtonTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IMenuButtonTrigger _menuButtonTrigger
void GlobalNamespace::PauseController::_set__menuButtonTrigger(GlobalNamespace::IMenuButtonTrigger* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_set__menuButtonTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuButtonTrigger"))->offset;
  *reinterpret_cast<GlobalNamespace::IMenuButtonTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
GlobalNamespace::BeatmapObjectManager* GlobalNamespace::PauseController::_get__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_get__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly BeatmapObjectManager _beatmapObjectManager
void GlobalNamespace::PauseController::_set__beatmapObjectManager(GlobalNamespace::BeatmapObjectManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_set__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly ILevelRestartController _levelRestartController
GlobalNamespace::ILevelRestartController* GlobalNamespace::PauseController::_get__levelRestartController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_get__levelRestartController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelRestartController"))->offset;
  return *reinterpret_cast<GlobalNamespace::ILevelRestartController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly ILevelRestartController _levelRestartController
void GlobalNamespace::PauseController::_set__levelRestartController(GlobalNamespace::ILevelRestartController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_set__levelRestartController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelRestartController"))->offset;
  *reinterpret_cast<GlobalNamespace::ILevelRestartController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IReturnToMenuController _returnToMenuController
GlobalNamespace::IReturnToMenuController* GlobalNamespace::PauseController::_get__returnToMenuController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_get__returnToMenuController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_returnToMenuController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IReturnToMenuController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IReturnToMenuController _returnToMenuController
void GlobalNamespace::PauseController::_set__returnToMenuController(GlobalNamespace::IReturnToMenuController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_set__returnToMenuController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_returnToMenuController"))->offset;
  *reinterpret_cast<GlobalNamespace::IReturnToMenuController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IVRPlatformHelper _vrPlatformHelper
GlobalNamespace::IVRPlatformHelper* GlobalNamespace::PauseController::_get__vrPlatformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_get__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  return *reinterpret_cast<GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IVRPlatformHelper _vrPlatformHelper
void GlobalNamespace::PauseController::_set__vrPlatformHelper(GlobalNamespace::IVRPlatformHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_set__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  *reinterpret_cast<GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action didPauseEvent
System::Action* GlobalNamespace::PauseController::_get_didPauseEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_get_didPauseEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPauseEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action didPauseEvent
void GlobalNamespace::PauseController::_set_didPauseEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_set_didPauseEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPauseEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action didResumeEvent
System::Action* GlobalNamespace::PauseController::_get_didResumeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_get_didResumeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didResumeEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action didResumeEvent
void GlobalNamespace::PauseController::_set_didResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_set_didResumeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didResumeEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Action`1<System.Boolean>> canPauseEvent
System::Action_1<System::Action_1<bool>*>* GlobalNamespace::PauseController::_get_canPauseEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_get_canPauseEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canPauseEvent"))->offset;
  return *reinterpret_cast<System::Action_1<System::Action_1<bool>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<System.Action`1<System.Boolean>> canPauseEvent
void GlobalNamespace::PauseController::_set_canPauseEvent(System::Action_1<System::Action_1<bool>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_set_canPauseEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canPauseEvent"))->offset;
  *reinterpret_cast<System::Action_1<System::Action_1<bool>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action didReturnToMenuEvent
System::Action* GlobalNamespace::PauseController::_get_didReturnToMenuEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_get_didReturnToMenuEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didReturnToMenuEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action didReturnToMenuEvent
void GlobalNamespace::PauseController::_set_didReturnToMenuEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_set_didReturnToMenuEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didReturnToMenuEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _paused
bool GlobalNamespace::PauseController::_get__paused() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_get__paused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_paused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _paused
void GlobalNamespace::PauseController::_set__paused(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::_set__paused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_paused"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: PauseController.get_canPause
bool GlobalNamespace::PauseController::get_canPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::get_canPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseController.get_wantsToPause
bool GlobalNamespace::PauseController::get_wantsToPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::get_wantsToPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wantsToPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseController.add_didPauseEvent
void GlobalNamespace::PauseController::add_didPauseEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::add_didPauseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPauseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PauseController.remove_didPauseEvent
void GlobalNamespace::PauseController::remove_didPauseEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::remove_didPauseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPauseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PauseController.add_didResumeEvent
void GlobalNamespace::PauseController::add_didResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::add_didResumeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PauseController.remove_didResumeEvent
void GlobalNamespace::PauseController::remove_didResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::remove_didResumeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PauseController.add_canPauseEvent
void GlobalNamespace::PauseController::add_canPauseEvent(System::Action_1<System::Action_1<bool>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::add_canPauseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_canPauseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PauseController.remove_canPauseEvent
void GlobalNamespace::PauseController::remove_canPauseEvent(System::Action_1<System::Action_1<bool>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::remove_canPauseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_canPauseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PauseController.add_didReturnToMenuEvent
void GlobalNamespace::PauseController::add_didReturnToMenuEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::add_didReturnToMenuEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didReturnToMenuEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PauseController.remove_didReturnToMenuEvent
void GlobalNamespace::PauseController::remove_didReturnToMenuEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::remove_didReturnToMenuEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didReturnToMenuEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PauseController.Start
void GlobalNamespace::PauseController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseController.OnDestroy
void GlobalNamespace::PauseController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseController.OnApplicationPause
void GlobalNamespace::PauseController::OnApplicationPause(bool pauseStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pauseStatus)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pauseStatus);
}
// Autogenerated method: PauseController.Pause
void GlobalNamespace::PauseController::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseController.HandleMenuButtonTriggered
void GlobalNamespace::PauseController::HandleMenuButtonTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::HandleMenuButtonTriggered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuButtonTriggered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseController.HandleInputFocusWasCaptured
void GlobalNamespace::PauseController::HandleInputFocusWasCaptured() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::HandleInputFocusWasCaptured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFocusWasCaptured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseController.HandleHMDUnmounted
void GlobalNamespace::PauseController::HandleHMDUnmounted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::HandleHMDUnmounted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHMDUnmounted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseController.HandlePauseMenuManagerDidFinishResumeAnimation
void GlobalNamespace::PauseController::HandlePauseMenuManagerDidFinishResumeAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::HandlePauseMenuManagerDidFinishResumeAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePauseMenuManagerDidFinishResumeAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseController.HandlePauseMenuManagerDidPressContinueButton
void GlobalNamespace::PauseController::HandlePauseMenuManagerDidPressContinueButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::HandlePauseMenuManagerDidPressContinueButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePauseMenuManagerDidPressContinueButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseController.HandlePauseMenuManagerDidPressRestartButton
void GlobalNamespace::PauseController::HandlePauseMenuManagerDidPressRestartButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::HandlePauseMenuManagerDidPressRestartButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePauseMenuManagerDidPressRestartButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseController.HandlePauseMenuManagerDidPressMenuButton
void GlobalNamespace::PauseController::HandlePauseMenuManagerDidPressMenuButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::HandlePauseMenuManagerDidPressMenuButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePauseMenuManagerDidPressMenuButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PauseController/<>c__DisplayClass20_0
#include "GlobalNamespace/PauseController_--c__DisplayClass20_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean value
bool GlobalNamespace::PauseController::$$c__DisplayClass20_0::_get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::$$c__DisplayClass20_0::_get_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean value
void GlobalNamespace::PauseController::$$c__DisplayClass20_0::_set_value(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::$$c__DisplayClass20_0::_set_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: PauseController/<>c__DisplayClass20_0.<get_canPause>b__0
void GlobalNamespace::PauseController::$$c__DisplayClass20_0::$get_canPause$b__0(bool newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseController::$$c__DisplayClass20_0::<get_canPause>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_canPause>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newValue)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, newValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PauseMenuManager
#include "GlobalNamespace/PauseMenuManager.hpp"
// Including type: PauseMenuManager/InitData
#include "GlobalNamespace/PauseMenuManager_InitData.hpp"
// Including type: PauseAnimationController
#include "GlobalNamespace/PauseAnimationController.hpp"
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VRControllersInputManager
#include "GlobalNamespace/VRControllersInputManager.hpp"
// Including type: EnvironmentSpawnRotation
#include "GlobalNamespace/EnvironmentSpawnRotation.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kDisabledInteractionDuration
float GlobalNamespace::PauseMenuManager::_get_kDisabledInteractionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_get_kDisabledInteractionDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "PauseMenuManager", "kDisabledInteractionDuration"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kDisabledInteractionDuration
void GlobalNamespace::PauseMenuManager::_set_kDisabledInteractionDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_set_kDisabledInteractionDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PauseMenuManager", "kDisabledInteractionDuration", value));
}
// Autogenerated instance field getter
// Get instance field: private PauseAnimationController _pauseAnimationController
GlobalNamespace::PauseAnimationController* GlobalNamespace::PauseMenuManager::_get__pauseAnimationController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_get__pauseAnimationController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pauseAnimationController"))->offset;
  return *reinterpret_cast<GlobalNamespace::PauseAnimationController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private PauseAnimationController _pauseAnimationController
void GlobalNamespace::PauseMenuManager::_set__pauseAnimationController(GlobalNamespace::PauseAnimationController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_set__pauseAnimationController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pauseAnimationController"))->offset;
  *reinterpret_cast<GlobalNamespace::PauseAnimationController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private LevelBar _levelBar
GlobalNamespace::LevelBar* GlobalNamespace::PauseMenuManager::_get__levelBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_get__levelBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelBar"))->offset;
  return *reinterpret_cast<GlobalNamespace::LevelBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LevelBar _levelBar
void GlobalNamespace::PauseMenuManager::_set__levelBar(GlobalNamespace::LevelBar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_set__levelBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelBar"))->offset;
  *reinterpret_cast<GlobalNamespace::LevelBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _continueButton
UnityEngine::UI::Button* GlobalNamespace::PauseMenuManager::_get__continueButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_get__continueButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_continueButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.UI.Button _continueButton
void GlobalNamespace::PauseMenuManager::_set__continueButton(UnityEngine::UI::Button* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_set__continueButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_continueButton"))->offset;
  *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _restartButton
UnityEngine::UI::Button* GlobalNamespace::PauseMenuManager::_get__restartButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_get__restartButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_restartButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.UI.Button _restartButton
void GlobalNamespace::PauseMenuManager::_set__restartButton(UnityEngine::UI::Button* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_set__restartButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_restartButton"))->offset;
  *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _backButton
UnityEngine::UI::Button* GlobalNamespace::PauseMenuManager::_get__backButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_get__backButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.UI.Button _backButton
void GlobalNamespace::PauseMenuManager::_set__backButton(UnityEngine::UI::Button* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_set__backButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backButton"))->offset;
  *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _backButtonText
TMPro::TextMeshProUGUI* GlobalNamespace::PauseMenuManager::_get__backButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_get__backButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backButtonText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TMPro.TextMeshProUGUI _backButtonText
void GlobalNamespace::PauseMenuManager::_set__backButtonText(TMPro::TextMeshProUGUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_set__backButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backButtonText"))->offset;
  *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _pauseContainerTransform
UnityEngine::Transform* GlobalNamespace::PauseMenuManager::_get__pauseContainerTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_get__pauseContainerTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pauseContainerTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform _pauseContainerTransform
void GlobalNamespace::PauseMenuManager::_set__pauseContainerTransform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_set__pauseContainerTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pauseContainerTransform"))->offset;
  *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly PauseMenuManager/InitData _initData
GlobalNamespace::PauseMenuManager::InitData* GlobalNamespace::PauseMenuManager::_get__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_get__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::PauseMenuManager::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly PauseMenuManager/InitData _initData
void GlobalNamespace::PauseMenuManager::_set__initData(GlobalNamespace::PauseMenuManager::InitData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_set__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  *reinterpret_cast<GlobalNamespace::PauseMenuManager::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly VRControllersInputManager _vrControllersInputManager
GlobalNamespace::VRControllersInputManager* GlobalNamespace::PauseMenuManager::_get__vrControllersInputManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_get__vrControllersInputManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrControllersInputManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRControllersInputManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly VRControllersInputManager _vrControllersInputManager
void GlobalNamespace::PauseMenuManager::_set__vrControllersInputManager(GlobalNamespace::VRControllersInputManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_set__vrControllersInputManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrControllersInputManager"))->offset;
  *reinterpret_cast<GlobalNamespace::VRControllersInputManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentSpawnRotation _environmentSpawnRotation
GlobalNamespace::EnvironmentSpawnRotation* GlobalNamespace::PauseMenuManager::_get__environmentSpawnRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_get__environmentSpawnRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentSpawnRotation"))->offset;
  return *reinterpret_cast<GlobalNamespace::EnvironmentSpawnRotation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly EnvironmentSpawnRotation _environmentSpawnRotation
void GlobalNamespace::PauseMenuManager::_set__environmentSpawnRotation(GlobalNamespace::EnvironmentSpawnRotation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_set__environmentSpawnRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentSpawnRotation"))->offset;
  *reinterpret_cast<GlobalNamespace::EnvironmentSpawnRotation**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action didPressContinueButtonEvent
System::Action* GlobalNamespace::PauseMenuManager::_get_didPressContinueButtonEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_get_didPressContinueButtonEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPressContinueButtonEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action didPressContinueButtonEvent
void GlobalNamespace::PauseMenuManager::_set_didPressContinueButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_set_didPressContinueButtonEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPressContinueButtonEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action didPressMenuButtonEvent
System::Action* GlobalNamespace::PauseMenuManager::_get_didPressMenuButtonEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_get_didPressMenuButtonEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPressMenuButtonEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action didPressMenuButtonEvent
void GlobalNamespace::PauseMenuManager::_set_didPressMenuButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_set_didPressMenuButtonEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPressMenuButtonEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action didPressRestartButtonEvent
System::Action* GlobalNamespace::PauseMenuManager::_get_didPressRestartButtonEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_get_didPressRestartButtonEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPressRestartButtonEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action didPressRestartButtonEvent
void GlobalNamespace::PauseMenuManager::_set_didPressRestartButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_set_didPressRestartButtonEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPressRestartButtonEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action didFinishResumeAnimationEvent
System::Action* GlobalNamespace::PauseMenuManager::_get_didFinishResumeAnimationEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_get_didFinishResumeAnimationEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishResumeAnimationEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action didFinishResumeAnimationEvent
void GlobalNamespace::PauseMenuManager::_set_didFinishResumeAnimationEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_set_didFinishResumeAnimationEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishResumeAnimationEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder _buttonBinder
HMUI::ButtonBinder* GlobalNamespace::PauseMenuManager::_get__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_get__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.ButtonBinder _buttonBinder
void GlobalNamespace::PauseMenuManager::_set__buttonBinder(HMUI::ButtonBinder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_set__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _disabledInteractionRemainingTime
float GlobalNamespace::PauseMenuManager::_get__disabledInteractionRemainingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_get__disabledInteractionRemainingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledInteractionRemainingTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _disabledInteractionRemainingTime
void GlobalNamespace::PauseMenuManager::_set__disabledInteractionRemainingTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::_set__disabledInteractionRemainingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledInteractionRemainingTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: PauseMenuManager.add_didPressContinueButtonEvent
void GlobalNamespace::PauseMenuManager::add_didPressContinueButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::add_didPressContinueButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressContinueButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PauseMenuManager.remove_didPressContinueButtonEvent
void GlobalNamespace::PauseMenuManager::remove_didPressContinueButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::remove_didPressContinueButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressContinueButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PauseMenuManager.add_didPressMenuButtonEvent
void GlobalNamespace::PauseMenuManager::add_didPressMenuButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::add_didPressMenuButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressMenuButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PauseMenuManager.remove_didPressMenuButtonEvent
void GlobalNamespace::PauseMenuManager::remove_didPressMenuButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::remove_didPressMenuButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressMenuButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PauseMenuManager.add_didPressRestartButtonEvent
void GlobalNamespace::PauseMenuManager::add_didPressRestartButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::add_didPressRestartButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressRestartButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PauseMenuManager.remove_didPressRestartButtonEvent
void GlobalNamespace::PauseMenuManager::remove_didPressRestartButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::remove_didPressRestartButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressRestartButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PauseMenuManager.add_didFinishResumeAnimationEvent
void GlobalNamespace::PauseMenuManager::add_didFinishResumeAnimationEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::add_didFinishResumeAnimationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishResumeAnimationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PauseMenuManager.remove_didFinishResumeAnimationEvent
void GlobalNamespace::PauseMenuManager::remove_didFinishResumeAnimationEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::remove_didFinishResumeAnimationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishResumeAnimationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PauseMenuManager.Awake
void GlobalNamespace::PauseMenuManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseMenuManager.Start
void GlobalNamespace::PauseMenuManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseMenuManager.OnDestroy
void GlobalNamespace::PauseMenuManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseMenuManager.Update
void GlobalNamespace::PauseMenuManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseMenuManager.ShowMenu
void GlobalNamespace::PauseMenuManager::ShowMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::ShowMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseMenuManager.StartResumeAnimation
void GlobalNamespace::PauseMenuManager::StartResumeAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::StartResumeAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartResumeAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseMenuManager.HandleResumeFromPauseAnimationDidFinish
void GlobalNamespace::PauseMenuManager::HandleResumeFromPauseAnimationDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::HandleResumeFromPauseAnimationDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleResumeFromPauseAnimationDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseMenuManager.MenuButtonPressed
void GlobalNamespace::PauseMenuManager::MenuButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::MenuButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MenuButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseMenuManager.RestartButtonPressed
void GlobalNamespace::PauseMenuManager::RestartButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::RestartButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestartButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PauseMenuManager.ContinueButtonPressed
void GlobalNamespace::PauseMenuManager::ContinueButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::ContinueButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContinueButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PauseMenuManager/InitData
#include "GlobalNamespace/PauseMenuManager_InitData.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String backButtonText
::Il2CppString* GlobalNamespace::PauseMenuManager::InitData::_get_backButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::InitData::_get_backButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backButtonText"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.String backButtonText
void GlobalNamespace::PauseMenuManager::InitData::_set_backButtonText(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::InitData::_set_backButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backButtonText"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly IPreviewBeatmapLevel previewBeatmapLevel
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::PauseMenuManager::InitData::_get_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::InitData::_get_previewBeatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewBeatmapLevel"))->offset;
  return *reinterpret_cast<GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly IPreviewBeatmapLevel previewBeatmapLevel
void GlobalNamespace::PauseMenuManager::InitData::_set_previewBeatmapLevel(GlobalNamespace::IPreviewBeatmapLevel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::InitData::_set_previewBeatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewBeatmapLevel"))->offset;
  *reinterpret_cast<GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapDifficulty beatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::PauseMenuManager::InitData::_get_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::InitData::_get_beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapDifficulty"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly BeatmapDifficulty beatmapDifficulty
void GlobalNamespace::PauseMenuManager::InitData::_set_beatmapDifficulty(GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::InitData::_set_beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapDifficulty"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapCharacteristicSO beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::PauseMenuManager::InitData::_get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::InitData::_get_beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapCharacteristic"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly BeatmapCharacteristicSO beatmapCharacteristic
void GlobalNamespace::PauseMenuManager::InitData::_set_beatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::InitData::_set_beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapCharacteristic"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean showRestartButton
bool GlobalNamespace::PauseMenuManager::InitData::_get_showRestartButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::InitData::_get_showRestartButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showRestartButton"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean showRestartButton
void GlobalNamespace::PauseMenuManager::InitData::_set_showRestartButton(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::InitData::_set_showRestartButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showRestartButton"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean showLevelBar
bool GlobalNamespace::PauseMenuManager::InitData::_get_showLevelBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::InitData::_get_showLevelBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showLevelBar"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean showLevelBar
void GlobalNamespace::PauseMenuManager::InitData::_set_showLevelBar(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseMenuManager::InitData::_set_showLevelBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showLevelBar"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ILevelRestartController
#include "GlobalNamespace/ILevelRestartController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILevelRestartController.RestartLevel
void GlobalNamespace::ILevelRestartController::RestartLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelRestartController::RestartLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestartLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IReturnToMenuController
#include "GlobalNamespace/IReturnToMenuController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IReturnToMenuController.ReturnToMenu
void GlobalNamespace::IReturnToMenuController::ReturnToMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IReturnToMenuController::ReturnToMenu");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReturnToMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelFailedController
#include "GlobalNamespace/MissionLevelFailedController.hpp"
// Including type: MissionLevelFailedController/InitData
#include "GlobalNamespace/MissionLevelFailedController_InitData.hpp"
// Including type: MissionLevelFailedController/<LevelFailedCoroutine>d__13
#include "GlobalNamespace/MissionLevelFailedController_-LevelFailedCoroutine-d__13.hpp"
// Including type: PrepareLevelCompletionResults
#include "GlobalNamespace/PrepareLevelCompletionResults.hpp"
// Including type: LevelFailedTextEffect
#include "GlobalNamespace/LevelFailedTextEffect.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: MissionObjectiveCheckersManager
#include "GlobalNamespace/MissionObjectiveCheckersManager.hpp"
// Including type: BeatmapObjectSpawnController
#include "GlobalNamespace/BeatmapObjectSpawnController.hpp"
// Including type: GameSongController
#include "GlobalNamespace/GameSongController.hpp"
// Including type: ILevelEndActions
#include "GlobalNamespace/ILevelEndActions.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PrepareLevelCompletionResults _prepareLevelCompletionResults
GlobalNamespace::PrepareLevelCompletionResults* GlobalNamespace::MissionLevelFailedController::_get__prepareLevelCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::_get__prepareLevelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prepareLevelCompletionResults"))->offset;
  return *reinterpret_cast<GlobalNamespace::PrepareLevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private PrepareLevelCompletionResults _prepareLevelCompletionResults
void GlobalNamespace::MissionLevelFailedController::_set__prepareLevelCompletionResults(GlobalNamespace::PrepareLevelCompletionResults* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::_set__prepareLevelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prepareLevelCompletionResults"))->offset;
  *reinterpret_cast<GlobalNamespace::PrepareLevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private LevelFailedTextEffect _levelFailedTextEffect
GlobalNamespace::LevelFailedTextEffect* GlobalNamespace::MissionLevelFailedController::_get__levelFailedTextEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::_get__levelFailedTextEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelFailedTextEffect"))->offset;
  return *reinterpret_cast<GlobalNamespace::LevelFailedTextEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LevelFailedTextEffect _levelFailedTextEffect
void GlobalNamespace::MissionLevelFailedController::_set__levelFailedTextEffect(GlobalNamespace::LevelFailedTextEffect* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::_set__levelFailedTextEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelFailedTextEffect"))->offset;
  *reinterpret_cast<GlobalNamespace::LevelFailedTextEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MissionLevelScenesTransitionSetupDataSO _missionLevelSceneSetupData
GlobalNamespace::MissionLevelScenesTransitionSetupDataSO* GlobalNamespace::MissionLevelFailedController::_get__missionLevelSceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::_get__missionLevelSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionLevelSceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionLevelScenesTransitionSetupDataSO _missionLevelSceneSetupData
void GlobalNamespace::MissionLevelFailedController::_set__missionLevelSceneSetupData(GlobalNamespace::MissionLevelScenesTransitionSetupDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::_set__missionLevelSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionLevelSceneSetupData"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MissionObjectiveCheckersManager _missionObjectiveCheckersManager
GlobalNamespace::MissionObjectiveCheckersManager* GlobalNamespace::MissionLevelFailedController::_get__missionObjectiveCheckersManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::_get__missionObjectiveCheckersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveCheckersManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionObjectiveCheckersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionObjectiveCheckersManager _missionObjectiveCheckersManager
void GlobalNamespace::MissionLevelFailedController::_set__missionObjectiveCheckersManager(GlobalNamespace::MissionObjectiveCheckersManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::_set__missionObjectiveCheckersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveCheckersManager"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionObjectiveCheckersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MissionLevelFailedController/InitData _initData
GlobalNamespace::MissionLevelFailedController::InitData* GlobalNamespace::MissionLevelFailedController::_get__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::_get__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionLevelFailedController::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionLevelFailedController/InitData _initData
void GlobalNamespace::MissionLevelFailedController::_set__initData(GlobalNamespace::MissionLevelFailedController::InitData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::_set__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionLevelFailedController::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapObjectSpawnController _beatmapObjectSpawnController
GlobalNamespace::BeatmapObjectSpawnController* GlobalNamespace::MissionLevelFailedController::_get__beatmapObjectSpawnController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::_get__beatmapObjectSpawnController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectSpawnController"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectSpawnController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapObjectSpawnController _beatmapObjectSpawnController
void GlobalNamespace::MissionLevelFailedController::_set__beatmapObjectSpawnController(GlobalNamespace::BeatmapObjectSpawnController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::_set__beatmapObjectSpawnController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectSpawnController"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapObjectSpawnController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private GameSongController _gameSongController
GlobalNamespace::GameSongController* GlobalNamespace::MissionLevelFailedController::_get__gameSongController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::_get__gameSongController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameSongController"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameSongController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private GameSongController _gameSongController
void GlobalNamespace::MissionLevelFailedController::_set__gameSongController(GlobalNamespace::GameSongController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::_set__gameSongController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameSongController"))->offset;
  *reinterpret_cast<GlobalNamespace::GameSongController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ILevelEndActions _gameplayManager
GlobalNamespace::ILevelEndActions* GlobalNamespace::MissionLevelFailedController::_get__gameplayManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::_get__gameplayManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ILevelEndActions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ILevelEndActions _gameplayManager
void GlobalNamespace::MissionLevelFailedController::_set__gameplayManager(GlobalNamespace::ILevelEndActions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::_set__gameplayManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayManager"))->offset;
  *reinterpret_cast<GlobalNamespace::ILevelEndActions**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapObjectManager _beatmapObjectManager
GlobalNamespace::BeatmapObjectManager* GlobalNamespace::MissionLevelFailedController::_get__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::_get__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapObjectManager _beatmapObjectManager
void GlobalNamespace::MissionLevelFailedController::_set__beatmapObjectManager(GlobalNamespace::BeatmapObjectManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::_set__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MissionLevelFailedController.Start
void GlobalNamespace::MissionLevelFailedController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelFailedController.OnDestroy
void GlobalNamespace::MissionLevelFailedController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelFailedController.HandleLevelFailed
void GlobalNamespace::MissionLevelFailedController::HandleLevelFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::HandleLevelFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelFailedController.LevelFailedCoroutine
System::Collections::IEnumerator* GlobalNamespace::MissionLevelFailedController::LevelFailedCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::LevelFailedCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelFailedCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelFailedController/InitData
#include "GlobalNamespace/MissionLevelFailedController_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean autoRestart
bool GlobalNamespace::MissionLevelFailedController::InitData::_get_autoRestart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::InitData::_get_autoRestart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoRestart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean autoRestart
void GlobalNamespace::MissionLevelFailedController::InitData::_set_autoRestart(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::InitData::_set_autoRestart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoRestart"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionLevelFailedController/<LevelFailedCoroutine>d__13
#include "GlobalNamespace/MissionLevelFailedController_-LevelFailedCoroutine-d__13.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::_get_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::_set_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::_get_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::_set_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MissionLevelFailedController <>4__this
GlobalNamespace::MissionLevelFailedController* GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::_get_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionLevelFailedController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MissionLevelFailedController <>4__this
void GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::_set_$$4__this(GlobalNamespace::MissionLevelFailedController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::_set_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionLevelFailedController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MissionCompletionResults <missionCompletionResults>5__2
GlobalNamespace::MissionCompletionResults* GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::_get_$missionCompletionResults$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::_get_$missionCompletionResults$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<missionCompletionResults>5__2"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionCompletionResults <missionCompletionResults>5__2
void GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::_set_$missionCompletionResults$5__2(GlobalNamespace::MissionCompletionResults* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::_set_$missionCompletionResults$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<missionCompletionResults>5__2"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MissionLevelFailedController/<LevelFailedCoroutine>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelFailedController/<LevelFailedCoroutine>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelFailedController/<LevelFailedCoroutine>d__13.System.IDisposable.Dispose
void GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelFailedController/<LevelFailedCoroutine>d__13.MoveNext
bool GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelFailedController/<LevelFailedCoroutine>d__13.System.Collections.IEnumerator.Reset
void GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFailedController::$LevelFailedCoroutine$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelFinishedController
#include "GlobalNamespace/MissionLevelFinishedController.hpp"
// Including type: PrepareLevelCompletionResults
#include "GlobalNamespace/PrepareLevelCompletionResults.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: MissionObjectiveCheckersManager
#include "GlobalNamespace/MissionObjectiveCheckersManager.hpp"
// Including type: ILevelEndActions
#include "GlobalNamespace/ILevelEndActions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PrepareLevelCompletionResults _prepareLevelCompletionResults
GlobalNamespace::PrepareLevelCompletionResults* GlobalNamespace::MissionLevelFinishedController::_get__prepareLevelCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFinishedController::_get__prepareLevelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prepareLevelCompletionResults"))->offset;
  return *reinterpret_cast<GlobalNamespace::PrepareLevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private PrepareLevelCompletionResults _prepareLevelCompletionResults
void GlobalNamespace::MissionLevelFinishedController::_set__prepareLevelCompletionResults(GlobalNamespace::PrepareLevelCompletionResults* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFinishedController::_set__prepareLevelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prepareLevelCompletionResults"))->offset;
  *reinterpret_cast<GlobalNamespace::PrepareLevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MissionLevelScenesTransitionSetupDataSO _missionLevelSceneSetupData
GlobalNamespace::MissionLevelScenesTransitionSetupDataSO* GlobalNamespace::MissionLevelFinishedController::_get__missionLevelSceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFinishedController::_get__missionLevelSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionLevelSceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionLevelScenesTransitionSetupDataSO _missionLevelSceneSetupData
void GlobalNamespace::MissionLevelFinishedController::_set__missionLevelSceneSetupData(GlobalNamespace::MissionLevelScenesTransitionSetupDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFinishedController::_set__missionLevelSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionLevelSceneSetupData"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MissionObjectiveCheckersManager _missionObjectiveCheckersManager
GlobalNamespace::MissionObjectiveCheckersManager* GlobalNamespace::MissionLevelFinishedController::_get__missionObjectiveCheckersManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFinishedController::_get__missionObjectiveCheckersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveCheckersManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionObjectiveCheckersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionObjectiveCheckersManager _missionObjectiveCheckersManager
void GlobalNamespace::MissionLevelFinishedController::_set__missionObjectiveCheckersManager(GlobalNamespace::MissionObjectiveCheckersManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFinishedController::_set__missionObjectiveCheckersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveCheckersManager"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionObjectiveCheckersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ILevelEndActions _gameplayManager
GlobalNamespace::ILevelEndActions* GlobalNamespace::MissionLevelFinishedController::_get__gameplayManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFinishedController::_get__gameplayManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ILevelEndActions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ILevelEndActions _gameplayManager
void GlobalNamespace::MissionLevelFinishedController::_set__gameplayManager(GlobalNamespace::ILevelEndActions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFinishedController::_set__gameplayManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayManager"))->offset;
  *reinterpret_cast<GlobalNamespace::ILevelEndActions**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MissionLevelFinishedController.Start
void GlobalNamespace::MissionLevelFinishedController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFinishedController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelFinishedController.OnDestroy
void GlobalNamespace::MissionLevelFinishedController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFinishedController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelFinishedController.HandleLevelFinished
void GlobalNamespace::MissionLevelFinishedController::HandleLevelFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFinishedController::HandleLevelFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissionLevelFinishedController.StartLevelFinished
void GlobalNamespace::MissionLevelFinishedController::StartLevelFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelFinishedController::StartLevelFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartLevelFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelRestartController
#include "GlobalNamespace/MissionLevelRestartController.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: PrepareLevelCompletionResults
#include "GlobalNamespace/PrepareLevelCompletionResults.hpp"
// Including type: MissionObjectiveCheckersManager
#include "GlobalNamespace/MissionObjectiveCheckersManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionLevelScenesTransitionSetupDataSO _missionLevelSceneSetupData
GlobalNamespace::MissionLevelScenesTransitionSetupDataSO* GlobalNamespace::MissionLevelRestartController::_get__missionLevelSceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelRestartController::_get__missionLevelSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionLevelSceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionLevelScenesTransitionSetupDataSO _missionLevelSceneSetupData
void GlobalNamespace::MissionLevelRestartController::_set__missionLevelSceneSetupData(GlobalNamespace::MissionLevelScenesTransitionSetupDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelRestartController::_set__missionLevelSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionLevelSceneSetupData"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private PrepareLevelCompletionResults _prepareLevelCompletionResults
GlobalNamespace::PrepareLevelCompletionResults* GlobalNamespace::MissionLevelRestartController::_get__prepareLevelCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelRestartController::_get__prepareLevelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prepareLevelCompletionResults"))->offset;
  return *reinterpret_cast<GlobalNamespace::PrepareLevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private PrepareLevelCompletionResults _prepareLevelCompletionResults
void GlobalNamespace::MissionLevelRestartController::_set__prepareLevelCompletionResults(GlobalNamespace::PrepareLevelCompletionResults* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelRestartController::_set__prepareLevelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prepareLevelCompletionResults"))->offset;
  *reinterpret_cast<GlobalNamespace::PrepareLevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MissionObjectiveCheckersManager _missionObjectiveCheckersManager
GlobalNamespace::MissionObjectiveCheckersManager* GlobalNamespace::MissionLevelRestartController::_get__missionObjectiveCheckersManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelRestartController::_get__missionObjectiveCheckersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveCheckersManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionObjectiveCheckersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionObjectiveCheckersManager _missionObjectiveCheckersManager
void GlobalNamespace::MissionLevelRestartController::_set__missionObjectiveCheckersManager(GlobalNamespace::MissionObjectiveCheckersManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelRestartController::_set__missionObjectiveCheckersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveCheckersManager"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionObjectiveCheckersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MissionLevelRestartController.RestartLevel
void GlobalNamespace::MissionLevelRestartController::RestartLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelRestartController::RestartLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestartLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelReturnToMenuController
#include "GlobalNamespace/MissionLevelReturnToMenuController.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: PrepareLevelCompletionResults
#include "GlobalNamespace/PrepareLevelCompletionResults.hpp"
// Including type: MissionObjectiveCheckersManager
#include "GlobalNamespace/MissionObjectiveCheckersManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionLevelScenesTransitionSetupDataSO _missionLevelSceneSetupData
GlobalNamespace::MissionLevelScenesTransitionSetupDataSO* GlobalNamespace::MissionLevelReturnToMenuController::_get__missionLevelSceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelReturnToMenuController::_get__missionLevelSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionLevelSceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionLevelScenesTransitionSetupDataSO _missionLevelSceneSetupData
void GlobalNamespace::MissionLevelReturnToMenuController::_set__missionLevelSceneSetupData(GlobalNamespace::MissionLevelScenesTransitionSetupDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelReturnToMenuController::_set__missionLevelSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionLevelSceneSetupData"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private PrepareLevelCompletionResults _prepareLevelCompletionResults
GlobalNamespace::PrepareLevelCompletionResults* GlobalNamespace::MissionLevelReturnToMenuController::_get__prepareLevelCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelReturnToMenuController::_get__prepareLevelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prepareLevelCompletionResults"))->offset;
  return *reinterpret_cast<GlobalNamespace::PrepareLevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private PrepareLevelCompletionResults _prepareLevelCompletionResults
void GlobalNamespace::MissionLevelReturnToMenuController::_set__prepareLevelCompletionResults(GlobalNamespace::PrepareLevelCompletionResults* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelReturnToMenuController::_set__prepareLevelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prepareLevelCompletionResults"))->offset;
  *reinterpret_cast<GlobalNamespace::PrepareLevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MissionObjectiveCheckersManager _missionObjectiveCheckersManager
GlobalNamespace::MissionObjectiveCheckersManager* GlobalNamespace::MissionLevelReturnToMenuController::_get__missionObjectiveCheckersManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelReturnToMenuController::_get__missionObjectiveCheckersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveCheckersManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionObjectiveCheckersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionObjectiveCheckersManager _missionObjectiveCheckersManager
void GlobalNamespace::MissionLevelReturnToMenuController::_set__missionObjectiveCheckersManager(GlobalNamespace::MissionObjectiveCheckersManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelReturnToMenuController::_set__missionObjectiveCheckersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveCheckersManager"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionObjectiveCheckersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MissionLevelReturnToMenuController.ReturnToMenu
void GlobalNamespace::MissionLevelReturnToMenuController::ReturnToMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelReturnToMenuController::ReturnToMenu");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReturnToMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLevelFinishedController
#include "GlobalNamespace/MultiplayerLevelFinishedController.hpp"
// Including type: MultiplayerLevelFinishedController/<StartLevelFinished>d__19
#include "GlobalNamespace/MultiplayerLevelFinishedController_-StartLevelFinished-d__19.hpp"
// Including type: IMultiplayerLevelEndActionsPublisher
#include "GlobalNamespace/IMultiplayerLevelEndActionsPublisher.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MultiplayerLevelCompletionResults
#include "GlobalNamespace/MultiplayerLevelCompletionResults.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: PlayerNetworkFailReason
#include "GlobalNamespace/PlayerNetworkFailReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kMinSceneDuration
float GlobalNamespace::MultiplayerLevelFinishedController::_get_kMinSceneDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::_get_kMinSceneDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MultiplayerLevelFinishedController", "kMinSceneDuration"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMinSceneDuration
void GlobalNamespace::MultiplayerLevelFinishedController::_set_kMinSceneDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::_set_kMinSceneDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelFinishedController", "kMinSceneDuration", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerLevelEndActionsPublisher _levelEndActionsPublisher
GlobalNamespace::IMultiplayerLevelEndActionsPublisher* GlobalNamespace::MultiplayerLevelFinishedController::_get__levelEndActionsPublisher() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::_get__levelEndActionsPublisher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelEndActionsPublisher"))->offset;
  return *reinterpret_cast<GlobalNamespace::IMultiplayerLevelEndActionsPublisher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IMultiplayerLevelEndActionsPublisher _levelEndActionsPublisher
void GlobalNamespace::MultiplayerLevelFinishedController::_set__levelEndActionsPublisher(GlobalNamespace::IMultiplayerLevelEndActionsPublisher* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::_set__levelEndActionsPublisher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelEndActionsPublisher"))->offset;
  *reinterpret_cast<GlobalNamespace::IMultiplayerLevelEndActionsPublisher**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IGameplayRpcManager _rpcManager
GlobalNamespace::IGameplayRpcManager* GlobalNamespace::MultiplayerLevelFinishedController::_get__rpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::_get__rpcManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rpcManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::IGameplayRpcManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IGameplayRpcManager _rpcManager
void GlobalNamespace::MultiplayerLevelFinishedController::_set__rpcManager(GlobalNamespace::IGameplayRpcManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::_set__rpcManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rpcManager"))->offset;
  *reinterpret_cast<GlobalNamespace::IGameplayRpcManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager* GlobalNamespace::MultiplayerLevelFinishedController::_get__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::_get__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
void GlobalNamespace::MultiplayerLevelFinishedController::_set__multiplayerSessionManager(GlobalNamespace::IMultiplayerSessionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::_set__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  *reinterpret_cast<GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<MultiplayerLevelCompletionResults,System.Collections.Generic.Dictionary`2<System.String,MultiplayerLevelCompletionResults>> allResultsCollectedEvent
System::Action_2<GlobalNamespace::MultiplayerLevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::MultiplayerLevelCompletionResults*>*>* GlobalNamespace::MultiplayerLevelFinishedController::_get_allResultsCollectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::_get_allResultsCollectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allResultsCollectedEvent"))->offset;
  return *reinterpret_cast<System::Action_2<GlobalNamespace::MultiplayerLevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::MultiplayerLevelCompletionResults*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action`2<MultiplayerLevelCompletionResults,System.Collections.Generic.Dictionary`2<System.String,MultiplayerLevelCompletionResults>> allResultsCollectedEvent
void GlobalNamespace::MultiplayerLevelFinishedController::_set_allResultsCollectedEvent(System::Action_2<GlobalNamespace::MultiplayerLevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::MultiplayerLevelCompletionResults*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::_set_allResultsCollectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allResultsCollectedEvent"))->offset;
  *reinterpret_cast<System::Action_2<GlobalNamespace::MultiplayerLevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::MultiplayerLevelCompletionResults*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,MultiplayerLevelCompletionResults> _otherPlayersCompletionResults
System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::MultiplayerLevelCompletionResults*>* GlobalNamespace::MultiplayerLevelFinishedController::_get__otherPlayersCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::_get__otherPlayersCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_otherPlayersCompletionResults"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::MultiplayerLevelCompletionResults*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,MultiplayerLevelCompletionResults> _otherPlayersCompletionResults
void GlobalNamespace::MultiplayerLevelFinishedController::_set__otherPlayersCompletionResults(System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::MultiplayerLevelCompletionResults*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::_set__otherPlayersCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_otherPlayersCompletionResults"))->offset;
  *reinterpret_cast<System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::MultiplayerLevelCompletionResults*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerLevelCompletionResults _localPlayerResults
GlobalNamespace::MultiplayerLevelCompletionResults* GlobalNamespace::MultiplayerLevelFinishedController::_get__localPlayerResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::_get__localPlayerResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerResults"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MultiplayerLevelCompletionResults _localPlayerResults
void GlobalNamespace::MultiplayerLevelFinishedController::_set__localPlayerResults(GlobalNamespace::MultiplayerLevelCompletionResults* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::_set__localPlayerResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerResults"))->offset;
  *reinterpret_cast<GlobalNamespace::MultiplayerLevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _gameFinishReported
bool GlobalNamespace::MultiplayerLevelFinishedController::_get__gameFinishReported() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::_get__gameFinishReported");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameFinishReported"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _gameFinishReported
void GlobalNamespace::MultiplayerLevelFinishedController::_set__gameFinishReported(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::_set__gameFinishReported");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameFinishReported"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sceneLoadTime
float GlobalNamespace::MultiplayerLevelFinishedController::_get__sceneLoadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::_get__sceneLoadTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneLoadTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _sceneLoadTime
void GlobalNamespace::MultiplayerLevelFinishedController::_set__sceneLoadTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::_set__sceneLoadTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneLoadTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MultiplayerLevelFinishedController.get_gameResultsReady
bool GlobalNamespace::MultiplayerLevelFinishedController::get_gameResultsReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::get_gameResultsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameResultsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelFinishedController.get_otherPlayersCompletionResults
System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::MultiplayerLevelCompletionResults*>* GlobalNamespace::MultiplayerLevelFinishedController::get_otherPlayersCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::get_otherPlayersCompletionResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_otherPlayersCompletionResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::MultiplayerLevelCompletionResults*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelFinishedController.get_localPlayerResults
GlobalNamespace::MultiplayerLevelCompletionResults* GlobalNamespace::MultiplayerLevelFinishedController::get_localPlayerResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::get_localPlayerResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerLevelCompletionResults*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelFinishedController.add_allResultsCollectedEvent
void GlobalNamespace::MultiplayerLevelFinishedController::add_allResultsCollectedEvent(System::Action_2<GlobalNamespace::MultiplayerLevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::MultiplayerLevelCompletionResults*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::add_allResultsCollectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_allResultsCollectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelFinishedController.remove_allResultsCollectedEvent
void GlobalNamespace::MultiplayerLevelFinishedController::remove_allResultsCollectedEvent(System::Action_2<GlobalNamespace::MultiplayerLevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::MultiplayerLevelCompletionResults*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::remove_allResultsCollectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_allResultsCollectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelFinishedController.Start
void GlobalNamespace::MultiplayerLevelFinishedController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelFinishedController.OnDestroy
void GlobalNamespace::MultiplayerLevelFinishedController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelFinishedController.StartLevelFinished
System::Collections::IEnumerator* GlobalNamespace::MultiplayerLevelFinishedController::StartLevelFinished(GlobalNamespace::MultiplayerLevelCompletionResults* localPlayerResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::StartLevelFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartLevelFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localPlayerResults)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method, localPlayerResults);
}
// Autogenerated method: MultiplayerLevelFinishedController.HandlePlayerDidFinish
void GlobalNamespace::MultiplayerLevelFinishedController::HandlePlayerDidFinish(GlobalNamespace::MultiplayerLevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::HandlePlayerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, levelCompletionResults);
}
// Autogenerated method: MultiplayerLevelFinishedController.HandlePlayerNetworkDidFailed
void GlobalNamespace::MultiplayerLevelFinishedController::HandlePlayerNetworkDidFailed(GlobalNamespace::PlayerNetworkFailReason playerNetworkFailReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::HandlePlayerNetworkDidFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerNetworkDidFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerNetworkFailReason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playerNetworkFailReason);
}
// Autogenerated method: MultiplayerLevelFinishedController.HandleRpcLevelFinished
void GlobalNamespace::MultiplayerLevelFinishedController::HandleRpcLevelFinished(::Il2CppString* userId, GlobalNamespace::MultiplayerLevelCompletionResults* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::HandleRpcLevelFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRpcLevelFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(results)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, results);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLevelFinishedController/<StartLevelFinished>d__19
#include "GlobalNamespace/MultiplayerLevelFinishedController_-StartLevelFinished-d__19.hpp"
// Including type: MultiplayerLevelCompletionResults
#include "GlobalNamespace/MultiplayerLevelCompletionResults.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_get_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_set_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_get_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_set_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerLevelCompletionResults localPlayerResults
GlobalNamespace::MultiplayerLevelCompletionResults* GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_get_localPlayerResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_get_localPlayerResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPlayerResults"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MultiplayerLevelCompletionResults localPlayerResults
void GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_set_localPlayerResults(GlobalNamespace::MultiplayerLevelCompletionResults* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_set_localPlayerResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPlayerResults"))->offset;
  *reinterpret_cast<GlobalNamespace::MultiplayerLevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerLevelFinishedController <>4__this
GlobalNamespace::MultiplayerLevelFinishedController* GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_get_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLevelFinishedController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MultiplayerLevelFinishedController <>4__this
void GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_set_$$4__this(GlobalNamespace::MultiplayerLevelFinishedController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_set_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<GlobalNamespace::MultiplayerLevelFinishedController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single <waitStartTime>5__2
float GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_get_$waitStartTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_get_$waitStartTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<waitStartTime>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single <waitStartTime>5__2
void GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_set_$waitStartTime$5__2(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_set_$waitStartTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<waitStartTime>5__2"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isPlayingAlone>5__3
bool GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_get_$isPlayingAlone$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_get_$isPlayingAlone$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isPlayingAlone>5__3"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <isPlayingAlone>5__3
void GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_set_$isPlayingAlone$5__3(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_set_$isPlayingAlone$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isPlayingAlone>5__3"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single <resultsTimeoutLength>5__4
float GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_get_$resultsTimeoutLength$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_get_$resultsTimeoutLength$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<resultsTimeoutLength>5__4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single <resultsTimeoutLength>5__4
void GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_set_$resultsTimeoutLength$5__4(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::_set_$resultsTimeoutLength$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<resultsTimeoutLength>5__4"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MultiplayerLevelFinishedController/<StartLevelFinished>d__19.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelFinishedController/<StartLevelFinished>d__19.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelFinishedController/<StartLevelFinished>d__19.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelFinishedController/<StartLevelFinished>d__19.MoveNext
bool GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelFinishedController/<StartLevelFinished>d__19.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__19::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelFailedController
#include "GlobalNamespace/StandardLevelFailedController.hpp"
// Including type: StandardLevelFailedController/InitData
#include "GlobalNamespace/StandardLevelFailedController_InitData.hpp"
// Including type: StandardLevelFailedController/<LevelFailedCoroutine>d__13
#include "GlobalNamespace/StandardLevelFailedController_-LevelFailedCoroutine-d__13.hpp"
// Including type: LevelFailedTextEffect
#include "GlobalNamespace/LevelFailedTextEffect.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: PrepareLevelCompletionResults
#include "GlobalNamespace/PrepareLevelCompletionResults.hpp"
// Including type: ILevelEndActions
#include "GlobalNamespace/ILevelEndActions.hpp"
// Including type: BeatmapObjectSpawnController
#include "GlobalNamespace/BeatmapObjectSpawnController.hpp"
// Including type: GameSongController
#include "GlobalNamespace/GameSongController.hpp"
// Including type: EnvironmentSpawnRotation
#include "GlobalNamespace/EnvironmentSpawnRotation.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LevelFailedTextEffect _levelFailedTextEffect
GlobalNamespace::LevelFailedTextEffect* GlobalNamespace::StandardLevelFailedController::_get__levelFailedTextEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::_get__levelFailedTextEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelFailedTextEffect"))->offset;
  return *reinterpret_cast<GlobalNamespace::LevelFailedTextEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LevelFailedTextEffect _levelFailedTextEffect
void GlobalNamespace::StandardLevelFailedController::_set__levelFailedTextEffect(GlobalNamespace::LevelFailedTextEffect* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::_set__levelFailedTextEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelFailedTextEffect"))->offset;
  *reinterpret_cast<GlobalNamespace::LevelFailedTextEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private StandardLevelScenesTransitionSetupDataSO _standardLevelSceneSetupData
GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* GlobalNamespace::StandardLevelFailedController::_get__standardLevelSceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::_get__standardLevelSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardLevelSceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private StandardLevelScenesTransitionSetupDataSO _standardLevelSceneSetupData
void GlobalNamespace::StandardLevelFailedController::_set__standardLevelSceneSetupData(GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::_set__standardLevelSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardLevelSceneSetupData"))->offset;
  *reinterpret_cast<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly PrepareLevelCompletionResults _prepareLevelCompletionResults
GlobalNamespace::PrepareLevelCompletionResults* GlobalNamespace::StandardLevelFailedController::_get__prepareLevelCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::_get__prepareLevelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prepareLevelCompletionResults"))->offset;
  return *reinterpret_cast<GlobalNamespace::PrepareLevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly PrepareLevelCompletionResults _prepareLevelCompletionResults
void GlobalNamespace::StandardLevelFailedController::_set__prepareLevelCompletionResults(GlobalNamespace::PrepareLevelCompletionResults* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::_set__prepareLevelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prepareLevelCompletionResults"))->offset;
  *reinterpret_cast<GlobalNamespace::PrepareLevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly StandardLevelFailedController/InitData _initData
GlobalNamespace::StandardLevelFailedController::InitData* GlobalNamespace::StandardLevelFailedController::_get__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::_get__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::StandardLevelFailedController::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly StandardLevelFailedController/InitData _initData
void GlobalNamespace::StandardLevelFailedController::_set__initData(GlobalNamespace::StandardLevelFailedController::InitData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::_set__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  *reinterpret_cast<GlobalNamespace::StandardLevelFailedController::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly ILevelEndActions _gameplayManager
GlobalNamespace::ILevelEndActions* GlobalNamespace::StandardLevelFailedController::_get__gameplayManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::_get__gameplayManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ILevelEndActions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly ILevelEndActions _gameplayManager
void GlobalNamespace::StandardLevelFailedController::_set__gameplayManager(GlobalNamespace::ILevelEndActions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::_set__gameplayManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayManager"))->offset;
  *reinterpret_cast<GlobalNamespace::ILevelEndActions**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectSpawnController _beatmapObjectSpawnController
GlobalNamespace::BeatmapObjectSpawnController* GlobalNamespace::StandardLevelFailedController::_get__beatmapObjectSpawnController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::_get__beatmapObjectSpawnController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectSpawnController"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectSpawnController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly BeatmapObjectSpawnController _beatmapObjectSpawnController
void GlobalNamespace::StandardLevelFailedController::_set__beatmapObjectSpawnController(GlobalNamespace::BeatmapObjectSpawnController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::_set__beatmapObjectSpawnController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectSpawnController"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapObjectSpawnController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly GameSongController _gameSongController
GlobalNamespace::GameSongController* GlobalNamespace::StandardLevelFailedController::_get__gameSongController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::_get__gameSongController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameSongController"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameSongController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly GameSongController _gameSongController
void GlobalNamespace::StandardLevelFailedController::_set__gameSongController(GlobalNamespace::GameSongController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::_set__gameSongController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameSongController"))->offset;
  *reinterpret_cast<GlobalNamespace::GameSongController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentSpawnRotation _environmentSpawnRotation
GlobalNamespace::EnvironmentSpawnRotation* GlobalNamespace::StandardLevelFailedController::_get__environmentSpawnRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::_get__environmentSpawnRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentSpawnRotation"))->offset;
  return *reinterpret_cast<GlobalNamespace::EnvironmentSpawnRotation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly EnvironmentSpawnRotation _environmentSpawnRotation
void GlobalNamespace::StandardLevelFailedController::_set__environmentSpawnRotation(GlobalNamespace::EnvironmentSpawnRotation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::_set__environmentSpawnRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentSpawnRotation"))->offset;
  *reinterpret_cast<GlobalNamespace::EnvironmentSpawnRotation**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
GlobalNamespace::BeatmapObjectManager* GlobalNamespace::StandardLevelFailedController::_get__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::_get__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly BeatmapObjectManager _beatmapObjectManager
void GlobalNamespace::StandardLevelFailedController::_set__beatmapObjectManager(GlobalNamespace::BeatmapObjectManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::_set__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: StandardLevelFailedController.Start
void GlobalNamespace::StandardLevelFailedController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelFailedController.OnDestroy
void GlobalNamespace::StandardLevelFailedController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelFailedController.HandleLevelFailed
void GlobalNamespace::StandardLevelFailedController::HandleLevelFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::HandleLevelFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelFailedController.LevelFailedCoroutine
System::Collections::IEnumerator* GlobalNamespace::StandardLevelFailedController::LevelFailedCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::LevelFailedCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelFailedCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelFailedController/InitData
#include "GlobalNamespace/StandardLevelFailedController_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean autoRestart
bool GlobalNamespace::StandardLevelFailedController::InitData::_get_autoRestart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::InitData::_get_autoRestart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoRestart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean autoRestart
void GlobalNamespace::StandardLevelFailedController::InitData::_set_autoRestart(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::InitData::_set_autoRestart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoRestart"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelFailedController/<LevelFailedCoroutine>d__13
#include "GlobalNamespace/StandardLevelFailedController_-LevelFailedCoroutine-d__13.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::_get_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::_set_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::_get_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::_set_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public StandardLevelFailedController <>4__this
GlobalNamespace::StandardLevelFailedController* GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::_get_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::StandardLevelFailedController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public StandardLevelFailedController <>4__this
void GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::_set_$$4__this(GlobalNamespace::StandardLevelFailedController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::_set_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<GlobalNamespace::StandardLevelFailedController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private LevelCompletionResults <levelCompletionResults>5__2
GlobalNamespace::LevelCompletionResults* GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::_get_$levelCompletionResults$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::_get_$levelCompletionResults$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<levelCompletionResults>5__2"))->offset;
  return *reinterpret_cast<GlobalNamespace::LevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LevelCompletionResults <levelCompletionResults>5__2
void GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::_set_$levelCompletionResults$5__2(GlobalNamespace::LevelCompletionResults* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::_set_$levelCompletionResults$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<levelCompletionResults>5__2"))->offset;
  *reinterpret_cast<GlobalNamespace::LevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: StandardLevelFailedController/<LevelFailedCoroutine>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelFailedController/<LevelFailedCoroutine>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelFailedController/<LevelFailedCoroutine>d__13.System.IDisposable.Dispose
void GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelFailedController/<LevelFailedCoroutine>d__13.MoveNext
bool GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelFailedController/<LevelFailedCoroutine>d__13.System.Collections.IEnumerator.Reset
void GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFailedController::$LevelFailedCoroutine$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelFinishedController
#include "GlobalNamespace/StandardLevelFinishedController.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: PrepareLevelCompletionResults
#include "GlobalNamespace/PrepareLevelCompletionResults.hpp"
// Including type: ILevelEndActions
#include "GlobalNamespace/ILevelEndActions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private StandardLevelScenesTransitionSetupDataSO _standardLevelSceneSetupData
GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* GlobalNamespace::StandardLevelFinishedController::_get__standardLevelSceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFinishedController::_get__standardLevelSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardLevelSceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private StandardLevelScenesTransitionSetupDataSO _standardLevelSceneSetupData
void GlobalNamespace::StandardLevelFinishedController::_set__standardLevelSceneSetupData(GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFinishedController::_set__standardLevelSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardLevelSceneSetupData"))->offset;
  *reinterpret_cast<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly PrepareLevelCompletionResults _prepareLevelCompletionResults
GlobalNamespace::PrepareLevelCompletionResults* GlobalNamespace::StandardLevelFinishedController::_get__prepareLevelCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFinishedController::_get__prepareLevelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prepareLevelCompletionResults"))->offset;
  return *reinterpret_cast<GlobalNamespace::PrepareLevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly PrepareLevelCompletionResults _prepareLevelCompletionResults
void GlobalNamespace::StandardLevelFinishedController::_set__prepareLevelCompletionResults(GlobalNamespace::PrepareLevelCompletionResults* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFinishedController::_set__prepareLevelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prepareLevelCompletionResults"))->offset;
  *reinterpret_cast<GlobalNamespace::PrepareLevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ILevelEndActions _gameplayManager
GlobalNamespace::ILevelEndActions* GlobalNamespace::StandardLevelFinishedController::_get__gameplayManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFinishedController::_get__gameplayManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ILevelEndActions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ILevelEndActions _gameplayManager
void GlobalNamespace::StandardLevelFinishedController::_set__gameplayManager(GlobalNamespace::ILevelEndActions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFinishedController::_set__gameplayManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayManager"))->offset;
  *reinterpret_cast<GlobalNamespace::ILevelEndActions**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: StandardLevelFinishedController.Start
void GlobalNamespace::StandardLevelFinishedController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFinishedController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelFinishedController.OnDestroy
void GlobalNamespace::StandardLevelFinishedController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFinishedController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelFinishedController.HandleLevelFinished
void GlobalNamespace::StandardLevelFinishedController::HandleLevelFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFinishedController::HandleLevelFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelFinishedController.StartLevelFinished
void GlobalNamespace::StandardLevelFinishedController::StartLevelFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelFinishedController::StartLevelFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartLevelFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
