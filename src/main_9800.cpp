// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Networking.DownloadHandlerAudioClip
#include "UnityEngine/Networking/DownloadHandlerAudioClip.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAudioClip.Create
System::IntPtr UnityEngine::Networking::DownloadHandlerAudioClip::Create(UnityEngine::Networking::DownloadHandlerAudioClip* obj, ::Il2CppString* url, UnityEngine::AudioType audioType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandlerAudioClip::Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Networking", "DownloadHandlerAudioClip", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, url, audioType)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, url, audioType);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAudioClip.InternalCreateAudioClip
void UnityEngine::Networking::DownloadHandlerAudioClip::InternalCreateAudioClip(::Il2CppString* url, UnityEngine::AudioType audioType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandlerAudioClip::InternalCreateAudioClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalCreateAudioClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(url, audioType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, url, audioType);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAudioClip.get_audioClip
UnityEngine::AudioClip* UnityEngine::Networking::DownloadHandlerAudioClip::get_audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandlerAudioClip::get_audioClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_audioClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAudioClip.set_streamAudio
void UnityEngine::Networking::DownloadHandlerAudioClip::set_streamAudio(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandlerAudioClip::set_streamAudio");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_streamAudio", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAudioClip.GetContent
UnityEngine::AudioClip* UnityEngine::Networking::DownloadHandlerAudioClip::GetContent(UnityEngine::Networking::UnityWebRequest* www) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandlerAudioClip::GetContent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Networking", "DownloadHandlerAudioClip", "GetContent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(www)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioClip*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, www);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAudioClip.GetData
::Array<uint8_t>* UnityEngine::Networking::DownloadHandlerAudioClip::GetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandlerAudioClip::GetData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAudioClip.GetText
::Il2CppString* UnityEngine::Networking::DownloadHandlerAudioClip::GetText() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandlerAudioClip::GetText");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngineInternal.WebRequestUtils
#include "UnityEngineInternal/WebRequestUtils.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Text.RegularExpressions.Regex domainRegex
System::Text::RegularExpressions::Regex* UnityEngineInternal::WebRequestUtils::_get_domainRegex() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::WebRequestUtils::_get_domainRegex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::RegularExpressions::Regex*>("UnityEngineInternal", "WebRequestUtils", "domainRegex"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.RegularExpressions.Regex domainRegex
void UnityEngineInternal::WebRequestUtils::_set_domainRegex(System::Text::RegularExpressions::Regex* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::WebRequestUtils::_set_domainRegex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal", "WebRequestUtils", "domainRegex", value));
}
// Autogenerated method: UnityEngineInternal.WebRequestUtils.RedirectTo
::Il2CppString* UnityEngineInternal::WebRequestUtils::RedirectTo(::Il2CppString* baseUri, ::Il2CppString* redirectUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::WebRequestUtils::RedirectTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngineInternal", "WebRequestUtils", "RedirectTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(baseUri, redirectUri)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, baseUri, redirectUri);
}
// Autogenerated method: UnityEngineInternal.WebRequestUtils.MakeInitialUrl
::Il2CppString* UnityEngineInternal::WebRequestUtils::MakeInitialUrl(::Il2CppString* targetUrl, ::Il2CppString* localUrl) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::WebRequestUtils::MakeInitialUrl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngineInternal", "WebRequestUtils", "MakeInitialUrl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(targetUrl, localUrl)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, targetUrl, localUrl);
}
// Autogenerated method: UnityEngineInternal.WebRequestUtils.MakeUriString
::Il2CppString* UnityEngineInternal::WebRequestUtils::MakeUriString(System::Uri* targetUri, ::Il2CppString* targetUrl, bool prependProtocol) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::WebRequestUtils::MakeUriString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngineInternal", "WebRequestUtils", "MakeUriString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(targetUri, targetUrl, prependProtocol)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, targetUri, targetUrl, prependProtocol);
}
// Autogenerated method: UnityEngineInternal.WebRequestUtils.URLDecode
::Il2CppString* UnityEngineInternal::WebRequestUtils::URLDecode(::Il2CppString* encoded) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::WebRequestUtils::URLDecode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngineInternal", "WebRequestUtils", "URLDecode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(encoded)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, encoded);
}
// Autogenerated method: UnityEngineInternal.WebRequestUtils..cctor
void UnityEngineInternal::WebRequestUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::WebRequestUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngineInternal", "WebRequestUtils", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.WWWForm
#include "UnityEngine/WWWForm.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.WWWForm.get_DefaultEncoding
System::Text::Encoding* UnityEngine::WWWForm::get_DefaultEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWForm::get_DefaultEncoding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "WWWForm", "get_DefaultEncoding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.WWWTranscoder
#include "UnityEngine/WWWTranscoder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] ucHexChars
::Array<uint8_t>* UnityEngine::WWWTranscoder::_get_ucHexChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::_get_ucHexChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("UnityEngine", "WWWTranscoder", "ucHexChars"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] ucHexChars
void UnityEngine::WWWTranscoder::_set_ucHexChars(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::_set_ucHexChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "ucHexChars", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] lcHexChars
::Array<uint8_t>* UnityEngine::WWWTranscoder::_get_lcHexChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::_get_lcHexChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("UnityEngine", "WWWTranscoder", "lcHexChars"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] lcHexChars
void UnityEngine::WWWTranscoder::_set_lcHexChars(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::_set_lcHexChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "lcHexChars", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte urlEscapeChar
uint8_t UnityEngine::WWWTranscoder::_get_urlEscapeChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::_get_urlEscapeChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("UnityEngine", "WWWTranscoder", "urlEscapeChar"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte urlEscapeChar
void UnityEngine::WWWTranscoder::_set_urlEscapeChar(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::_set_urlEscapeChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "urlEscapeChar", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] urlSpace
::Array<uint8_t>* UnityEngine::WWWTranscoder::_get_urlSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::_get_urlSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("UnityEngine", "WWWTranscoder", "urlSpace"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] urlSpace
void UnityEngine::WWWTranscoder::_set_urlSpace(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::_set_urlSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "urlSpace", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] dataSpace
::Array<uint8_t>* UnityEngine::WWWTranscoder::_get_dataSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::_get_dataSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("UnityEngine", "WWWTranscoder", "dataSpace"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] dataSpace
void UnityEngine::WWWTranscoder::_set_dataSpace(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::_set_dataSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "dataSpace", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] urlForbidden
::Array<uint8_t>* UnityEngine::WWWTranscoder::_get_urlForbidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::_get_urlForbidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("UnityEngine", "WWWTranscoder", "urlForbidden"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] urlForbidden
void UnityEngine::WWWTranscoder::_set_urlForbidden(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::_set_urlForbidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "urlForbidden", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte qpEscapeChar
uint8_t UnityEngine::WWWTranscoder::_get_qpEscapeChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::_get_qpEscapeChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("UnityEngine", "WWWTranscoder", "qpEscapeChar"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte qpEscapeChar
void UnityEngine::WWWTranscoder::_set_qpEscapeChar(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::_set_qpEscapeChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "qpEscapeChar", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] qpSpace
::Array<uint8_t>* UnityEngine::WWWTranscoder::_get_qpSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::_get_qpSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("UnityEngine", "WWWTranscoder", "qpSpace"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] qpSpace
void UnityEngine::WWWTranscoder::_set_qpSpace(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::_set_qpSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "qpSpace", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] qpForbidden
::Array<uint8_t>* UnityEngine::WWWTranscoder::_get_qpForbidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::_get_qpForbidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("UnityEngine", "WWWTranscoder", "qpForbidden"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] qpForbidden
void UnityEngine::WWWTranscoder::_set_qpForbidden(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::_set_qpForbidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "qpForbidden", value));
}
// Autogenerated method: UnityEngine.WWWTranscoder.Hex2Byte
uint8_t UnityEngine::WWWTranscoder::Hex2Byte(::Array<uint8_t>* b, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::Hex2Byte");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "Hex2Byte", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(b, offset)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, b, offset);
}
// Autogenerated method: UnityEngine.WWWTranscoder.Byte2Hex
::Array<uint8_t>* UnityEngine::WWWTranscoder::Byte2Hex(uint8_t b, ::Array<uint8_t>* hexChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::Byte2Hex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "Byte2Hex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(b, hexChars)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, b, hexChars);
}
// Autogenerated method: UnityEngine.WWWTranscoder.URLEncode
::Array<uint8_t>* UnityEngine::WWWTranscoder::URLEncode(::Array<uint8_t>* toEncode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::URLEncode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "URLEncode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(toEncode)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, toEncode);
}
// Autogenerated method: UnityEngine.WWWTranscoder.Encode
::Array<uint8_t>* UnityEngine::WWWTranscoder::Encode(::Array<uint8_t>* input, uint8_t escapeChar, ::Array<uint8_t>* space, ::Array<uint8_t>* forbidden, bool uppercase) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::Encode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "Encode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, escapeChar, space, forbidden, uppercase)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, escapeChar, space, forbidden, uppercase);
}
// Autogenerated method: UnityEngine.WWWTranscoder.ByteArrayContains
bool UnityEngine::WWWTranscoder::ByteArrayContains(::Array<uint8_t>* array, uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::ByteArrayContains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "ByteArrayContains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, b);
}
// Autogenerated method: UnityEngine.WWWTranscoder.URLDecode
::Array<uint8_t>* UnityEngine::WWWTranscoder::URLDecode(::Array<uint8_t>* toEncode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::URLDecode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "URLDecode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(toEncode)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, toEncode);
}
// Autogenerated method: UnityEngine.WWWTranscoder.ByteSubArrayEquals
bool UnityEngine::WWWTranscoder::ByteSubArrayEquals(::Array<uint8_t>* array, int index, ::Array<uint8_t>* comperand) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::ByteSubArrayEquals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "ByteSubArrayEquals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index, comperand)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, comperand);
}
// Autogenerated method: UnityEngine.WWWTranscoder.Decode
::Array<uint8_t>* UnityEngine::WWWTranscoder::Decode(::Array<uint8_t>* input, uint8_t escapeChar, ::Array<uint8_t>* space) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::Decode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "Decode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, escapeChar, space)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, escapeChar, space);
}
// Autogenerated method: UnityEngine.WWWTranscoder..cctor
void UnityEngine::WWWTranscoder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WWWTranscoder::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.UnityWebRequestAsyncOperation
#include "UnityEngine/Networking/UnityWebRequestAsyncOperation.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.UnityWebRequestAsyncOperation.set_webRequest
void UnityEngine::Networking::UnityWebRequestAsyncOperation::set_webRequest(UnityEngine::Networking::UnityWebRequest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequestAsyncOperation::set_webRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_webRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod
#include "UnityEngine/Networking/UnityWebRequest_UnityWebRequestMethod.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest/UnityWebRequestError
#include "UnityEngine/Networking/UnityWebRequest_UnityWebRequestError.hpp"
// Including type: UnityEngine.Networking.DownloadHandler
#include "UnityEngine/Networking/DownloadHandler.hpp"
// Including type: UnityEngine.Networking.UploadHandler
#include "UnityEngine/Networking/UploadHandler.hpp"
// Including type: UnityEngine.Networking.CertificateHandler
#include "UnityEngine/Networking/CertificateHandler.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: UnityEngine.Networking.UnityWebRequestAsyncOperation
#include "UnityEngine/Networking/UnityWebRequestAsyncOperation.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.GetWebErrorString
::Il2CppString* UnityEngine::Networking::UnityWebRequest::GetWebErrorString(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError err) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::GetWebErrorString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "GetWebErrorString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(err)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, err);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.GetHTTPStatusString
::Il2CppString* UnityEngine::Networking::UnityWebRequest::GetHTTPStatusString(int64_t responseCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::GetHTTPStatusString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "GetHTTPStatusString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(responseCode)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, responseCode);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_disposeCertificateHandlerOnDispose
bool UnityEngine::Networking::UnityWebRequest::get_disposeCertificateHandlerOnDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::get_disposeCertificateHandlerOnDispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_disposeCertificateHandlerOnDispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_disposeCertificateHandlerOnDispose
void UnityEngine::Networking::UnityWebRequest::set_disposeCertificateHandlerOnDispose(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::set_disposeCertificateHandlerOnDispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_disposeCertificateHandlerOnDispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_disposeDownloadHandlerOnDispose
bool UnityEngine::Networking::UnityWebRequest::get_disposeDownloadHandlerOnDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::get_disposeDownloadHandlerOnDispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_disposeDownloadHandlerOnDispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_disposeDownloadHandlerOnDispose
void UnityEngine::Networking::UnityWebRequest::set_disposeDownloadHandlerOnDispose(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::set_disposeDownloadHandlerOnDispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_disposeDownloadHandlerOnDispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_disposeUploadHandlerOnDispose
bool UnityEngine::Networking::UnityWebRequest::get_disposeUploadHandlerOnDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::get_disposeUploadHandlerOnDispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_disposeUploadHandlerOnDispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_disposeUploadHandlerOnDispose
void UnityEngine::Networking::UnityWebRequest::set_disposeUploadHandlerOnDispose(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::set_disposeUploadHandlerOnDispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_disposeUploadHandlerOnDispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Create
System::IntPtr UnityEngine::Networking::UnityWebRequest::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Release
void UnityEngine::Networking::UnityWebRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::Release");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.InternalDestroy
void UnityEngine::Networking::UnityWebRequest::InternalDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::InternalDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.InternalSetDefaults
void UnityEngine::Networking::UnityWebRequest::InternalSetDefaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::InternalSetDefaults");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalSetDefaults", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Dispose
void UnityEngine::Networking::UnityWebRequest::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.DisposeHandlers
void UnityEngine::Networking::UnityWebRequest::DisposeHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::DisposeHandlers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DisposeHandlers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.BeginWebRequest
UnityEngine::Networking::UnityWebRequestAsyncOperation* UnityEngine::Networking::UnityWebRequest::BeginWebRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::BeginWebRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginWebRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Networking::UnityWebRequestAsyncOperation*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SendWebRequest
UnityEngine::Networking::UnityWebRequestAsyncOperation* UnityEngine::Networking::UnityWebRequest::SendWebRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::SendWebRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendWebRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Networking::UnityWebRequestAsyncOperation*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Abort
void UnityEngine::Networking::UnityWebRequest::Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::Abort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Abort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetMethod
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::SetMethod(UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod methodType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::SetMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(methodType)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, methodType);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.InternalSetMethod
void UnityEngine::Networking::UnityWebRequest::InternalSetMethod(UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod methodType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::InternalSetMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalSetMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(methodType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, methodType);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetCustomMethod
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::SetCustomMethod(::Il2CppString* customMethodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::SetCustomMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCustomMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(customMethodName)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, customMethodName);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.InternalSetCustomMethod
void UnityEngine::Networking::UnityWebRequest::InternalSetCustomMethod(::Il2CppString* customMethodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::InternalSetCustomMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalSetCustomMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(customMethodName)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, customMethodName);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_method
void UnityEngine::Networking::UnityWebRequest::set_method(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::set_method");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_method", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.GetError
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::GetError() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::GetError");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_error
::Il2CppString* UnityEngine::Networking::UnityWebRequest::get_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::get_error");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_error", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_url
void UnityEngine::Networking::UnityWebRequest::set_url(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::set_url");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_url", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetUrl
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::SetUrl(::Il2CppString* url) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::SetUrl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetUrl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(url)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, url);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.InternalSetUrl
void UnityEngine::Networking::UnityWebRequest::InternalSetUrl(::Il2CppString* url) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::InternalSetUrl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalSetUrl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(url)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, url);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_responseCode
int64_t UnityEngine::Networking::UnityWebRequest::get_responseCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::get_responseCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_responseCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.IsExecuting
bool UnityEngine::Networking::UnityWebRequest::IsExecuting() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::IsExecuting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsExecuting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_isModifiable
bool UnityEngine::Networking::UnityWebRequest::get_isModifiable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::get_isModifiable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isModifiable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_isDone
bool UnityEngine::Networking::UnityWebRequest::get_isDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::get_isDone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isDone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_isNetworkError
bool UnityEngine::Networking::UnityWebRequest::get_isNetworkError() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::get_isNetworkError");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isNetworkError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_isHttpError
bool UnityEngine::Networking::UnityWebRequest::get_isHttpError() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::get_isHttpError");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isHttpError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.GetDownloadProgress
float UnityEngine::Networking::UnityWebRequest::GetDownloadProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::GetDownloadProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDownloadProgress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_downloadProgress
float UnityEngine::Networking::UnityWebRequest::get_downloadProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::get_downloadProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_downloadProgress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.InternalSetRequestHeader
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::InternalSetRequestHeader(::Il2CppString* name, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::InternalSetRequestHeader");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalSetRequestHeader", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, value)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetRequestHeader
void UnityEngine::Networking::UnityWebRequest::SetRequestHeader(::Il2CppString* name, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::SetRequestHeader");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetRequestHeader", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetUploadHandler
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::SetUploadHandler(UnityEngine::Networking::UploadHandler* uh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::SetUploadHandler");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetUploadHandler", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uh)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, uh);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_uploadHandler
UnityEngine::Networking::UploadHandler* UnityEngine::Networking::UnityWebRequest::get_uploadHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::get_uploadHandler");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_uploadHandler", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Networking::UploadHandler*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_uploadHandler
void UnityEngine::Networking::UnityWebRequest::set_uploadHandler(UnityEngine::Networking::UploadHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::set_uploadHandler");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_uploadHandler", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetDownloadHandler
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::SetDownloadHandler(UnityEngine::Networking::DownloadHandler* dh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::SetDownloadHandler");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetDownloadHandler", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dh)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, dh);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_downloadHandler
UnityEngine::Networking::DownloadHandler* UnityEngine::Networking::UnityWebRequest::get_downloadHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::get_downloadHandler");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_downloadHandler", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Networking::DownloadHandler*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_downloadHandler
void UnityEngine::Networking::UnityWebRequest::set_downloadHandler(UnityEngine::Networking::DownloadHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::set_downloadHandler");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_downloadHandler", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_certificateHandler
UnityEngine::Networking::CertificateHandler* UnityEngine::Networking::UnityWebRequest::get_certificateHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::get_certificateHandler");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_certificateHandler", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Networking::CertificateHandler*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Get
UnityEngine::Networking::UnityWebRequest* UnityEngine::Networking::UnityWebRequest::Get(::Il2CppString* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::Get");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "Get", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uri)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Networking::UnityWebRequest*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.EscapeURL
::Il2CppString* UnityEngine::Networking::UnityWebRequest::EscapeURL(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::EscapeURL");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "EscapeURL", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.EscapeURL
::Il2CppString* UnityEngine::Networking::UnityWebRequest::EscapeURL(::Il2CppString* s, System::Text::Encoding* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::EscapeURL");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "EscapeURL", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, e)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, e);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Finalize
void UnityEngine::Networking::UnityWebRequest::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod
#include "UnityEngine/Networking/UnityWebRequest_UnityWebRequestMethod.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod Get
UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Get"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod Get
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Get(UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Get", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod Post
UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Post() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Post");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Post"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod Post
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Post(UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Post");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Post", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod Put
UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Put() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Put");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Put"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod Put
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Put(UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Put");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Put", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod Head
UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Head"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod Head
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Head(UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod Custom
UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod Custom
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Custom(UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Custom", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.UnityWebRequest/UnityWebRequestError
#include "UnityEngine/Networking/UnityWebRequest_UnityWebRequestError.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError OK
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "OK"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError OK
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_OK(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError Unknown
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError Unknown
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_Unknown(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SDKError
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SDKError() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SDKError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SDKError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SDKError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SDKError(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SDKError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SDKError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError UnsupportedProtocol
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_UnsupportedProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_UnsupportedProtocol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "UnsupportedProtocol"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError UnsupportedProtocol
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_UnsupportedProtocol(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_UnsupportedProtocol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "UnsupportedProtocol", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError MalformattedUrl
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_MalformattedUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_MalformattedUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "MalformattedUrl"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError MalformattedUrl
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_MalformattedUrl(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_MalformattedUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "MalformattedUrl", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError CannotResolveProxy
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_CannotResolveProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_CannotResolveProxy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "CannotResolveProxy"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError CannotResolveProxy
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_CannotResolveProxy(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_CannotResolveProxy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "CannotResolveProxy", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError CannotResolveHost
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_CannotResolveHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_CannotResolveHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "CannotResolveHost"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError CannotResolveHost
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_CannotResolveHost(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_CannotResolveHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "CannotResolveHost", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError CannotConnectToHost
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_CannotConnectToHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_CannotConnectToHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "CannotConnectToHost"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError CannotConnectToHost
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_CannotConnectToHost(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_CannotConnectToHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "CannotConnectToHost", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError AccessDenied
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_AccessDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_AccessDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "AccessDenied"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError AccessDenied
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_AccessDenied(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_AccessDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "AccessDenied", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError GenericHttpError
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_GenericHttpError() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_GenericHttpError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "GenericHttpError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError GenericHttpError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_GenericHttpError(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_GenericHttpError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "GenericHttpError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError WriteError
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_WriteError() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_WriteError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "WriteError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError WriteError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_WriteError(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_WriteError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "WriteError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError ReadError
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_ReadError() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_ReadError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "ReadError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError ReadError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_ReadError(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_ReadError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "ReadError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError OutOfMemory
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_OutOfMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_OutOfMemory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "OutOfMemory"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError OutOfMemory
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_OutOfMemory(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_OutOfMemory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "OutOfMemory", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError Timeout
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "Timeout"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError Timeout
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_Timeout(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "Timeout", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError HTTPPostError
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_HTTPPostError() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_HTTPPostError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "HTTPPostError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError HTTPPostError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_HTTPPostError(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_HTTPPostError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "HTTPPostError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLCannotConnect
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCannotConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCannotConnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCannotConnect"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLCannotConnect
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCannotConnect(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCannotConnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCannotConnect", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError Aborted
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_Aborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_Aborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "Aborted"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError Aborted
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_Aborted(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_Aborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "Aborted", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError TooManyRedirects
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_TooManyRedirects() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_TooManyRedirects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "TooManyRedirects"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError TooManyRedirects
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_TooManyRedirects(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_TooManyRedirects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "TooManyRedirects", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError ReceivedNoData
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_ReceivedNoData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_ReceivedNoData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "ReceivedNoData"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError ReceivedNoData
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_ReceivedNoData(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_ReceivedNoData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "ReceivedNoData", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLNotSupported
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLNotSupported
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLNotSupported(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError FailedToSendData
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_FailedToSendData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_FailedToSendData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "FailedToSendData"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError FailedToSendData
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_FailedToSendData(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_FailedToSendData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "FailedToSendData", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError FailedToReceiveData
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_FailedToReceiveData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_FailedToReceiveData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "FailedToReceiveData"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError FailedToReceiveData
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_FailedToReceiveData(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_FailedToReceiveData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "FailedToReceiveData", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLCertificateError
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCertificateError() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCertificateError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCertificateError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLCertificateError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCertificateError(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCertificateError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCertificateError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLCipherNotAvailable
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCipherNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCipherNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCipherNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLCipherNotAvailable
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCipherNotAvailable(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCipherNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCipherNotAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLCACertError
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCACertError() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCACertError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCACertError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLCACertError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCACertError(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCACertError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCACertError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError UnrecognizedContentEncoding
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_UnrecognizedContentEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_UnrecognizedContentEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "UnrecognizedContentEncoding"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError UnrecognizedContentEncoding
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_UnrecognizedContentEncoding(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_UnrecognizedContentEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "UnrecognizedContentEncoding", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError LoginFailed
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_LoginFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_LoginFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "LoginFailed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError LoginFailed
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_LoginFailed(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_LoginFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "LoginFailed", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLShutdownFailed
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLShutdownFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLShutdownFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLShutdownFailed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLShutdownFailed
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLShutdownFailed(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLShutdownFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLShutdownFailed", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError NoInternetConnection
UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_NoInternetConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_NoInternetConnection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "NoInternetConnection"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError NoInternetConnection
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_NoInternetConnection(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_NoInternetConnection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "NoInternetConnection", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Networking.CertificateHandler
#include "UnityEngine/Networking/CertificateHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.CertificateHandler.Release
void UnityEngine::Networking::CertificateHandler::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::CertificateHandler::Release");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.CertificateHandler.ValidateCertificate
bool UnityEngine::Networking::CertificateHandler::ValidateCertificate(::Array<uint8_t>* certificateData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::CertificateHandler::ValidateCertificate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ValidateCertificate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(certificateData)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, certificateData);
}
// Autogenerated method: UnityEngine.Networking.CertificateHandler.ValidateCertificateNative
bool UnityEngine::Networking::CertificateHandler::ValidateCertificateNative(::Array<uint8_t>* certificateData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::CertificateHandler::ValidateCertificateNative");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ValidateCertificateNative", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(certificateData)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, certificateData);
}
// Autogenerated method: UnityEngine.Networking.CertificateHandler.Dispose
void UnityEngine::Networking::CertificateHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::CertificateHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Networking.DownloadHandler
#include "UnityEngine/Networking/DownloadHandler.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.DownloadHandler.Release
void UnityEngine::Networking::DownloadHandler::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandler::Release");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.Dispose
void UnityEngine::Networking::DownloadHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.get_text
::Il2CppString* UnityEngine::Networking::DownloadHandler::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandler::get_text");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.GetData
::Array<uint8_t>* UnityEngine::Networking::DownloadHandler::GetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandler::GetData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.GetText
::Il2CppString* UnityEngine::Networking::DownloadHandler::GetText() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandler::GetText");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.GetTextEncoder
System::Text::Encoding* UnityEngine::Networking::DownloadHandler::GetTextEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandler::GetTextEncoder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTextEncoder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.GetContentType
::Il2CppString* UnityEngine::Networking::DownloadHandler::GetContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandler::GetContentType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetContentType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.InternalGetByteArray
::Array<uint8_t>* UnityEngine::Networking::DownloadHandler::InternalGetByteArray(UnityEngine::Networking::DownloadHandler* dh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandler::InternalGetByteArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Networking", "DownloadHandler", "InternalGetByteArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dh)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dh);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.Finalize
void UnityEngine::Networking::DownloadHandler::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandler::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Networking.DownloadHandlerBuffer
#include "UnityEngine/Networking/DownloadHandlerBuffer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.DownloadHandlerBuffer.Create
System::IntPtr UnityEngine::Networking::DownloadHandlerBuffer::Create(UnityEngine::Networking::DownloadHandlerBuffer* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandlerBuffer::Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Networking", "DownloadHandlerBuffer", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerBuffer.InternalCreateBuffer
void UnityEngine::Networking::DownloadHandlerBuffer::InternalCreateBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandlerBuffer::InternalCreateBuffer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalCreateBuffer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerBuffer.InternalGetData
::Array<uint8_t>* UnityEngine::Networking::DownloadHandlerBuffer::InternalGetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandlerBuffer::InternalGetData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalGetData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerBuffer.GetData
::Array<uint8_t>* UnityEngine::Networking::DownloadHandlerBuffer::GetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandlerBuffer::GetData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.UploadHandler
#include "UnityEngine/Networking/UploadHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.UploadHandler.Release
void UnityEngine::Networking::UploadHandler::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UploadHandler::Release");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UploadHandler.Dispose
void UnityEngine::Networking::UploadHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UploadHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UploadHandler.Finalize
void UnityEngine::Networking::UploadHandler::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UploadHandler::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Networking.UploadHandlerRaw
#include "UnityEngine/Networking/UploadHandlerRaw.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.UploadHandlerRaw.Create
System::IntPtr UnityEngine::Networking::UploadHandlerRaw::Create(UnityEngine::Networking::UploadHandlerRaw* self, ::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UploadHandlerRaw::Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Networking", "UploadHandlerRaw", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(self, data)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, self, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Networking.UnityWebRequestTexture
#include "UnityEngine/Networking/UnityWebRequestTexture.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.UnityWebRequestTexture.GetTexture
UnityEngine::Networking::UnityWebRequest* UnityEngine::Networking::UnityWebRequestTexture::GetTexture(::Il2CppString* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequestTexture::GetTexture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequestTexture", "GetTexture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uri)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Networking::UnityWebRequest*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequestTexture.GetTexture
UnityEngine::Networking::UnityWebRequest* UnityEngine::Networking::UnityWebRequestTexture::GetTexture(::Il2CppString* uri, bool nonReadable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequestTexture::GetTexture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequestTexture", "GetTexture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uri, nonReadable)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Networking::UnityWebRequest*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uri, nonReadable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Networking.DownloadHandlerTexture
#include "UnityEngine/Networking/DownloadHandlerTexture.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.DownloadHandlerTexture.Create
System::IntPtr UnityEngine::Networking::DownloadHandlerTexture::Create(UnityEngine::Networking::DownloadHandlerTexture* obj, bool readable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandlerTexture::Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Networking", "DownloadHandlerTexture", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, readable)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, readable);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerTexture.InternalCreateTexture
void UnityEngine::Networking::DownloadHandlerTexture::InternalCreateTexture(bool readable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandlerTexture::InternalCreateTexture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalCreateTexture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(readable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, readable);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerTexture.get_texture
UnityEngine::Texture2D* UnityEngine::Networking::DownloadHandlerTexture::get_texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandlerTexture::get_texture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_texture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerTexture.InternalGetTexture
UnityEngine::Texture2D* UnityEngine::Networking::DownloadHandlerTexture::InternalGetTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandlerTexture::InternalGetTexture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalGetTexture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerTexture.InternalGetTextureNative
UnityEngine::Texture2D* UnityEngine::Networking::DownloadHandlerTexture::InternalGetTextureNative() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandlerTexture::InternalGetTextureNative");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalGetTextureNative", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerTexture.GetContent
UnityEngine::Texture2D* UnityEngine::Networking::DownloadHandlerTexture::GetContent(UnityEngine::Networking::UnityWebRequest* www) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandlerTexture::GetContent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Networking", "DownloadHandlerTexture", "GetContent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(www)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture2D*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, www);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerTexture.GetData
::Array<uint8_t>* UnityEngine::Networking::DownloadHandlerTexture::GetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::DownloadHandlerTexture::GetData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.Boundary
#include "UnityEngine/Experimental/XR/Boundary.hpp"
// Including type: UnityEngine.Experimental.XR.Boundary/Type
#include "UnityEngine/Experimental/XR/Boundary_Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.TryGetDimensions
bool UnityEngine::Experimental::XR::Boundary::TryGetDimensions(UnityEngine::Vector3& dimensionsOut, UnityEngine::Experimental::XR::Boundary::Type boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Experimental::XR::Boundary::TryGetDimensions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "TryGetDimensions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dimensionsOut, boundaryType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dimensionsOut, boundaryType);
}
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.TryGetDimensionsInternal
bool UnityEngine::Experimental::XR::Boundary::TryGetDimensionsInternal(UnityEngine::Vector3& dimensionsOut, UnityEngine::Experimental::XR::Boundary::Type boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Experimental::XR::Boundary::TryGetDimensionsInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "TryGetDimensionsInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dimensionsOut, boundaryType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dimensionsOut, boundaryType);
}
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.get_visible
bool UnityEngine::Experimental::XR::Boundary::get_visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Experimental::XR::Boundary::get_visible");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "get_visible", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.set_visible
void UnityEngine::Experimental::XR::Boundary::set_visible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Experimental::XR::Boundary::set_visible");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "set_visible", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.get_configured
bool UnityEngine::Experimental::XR::Boundary::get_configured() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Experimental::XR::Boundary::get_configured");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "get_configured", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.TryGetGeometry
bool UnityEngine::Experimental::XR::Boundary::TryGetGeometry(System::Collections::Generic::List_1<UnityEngine::Vector3>* geometry, UnityEngine::Experimental::XR::Boundary::Type boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Experimental::XR::Boundary::TryGetGeometry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "TryGetGeometry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(geometry, boundaryType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, geometry, boundaryType);
}
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.TryGetGeometryScriptingInternal
bool UnityEngine::Experimental::XR::Boundary::TryGetGeometryScriptingInternal(System::Collections::Generic::List_1<UnityEngine::Vector3>* geometry, UnityEngine::Experimental::XR::Boundary::Type boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Experimental::XR::Boundary::TryGetGeometryScriptingInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "TryGetGeometryScriptingInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(geometry, boundaryType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, geometry, boundaryType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.Boundary/Type
#include "UnityEngine/Experimental/XR/Boundary_Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.Boundary/Type PlayArea
UnityEngine::Experimental::XR::Boundary::Type UnityEngine::Experimental::XR::Boundary::Type::_get_PlayArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Experimental::XR::Boundary::Type::_get_PlayArea");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Experimental::XR::Boundary::Type>("UnityEngine.Experimental.XR", "Boundary/Type", "PlayArea"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.Boundary/Type PlayArea
void UnityEngine::Experimental::XR::Boundary::Type::_set_PlayArea(UnityEngine::Experimental::XR::Boundary::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Experimental::XR::Boundary::Type::_set_PlayArea");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "Boundary/Type", "PlayArea", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.Boundary/Type TrackedArea
UnityEngine::Experimental::XR::Boundary::Type UnityEngine::Experimental::XR::Boundary::Type::_get_TrackedArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Experimental::XR::Boundary::Type::_get_TrackedArea");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Experimental::XR::Boundary::Type>("UnityEngine.Experimental.XR", "Boundary/Type", "TrackedArea"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.Boundary/Type TrackedArea
void UnityEngine::Experimental::XR::Boundary::Type::_set_TrackedArea(UnityEngine::Experimental::XR::Boundary::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Experimental::XR::Boundary::Type::_set_TrackedArea");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "Boundary/Type", "TrackedArea", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.XRSettings
#include "UnityEngine/XR/XRSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.XRSettings.get_enabled
bool UnityEngine::XR::XRSettings::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRSettings::get_enabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_enabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_showDeviceView
bool UnityEngine::XR::XRSettings::get_showDeviceView() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRSettings::get_showDeviceView");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_showDeviceView", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.set_showDeviceView
void UnityEngine::XR::XRSettings::set_showDeviceView(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRSettings::set_showDeviceView");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "set_showDeviceView", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_eyeTextureResolutionScale
float UnityEngine::XR::XRSettings::get_eyeTextureResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRSettings::get_eyeTextureResolutionScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_eyeTextureResolutionScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.set_eyeTextureResolutionScale
void UnityEngine::XR::XRSettings::set_eyeTextureResolutionScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRSettings::set_eyeTextureResolutionScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "set_eyeTextureResolutionScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_eyeTextureWidth
int UnityEngine::XR::XRSettings::get_eyeTextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRSettings::get_eyeTextureWidth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_eyeTextureWidth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_eyeTextureHeight
int UnityEngine::XR::XRSettings::get_eyeTextureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRSettings::get_eyeTextureHeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_eyeTextureHeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_renderViewportScale
float UnityEngine::XR::XRSettings::get_renderViewportScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRSettings::get_renderViewportScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_renderViewportScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.set_renderViewportScale
void UnityEngine::XR::XRSettings::set_renderViewportScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRSettings::set_renderViewportScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "set_renderViewportScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_renderViewportScaleInternal
float UnityEngine::XR::XRSettings::get_renderViewportScaleInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRSettings::get_renderViewportScaleInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_renderViewportScaleInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.set_renderViewportScaleInternal
void UnityEngine::XR::XRSettings::set_renderViewportScaleInternal(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRSettings::set_renderViewportScaleInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "set_renderViewportScaleInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_loadedDeviceName
::Il2CppString* UnityEngine::XR::XRSettings::get_loadedDeviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRSettings::get_loadedDeviceName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_loadedDeviceName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.TrackingSpaceType
#include "UnityEngine/XR/TrackingSpaceType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.TrackingSpaceType Stationary
UnityEngine::XR::TrackingSpaceType UnityEngine::XR::TrackingSpaceType::_get_Stationary() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::TrackingSpaceType::_get_Stationary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::TrackingSpaceType>("UnityEngine.XR", "TrackingSpaceType", "Stationary"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.TrackingSpaceType Stationary
void UnityEngine::XR::TrackingSpaceType::_set_Stationary(UnityEngine::XR::TrackingSpaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::TrackingSpaceType::_set_Stationary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "TrackingSpaceType", "Stationary", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.TrackingSpaceType RoomScale
UnityEngine::XR::TrackingSpaceType UnityEngine::XR::TrackingSpaceType::_get_RoomScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::TrackingSpaceType::_get_RoomScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::TrackingSpaceType>("UnityEngine.XR", "TrackingSpaceType", "RoomScale"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.TrackingSpaceType RoomScale
void UnityEngine::XR::TrackingSpaceType::_set_RoomScale(UnityEngine::XR::TrackingSpaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::TrackingSpaceType::_set_RoomScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "TrackingSpaceType", "RoomScale", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.XRDevice
#include "UnityEngine/XR/XRDevice.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.XR.TrackingSpaceType
#include "UnityEngine/XR/TrackingSpaceType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xCDD3C8
// [DebuggerBrowsableAttribute] Offset: 0xCDD3C8
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.String> deviceLoaded
System::Action_1<::Il2CppString*>* UnityEngine::XR::XRDevice::_get_deviceLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRDevice::_get_deviceLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppString*>*>("UnityEngine.XR", "XRDevice", "deviceLoaded"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.String> deviceLoaded
void UnityEngine::XR::XRDevice::_set_deviceLoaded(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRDevice::_set_deviceLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRDevice", "deviceLoaded", value));
}
// Autogenerated method: UnityEngine.XR.XRDevice.get_isPresent
bool UnityEngine::XR::XRDevice::get_isPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRDevice::get_isPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", "get_isPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRDevice.get_model
::Il2CppString* UnityEngine::XR::XRDevice::get_model() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRDevice::get_model");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", "get_model", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRDevice.GetNativePtr
System::IntPtr UnityEngine::XR::XRDevice::GetNativePtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRDevice::GetNativePtr");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", "GetNativePtr", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRDevice.SetTrackingSpaceType
bool UnityEngine::XR::XRDevice::SetTrackingSpaceType(UnityEngine::XR::TrackingSpaceType trackingSpaceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRDevice::SetTrackingSpaceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", "SetTrackingSpaceType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(trackingSpaceType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, trackingSpaceType);
}
// Autogenerated method: UnityEngine.XR.XRDevice.InvokeDeviceLoaded
void UnityEngine::XR::XRDevice::InvokeDeviceLoaded(::Il2CppString* loadedDeviceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRDevice::InvokeDeviceLoaded");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", "InvokeDeviceLoaded", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(loadedDeviceName)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, loadedDeviceName);
}
// Autogenerated method: UnityEngine.XR.XRDevice..cctor
void UnityEngine::XR::XRDevice::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRDevice::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.WSA.WorldAnchor
#include "UnityEngine/XR/WSA/WorldAnchor.hpp"
// Including type: UnityEngine.XR.WSA.WorldAnchor/OnTrackingChangedDelegate
#include "UnityEngine/XR/WSA/WorldAnchor_OnTrackingChangedDelegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.WSA.WorldAnchor.Internal_TriggerEventOnTrackingLost
void UnityEngine::XR::WSA::WorldAnchor::Internal_TriggerEventOnTrackingLost(UnityEngine::XR::WSA::WorldAnchor* worldAnchor, bool located) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::WSA::WorldAnchor::Internal_TriggerEventOnTrackingLost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR.WSA", "WorldAnchor", "Internal_TriggerEventOnTrackingLost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(worldAnchor, located)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, worldAnchor, located);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.WSA.WorldAnchor/OnTrackingChangedDelegate
#include "UnityEngine/XR/WSA/WorldAnchor_OnTrackingChangedDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.WSA.WorldAnchor/OnTrackingChangedDelegate.Invoke
void UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate::Invoke(UnityEngine::XR::WSA::WorldAnchor* worldAnchor, bool located) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(worldAnchor, located)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, worldAnchor, located);
}
// Autogenerated method: UnityEngine.XR.WSA.WorldAnchor/OnTrackingChangedDelegate.BeginInvoke
System::IAsyncResult* UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate::BeginInvoke(UnityEngine::XR::WSA::WorldAnchor* worldAnchor, bool located, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(worldAnchor, located, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, worldAnchor, located, callback, object);
}
// Autogenerated method: UnityEngine.XR.WSA.WorldAnchor/OnTrackingChangedDelegate.EndInvoke
void UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputTracking
#include "UnityEngine/XR/InputTracking.hpp"
// Including type: UnityEngine.XR.InputTracking/TrackingStateEventType
#include "UnityEngine/XR/InputTracking_TrackingStateEventType.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0xCCB27C
// [CompilerGeneratedAttribute] Offset: 0xCCB27C
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.XRNodeState> trackingAcquired
System::Action_1<UnityEngine::XR::XRNodeState>* UnityEngine::XR::InputTracking::_get_trackingAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::_get_trackingAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<UnityEngine::XR::XRNodeState>*>("UnityEngine.XR", "InputTracking", "trackingAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.XRNodeState> trackingAcquired
void UnityEngine::XR::InputTracking::_set_trackingAcquired(System::Action_1<UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::_set_trackingAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking", "trackingAcquired", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCCB2B8
// [DebuggerBrowsableAttribute] Offset: 0xCCB2B8
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.XRNodeState> trackingLost
System::Action_1<UnityEngine::XR::XRNodeState>* UnityEngine::XR::InputTracking::_get_trackingLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::_get_trackingLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<UnityEngine::XR::XRNodeState>*>("UnityEngine.XR", "InputTracking", "trackingLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.XRNodeState> trackingLost
void UnityEngine::XR::InputTracking::_set_trackingLost(System::Action_1<UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::_set_trackingLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking", "trackingLost", value));
}
// [DebuggerBrowsableAttribute] Offset: 0xCCB2F4
// [CompilerGeneratedAttribute] Offset: 0xCCB2F4
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.XRNodeState> nodeAdded
System::Action_1<UnityEngine::XR::XRNodeState>* UnityEngine::XR::InputTracking::_get_nodeAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::_get_nodeAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<UnityEngine::XR::XRNodeState>*>("UnityEngine.XR", "InputTracking", "nodeAdded"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.XRNodeState> nodeAdded
void UnityEngine::XR::InputTracking::_set_nodeAdded(System::Action_1<UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::_set_nodeAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking", "nodeAdded", value));
}
// [DebuggerBrowsableAttribute] Offset: 0xCCB330
// [CompilerGeneratedAttribute] Offset: 0xCCB330
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.XRNodeState> nodeRemoved
System::Action_1<UnityEngine::XR::XRNodeState>* UnityEngine::XR::InputTracking::_get_nodeRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::_get_nodeRemoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<UnityEngine::XR::XRNodeState>*>("UnityEngine.XR", "InputTracking", "nodeRemoved"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.XRNodeState> nodeRemoved
void UnityEngine::XR::InputTracking::_set_nodeRemoved(System::Action_1<UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::_set_nodeRemoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking", "nodeRemoved", value));
}
// Autogenerated method: UnityEngine.XR.InputTracking.InvokeTrackingEvent
void UnityEngine::XR::InputTracking::InvokeTrackingEvent(UnityEngine::XR::InputTracking::TrackingStateEventType eventType, UnityEngine::XR::XRNode nodeType, int64_t uniqueID, bool tracked) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::InvokeTrackingEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", "InvokeTrackingEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventType, nodeType, uniqueID, tracked)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, eventType, nodeType, uniqueID, tracked);
}
// Autogenerated method: UnityEngine.XR.InputTracking.Recenter
void UnityEngine::XR::InputTracking::Recenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::Recenter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", "Recenter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputTracking.GetNodeStates
void UnityEngine::XR::InputTracking::GetNodeStates(System::Collections::Generic::List_1<UnityEngine::XR::XRNodeState>* nodeStates) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::GetNodeStates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", "GetNodeStates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeStates)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeStates);
}
// Autogenerated method: UnityEngine.XR.InputTracking.GetNodeStates_Internal
void UnityEngine::XR::InputTracking::GetNodeStates_Internal(System::Collections::Generic::List_1<UnityEngine::XR::XRNodeState>* nodeStates) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::GetNodeStates_Internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", "GetNodeStates_Internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeStates)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeStates);
}
// Autogenerated method: UnityEngine.XR.InputTracking..cctor
void UnityEngine::XR::InputTracking::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputTracking/TrackingStateEventType
#include "UnityEngine/XR/InputTracking_TrackingStateEventType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType NodeAdded
UnityEngine::XR::InputTracking::TrackingStateEventType UnityEngine::XR::InputTracking::TrackingStateEventType::_get_NodeAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::TrackingStateEventType::_get_NodeAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::InputTracking::TrackingStateEventType>("UnityEngine.XR", "InputTracking/TrackingStateEventType", "NodeAdded"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType NodeAdded
void UnityEngine::XR::InputTracking::TrackingStateEventType::_set_NodeAdded(UnityEngine::XR::InputTracking::TrackingStateEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::TrackingStateEventType::_set_NodeAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking/TrackingStateEventType", "NodeAdded", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType NodeRemoved
UnityEngine::XR::InputTracking::TrackingStateEventType UnityEngine::XR::InputTracking::TrackingStateEventType::_get_NodeRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::TrackingStateEventType::_get_NodeRemoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::InputTracking::TrackingStateEventType>("UnityEngine.XR", "InputTracking/TrackingStateEventType", "NodeRemoved"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType NodeRemoved
void UnityEngine::XR::InputTracking::TrackingStateEventType::_set_NodeRemoved(UnityEngine::XR::InputTracking::TrackingStateEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::TrackingStateEventType::_set_NodeRemoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking/TrackingStateEventType", "NodeRemoved", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType TrackingAcquired
UnityEngine::XR::InputTracking::TrackingStateEventType UnityEngine::XR::InputTracking::TrackingStateEventType::_get_TrackingAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::TrackingStateEventType::_get_TrackingAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::InputTracking::TrackingStateEventType>("UnityEngine.XR", "InputTracking/TrackingStateEventType", "TrackingAcquired"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType TrackingAcquired
void UnityEngine::XR::InputTracking::TrackingStateEventType::_set_TrackingAcquired(UnityEngine::XR::InputTracking::TrackingStateEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::TrackingStateEventType::_set_TrackingAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking/TrackingStateEventType", "TrackingAcquired", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType TrackingLost
UnityEngine::XR::InputTracking::TrackingStateEventType UnityEngine::XR::InputTracking::TrackingStateEventType::_get_TrackingLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::TrackingStateEventType::_get_TrackingLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::InputTracking::TrackingStateEventType>("UnityEngine.XR", "InputTracking/TrackingStateEventType", "TrackingLost"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType TrackingLost
void UnityEngine::XR::InputTracking::TrackingStateEventType::_set_TrackingLost(UnityEngine::XR::InputTracking::TrackingStateEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputTracking::TrackingStateEventType::_set_TrackingLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking/TrackingStateEventType", "TrackingLost", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode LeftEye
UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_LeftEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNode::_get_LeftEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "LeftEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode LeftEye
void UnityEngine::XR::XRNode::_set_LeftEye(UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNode::_set_LeftEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "LeftEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode RightEye
UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_RightEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNode::_get_RightEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "RightEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode RightEye
void UnityEngine::XR::XRNode::_set_RightEye(UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNode::_set_RightEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "RightEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode CenterEye
UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_CenterEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNode::_get_CenterEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "CenterEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode CenterEye
void UnityEngine::XR::XRNode::_set_CenterEye(UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNode::_set_CenterEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "CenterEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode Head
UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNode::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "Head"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode Head
void UnityEngine::XR::XRNode::_set_Head(UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNode::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode LeftHand
UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNode::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode LeftHand
void UnityEngine::XR::XRNode::_set_LeftHand(UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNode::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode RightHand
UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNode::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode RightHand
void UnityEngine::XR::XRNode::_set_RightHand(UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNode::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "RightHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode GameController
UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_GameController() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNode::_get_GameController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "GameController"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode GameController
void UnityEngine::XR::XRNode::_set_GameController(UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNode::_set_GameController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "GameController", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode TrackingReference
UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_TrackingReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNode::_get_TrackingReference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "TrackingReference"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode TrackingReference
void UnityEngine::XR::XRNode::_set_TrackingReference(UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNode::_set_TrackingReference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "TrackingReference", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode HardwareTracker
UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_HardwareTracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNode::_get_HardwareTracker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "HardwareTracker"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode HardwareTracker
void UnityEngine::XR::XRNode::_set_HardwareTracker(UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNode::_set_HardwareTracker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "HardwareTracker", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.AvailableTrackingData
#include "UnityEngine/XR/AvailableTrackingData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData None
UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::AvailableTrackingData::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData None
void UnityEngine::XR::AvailableTrackingData::_set_None(UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::AvailableTrackingData::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData PositionAvailable
UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_PositionAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::AvailableTrackingData::_get_PositionAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "PositionAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData PositionAvailable
void UnityEngine::XR::AvailableTrackingData::_set_PositionAvailable(UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::AvailableTrackingData::_set_PositionAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "PositionAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData RotationAvailable
UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_RotationAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::AvailableTrackingData::_get_RotationAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "RotationAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData RotationAvailable
void UnityEngine::XR::AvailableTrackingData::_set_RotationAvailable(UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::AvailableTrackingData::_set_RotationAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "RotationAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData VelocityAvailable
UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_VelocityAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::AvailableTrackingData::_get_VelocityAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "VelocityAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData VelocityAvailable
void UnityEngine::XR::AvailableTrackingData::_set_VelocityAvailable(UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::AvailableTrackingData::_set_VelocityAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "VelocityAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData AngularVelocityAvailable
UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_AngularVelocityAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::AvailableTrackingData::_get_AngularVelocityAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "AngularVelocityAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData AngularVelocityAvailable
void UnityEngine::XR::AvailableTrackingData::_set_AngularVelocityAvailable(UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::AvailableTrackingData::_set_AngularVelocityAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "AngularVelocityAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData AccelerationAvailable
UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_AccelerationAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::AvailableTrackingData::_get_AccelerationAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "AccelerationAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData AccelerationAvailable
void UnityEngine::XR::AvailableTrackingData::_set_AccelerationAvailable(UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::AvailableTrackingData::_set_AccelerationAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "AccelerationAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData AngularAccelerationAvailable
UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_AngularAccelerationAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::AvailableTrackingData::_get_AngularAccelerationAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "AngularAccelerationAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData AngularAccelerationAvailable
void UnityEngine::XR::AvailableTrackingData::_set_AngularAccelerationAvailable(UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::AvailableTrackingData::_set_AngularAccelerationAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "AngularAccelerationAvailable", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRNodeState
#include "UnityEngine/XR/XRNodeState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.XRNodeState.set_uniqueID
void UnityEngine::XR::XRNodeState::set_uniqueID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNodeState::set_uniqueID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_uniqueID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.get_nodeType
UnityEngine::XR::XRNode UnityEngine::XR::XRNodeState::get_nodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNodeState::get_nodeType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_nodeType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::XR::XRNode, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.set_nodeType
void UnityEngine::XR::XRNodeState::set_nodeType(UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNodeState::set_nodeType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_nodeType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.set_tracked
void UnityEngine::XR::XRNodeState::set_tracked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNodeState::set_tracked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_tracked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetPosition
bool UnityEngine::XR::XRNodeState::TryGetPosition(UnityEngine::Vector3& position) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNodeState::TryGetPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "TryGetPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetRotation
bool UnityEngine::XR::XRNodeState::TryGetRotation(UnityEngine::Quaternion& rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNodeState::TryGetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "TryGetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, rotation);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetVelocity
bool UnityEngine::XR::XRNodeState::TryGetVelocity(UnityEngine::Vector3& velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNodeState::TryGetVelocity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "TryGetVelocity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(velocity)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, velocity);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetAngularVelocity
bool UnityEngine::XR::XRNodeState::TryGetAngularVelocity(UnityEngine::Vector3& angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNodeState::TryGetAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "TryGetAngularVelocity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(angularVelocity)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, angularVelocity);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetAcceleration
bool UnityEngine::XR::XRNodeState::TryGetAcceleration(UnityEngine::Vector3& acceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNodeState::TryGetAcceleration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "TryGetAcceleration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(acceleration)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, acceleration);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetAngularAcceleration
bool UnityEngine::XR::XRNodeState::TryGetAngularAcceleration(UnityEngine::Vector3& angularAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNodeState::TryGetAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "TryGetAngularAcceleration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(angularAcceleration)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, angularAcceleration);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGet
bool UnityEngine::XR::XRNodeState::TryGet(UnityEngine::Vector3 inValue, UnityEngine::XR::AvailableTrackingData availabilityFlag, UnityEngine::Vector3& outValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNodeState::TryGet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "TryGet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inValue, availabilityFlag, outValue)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, inValue, availabilityFlag, outValue);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGet
bool UnityEngine::XR::XRNodeState::TryGet(UnityEngine::Quaternion inValue, UnityEngine::XR::AvailableTrackingData availabilityFlag, UnityEngine::Quaternion& outValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRNodeState::TryGet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "TryGet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inValue, availabilityFlag, outValue)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, inValue, availabilityFlag, outValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputFeatureType
#include "UnityEngine/XR/InputFeatureType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Custom
UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Custom
void UnityEngine::XR::InputFeatureType::_set_Custom(UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Custom", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Binary
UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Binary
void UnityEngine::XR::InputFeatureType::_set_Binary(UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Binary", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType DiscreteStates
UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_DiscreteStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_get_DiscreteStates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "DiscreteStates"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType DiscreteStates
void UnityEngine::XR::InputFeatureType::_set_DiscreteStates(UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_set_DiscreteStates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "DiscreteStates", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Axis1D
UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Axis1D() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_get_Axis1D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Axis1D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Axis1D
void UnityEngine::XR::InputFeatureType::_set_Axis1D(UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_set_Axis1D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Axis1D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Axis2D
UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Axis2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_get_Axis2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Axis2D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Axis2D
void UnityEngine::XR::InputFeatureType::_set_Axis2D(UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_set_Axis2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Axis2D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Axis3D
UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Axis3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_get_Axis3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Axis3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Axis3D
void UnityEngine::XR::InputFeatureType::_set_Axis3D(UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_set_Axis3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Axis3D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Rotation
UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Rotation
void UnityEngine::XR::InputFeatureType::_set_Rotation(UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Rotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Hand
UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_get_Hand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Hand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Hand
void UnityEngine::XR::InputFeatureType::_set_Hand(UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_set_Hand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Hand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Bone
UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Bone() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_get_Bone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Bone"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Bone
void UnityEngine::XR::InputFeatureType::_set_Bone(UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_set_Bone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Bone", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Eyes
UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Eyes() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_get_Eyes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Eyes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Eyes
void UnityEngine::XR::InputFeatureType::_set_Eyes(UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_set_Eyes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Eyes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType kUnityXRInputFeatureTypeInvalid
UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_kUnityXRInputFeatureTypeInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_get_kUnityXRInputFeatureTypeInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "kUnityXRInputFeatureTypeInvalid"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType kUnityXRInputFeatureTypeInvalid
void UnityEngine::XR::InputFeatureType::_set_kUnityXRInputFeatureTypeInvalid(UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureType::_set_kUnityXRInputFeatureTypeInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "kUnityXRInputFeatureTypeInvalid", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.ConnectionChangeType
#include "UnityEngine/XR/ConnectionChangeType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.ConnectionChangeType Connected
UnityEngine::XR::ConnectionChangeType UnityEngine::XR::ConnectionChangeType::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::ConnectionChangeType::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::ConnectionChangeType>("UnityEngine.XR", "ConnectionChangeType", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.ConnectionChangeType Connected
void UnityEngine::XR::ConnectionChangeType::_set_Connected(UnityEngine::XR::ConnectionChangeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::ConnectionChangeType::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "ConnectionChangeType", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.ConnectionChangeType Disconnected
UnityEngine::XR::ConnectionChangeType UnityEngine::XR::ConnectionChangeType::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::ConnectionChangeType::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::ConnectionChangeType>("UnityEngine.XR", "ConnectionChangeType", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.ConnectionChangeType Disconnected
void UnityEngine::XR::ConnectionChangeType::_set_Disconnected(UnityEngine::XR::ConnectionChangeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::ConnectionChangeType::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "ConnectionChangeType", "Disconnected", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.ConnectionChangeType ConfigChange
UnityEngine::XR::ConnectionChangeType UnityEngine::XR::ConnectionChangeType::_get_ConfigChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::ConnectionChangeType::_get_ConfigChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::ConnectionChangeType>("UnityEngine.XR", "ConnectionChangeType", "ConfigChange"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.ConnectionChangeType ConfigChange
void UnityEngine::XR::ConnectionChangeType::_set_ConfigChange(UnityEngine::XR::ConnectionChangeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::ConnectionChangeType::_set_ConfigChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "ConnectionChangeType", "ConfigChange", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.InputFeatureUsage
#include "UnityEngine/XR/InputFeatureUsage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.InputFeatureUsage.get_name
::Il2CppString* UnityEngine::XR::InputFeatureUsage::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureUsage::get_name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputFeatureUsage.get_internalType
UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureUsage::get_internalType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureUsage::get_internalType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_internalType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::XR::InputFeatureType, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputFeatureUsage.Equals
bool UnityEngine::XR::InputFeatureUsage::Equals(UnityEngine::XR::InputFeatureUsage other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureUsage::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.InputFeatureUsage.Equals
bool UnityEngine::XR::InputFeatureUsage::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureUsage::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.InputFeatureUsage.GetHashCode
int UnityEngine::XR::InputFeatureUsage::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputFeatureUsage::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.InputDevice
#include "UnityEngine/XR/InputDevice.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.InputDevice.get_deviceId
uint64_t UnityEngine::XR::InputDevice::get_deviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputDevice::get_deviceId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_deviceId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputDevice.Equals
bool UnityEngine::XR::InputDevice::Equals(UnityEngine::XR::InputDevice other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputDevice::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.InputDevice.Equals
bool UnityEngine::XR::InputDevice::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputDevice::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.InputDevice.GetHashCode
int UnityEngine::XR::InputDevice::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputDevice::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.Hand
#include "UnityEngine/XR/Hand.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Hand.get_deviceId
uint64_t UnityEngine::XR::Hand::get_deviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::Hand::get_deviceId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_deviceId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Hand.get_featureIndex
uint UnityEngine::XR::Hand::get_featureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::Hand::get_featureIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_featureIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Hand.Equals
bool UnityEngine::XR::Hand::Equals(UnityEngine::XR::Hand other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::Hand::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.Hand.Equals
bool UnityEngine::XR::Hand::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::Hand::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.Hand.GetHashCode
int UnityEngine::XR::Hand::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::Hand::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.Eyes
#include "UnityEngine/XR/Eyes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Eyes.get_deviceId
uint64_t UnityEngine::XR::Eyes::get_deviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::Eyes::get_deviceId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_deviceId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Eyes.get_featureIndex
uint UnityEngine::XR::Eyes::get_featureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::Eyes::get_featureIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_featureIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Eyes.Equals
bool UnityEngine::XR::Eyes::Equals(UnityEngine::XR::Eyes other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::Eyes::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.Eyes.Equals
bool UnityEngine::XR::Eyes::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::Eyes::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.Eyes.GetHashCode
int UnityEngine::XR::Eyes::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::Eyes::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.Bone
#include "UnityEngine/XR/Bone.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Bone.get_deviceId
uint64_t UnityEngine::XR::Bone::get_deviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::Bone::get_deviceId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_deviceId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Bone.get_featureIndex
uint UnityEngine::XR::Bone::get_featureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::Bone::get_featureIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_featureIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Bone.Equals
bool UnityEngine::XR::Bone::Equals(UnityEngine::XR::Bone other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::Bone::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.Bone.Equals
bool UnityEngine::XR::Bone::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::Bone::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.Bone.GetHashCode
int UnityEngine::XR::Bone::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::Bone::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputDevices
#include "UnityEngine/XR/InputDevices.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.XR.ConnectionChangeType
#include "UnityEngine/XR/ConnectionChangeType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xCCB3A4
// [DebuggerBrowsableAttribute] Offset: 0xCCB3A4
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceConnected
System::Action_1<UnityEngine::XR::InputDevice>* UnityEngine::XR::InputDevices::_get_deviceConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputDevices::_get_deviceConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<UnityEngine::XR::InputDevice>*>("UnityEngine.XR", "InputDevices", "deviceConnected"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceConnected
void UnityEngine::XR::InputDevices::_set_deviceConnected(System::Action_1<UnityEngine::XR::InputDevice>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputDevices::_set_deviceConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDevices", "deviceConnected", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCCB3E0
// [DebuggerBrowsableAttribute] Offset: 0xCCB3E0
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceDisconnected
System::Action_1<UnityEngine::XR::InputDevice>* UnityEngine::XR::InputDevices::_get_deviceDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputDevices::_get_deviceDisconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<UnityEngine::XR::InputDevice>*>("UnityEngine.XR", "InputDevices", "deviceDisconnected"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceDisconnected
void UnityEngine::XR::InputDevices::_set_deviceDisconnected(System::Action_1<UnityEngine::XR::InputDevice>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputDevices::_set_deviceDisconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDevices", "deviceDisconnected", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCCB41C
// [DebuggerBrowsableAttribute] Offset: 0xCCB41C
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceConfigChanged
System::Action_1<UnityEngine::XR::InputDevice>* UnityEngine::XR::InputDevices::_get_deviceConfigChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputDevices::_get_deviceConfigChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<UnityEngine::XR::InputDevice>*>("UnityEngine.XR", "InputDevices", "deviceConfigChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceConfigChanged
void UnityEngine::XR::InputDevices::_set_deviceConfigChanged(System::Action_1<UnityEngine::XR::InputDevice>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputDevices::_set_deviceConfigChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDevices", "deviceConfigChanged", value));
}
// Autogenerated method: UnityEngine.XR.InputDevices.InvokeConnectionEvent
void UnityEngine::XR::InputDevices::InvokeConnectionEvent(uint64_t deviceId, UnityEngine::XR::ConnectionChangeType change) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::InputDevices::InvokeConnectionEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "InvokeConnectionEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(deviceId, change)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, deviceId, change);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRDisplaySubsystemDescriptor
#include "UnityEngine/XR/XRDisplaySubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem
#include "UnityEngine/XR/XRDisplaySubsystem.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem/XRRenderPass
#include "UnityEngine/XR/XRDisplaySubsystem_XRRenderPass.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem/XRMirrorViewBlitDesc
#include "UnityEngine/XR/XRDisplaySubsystem_XRMirrorViewBlitDesc.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xCCB458
// [DebuggerBrowsableAttribute] Offset: 0xCCB458
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Boolean> displayFocusChanged
System::Action_1<bool>* UnityEngine::XR::XRDisplaySubsystem::_get_displayFocusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRDisplaySubsystem::_get_displayFocusChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<bool>*>("UnityEngine.XR", "XRDisplaySubsystem", "displayFocusChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Boolean> displayFocusChanged
void UnityEngine::XR::XRDisplaySubsystem::_set_displayFocusChanged(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRDisplaySubsystem::_set_displayFocusChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRDisplaySubsystem", "displayFocusChanged", value));
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.InvokeDisplayFocusChanged
void UnityEngine::XR::XRDisplaySubsystem::InvokeDisplayFocusChanged(bool focus) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRDisplaySubsystem::InvokeDisplayFocusChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDisplaySubsystem", "InvokeDisplayFocusChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(focus)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, focus);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRDisplaySubsystemDescriptor
#include "UnityEngine/XR/XRDisplaySubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem
#include "UnityEngine/XR/XRDisplaySubsystem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRInputSubsystemDescriptor
#include "UnityEngine/XR/XRInputSubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRInputSubsystem
#include "UnityEngine/XR/XRInputSubsystem.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.XRInputSubsystem.InvokeTrackingOriginUpdatedEvent
void UnityEngine::XR::XRInputSubsystem::InvokeTrackingOriginUpdatedEvent(System::IntPtr internalPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRInputSubsystem::InvokeTrackingOriginUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRInputSubsystem", "InvokeTrackingOriginUpdatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(internalPtr)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, internalPtr);
}
// Autogenerated method: UnityEngine.XR.XRInputSubsystem.InvokeBoundaryChangedEvent
void UnityEngine::XR::XRInputSubsystem::InvokeBoundaryChangedEvent(System::IntPtr internalPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRInputSubsystem::InvokeBoundaryChangedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "XRInputSubsystem", "InvokeBoundaryChangedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(internalPtr)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, internalPtr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRInputSubsystemDescriptor
#include "UnityEngine/XR/XRInputSubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRInputSubsystem
#include "UnityEngine/XR/XRInputSubsystem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.MeshId
#include "UnityEngine/XR/MeshId.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.XR.MeshId s_InvalidId
UnityEngine::XR::MeshId UnityEngine::XR::MeshId::_get_s_InvalidId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshId::_get_s_InvalidId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::MeshId>("UnityEngine.XR", "MeshId", "s_InvalidId"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.XR.MeshId s_InvalidId
void UnityEngine::XR::MeshId::_set_s_InvalidId(UnityEngine::XR::MeshId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshId::_set_s_InvalidId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshId", "s_InvalidId", value));
}
// Autogenerated method: UnityEngine.XR.MeshId.Equals
bool UnityEngine::XR::MeshId::Equals(UnityEngine::XR::MeshId other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshId::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.MeshId..cctor
void UnityEngine::XR::MeshId::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshId::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "MeshId", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshId.ToString
::Il2CppString* UnityEngine::XR::MeshId::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshId::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshId.GetHashCode
int UnityEngine::XR::MeshId::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshId::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshId.Equals
bool UnityEngine::XR::MeshId::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshId::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.MeshGenerationStatus
#include "UnityEngine/XR/MeshGenerationStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshGenerationStatus Success
UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationStatus::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshGenerationStatus::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::MeshGenerationStatus>("UnityEngine.XR", "MeshGenerationStatus", "Success"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshGenerationStatus Success
void UnityEngine::XR::MeshGenerationStatus::_set_Success(UnityEngine::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshGenerationStatus::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshGenerationStatus", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshGenerationStatus InvalidMeshId
UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationStatus::_get_InvalidMeshId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshGenerationStatus::_get_InvalidMeshId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::MeshGenerationStatus>("UnityEngine.XR", "MeshGenerationStatus", "InvalidMeshId"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshGenerationStatus InvalidMeshId
void UnityEngine::XR::MeshGenerationStatus::_set_InvalidMeshId(UnityEngine::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshGenerationStatus::_set_InvalidMeshId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshGenerationStatus", "InvalidMeshId", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshGenerationStatus GenerationAlreadyInProgress
UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationStatus::_get_GenerationAlreadyInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshGenerationStatus::_get_GenerationAlreadyInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::MeshGenerationStatus>("UnityEngine.XR", "MeshGenerationStatus", "GenerationAlreadyInProgress"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshGenerationStatus GenerationAlreadyInProgress
void UnityEngine::XR::MeshGenerationStatus::_set_GenerationAlreadyInProgress(UnityEngine::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshGenerationStatus::_set_GenerationAlreadyInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshGenerationStatus", "GenerationAlreadyInProgress", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshGenerationStatus Canceled
UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationStatus::_get_Canceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshGenerationStatus::_get_Canceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::MeshGenerationStatus>("UnityEngine.XR", "MeshGenerationStatus", "Canceled"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshGenerationStatus Canceled
void UnityEngine::XR::MeshGenerationStatus::_set_Canceled(UnityEngine::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshGenerationStatus::_set_Canceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshGenerationStatus", "Canceled", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshGenerationStatus UnknownError
UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationStatus::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshGenerationStatus::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::MeshGenerationStatus>("UnityEngine.XR", "MeshGenerationStatus", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshGenerationStatus UnknownError
void UnityEngine::XR::MeshGenerationStatus::_set_UnknownError(UnityEngine::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshGenerationStatus::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshGenerationStatus", "UnknownError", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.HashCodeHelper
#include "UnityEngine/XR/HashCodeHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.HashCodeHelper.Combine
int UnityEngine::XR::HashCodeHelper::Combine(int hash1, int hash2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::HashCodeHelper::Combine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.XR", "HashCodeHelper", "Combine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hash1, hash2)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hash1, hash2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.MeshGenerationResult
#include "UnityEngine/XR/MeshGenerationResult.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.MeshCollider
#include "UnityEngine/MeshCollider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_MeshId
UnityEngine::XR::MeshId UnityEngine::XR::MeshGenerationResult::get_MeshId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshGenerationResult::get_MeshId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_MeshId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::XR::MeshId, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_Mesh
UnityEngine::Mesh* UnityEngine::XR::MeshGenerationResult::get_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshGenerationResult::get_Mesh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Mesh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_MeshCollider
UnityEngine::MeshCollider* UnityEngine::XR::MeshGenerationResult::get_MeshCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshGenerationResult::get_MeshCollider");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_MeshCollider", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::MeshCollider*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_Status
UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationResult::get_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshGenerationResult::get_Status");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Status", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::XR::MeshGenerationStatus, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_Attributes
UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshGenerationResult::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshGenerationResult::get_Attributes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Attributes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::XR::MeshVertexAttributes, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.Equals
bool UnityEngine::XR::MeshGenerationResult::Equals(UnityEngine::XR::MeshGenerationResult other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshGenerationResult::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.Equals
bool UnityEngine::XR::MeshGenerationResult::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshGenerationResult::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.GetHashCode
int UnityEngine::XR::MeshGenerationResult::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshGenerationResult::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.MeshVertexAttributes
#include "UnityEngine/XR/MeshVertexAttributes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshVertexAttributes None
UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshVertexAttributes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshVertexAttributes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::MeshVertexAttributes>("UnityEngine.XR", "MeshVertexAttributes", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshVertexAttributes None
void UnityEngine::XR::MeshVertexAttributes::_set_None(UnityEngine::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshVertexAttributes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshVertexAttributes", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshVertexAttributes Normals
UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshVertexAttributes::_get_Normals() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshVertexAttributes::_get_Normals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::MeshVertexAttributes>("UnityEngine.XR", "MeshVertexAttributes", "Normals"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshVertexAttributes Normals
void UnityEngine::XR::MeshVertexAttributes::_set_Normals(UnityEngine::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshVertexAttributes::_set_Normals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshVertexAttributes", "Normals", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshVertexAttributes Tangents
UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshVertexAttributes::_get_Tangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshVertexAttributes::_get_Tangents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::MeshVertexAttributes>("UnityEngine.XR", "MeshVertexAttributes", "Tangents"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshVertexAttributes Tangents
void UnityEngine::XR::MeshVertexAttributes::_set_Tangents(UnityEngine::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshVertexAttributes::_set_Tangents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshVertexAttributes", "Tangents", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshVertexAttributes UVs
UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshVertexAttributes::_get_UVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshVertexAttributes::_get_UVs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::MeshVertexAttributes>("UnityEngine.XR", "MeshVertexAttributes", "UVs"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshVertexAttributes UVs
void UnityEngine::XR::MeshVertexAttributes::_set_UVs(UnityEngine::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshVertexAttributes::_set_UVs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshVertexAttributes", "UVs", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshVertexAttributes Colors
UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshVertexAttributes::_get_Colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshVertexAttributes::_get_Colors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::XR::MeshVertexAttributes>("UnityEngine.XR", "MeshVertexAttributes", "Colors"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshVertexAttributes Colors
void UnityEngine::XR::MeshVertexAttributes::_set_Colors(UnityEngine::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::MeshVertexAttributes::_set_Colors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshVertexAttributes", "Colors", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRMeshSubsystemDescriptor
#include "UnityEngine/XR/XRMeshSubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRMeshSubsystem
#include "UnityEngine/XR/XRMeshSubsystem.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.XRMeshSubsystem.InvokeMeshReadyDelegate
void UnityEngine::XR::XRMeshSubsystem::InvokeMeshReadyDelegate(UnityEngine::XR::MeshGenerationResult result, System::Action_1<UnityEngine::XR::MeshGenerationResult>* onMeshGenerationComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRMeshSubsystem::InvokeMeshReadyDelegate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeMeshReadyDelegate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, onMeshGenerationComplete)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result, onMeshGenerationComplete);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRMeshSubsystemDescriptor
#include "UnityEngine/XR/XRMeshSubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRMeshSubsystem
#include "UnityEngine/XR/XRMeshSubsystem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetEase.Docker.InitializeData
#include "NetEase/Docker/InitializeData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetEase.Docker.InitializeData.get_InitializeSuccessful
bool NetEase::Docker::InitializeData::get_InitializeSuccessful() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::InitializeData::get_InitializeSuccessful");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_InitializeSuccessful", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.InitializeData.set_InitializeSuccessful
void NetEase::Docker::InitializeData::set_InitializeSuccessful(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::InitializeData::set_InitializeSuccessful");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_InitializeSuccessful", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: NetEase.Docker.InitializeData.set_InitializeCode
void NetEase::Docker::InitializeData::set_InitializeCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::InitializeData::set_InitializeCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_InitializeCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetEase.Docker.LoginData
#include "NetEase/Docker/LoginData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetEase.Docker.LoginData.get_LoginSuccessful
bool NetEase::Docker::LoginData::get_LoginSuccessful() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::LoginData::get_LoginSuccessful");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_LoginSuccessful", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.LoginData.set_LoginSuccessful
void NetEase::Docker::LoginData::set_LoginSuccessful(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::LoginData::set_LoginSuccessful");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_LoginSuccessful", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: NetEase.Docker.LoginData.set_LoginCode
void NetEase::Docker::LoginData::set_LoginCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::LoginData::set_LoginCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_LoginCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: NetEase.Docker.LoginData.get_UserName
::Il2CppString* NetEase::Docker::LoginData::get_UserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::LoginData::get_UserName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_UserName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.LoginData.set_UserName
void NetEase::Docker::LoginData::set_UserName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::LoginData::set_UserName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_UserName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetEase.Docker.LogoutData
#include "NetEase/Docker/LogoutData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetEase.Docker.LogoutData.set_LogoutCode
void NetEase::Docker::LogoutData::set_LogoutCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::LogoutData::set_LogoutCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_LogoutCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetEase.Docker.ReceivedHighscoreData
#include "NetEase/Docker/ReceivedHighscoreData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetEase.Docker.ReceivedHighscoreData.get_FetchingSuccessful
bool NetEase::Docker::ReceivedHighscoreData::get_FetchingSuccessful() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::ReceivedHighscoreData::get_FetchingSuccessful");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_FetchingSuccessful", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.ReceivedHighscoreData.set_FetchingSuccessful
void NetEase::Docker::ReceivedHighscoreData::set_FetchingSuccessful(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::ReceivedHighscoreData::set_FetchingSuccessful");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_FetchingSuccessful", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: NetEase.Docker.ReceivedHighscoreData.set_HighscoreCode
void NetEase::Docker::ReceivedHighscoreData::set_HighscoreCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::ReceivedHighscoreData::set_HighscoreCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_HighscoreCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: NetEase.Docker.ReceivedHighscoreData.get_Track
::Il2CppString* NetEase::Docker::ReceivedHighscoreData::get_Track() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::ReceivedHighscoreData::get_Track");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Track", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.ReceivedHighscoreData.set_Track
void NetEase::Docker::ReceivedHighscoreData::set_Track(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::ReceivedHighscoreData::set_Track");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_Track", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: NetEase.Docker.ReceivedHighscoreData.get_Scores
System::Collections::Generic::List_1<NetEase::Docker::ScoreData>* NetEase::Docker::ReceivedHighscoreData::get_Scores() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::ReceivedHighscoreData::get_Scores");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Scores", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<NetEase::Docker::ScoreData>*, false>(*this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.ReceivedHighscoreData.set_Scores
void NetEase::Docker::ReceivedHighscoreData::set_Scores(System::Collections::Generic::List_1<NetEase::Docker::ScoreData>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::ReceivedHighscoreData::set_Scores");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_Scores", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetEase.Docker.ScoreData
#include "NetEase/Docker/ScoreData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetEase.Docker.ScoreData.get_Name
::Il2CppString* NetEase::Docker::ScoreData::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::ScoreData::get_Name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.ScoreData.set_Name
void NetEase::Docker::ScoreData::set_Name(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::ScoreData::set_Name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_Name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: NetEase.Docker.ScoreData.get_Score
int NetEase::Docker::ScoreData::get_Score() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::ScoreData::get_Score");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Score", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.ScoreData.set_Score
void NetEase::Docker::ScoreData::set_Score(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::ScoreData::set_Score");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_Score", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: NetEase.Docker.ScoreData.set_TimeStamp
void NetEase::Docker::ScoreData::set_TimeStamp(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::ScoreData::set_TimeStamp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_TimeStamp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetEase.Docker.RequestHighscoreData
#include "NetEase/Docker/RequestHighscoreData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetEase.Docker.RequestHighscoreData.get_Track
::Il2CppString* NetEase::Docker::RequestHighscoreData::get_Track() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::RequestHighscoreData::get_Track");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Track", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.RequestHighscoreData.set_Track
void NetEase::Docker::RequestHighscoreData::set_Track(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::RequestHighscoreData::set_Track");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_Track", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: NetEase.Docker.RequestHighscoreData.set_HighscoreType
void NetEase::Docker::RequestHighscoreData::set_HighscoreType(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::RequestHighscoreData::set_HighscoreType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_HighscoreType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetEase.Docker.UploadScoreData
#include "NetEase/Docker/UploadScoreData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetEase.Docker.UploadScoreData.set_Track
void NetEase::Docker::UploadScoreData::set_Track(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::UploadScoreData::set_Track");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_Track", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: NetEase.Docker.UploadScoreData.set_Score
void NetEase::Docker::UploadScoreData::set_Score(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::UploadScoreData::set_Score");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_Score", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetEase.Docker.BaseDock
#include "NetEase/Docker/BaseDock.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NetEase.Docker.UploadScoreData
#include "NetEase/Docker/UploadScoreData.hpp"
// Including type: NetEase.Docker.RequestHighscoreData
#include "NetEase/Docker/RequestHighscoreData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetEase.Docker.BaseDock.SetInitializeCallback
void NetEase::Docker::BaseDock::SetInitializeCallback(System::Action_1<NetEase::Docker::InitializeData>* callbackAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::BaseDock::SetInitializeCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetInitializeCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callbackAction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callbackAction);
}
// Autogenerated method: NetEase.Docker.BaseDock.Initialize
void NetEase::Docker::BaseDock::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::BaseDock::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.BaseDock.SetLoginCallback
void NetEase::Docker::BaseDock::SetLoginCallback(System::Action_1<NetEase::Docker::LoginData>* callbackAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::BaseDock::SetLoginCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLoginCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callbackAction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callbackAction);
}
// Autogenerated method: NetEase.Docker.BaseDock.Login
void NetEase::Docker::BaseDock::Login() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::BaseDock::Login");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Login", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.BaseDock.SetLogoutCallback
void NetEase::Docker::BaseDock::SetLogoutCallback(System::Action_1<NetEase::Docker::LogoutData>* callbackAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::BaseDock::SetLogoutCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLogoutCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callbackAction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callbackAction);
}
// Autogenerated method: NetEase.Docker.BaseDock.Logout
void NetEase::Docker::BaseDock::Logout() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::BaseDock::Logout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Logout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.BaseDock.UploadScore
void NetEase::Docker::BaseDock::UploadScore(NetEase::Docker::UploadScoreData scoreData) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::BaseDock::UploadScore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UploadScore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scoreData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, scoreData);
}
// Autogenerated method: NetEase.Docker.BaseDock.WillProvideHighscore
bool NetEase::Docker::BaseDock::WillProvideHighscore() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::BaseDock::WillProvideHighscore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WillProvideHighscore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.BaseDock.SetHighscoreReceivedCallback
void NetEase::Docker::BaseDock::SetHighscoreReceivedCallback(System::Action_1<NetEase::Docker::ReceivedHighscoreData>* callbackAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::BaseDock::SetHighscoreReceivedCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetHighscoreReceivedCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callbackAction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callbackAction);
}
// Autogenerated method: NetEase.Docker.BaseDock.RequestHighscoreList
void NetEase::Docker::BaseDock::RequestHighscoreList(NetEase::Docker::RequestHighscoreData highscoreRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::BaseDock::RequestHighscoreList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RequestHighscoreList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(highscoreRequest)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, highscoreRequest);
}
// Autogenerated method: NetEase.Docker.BaseDock.UpdateLoop
void NetEase::Docker::BaseDock::UpdateLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::BaseDock::UpdateLoop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateLoop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetEase.Docker.IDock
#include "NetEase/Docker/IDock.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NetEase.Docker.UploadScoreData
#include "NetEase/Docker/UploadScoreData.hpp"
// Including type: NetEase.Docker.RequestHighscoreData
#include "NetEase/Docker/RequestHighscoreData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetEase.Docker.IDock.SetInitializeCallback
void NetEase::Docker::IDock::SetInitializeCallback(System::Action_1<NetEase::Docker::InitializeData>* callbackAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::IDock::SetInitializeCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetInitializeCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callbackAction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callbackAction);
}
// Autogenerated method: NetEase.Docker.IDock.Initialize
void NetEase::Docker::IDock::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::IDock::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.IDock.SetLoginCallback
void NetEase::Docker::IDock::SetLoginCallback(System::Action_1<NetEase::Docker::LoginData>* callbackAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::IDock::SetLoginCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLoginCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callbackAction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callbackAction);
}
// Autogenerated method: NetEase.Docker.IDock.Login
void NetEase::Docker::IDock::Login() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::IDock::Login");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Login", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.IDock.SetLogoutCallback
void NetEase::Docker::IDock::SetLogoutCallback(System::Action_1<NetEase::Docker::LogoutData>* callbackAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::IDock::SetLogoutCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLogoutCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callbackAction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callbackAction);
}
// Autogenerated method: NetEase.Docker.IDock.Logout
void NetEase::Docker::IDock::Logout() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::IDock::Logout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Logout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.IDock.UploadScore
void NetEase::Docker::IDock::UploadScore(NetEase::Docker::UploadScoreData scoreData) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::IDock::UploadScore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UploadScore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scoreData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, scoreData);
}
// Autogenerated method: NetEase.Docker.IDock.WillProvideHighscore
bool NetEase::Docker::IDock::WillProvideHighscore() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::IDock::WillProvideHighscore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WillProvideHighscore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.IDock.SetHighscoreReceivedCallback
void NetEase::Docker::IDock::SetHighscoreReceivedCallback(System::Action_1<NetEase::Docker::ReceivedHighscoreData>* callbackAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::IDock::SetHighscoreReceivedCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetHighscoreReceivedCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callbackAction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callbackAction);
}
// Autogenerated method: NetEase.Docker.IDock.RequestHighscoreList
void NetEase::Docker::IDock::RequestHighscoreList(NetEase::Docker::RequestHighscoreData highscoreRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::IDock::RequestHighscoreList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RequestHighscoreList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(highscoreRequest)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, highscoreRequest);
}
// Autogenerated method: NetEase.Docker.IDock.UpdateLoop
void NetEase::Docker::IDock::UpdateLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::IDock::UpdateLoop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateLoop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetEase.Docker.VivaDocker
#include "NetEase/Docker/VivaDocker.hpp"
// Including type: NetEase.Docker.IDock
#include "NetEase/Docker/IDock.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NetEase.Docker.UploadScoreData
#include "NetEase/Docker/UploadScoreData.hpp"
// Including type: NetEase.Docker.RequestHighscoreData
#include "NetEase/Docker/RequestHighscoreData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private NetEase.Docker.IDock _activeDock
NetEase::Docker::IDock* NetEase::Docker::VivaDocker::_get__activeDock() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::VivaDocker::_get__activeDock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NetEase::Docker::IDock*>("NetEase.Docker", "VivaDocker", "_activeDock"));
}
// Autogenerated static field setter
// Set static field: static private NetEase.Docker.IDock _activeDock
void NetEase::Docker::VivaDocker::_set__activeDock(NetEase::Docker::IDock* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::VivaDocker::_set__activeDock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NetEase.Docker", "VivaDocker", "_activeDock", value));
}
// Autogenerated method: NetEase.Docker.VivaDocker.SetInitializeCallback
void NetEase::Docker::VivaDocker::SetInitializeCallback(System::Action_1<NetEase::Docker::InitializeData>* callbackAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::VivaDocker::SetInitializeCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("NetEase.Docker", "VivaDocker", "SetInitializeCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callbackAction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callbackAction);
}
// Autogenerated method: NetEase.Docker.VivaDocker.Initialize
void NetEase::Docker::VivaDocker::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::VivaDocker::Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("NetEase.Docker", "VivaDocker", "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NetEase.Docker.VivaDocker.SetLoginCallback
void NetEase::Docker::VivaDocker::SetLoginCallback(System::Action_1<NetEase::Docker::LoginData>* callbackAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::VivaDocker::SetLoginCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("NetEase.Docker", "VivaDocker", "SetLoginCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callbackAction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callbackAction);
}
// Autogenerated method: NetEase.Docker.VivaDocker.Login
void NetEase::Docker::VivaDocker::Login() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::VivaDocker::Login");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("NetEase.Docker", "VivaDocker", "Login", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NetEase.Docker.VivaDocker.SetLogoutCallback
void NetEase::Docker::VivaDocker::SetLogoutCallback(System::Action_1<NetEase::Docker::LogoutData>* callbackAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::VivaDocker::SetLogoutCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("NetEase.Docker", "VivaDocker", "SetLogoutCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callbackAction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callbackAction);
}
// Autogenerated method: NetEase.Docker.VivaDocker.Logout
void NetEase::Docker::VivaDocker::Logout() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::VivaDocker::Logout");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("NetEase.Docker", "VivaDocker", "Logout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NetEase.Docker.VivaDocker.UploadScore
void NetEase::Docker::VivaDocker::UploadScore(NetEase::Docker::UploadScoreData scoreData) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::VivaDocker::UploadScore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("NetEase.Docker", "VivaDocker", "UploadScore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scoreData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, scoreData);
}
// Autogenerated method: NetEase.Docker.VivaDocker.WillProvideHighscore
bool NetEase::Docker::VivaDocker::WillProvideHighscore() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::VivaDocker::WillProvideHighscore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("NetEase.Docker", "VivaDocker", "WillProvideHighscore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NetEase.Docker.VivaDocker.SetHighscoreReceivedCallback
void NetEase::Docker::VivaDocker::SetHighscoreReceivedCallback(System::Action_1<NetEase::Docker::ReceivedHighscoreData>* callbackAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::VivaDocker::SetHighscoreReceivedCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("NetEase.Docker", "VivaDocker", "SetHighscoreReceivedCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callbackAction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callbackAction);
}
// Autogenerated method: NetEase.Docker.VivaDocker.RequestHighscoreList
void NetEase::Docker::VivaDocker::RequestHighscoreList(NetEase::Docker::RequestHighscoreData highscoreRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::VivaDocker::RequestHighscoreList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("NetEase.Docker", "VivaDocker", "RequestHighscoreList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(highscoreRequest)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, highscoreRequest);
}
// Autogenerated method: NetEase.Docker.VivaDocker.UpdateLoop
void NetEase::Docker::VivaDocker::UpdateLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::VivaDocker::UpdateLoop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("NetEase.Docker", "VivaDocker", "UpdateLoop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NetEase.Docker.VivaDocker..cctor
void NetEase::Docker::VivaDocker::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("NetEase::Docker::VivaDocker::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("NetEase.Docker", "VivaDocker", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRUIControls.ButtonState
#include "VRUIControls/ButtonState.hpp"
// Including type: VRUIControls.MouseButtonEventData
#include "VRUIControls/MouseButtonEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRUIControls.ButtonState.get_eventData
VRUIControls::MouseButtonEventData* VRUIControls::ButtonState::get_eventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::ButtonState::get_eventData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_eventData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<VRUIControls::MouseButtonEventData*, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.ButtonState.set_eventData
void VRUIControls::ButtonState::set_eventData(VRUIControls::MouseButtonEventData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::ButtonState::set_eventData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_eventData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRUIControls.ButtonState.get_button
UnityEngine::EventSystems::PointerEventData::InputButton VRUIControls::ButtonState::get_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::ButtonState::get_button");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_button", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::PointerEventData::InputButton, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.ButtonState.set_button
void VRUIControls::ButtonState::set_button(UnityEngine::EventSystems::PointerEventData::InputButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::ButtonState::set_button");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_button", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRUIControls.ButtonState.get_pressedValue
float VRUIControls::ButtonState::get_pressedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::ButtonState::get_pressedValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_pressedValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.ButtonState.set_pressedValue
void VRUIControls::ButtonState::set_pressedValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::ButtonState::set_pressedValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_pressedValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRUIControls.MouseButtonEventData
#include "VRUIControls/MouseButtonEventData.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRUIControls.MouseButtonEventData.PressedThisFrame
bool VRUIControls::MouseButtonEventData::PressedThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::MouseButtonEventData::PressedThisFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PressedThisFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.MouseButtonEventData.ReleasedThisFrame
bool VRUIControls::MouseButtonEventData::ReleasedThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::MouseButtonEventData::ReleasedThisFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReleasedThisFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRUIControls.MouseState
#include "VRUIControls/MouseState.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VRUIControls.ButtonState
#include "VRUIControls/ButtonState.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData/InputButton
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData/FramePressState
#include "UnityEngine/EventSystems/PointerEventData_FramePressState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRUIControls.MouseState.AnyPressesThisFrame
bool VRUIControls::MouseState::AnyPressesThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::MouseState::AnyPressesThisFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AnyPressesThisFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.MouseState.AnyReleasesThisFrame
bool VRUIControls::MouseState::AnyReleasesThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::MouseState::AnyReleasesThisFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AnyReleasesThisFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.MouseState.GetButtonState
VRUIControls::ButtonState* VRUIControls::MouseState::GetButtonState(UnityEngine::EventSystems::PointerEventData::InputButton button) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::MouseState::GetButtonState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetButtonState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(button)));
  return ::il2cpp_utils::RunMethodThrow<VRUIControls::ButtonState*, false>(this, ___internal__method, button);
}
// Autogenerated method: VRUIControls.MouseState.SetButtonState
void VRUIControls::MouseState::SetButtonState(UnityEngine::EventSystems::PointerEventData::InputButton button, UnityEngine::EventSystems::PointerEventData::FramePressState stateForMouseButton, UnityEngine::EventSystems::PointerEventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::MouseState::SetButtonState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetButtonState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(button, stateForMouseButton, data)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, button, stateForMouseButton, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRUIControls.PhysicsRaycasterWithCache
#include "VRUIControls/PhysicsRaycasterWithCache.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRUIControls.PhysicsRaycasterWithCache.Raycast
bool VRUIControls::PhysicsRaycasterWithCache::Raycast(UnityEngine::Ray ray, UnityEngine::RaycastHit& hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::PhysicsRaycasterWithCache::Raycast");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ray, hitInfo, maxDistance, layerMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, ray, hitInfo, maxDistance, layerMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRUIControls.PhysicsRaycasterWithCache/CachedRaycast
#include "VRUIControls/PhysicsRaycasterWithCache.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRUIControls.VRGraphicRaycaster
#include "VRUIControls/VRGraphicRaycaster.hpp"
// Including type: HMUI.CurvedCanvasSettingsHelper
#include "HMUI/CurvedCanvasSettingsHelper.hpp"
// Including type: VRUIControls.VRGraphicRaycaster/<>c
#include "VRUIControls/VRGraphicRaycaster_--c.hpp"
// Including type: VRUIControls.PhysicsRaycasterWithCache
#include "VRUIControls/PhysicsRaycasterWithCache.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kPhysics3DRaycastDistance
float VRUIControls::VRGraphicRaycaster::_get_kPhysics3DRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRGraphicRaycaster::_get_kPhysics3DRaycastDistance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("VRUIControls", "VRGraphicRaycaster", "kPhysics3DRaycastDistance"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPhysics3DRaycastDistance
void VRUIControls::VRGraphicRaycaster::_set_kPhysics3DRaycastDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRGraphicRaycaster::_set_kPhysics3DRaycastDistance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VRUIControls", "VRGraphicRaycaster", "kPhysics3DRaycastDistance", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD0E928
// Autogenerated static field getter
// Get static field: static private readonly System.Single[] _ray2DCircleIntersectionDistances
::Array<float>* VRUIControls::VRGraphicRaycaster::_get__ray2DCircleIntersectionDistances() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRGraphicRaycaster::_get__ray2DCircleIntersectionDistances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<float>*>("VRUIControls", "VRGraphicRaycaster", "_ray2DCircleIntersectionDistances"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single[] _ray2DCircleIntersectionDistances
void VRUIControls::VRGraphicRaycaster::_set__ray2DCircleIntersectionDistances(::Array<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRGraphicRaycaster::_set__ray2DCircleIntersectionDistances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VRUIControls", "VRGraphicRaycaster", "_ray2DCircleIntersectionDistances", value));
}
// Autogenerated method: VRUIControls.VRGraphicRaycaster.RaycastCanvas
void VRUIControls::VRGraphicRaycaster::RaycastCanvas(UnityEngine::Canvas* canvas, UnityEngine::Ray ray, float hitDistance, float curvedUIRadius, System::Collections::Generic::List_1<VRUIControls::VRGraphicRaycaster::VRGraphicRaycastResult>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRGraphicRaycaster::RaycastCanvas");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("VRUIControls", "VRGraphicRaycaster", "RaycastCanvas", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(canvas, ray, hitDistance, curvedUIRadius, results)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, canvas, ray, hitDistance, curvedUIRadius, results);
}
// Autogenerated method: VRUIControls.VRGraphicRaycaster.get_eventCamera
UnityEngine::Camera* VRUIControls::VRGraphicRaycaster::get_eventCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRGraphicRaycaster::get_eventCamera");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_eventCamera", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.VRGraphicRaycaster.OnEnable
void VRUIControls::VRGraphicRaycaster::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRGraphicRaycaster::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.VRGraphicRaycaster.Raycast
void VRUIControls::VRGraphicRaycaster::Raycast(UnityEngine::EventSystems::PointerEventData* eventData, System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>* resultAppendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRGraphicRaycaster::Raycast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventData, resultAppendList)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData, resultAppendList);
}
// Autogenerated method: VRUIControls.VRGraphicRaycaster..cctor
void VRUIControls::VRGraphicRaycaster::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRGraphicRaycaster::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("VRUIControls", "VRGraphicRaycaster", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRUIControls.VRGraphicRaycaster/VRGraphicRaycastResult
#include "VRUIControls/VRGraphicRaycaster.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRUIControls.VRGraphicRaycaster/<>c
#include "VRUIControls/VRGraphicRaycaster_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VRUIControls.VRGraphicRaycaster/<>c <>9
VRUIControls::VRGraphicRaycaster::$$c* VRUIControls::VRGraphicRaycaster::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRGraphicRaycaster::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<VRUIControls::VRGraphicRaycaster::$$c*>("VRUIControls", "VRGraphicRaycaster/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly VRUIControls.VRGraphicRaycaster/<>c <>9
void VRUIControls::VRGraphicRaycaster::$$c::_set_$$9(VRUIControls::VRGraphicRaycaster::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRGraphicRaycaster::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("VRUIControls", "VRGraphicRaycaster/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<VRUIControls.VRGraphicRaycaster/VRGraphicRaycastResult> <>9__12_0
System::Comparison_1<VRUIControls::VRGraphicRaycaster::VRGraphicRaycastResult>* VRUIControls::VRGraphicRaycaster::$$c::_get_$$9__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRGraphicRaycaster::$$c::_get_$$9__12_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<VRUIControls::VRGraphicRaycaster::VRGraphicRaycastResult>*>("VRUIControls", "VRGraphicRaycaster/<>c", "<>9__12_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<VRUIControls.VRGraphicRaycaster/VRGraphicRaycastResult> <>9__12_0
void VRUIControls::VRGraphicRaycaster::$$c::_set_$$9__12_0(System::Comparison_1<VRUIControls::VRGraphicRaycaster::VRGraphicRaycastResult>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRGraphicRaycaster::$$c::_set_$$9__12_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("VRUIControls", "VRGraphicRaycaster/<>c", "<>9__12_0", value)));
}
// Autogenerated method: VRUIControls.VRGraphicRaycaster/<>c..cctor
void VRUIControls::VRGraphicRaycaster::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRGraphicRaycaster::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VRUIControls", "VRGraphicRaycaster/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: VRUIControls.VRGraphicRaycaster/<>c.<RaycastCanvas>b__12_0
int VRUIControls::VRGraphicRaycaster::$$c::$RaycastCanvas$b__12_0(VRUIControls::VRGraphicRaycaster::VRGraphicRaycastResult g1, VRUIControls::VRGraphicRaycaster::VRGraphicRaycastResult g2) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRGraphicRaycaster::$$c::<RaycastCanvas>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RaycastCanvas>b__12_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(g1, g2))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, g1, g2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRUIControls.VRInputModule
#include "VRUIControls/VRInputModule.hpp"
// Including type: VRUIControls.VRPointer
#include "VRUIControls/VRPointer.hpp"
// Including type: Libraries.HM.HMLib.VR.HapticPresetSO
#include "Libraries/HM/HMLib/VR/HapticPresetSO.hpp"
// Including type: HapticFeedbackController
#include "GlobalNamespace/HapticFeedbackController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: VRUIControls.MouseState
#include "VRUIControls/MouseState.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
// Including type: VRUIControls.MouseButtonEventData
#include "VRUIControls/MouseButtonEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMouseLeftId
int VRUIControls::VRInputModule::_get_kMouseLeftId() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::_get_kMouseLeftId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("VRUIControls", "VRInputModule", "kMouseLeftId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMouseLeftId
void VRUIControls::VRInputModule::_set_kMouseLeftId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::_set_kMouseLeftId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VRUIControls", "VRInputModule", "kMouseLeftId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kMinPressValue
float VRUIControls::VRInputModule::_get_kMinPressValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::_get_kMinPressValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("VRUIControls", "VRInputModule", "kMinPressValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMinPressValue
void VRUIControls::VRInputModule::_set_kMinPressValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::_set_kMinPressValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VRUIControls", "VRInputModule", "kMinPressValue", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD0E988
// Autogenerated static field getter
// Get static field: static private readonly System.Comparison`1<UnityEngine.EventSystems.RaycastResult> _raycastComparer
System::Comparison_1<UnityEngine::EventSystems::RaycastResult>* VRUIControls::VRInputModule::_get__raycastComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::_get__raycastComparer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Comparison_1<UnityEngine::EventSystems::RaycastResult>*>("VRUIControls", "VRInputModule", "_raycastComparer"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Comparison`1<UnityEngine.EventSystems.RaycastResult> _raycastComparer
void VRUIControls::VRInputModule::_set__raycastComparer(System::Comparison_1<UnityEngine::EventSystems::RaycastResult>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::_set__raycastComparer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VRUIControls", "VRInputModule", "_raycastComparer", value));
}
// Autogenerated method: VRUIControls.VRInputModule.get_useMouseForPressInput
bool VRUIControls::VRInputModule::get_useMouseForPressInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::get_useMouseForPressInput");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_useMouseForPressInput", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.VRInputModule.set_useMouseForPressInput
void VRUIControls::VRInputModule::set_useMouseForPressInput(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::set_useMouseForPressInput");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_useMouseForPressInput", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRUIControls.VRInputModule.add_onProcessMousePressEvent
void VRUIControls::VRInputModule::add_onProcessMousePressEvent(System::Action_1<UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::add_onProcessMousePressEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onProcessMousePressEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRUIControls.VRInputModule.remove_onProcessMousePressEvent
void VRUIControls::VRInputModule::remove_onProcessMousePressEvent(System::Action_1<UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::remove_onProcessMousePressEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onProcessMousePressEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRUIControls.VRInputModule.GetPointerData
bool VRUIControls::VRInputModule::GetPointerData(int id, UnityEngine::EventSystems::PointerEventData*& data, bool create) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::GetPointerData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPointerData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id, data, create)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, id, data, create);
}
// Autogenerated method: VRUIControls.VRInputModule.GetMousePointerEventData
VRUIControls::MouseState* VRUIControls::VRInputModule::GetMousePointerEventData(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::GetMousePointerEventData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMousePointerEventData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id)));
  return ::il2cpp_utils::RunMethodThrow<VRUIControls::MouseState*, false>(this, ___internal__method, id);
}
// Autogenerated method: VRUIControls.VRInputModule.GetLastPointerEventData
UnityEngine::EventSystems::PointerEventData* VRUIControls::VRInputModule::GetLastPointerEventData(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::GetLastPointerEventData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLastPointerEventData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::PointerEventData*, false>(this, ___internal__method, id);
}
// Autogenerated method: VRUIControls.VRInputModule.ShouldStartDrag
bool VRUIControls::VRInputModule::ShouldStartDrag(UnityEngine::Vector2 pressPos, UnityEngine::Vector2 currentPos, float threshold, bool useDragThreshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::ShouldStartDrag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ShouldStartDrag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pressPos, currentPos, threshold, useDragThreshold)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pressPos, currentPos, threshold, useDragThreshold);
}
// Autogenerated method: VRUIControls.VRInputModule.ProcessMove
void VRUIControls::VRInputModule::ProcessMove(UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::ProcessMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessMove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pointerEvent)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pointerEvent);
}
// Autogenerated method: VRUIControls.VRInputModule.ProcessDrag
void VRUIControls::VRInputModule::ProcessDrag(UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::ProcessDrag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessDrag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pointerEvent)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pointerEvent);
}
// Autogenerated method: VRUIControls.VRInputModule.ClearSelection
void VRUIControls::VRInputModule::ClearSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::ClearSelection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearSelection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.VRInputModule.DeselectIfSelectionChanged
void VRUIControls::VRInputModule::DeselectIfSelectionChanged(UnityEngine::GameObject* currentOverGo, UnityEngine::EventSystems::BaseEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::DeselectIfSelectionChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DeselectIfSelectionChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(currentOverGo, pointerEvent)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, currentOverGo, pointerEvent);
}
// Autogenerated method: VRUIControls.VRInputModule.SendUpdateEventToSelectedObject
bool VRUIControls::VRInputModule::SendUpdateEventToSelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::SendUpdateEventToSelectedObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendUpdateEventToSelectedObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.VRInputModule.ProcessMousePress
void VRUIControls::VRInputModule::ProcessMousePress(VRUIControls::MouseButtonEventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::ProcessMousePress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessMousePress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: VRUIControls.VRInputModule.RaycastComparer
int VRUIControls::VRInputModule::RaycastComparer(UnityEngine::EventSystems::RaycastResult lhs, UnityEngine::EventSystems::RaycastResult rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::RaycastComparer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("VRUIControls", "VRInputModule", "RaycastComparer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lhs, rhs)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: VRUIControls.VRInputModule.OnDisable
void VRUIControls::VRInputModule::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.VRInputModule.IsPointerOverGameObject
bool VRUIControls::VRInputModule::IsPointerOverGameObject(int pointerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::IsPointerOverGameObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsPointerOverGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pointerId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pointerId);
}
// Autogenerated method: VRUIControls.VRInputModule.ToString
::Il2CppString* VRUIControls::VRInputModule::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.VRInputModule.Process
void VRUIControls::VRInputModule::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.VRInputModule.HandlePointerExitAndEnter
void VRUIControls::VRInputModule::HandlePointerExitAndEnter(UnityEngine::EventSystems::PointerEventData* currentPointerData, UnityEngine::GameObject* newEnterTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::HandlePointerExitAndEnter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandlePointerExitAndEnter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(currentPointerData, newEnterTarget)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, currentPointerData, newEnterTarget);
}
// Autogenerated method: VRUIControls.VRInputModule..cctor
void VRUIControls::VRInputModule::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRInputModule::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("VRUIControls", "VRInputModule", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRUIControls.VRLaserPointer
#include "VRUIControls/VRLaserPointer.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD0E9A8
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _fadeStartNormalizedDistanceId
int VRUIControls::VRLaserPointer::_get__fadeStartNormalizedDistanceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRLaserPointer::_get__fadeStartNormalizedDistanceId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("VRUIControls", "VRLaserPointer", "_fadeStartNormalizedDistanceId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _fadeStartNormalizedDistanceId
void VRUIControls::VRLaserPointer::_set__fadeStartNormalizedDistanceId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRLaserPointer::_set__fadeStartNormalizedDistanceId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VRUIControls", "VRLaserPointer", "_fadeStartNormalizedDistanceId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD0E9B8
// Autogenerated static field getter
// Get static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
UnityEngine::MaterialPropertyBlock* VRUIControls::VRLaserPointer::_get__materialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRLaserPointer::_get__materialPropertyBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MaterialPropertyBlock*>("VRUIControls", "VRLaserPointer", "_materialPropertyBlock"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
void VRUIControls::VRLaserPointer::_set__materialPropertyBlock(UnityEngine::MaterialPropertyBlock* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRLaserPointer::_set__materialPropertyBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VRUIControls", "VRLaserPointer", "_materialPropertyBlock", value));
}
// Autogenerated method: VRUIControls.VRLaserPointer.SetLocalPosition
void VRUIControls::VRLaserPointer::SetLocalPosition(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRLaserPointer::SetLocalPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: VRUIControls.VRLaserPointer.SetLocalScale
void VRUIControls::VRLaserPointer::SetLocalScale(UnityEngine::Vector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRLaserPointer::SetLocalScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scale)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, scale);
}
// Autogenerated method: VRUIControls.VRLaserPointer.SetFadeDistance
void VRUIControls::VRLaserPointer::SetFadeDistance(float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRLaserPointer::SetFadeDistance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetFadeDistance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(distance)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, distance);
}
// Autogenerated method: VRUIControls.VRLaserPointer..cctor
void VRUIControls::VRLaserPointer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRLaserPointer::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("VRUIControls", "VRLaserPointer", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRUIControls.VRPointer
#include "VRUIControls/VRPointer.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
// Including type: VRUIControls.VRLaserPointer
#include "VRUIControls/VRLaserPointer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kScrollMultiplier
float VRUIControls::VRPointer::_get_kScrollMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::_get_kScrollMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("VRUIControls", "VRPointer", "kScrollMultiplier"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kScrollMultiplier
void VRUIControls::VRPointer::_set_kScrollMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::_set_kScrollMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VRUIControls", "VRPointer", "kScrollMultiplier", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _lastControllerUsedWasRight
bool VRUIControls::VRPointer::_get__lastControllerUsedWasRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::_get__lastControllerUsedWasRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("VRUIControls", "VRPointer", "_lastControllerUsedWasRight"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _lastControllerUsedWasRight
void VRUIControls::VRPointer::_set__lastControllerUsedWasRight(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::_set__lastControllerUsedWasRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VRUIControls", "VRPointer", "_lastControllerUsedWasRight", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _rightControllerWasReleased
bool VRUIControls::VRPointer::_get__rightControllerWasReleased() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::_get__rightControllerWasReleased");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("VRUIControls", "VRPointer", "_rightControllerWasReleased"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _rightControllerWasReleased
void VRUIControls::VRPointer::_set__rightControllerWasReleased(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::_set__rightControllerWasReleased");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VRUIControls", "VRPointer", "_rightControllerWasReleased", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _leftControllerWasReleased
bool VRUIControls::VRPointer::_get__leftControllerWasReleased() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::_get__leftControllerWasReleased");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("VRUIControls", "VRPointer", "_leftControllerWasReleased"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _leftControllerWasReleased
void VRUIControls::VRPointer::_set__leftControllerWasReleased(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::_set__leftControllerWasReleased");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VRUIControls", "VRPointer", "_leftControllerWasReleased", value));
}
// Autogenerated method: VRUIControls.VRPointer.get_vrController
GlobalNamespace::VRController* VRUIControls::VRPointer::get_vrController() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::get_vrController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_vrController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRController*, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.VRPointer.get_cursorPosition
UnityEngine::Vector3 VRUIControls::VRPointer::get_cursorPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::get_cursorPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_cursorPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.VRPointer.get_eventSystem
UnityEngine::EventSystems::EventSystem* VRUIControls::VRPointer::get_eventSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::get_eventSystem");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_eventSystem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::EventSystem*, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.VRPointer.Awake
void VRUIControls::VRPointer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.VRPointer.OnEnable
void VRUIControls::VRPointer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.VRPointer.OnDisable
void VRUIControls::VRPointer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.VRPointer.LateUpdate
void VRUIControls::VRPointer::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.VRPointer.CreateLaserPointerAndLaserHit
void VRUIControls::VRPointer::CreateLaserPointerAndLaserHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::CreateLaserPointerAndLaserHit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateLaserPointerAndLaserHit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.VRPointer.RefreshLaserPointerAndLaserHit
void VRUIControls::VRPointer::RefreshLaserPointerAndLaserHit(UnityEngine::EventSystems::PointerEventData* pointerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::RefreshLaserPointerAndLaserHit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshLaserPointerAndLaserHit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pointerData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pointerData);
}
// Autogenerated method: VRUIControls.VRPointer.OnApplicationFocus
void VRUIControls::VRPointer::OnApplicationFocus(bool hasFocus) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::OnApplicationFocus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnApplicationFocus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hasFocus)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hasFocus);
}
// Autogenerated method: VRUIControls.VRPointer.DestroyLaserAndHit
void VRUIControls::VRPointer::DestroyLaserAndHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::DestroyLaserAndHit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DestroyLaserAndHit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.VRPointer.get_state
::Il2CppString* VRUIControls::VRPointer::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::get_state");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.VRPointer.Process
void VRUIControls::VRPointer::Process(UnityEngine::EventSystems::PointerEventData* pointerEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::Process");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pointerEventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pointerEventData);
}
// Autogenerated method: VRUIControls.VRPointer..cctor
void VRUIControls::VRPointer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::VRPointer::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("VRUIControls", "VRPointer", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IGuiRenderable
#include "Zenject/IGuiRenderable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IGuiRenderable.GuiRender
void Zenject::IGuiRenderable::GuiRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IGuiRenderable::GuiRender");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GuiRender", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IInitializable
#include "Zenject/IInitializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IInitializable.Initialize
void Zenject::IInitializable::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IInitializable::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InjectableInfo
#include "Zenject/InjectableInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.PreserveAttribute
#include "Zenject/Internal/PreserveAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InjectAttributeBase
#include "Zenject/InjectAttributeBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.InjectAttributeBase.get_Optional
bool Zenject::InjectAttributeBase::get_Optional() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectAttributeBase::get_Optional");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Optional", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectAttributeBase.set_Optional
void Zenject::InjectAttributeBase::set_Optional(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectAttributeBase::set_Optional");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Optional", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectAttributeBase.get_Id
::Il2CppObject* Zenject::InjectAttributeBase::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectAttributeBase::get_Id");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectAttributeBase.set_Id
void Zenject::InjectAttributeBase::set_Id(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectAttributeBase::set_Id");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Id", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectAttributeBase.get_Source
Zenject::InjectSources Zenject::InjectAttributeBase::get_Source() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectAttributeBase::get_Source");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Source", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectSources, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectAttributeBase.set_Source
void Zenject::InjectAttributeBase::set_Source(Zenject::InjectSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectAttributeBase::set_Source");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Source", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.InjectAttribute
#include "Zenject/InjectAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.InjectLocalAttribute
#include "Zenject/InjectLocalAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.InjectOptionalAttribute
#include "Zenject/InjectOptionalAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.InjectSources
#include "Zenject/InjectSources.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.InjectSources Any
Zenject::InjectSources Zenject::InjectSources::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectSources::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::InjectSources>("Zenject", "InjectSources", "Any"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.InjectSources Any
void Zenject::InjectSources::_set_Any(Zenject::InjectSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectSources::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "InjectSources", "Any", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.InjectSources Local
Zenject::InjectSources Zenject::InjectSources::_get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectSources::_get_Local");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::InjectSources>("Zenject", "InjectSources", "Local"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.InjectSources Local
void Zenject::InjectSources::_set_Local(Zenject::InjectSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectSources::_set_Local");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "InjectSources", "Local", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.InjectSources Parent
Zenject::InjectSources Zenject::InjectSources::_get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectSources::_get_Parent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::InjectSources>("Zenject", "InjectSources", "Parent"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.InjectSources Parent
void Zenject::InjectSources::_set_Parent(Zenject::InjectSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectSources::_set_Parent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "InjectSources", "Parent", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.InjectSources AnyParent
Zenject::InjectSources Zenject::InjectSources::_get_AnyParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectSources::_get_AnyParent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::InjectSources>("Zenject", "InjectSources", "AnyParent"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.InjectSources AnyParent
void Zenject::InjectSources::_set_AnyParent(Zenject::InjectSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectSources::_set_AnyParent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "InjectSources", "AnyParent", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ZenInjectMethod
#include "Zenject/ZenInjectMethod.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ZenInjectMethod.Invoke
void Zenject::ZenInjectMethod::Invoke(::Il2CppObject* obj, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenInjectMethod::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, args)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, args);
}
// Autogenerated method: Zenject.ZenInjectMethod.BeginInvoke
System::IAsyncResult* Zenject::ZenInjectMethod::BeginInvoke(::Il2CppObject* obj, ::Array<::Il2CppObject*>* args, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenInjectMethod::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, args, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, obj, args, callback, object);
}
// Autogenerated method: Zenject.ZenInjectMethod.EndInvoke
void Zenject::ZenInjectMethod::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenInjectMethod::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ZenFactoryMethod
#include "Zenject/ZenFactoryMethod.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ZenFactoryMethod.Invoke
::Il2CppObject* Zenject::ZenFactoryMethod::Invoke(::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenFactoryMethod::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, args);
}
// Autogenerated method: Zenject.ZenFactoryMethod.BeginInvoke
System::IAsyncResult* Zenject::ZenFactoryMethod::BeginInvoke(::Array<::Il2CppObject*>* args, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenFactoryMethod::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, args, callback, object);
}
// Autogenerated method: Zenject.ZenFactoryMethod.EndInvoke
::Il2CppObject* Zenject::ZenFactoryMethod::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenFactoryMethod::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ZenMemberSetterMethod
#include "Zenject/ZenMemberSetterMethod.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ZenMemberSetterMethod.Invoke
void Zenject::ZenMemberSetterMethod::Invoke(::Il2CppObject* obj, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenMemberSetterMethod::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, value);
}
// Autogenerated method: Zenject.ZenMemberSetterMethod.BeginInvoke
System::IAsyncResult* Zenject::ZenMemberSetterMethod::BeginInvoke(::Il2CppObject* obj, ::Il2CppObject* value, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenMemberSetterMethod::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, value, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, obj, value, callback, object);
}
// Autogenerated method: Zenject.ZenMemberSetterMethod.EndInvoke
void Zenject::ZenMemberSetterMethod::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenMemberSetterMethod::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: Zenject.InjectTypeInfo/InjectMemberInfo
#include "Zenject/InjectTypeInfo_InjectMemberInfo.hpp"
// Including type: Zenject.InjectTypeInfo/InjectConstructorInfo
#include "Zenject/InjectTypeInfo_InjectConstructorInfo.hpp"
// Including type: Zenject.InjectTypeInfo/InjectMethodInfo
#include "Zenject/InjectTypeInfo_InjectMethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectableInfo
#include "Zenject/InjectableInfo.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xCDF614
// Autogenerated static field getter
// Get static field: static private System.Func`2<Zenject.InjectTypeInfo/InjectMemberInfo,Zenject.InjectableInfo> CS$<>9__CachedAnonymousMethodDelegate2
System::Func_2<Zenject::InjectTypeInfo::InjectMemberInfo*, Zenject::InjectableInfo*>* Zenject::InjectTypeInfo::_get_CS$$$9__CachedAnonymousMethodDelegate2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectTypeInfo::_get_CS$$$9__CachedAnonymousMethodDelegate2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::InjectTypeInfo::InjectMemberInfo*, Zenject::InjectableInfo*>*>("Zenject", "InjectTypeInfo", "CS$<>9__CachedAnonymousMethodDelegate2")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<Zenject.InjectTypeInfo/InjectMemberInfo,Zenject.InjectableInfo> CS$<>9__CachedAnonymousMethodDelegate2
void Zenject::InjectTypeInfo::_set_CS$$$9__CachedAnonymousMethodDelegate2(System::Func_2<Zenject::InjectTypeInfo::InjectMemberInfo*, Zenject::InjectableInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectTypeInfo::_set_CS$$$9__CachedAnonymousMethodDelegate2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "InjectTypeInfo", "CS$<>9__CachedAnonymousMethodDelegate2", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCDF624
// Autogenerated static field getter
// Get static field: static private System.Func`2<Zenject.InjectTypeInfo/InjectMethodInfo,System.Collections.Generic.IEnumerable`1<Zenject.InjectableInfo>> CS$<>9__CachedAnonymousMethodDelegate3
System::Func_2<Zenject::InjectTypeInfo::InjectMethodInfo*, System::Collections::Generic::IEnumerable_1<Zenject::InjectableInfo*>*>* Zenject::InjectTypeInfo::_get_CS$$$9__CachedAnonymousMethodDelegate3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectTypeInfo::_get_CS$$$9__CachedAnonymousMethodDelegate3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::InjectTypeInfo::InjectMethodInfo*, System::Collections::Generic::IEnumerable_1<Zenject::InjectableInfo*>*>*>("Zenject", "InjectTypeInfo", "CS$<>9__CachedAnonymousMethodDelegate3")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<Zenject.InjectTypeInfo/InjectMethodInfo,System.Collections.Generic.IEnumerable`1<Zenject.InjectableInfo>> CS$<>9__CachedAnonymousMethodDelegate3
void Zenject::InjectTypeInfo::_set_CS$$$9__CachedAnonymousMethodDelegate3(System::Func_2<Zenject::InjectTypeInfo::InjectMethodInfo*, System::Collections::Generic::IEnumerable_1<Zenject::InjectableInfo*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectTypeInfo::_set_CS$$$9__CachedAnonymousMethodDelegate3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "InjectTypeInfo", "CS$<>9__CachedAnonymousMethodDelegate3", value));
}
// Autogenerated method: Zenject.InjectTypeInfo.get_BaseTypeInfo
Zenject::InjectTypeInfo* Zenject::InjectTypeInfo::get_BaseTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectTypeInfo::get_BaseTypeInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_BaseTypeInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectTypeInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectTypeInfo.set_BaseTypeInfo
void Zenject::InjectTypeInfo::set_BaseTypeInfo(Zenject::InjectTypeInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectTypeInfo::set_BaseTypeInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_BaseTypeInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectTypeInfo.get_AllInjectables
System::Collections::Generic::IEnumerable_1<Zenject::InjectableInfo*>* Zenject::InjectTypeInfo::get_AllInjectables() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectTypeInfo::get_AllInjectables");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AllInjectables", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::InjectableInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectTypeInfo.<get_AllInjectables>b__0
Zenject::InjectableInfo* Zenject::InjectTypeInfo::$get_AllInjectables$b__0(Zenject::InjectTypeInfo::InjectMemberInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectTypeInfo::<get_AllInjectables>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "InjectTypeInfo", "<get_AllInjectables>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectableInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Zenject.InjectTypeInfo.<get_AllInjectables>b__1
System::Collections::Generic::IEnumerable_1<Zenject::InjectableInfo*>* Zenject::InjectTypeInfo::$get_AllInjectables$b__1(Zenject::InjectTypeInfo::InjectMethodInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectTypeInfo::<get_AllInjectables>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "InjectTypeInfo", "<get_AllInjectables>b__1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::InjectableInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.InjectTypeInfo/InjectMemberInfo
#include "Zenject/InjectTypeInfo_InjectMemberInfo.hpp"
// Including type: Zenject.ZenMemberSetterMethod
#include "Zenject/ZenMemberSetterMethod.hpp"
// Including type: Zenject.InjectableInfo
#include "Zenject/InjectableInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InjectTypeInfo/InjectConstructorInfo
#include "Zenject/InjectTypeInfo_InjectConstructorInfo.hpp"
// Including type: Zenject.ZenFactoryMethod
#include "Zenject/ZenFactoryMethod.hpp"
// Including type: Zenject.InjectableInfo
#include "Zenject/InjectableInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InjectTypeInfo/InjectMethodInfo
#include "Zenject/InjectTypeInfo_InjectMethodInfo.hpp"
// Including type: Zenject.ZenInjectMethod
#include "Zenject/ZenInjectMethod.hpp"
// Including type: Zenject.InjectableInfo
#include "Zenject/InjectableInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IPoolable
#include "Zenject/IPoolable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IPoolable.OnDespawned
void Zenject::IPoolable::OnDespawned() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IPoolable::OnDespawned");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDespawned", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IPoolable.OnSpawned
void Zenject::IPoolable::OnSpawned() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IPoolable::OnSpawned");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnSpawned", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ITickable
#include "Zenject/ITickable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ITickable.Tick
void Zenject::ITickable::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ITickable::Tick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Tick", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IFixedTickable
#include "Zenject/IFixedTickable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IFixedTickable.FixedTick
void Zenject::IFixedTickable::FixedTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IFixedTickable::FixedTick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedTick", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ILateTickable
#include "Zenject/ILateTickable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ILateTickable.LateTick
void Zenject::ILateTickable::LateTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ILateTickable::LateTick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateTick", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
