// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SphereCollider
#include "UnityEngine/SphereCollider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SphereCollider.get_radius
float UnityEngine::SphereCollider::get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SphereCollider::get_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SphereCollider::get_radius
// Il2CppName: get_radius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (SphereCollider::*)()>(&SphereCollider::get_radius)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SphereCollider*), "get_radius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Joint
#include "UnityEngine/Joint.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Joint.get_connectedBody
UnityEngine::Rigidbody* UnityEngine::Joint::get_connectedBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Joint::get_connectedBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Joint.set_connectedAnchor
void UnityEngine::Joint::set_connectedAnchor(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Joint::set_connectedAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectedAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.set_connectedAnchor_Injected
void UnityEngine::Joint::set_connectedAnchor_Injected(UnityEngine::Vector3& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Joint::set_connectedAnchor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectedAnchor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: Joint::get_connectedBody
// Il2CppName: get_connectedBody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rigidbody* (Joint::*)()>(&Joint::get_connectedBody)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Joint*), "get_connectedBody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Joint::set_connectedAnchor
// Il2CppName: set_connectedAnchor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Joint::*)(UnityEngine::Vector3)>(&Joint::set_connectedAnchor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Joint*), "set_connectedAnchor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Joint::set_connectedAnchor_Injected
// Il2CppName: set_connectedAnchor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Joint::*)(UnityEngine::Vector3&)>(&Joint::set_connectedAnchor_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Joint*), "set_connectedAnchor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpringJoint
#include "UnityEngine/SpringJoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SpringJoint.set_minDistance
void UnityEngine::SpringJoint::set_minDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SpringJoint::set_minDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_minDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SpringJoint.set_maxDistance
void UnityEngine::SpringJoint::set_maxDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SpringJoint::set_maxDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: SpringJoint::set_minDistance
// Il2CppName: set_minDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SpringJoint::*)(float)>(&SpringJoint::set_minDistance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpringJoint*), "set_minDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: SpringJoint::set_maxDistance
// Il2CppName: set_maxDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SpringJoint::*)(float)>(&SpringJoint::set_maxDistance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpringJoint*), "set_maxDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.PhysicsScene
#include "UnityEngine/PhysicsScene.hpp"
// Including type: UnityEngine.QueryTriggerInteraction
#include "UnityEngine/QueryTriggerInteraction.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.PhysicsScene.Equals
bool UnityEngine::PhysicsScene::Equals(UnityEngine::PhysicsScene other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.PhysicsScene.Raycast
bool UnityEngine::PhysicsScene::Raycast(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, origin, direction, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_RaycastTest
bool UnityEngine::PhysicsScene::Internal_RaycastTest(UnityEngine::PhysicsScene physicsScene, UnityEngine::Ray ray, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::Internal_RaycastTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_RaycastTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, ray, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Raycast
bool UnityEngine::PhysicsScene::Raycast(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction, UnityEngine::RaycastHit& hitInfo, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, origin, direction, hitInfo, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_Raycast
bool UnityEngine::PhysicsScene::Internal_Raycast(UnityEngine::PhysicsScene physicsScene, UnityEngine::Ray ray, float maxDistance, UnityEngine::RaycastHit& hit, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::Internal_Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hit), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, ray, maxDistance, hit, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Raycast
int UnityEngine::PhysicsScene::Raycast(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction, ::Array<UnityEngine::RaycastHit>* raycastHits, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, origin, direction, raycastHits, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_RaycastNonAlloc
int UnityEngine::PhysicsScene::Internal_RaycastNonAlloc(UnityEngine::PhysicsScene physicsScene, UnityEngine::Ray ray, ::Array<UnityEngine::RaycastHit>* raycastHits, float maxDistance, int mask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::Internal_RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, ray, raycastHits, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Query_CapsuleCast
bool UnityEngine::PhysicsScene::Query_CapsuleCast(UnityEngine::PhysicsScene physicsScene, UnityEngine::Vector3 point1, UnityEngine::Vector3 point2, float radius, UnityEngine::Vector3 direction, float maxDistance, UnityEngine::RaycastHit& hitInfo, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::Query_CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Query_CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, point1, point2, radius, direction, maxDistance, hitInfo, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_CapsuleCast
bool UnityEngine::PhysicsScene::Internal_CapsuleCast(UnityEngine::PhysicsScene physicsScene, UnityEngine::Vector3 point1, UnityEngine::Vector3 point2, float radius, UnityEngine::Vector3 direction, UnityEngine::RaycastHit& hitInfo, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::Internal_CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, point1, point2, radius, direction, hitInfo, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.CapsuleCast
bool UnityEngine::PhysicsScene::CapsuleCast(UnityEngine::Vector3 point1, UnityEngine::Vector3 point2, float radius, UnityEngine::Vector3 direction, UnityEngine::RaycastHit& hitInfo, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, point1, point2, radius, direction, hitInfo, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Query_SphereCast
bool UnityEngine::PhysicsScene::Query_SphereCast(UnityEngine::PhysicsScene physicsScene, UnityEngine::Vector3 origin, float radius, UnityEngine::Vector3 direction, float maxDistance, UnityEngine::RaycastHit& hitInfo, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::Query_SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Query_SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, maxDistance, hitInfo, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_SphereCast
bool UnityEngine::PhysicsScene::Internal_SphereCast(UnityEngine::PhysicsScene physicsScene, UnityEngine::Vector3 origin, float radius, UnityEngine::Vector3 direction, UnityEngine::RaycastHit& hitInfo, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::Internal_SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, hitInfo, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.SphereCast
bool UnityEngine::PhysicsScene::SphereCast(UnityEngine::Vector3 origin, float radius, UnityEngine::Vector3 direction, UnityEngine::RaycastHit& hitInfo, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, origin, radius, direction, hitInfo, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapBoxNonAlloc_Internal
int UnityEngine::PhysicsScene::OverlapBoxNonAlloc_Internal(UnityEngine::PhysicsScene physicsScene, UnityEngine::Vector3 center, UnityEngine::Vector3 halfExtents, ::Array<UnityEngine::Collider*>* results, UnityEngine::Quaternion orientation, int mask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::OverlapBoxNonAlloc_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "OverlapBoxNonAlloc_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, center, halfExtents, results, orientation, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapBox
int UnityEngine::PhysicsScene::OverlapBox(UnityEngine::Vector3 center, UnityEngine::Vector3 halfExtents, ::Array<UnityEngine::Collider*>* results, UnityEngine::Quaternion orientation, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::OverlapBox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OverlapBox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, center, halfExtents, results, orientation, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_RaycastTest_Injected
bool UnityEngine::PhysicsScene::Internal_RaycastTest_Injected(UnityEngine::PhysicsScene& physicsScene, UnityEngine::Ray& ray, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::Internal_RaycastTest_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_RaycastTest_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, ray, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_Raycast_Injected
bool UnityEngine::PhysicsScene::Internal_Raycast_Injected(UnityEngine::PhysicsScene& physicsScene, UnityEngine::Ray& ray, float maxDistance, UnityEngine::RaycastHit& hit, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::Internal_Raycast_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_Raycast_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hit), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, ray, maxDistance, hit, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_RaycastNonAlloc_Injected
int UnityEngine::PhysicsScene::Internal_RaycastNonAlloc_Injected(UnityEngine::PhysicsScene& physicsScene, UnityEngine::Ray& ray, ::Array<UnityEngine::RaycastHit>* raycastHits, float maxDistance, int mask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::Internal_RaycastNonAlloc_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_RaycastNonAlloc_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, ray, raycastHits, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Query_CapsuleCast_Injected
bool UnityEngine::PhysicsScene::Query_CapsuleCast_Injected(UnityEngine::PhysicsScene& physicsScene, UnityEngine::Vector3& point1, UnityEngine::Vector3& point2, float radius, UnityEngine::Vector3& direction, float maxDistance, UnityEngine::RaycastHit& hitInfo, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::Query_CapsuleCast_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Query_CapsuleCast_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, point1, point2, radius, direction, maxDistance, hitInfo, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Query_SphereCast_Injected
bool UnityEngine::PhysicsScene::Query_SphereCast_Injected(UnityEngine::PhysicsScene& physicsScene, UnityEngine::Vector3& origin, float radius, UnityEngine::Vector3& direction, float maxDistance, UnityEngine::RaycastHit& hitInfo, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::Query_SphereCast_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Query_SphereCast_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, maxDistance, hitInfo, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapBoxNonAlloc_Internal_Injected
int UnityEngine::PhysicsScene::OverlapBoxNonAlloc_Internal_Injected(UnityEngine::PhysicsScene& physicsScene, UnityEngine::Vector3& center, UnityEngine::Vector3& halfExtents, ::Array<UnityEngine::Collider*>* results, UnityEngine::Quaternion& orientation, int mask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::OverlapBoxNonAlloc_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "OverlapBoxNonAlloc_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, center, halfExtents, results, orientation, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.ToString
::Il2CppString* UnityEngine::PhysicsScene::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicsScene.GetHashCode
int UnityEngine::PhysicsScene::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicsScene.Equals
bool UnityEngine::PhysicsScene::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PhysicsScene::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Writing MetadataGetter for method: PhysicsScene::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PhysicsScene::*)(UnityEngine::PhysicsScene)>(&PhysicsScene::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PhysicsScene::*)(UnityEngine::Vector3, UnityEngine::Vector3, float, int, UnityEngine::QueryTriggerInteraction)>(&PhysicsScene::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::Internal_RaycastTest
// Il2CppName: Internal_RaycastTest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::PhysicsScene, UnityEngine::Ray, float, int, UnityEngine::QueryTriggerInteraction)>(&PhysicsScene::Internal_RaycastTest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "Internal_RaycastTest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PhysicsScene::*)(UnityEngine::Vector3, UnityEngine::Vector3, UnityEngine::RaycastHit&, float, int, UnityEngine::QueryTriggerInteraction)>(&PhysicsScene::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::Internal_Raycast
// Il2CppName: Internal_Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::PhysicsScene, UnityEngine::Ray, float, UnityEngine::RaycastHit&, int, UnityEngine::QueryTriggerInteraction)>(&PhysicsScene::Internal_Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "Internal_Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PhysicsScene::*)(UnityEngine::Vector3, UnityEngine::Vector3, ::Array<UnityEngine::RaycastHit>*, float, int, UnityEngine::QueryTriggerInteraction)>(&PhysicsScene::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::RaycastHit>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::Internal_RaycastNonAlloc
// Il2CppName: Internal_RaycastNonAlloc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::PhysicsScene, UnityEngine::Ray, ::Array<UnityEngine::RaycastHit>*, float, int, UnityEngine::QueryTriggerInteraction)>(&PhysicsScene::Internal_RaycastNonAlloc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "Internal_RaycastNonAlloc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::RaycastHit>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::Query_CapsuleCast
// Il2CppName: Query_CapsuleCast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::PhysicsScene, UnityEngine::Vector3, UnityEngine::Vector3, float, UnityEngine::Vector3, float, UnityEngine::RaycastHit&, int, UnityEngine::QueryTriggerInteraction)>(&PhysicsScene::Query_CapsuleCast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "Query_CapsuleCast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::Internal_CapsuleCast
// Il2CppName: Internal_CapsuleCast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::PhysicsScene, UnityEngine::Vector3, UnityEngine::Vector3, float, UnityEngine::Vector3, UnityEngine::RaycastHit&, float, int, UnityEngine::QueryTriggerInteraction)>(&PhysicsScene::Internal_CapsuleCast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "Internal_CapsuleCast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::CapsuleCast
// Il2CppName: CapsuleCast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PhysicsScene::*)(UnityEngine::Vector3, UnityEngine::Vector3, float, UnityEngine::Vector3, UnityEngine::RaycastHit&, float, int, UnityEngine::QueryTriggerInteraction)>(&PhysicsScene::CapsuleCast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "CapsuleCast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::Query_SphereCast
// Il2CppName: Query_SphereCast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::PhysicsScene, UnityEngine::Vector3, float, UnityEngine::Vector3, float, UnityEngine::RaycastHit&, int, UnityEngine::QueryTriggerInteraction)>(&PhysicsScene::Query_SphereCast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "Query_SphereCast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::Internal_SphereCast
// Il2CppName: Internal_SphereCast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::PhysicsScene, UnityEngine::Vector3, float, UnityEngine::Vector3, UnityEngine::RaycastHit&, float, int, UnityEngine::QueryTriggerInteraction)>(&PhysicsScene::Internal_SphereCast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "Internal_SphereCast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::SphereCast
// Il2CppName: SphereCast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PhysicsScene::*)(UnityEngine::Vector3, float, UnityEngine::Vector3, UnityEngine::RaycastHit&, float, int, UnityEngine::QueryTriggerInteraction)>(&PhysicsScene::SphereCast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "SphereCast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::OverlapBoxNonAlloc_Internal
// Il2CppName: OverlapBoxNonAlloc_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::PhysicsScene, UnityEngine::Vector3, UnityEngine::Vector3, ::Array<UnityEngine::Collider*>*, UnityEngine::Quaternion, int, UnityEngine::QueryTriggerInteraction)>(&PhysicsScene::OverlapBoxNonAlloc_Internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "OverlapBoxNonAlloc_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Collider*>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::OverlapBox
// Il2CppName: OverlapBox
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PhysicsScene::*)(UnityEngine::Vector3, UnityEngine::Vector3, ::Array<UnityEngine::Collider*>*, UnityEngine::Quaternion, int, UnityEngine::QueryTriggerInteraction)>(&PhysicsScene::OverlapBox)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "OverlapBox", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Collider*>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::Internal_RaycastTest_Injected
// Il2CppName: Internal_RaycastTest_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::PhysicsScene&, UnityEngine::Ray&, float, int, UnityEngine::QueryTriggerInteraction)>(&PhysicsScene::Internal_RaycastTest_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "Internal_RaycastTest_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::Internal_Raycast_Injected
// Il2CppName: Internal_Raycast_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::PhysicsScene&, UnityEngine::Ray&, float, UnityEngine::RaycastHit&, int, UnityEngine::QueryTriggerInteraction)>(&PhysicsScene::Internal_Raycast_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "Internal_Raycast_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::Internal_RaycastNonAlloc_Injected
// Il2CppName: Internal_RaycastNonAlloc_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::PhysicsScene&, UnityEngine::Ray&, ::Array<UnityEngine::RaycastHit>*, float, int, UnityEngine::QueryTriggerInteraction)>(&PhysicsScene::Internal_RaycastNonAlloc_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "Internal_RaycastNonAlloc_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray&>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::RaycastHit>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::Query_CapsuleCast_Injected
// Il2CppName: Query_CapsuleCast_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::PhysicsScene&, UnityEngine::Vector3&, UnityEngine::Vector3&, float, UnityEngine::Vector3&, float, UnityEngine::RaycastHit&, int, UnityEngine::QueryTriggerInteraction)>(&PhysicsScene::Query_CapsuleCast_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "Query_CapsuleCast_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::Query_SphereCast_Injected
// Il2CppName: Query_SphereCast_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::PhysicsScene&, UnityEngine::Vector3&, float, UnityEngine::Vector3&, float, UnityEngine::RaycastHit&, int, UnityEngine::QueryTriggerInteraction)>(&PhysicsScene::Query_SphereCast_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "Query_SphereCast_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::OverlapBoxNonAlloc_Internal_Injected
// Il2CppName: OverlapBoxNonAlloc_Internal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::PhysicsScene&, UnityEngine::Vector3&, UnityEngine::Vector3&, ::Array<UnityEngine::Collider*>*, UnityEngine::Quaternion&, int, UnityEngine::QueryTriggerInteraction)>(&PhysicsScene::OverlapBoxNonAlloc_Internal_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "OverlapBoxNonAlloc_Internal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Collider*>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: PhysicsScene::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PhysicsScene::*)()>(&PhysicsScene::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PhysicsScene::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PhysicsScene::*)()>(&PhysicsScene::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PhysicsScene::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PhysicsScene::*)(::Il2CppObject*)>(&PhysicsScene::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsScene), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Physics
#include "UnityEngine/Physics.hpp"
// Including type: UnityEngine.PhysicsScene
#include "UnityEngine/PhysicsScene.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.QueryTriggerInteraction
#include "UnityEngine/QueryTriggerInteraction.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Physics.get_gravity
UnityEngine::Vector3 UnityEngine::Physics::get_gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::get_gravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_gravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics.get_defaultPhysicsScene
UnityEngine::PhysicsScene UnityEngine::Physics::get_defaultPhysicsScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::get_defaultPhysicsScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_defaultPhysicsScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::PhysicsScene, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics.IgnoreCollision
void UnityEngine::Physics::IgnoreCollision(UnityEngine::Collider* collider1, UnityEngine::Collider* collider2, bool ignore) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::IgnoreCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "IgnoreCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider1), ::il2cpp_utils::ExtractType(collider2), ::il2cpp_utils::ExtractType(ignore)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, collider1, collider2, ignore);
}
// Autogenerated method: UnityEngine.Physics.IgnoreCollision
void UnityEngine::Physics::IgnoreCollision(UnityEngine::Collider* collider1, UnityEngine::Collider* collider2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::IgnoreCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "IgnoreCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider1), ::il2cpp_utils::ExtractType(collider2)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, collider1, collider2);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, origin, direction, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, origin, direction, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, origin, direction, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, origin, direction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction, UnityEngine::RaycastHit& hitInfo, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, origin, direction, hitInfo, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction, UnityEngine::RaycastHit& hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, origin, direction, hitInfo, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction, UnityEngine::RaycastHit& hitInfo, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, origin, direction, hitInfo, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction, UnityEngine::RaycastHit& hitInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, origin, direction, hitInfo);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(UnityEngine::Ray ray, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ray, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(UnityEngine::Ray ray, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ray, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(UnityEngine::Ray ray, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ray, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(UnityEngine::Ray ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ray);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(UnityEngine::Ray ray, UnityEngine::RaycastHit& hitInfo, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ray, hitInfo, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(UnityEngine::Ray ray, UnityEngine::RaycastHit& hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ray, hitInfo, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(UnityEngine::Ray ray, UnityEngine::RaycastHit& hitInfo, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ray, hitInfo, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(UnityEngine::Ray ray, UnityEngine::RaycastHit& hitInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ray, hitInfo);
}
// Autogenerated method: UnityEngine.Physics.CapsuleCast
bool UnityEngine::Physics::CapsuleCast(UnityEngine::Vector3 point1, UnityEngine::Vector3 point2, float radius, UnityEngine::Vector3 direction, UnityEngine::RaycastHit& hitInfo, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, point1, point2, radius, direction, hitInfo, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CapsuleCast
bool UnityEngine::Physics::CapsuleCast(UnityEngine::Vector3 point1, UnityEngine::Vector3 point2, float radius, UnityEngine::Vector3 direction, UnityEngine::RaycastHit& hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, point1, point2, radius, direction, hitInfo, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.SphereCast
bool UnityEngine::Physics::SphereCast(UnityEngine::Vector3 origin, float radius, UnityEngine::Vector3 direction, UnityEngine::RaycastHit& hitInfo, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, origin, radius, direction, hitInfo, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCast
bool UnityEngine::Physics::SphereCast(UnityEngine::Vector3 origin, float radius, UnityEngine::Vector3 direction, UnityEngine::RaycastHit& hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, origin, radius, direction, hitInfo, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Internal_RaycastAll
::Array<UnityEngine::RaycastHit>* UnityEngine::Physics::Internal_RaycastAll(UnityEngine::PhysicsScene physicsScene, UnityEngine::Ray ray, float maxDistance, int mask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::Internal_RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Internal_RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::RaycastHit>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, ray, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::Array<UnityEngine::RaycastHit>* UnityEngine::Physics::RaycastAll(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::RaycastHit>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, origin, direction, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::Array<UnityEngine::RaycastHit>* UnityEngine::Physics::RaycastAll(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::RaycastHit>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, origin, direction, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::Array<UnityEngine::RaycastHit>* UnityEngine::Physics::RaycastAll(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::RaycastHit>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, origin, direction, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::Array<UnityEngine::RaycastHit>* UnityEngine::Physics::RaycastAll(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::RaycastHit>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, origin, direction);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::Array<UnityEngine::RaycastHit>* UnityEngine::Physics::RaycastAll(UnityEngine::Ray ray, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::RaycastHit>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ray, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::Array<UnityEngine::RaycastHit>* UnityEngine::Physics::RaycastAll(UnityEngine::Ray ray, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::RaycastHit>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ray, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::Array<UnityEngine::RaycastHit>* UnityEngine::Physics::RaycastAll(UnityEngine::Ray ray, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::RaycastHit>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ray, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::Array<UnityEngine::RaycastHit>* UnityEngine::Physics::RaycastAll(UnityEngine::Ray ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::RaycastHit>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ray);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(UnityEngine::Ray ray, ::Array<UnityEngine::RaycastHit>* results, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ray, results, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(UnityEngine::Ray ray, ::Array<UnityEngine::RaycastHit>* results, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ray, results, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(UnityEngine::Ray ray, ::Array<UnityEngine::RaycastHit>* results, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ray, results, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(UnityEngine::Ray ray, ::Array<UnityEngine::RaycastHit>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ray, results);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction, ::Array<UnityEngine::RaycastHit>* results, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, origin, direction, results, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction, ::Array<UnityEngine::RaycastHit>* results, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, origin, direction, results, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction, ::Array<UnityEngine::RaycastHit>* results, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, origin, direction, results, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction, ::Array<UnityEngine::RaycastHit>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, origin, direction, results);
}
// Autogenerated method: UnityEngine.Physics.Query_SphereCastAll
::Array<UnityEngine::RaycastHit>* UnityEngine::Physics::Query_SphereCastAll(UnityEngine::PhysicsScene physicsScene, UnityEngine::Vector3 origin, float radius, UnityEngine::Vector3 direction, float maxDistance, int mask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::Query_SphereCastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Query_SphereCastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::RaycastHit>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCastAll
::Array<UnityEngine::RaycastHit>* UnityEngine::Physics::SphereCastAll(UnityEngine::Vector3 origin, float radius, UnityEngine::Vector3 direction, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::SphereCastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::RaycastHit>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, origin, radius, direction, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCastAll
::Array<UnityEngine::RaycastHit>* UnityEngine::Physics::SphereCastAll(UnityEngine::Ray ray, float radius, float maxDistance, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::SphereCastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::RaycastHit>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ray, radius, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCastAll
::Array<UnityEngine::RaycastHit>* UnityEngine::Physics::SphereCastAll(UnityEngine::Ray ray, float radius, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::SphereCastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::RaycastHit>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ray, radius, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.CheckSphere_Internal
bool UnityEngine::Physics::CheckSphere_Internal(UnityEngine::PhysicsScene physicsScene, UnityEngine::Vector3 position, float radius, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::CheckSphere_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckSphere_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, position, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckSphere
bool UnityEngine::Physics::CheckSphere(UnityEngine::Vector3 position, float radius, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::CheckSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, position, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckSphere
bool UnityEngine::Physics::CheckSphere(UnityEngine::Vector3 position, float radius, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::CheckSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, position, radius, layerMask);
}
// Autogenerated method: UnityEngine.Physics.CheckCapsule_Internal
bool UnityEngine::Physics::CheckCapsule_Internal(UnityEngine::PhysicsScene physicsScene, UnityEngine::Vector3 start, UnityEngine::Vector3 end, float radius, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::CheckCapsule_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckCapsule_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, start, end, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckCapsule
bool UnityEngine::Physics::CheckCapsule(UnityEngine::Vector3 start, UnityEngine::Vector3 end, float radius, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::CheckCapsule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckCapsule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, start, end, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckCapsule
bool UnityEngine::Physics::CheckCapsule(UnityEngine::Vector3 start, UnityEngine::Vector3 end, float radius, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::CheckCapsule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckCapsule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, start, end, radius, layerMask);
}
// Autogenerated method: UnityEngine.Physics.OverlapBoxNonAlloc
int UnityEngine::Physics::OverlapBoxNonAlloc(UnityEngine::Vector3 center, UnityEngine::Vector3 halfExtents, ::Array<UnityEngine::Collider*>* results, UnityEngine::Quaternion orientation, int mask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::OverlapBoxNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapBoxNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, center, halfExtents, results, orientation, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapBoxNonAlloc
int UnityEngine::Physics::OverlapBoxNonAlloc(UnityEngine::Vector3 center, UnityEngine::Vector3 halfExtents, ::Array<UnityEngine::Collider*>* results, UnityEngine::Quaternion orientation, int mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::OverlapBoxNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapBoxNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(mask)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, center, halfExtents, results, orientation, mask);
}
// Autogenerated method: UnityEngine.Physics.get_gravity_Injected
void UnityEngine::Physics::get_gravity_Injected(UnityEngine::Vector3& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::get_gravity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_gravity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Physics.get_defaultPhysicsScene_Injected
void UnityEngine::Physics::get_defaultPhysicsScene_Injected(UnityEngine::PhysicsScene& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::get_defaultPhysicsScene_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_defaultPhysicsScene_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Physics.Internal_RaycastAll_Injected
::Array<UnityEngine::RaycastHit>* UnityEngine::Physics::Internal_RaycastAll_Injected(UnityEngine::PhysicsScene& physicsScene, UnityEngine::Ray& ray, float maxDistance, int mask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::Internal_RaycastAll_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Internal_RaycastAll_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::RaycastHit>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, ray, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Query_SphereCastAll_Injected
::Array<UnityEngine::RaycastHit>* UnityEngine::Physics::Query_SphereCastAll_Injected(UnityEngine::PhysicsScene& physicsScene, UnityEngine::Vector3& origin, float radius, UnityEngine::Vector3& direction, float maxDistance, int mask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::Query_SphereCastAll_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Query_SphereCastAll_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::RaycastHit>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckSphere_Internal_Injected
bool UnityEngine::Physics::CheckSphere_Internal_Injected(UnityEngine::PhysicsScene& physicsScene, UnityEngine::Vector3& position, float radius, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::CheckSphere_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckSphere_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, position, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckCapsule_Internal_Injected
bool UnityEngine::Physics::CheckCapsule_Internal_Injected(UnityEngine::PhysicsScene& physicsScene, UnityEngine::Vector3& start, UnityEngine::Vector3& end, float radius, int layerMask, UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Physics::CheckCapsule_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckCapsule_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, physicsScene, start, end, radius, layerMask, queryTriggerInteraction);
}
// Writing MetadataGetter for method: Physics::get_gravity
// Il2CppName: get_gravity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (*)()>(&Physics::get_gravity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "get_gravity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Physics::get_defaultPhysicsScene
// Il2CppName: get_defaultPhysicsScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::PhysicsScene (*)()>(&Physics::get_defaultPhysicsScene)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "get_defaultPhysicsScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Physics::IgnoreCollision
// Il2CppName: IgnoreCollision
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Collider*, UnityEngine::Collider*, bool)>(&Physics::IgnoreCollision)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "IgnoreCollision", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Collider*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Collider*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Physics::IgnoreCollision
// Il2CppName: IgnoreCollision
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Collider*, UnityEngine::Collider*)>(&Physics::IgnoreCollision)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "IgnoreCollision", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Collider*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Collider*>()});
  }
};
// Writing MetadataGetter for method: Physics::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Vector3, UnityEngine::Vector3, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Vector3, UnityEngine::Vector3, float, int)>(&Physics::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Physics::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Vector3, UnityEngine::Vector3, float)>(&Physics::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Physics::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Vector3, UnityEngine::Vector3)>(&Physics::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Physics::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Vector3, UnityEngine::Vector3, UnityEngine::RaycastHit&, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Vector3, UnityEngine::Vector3, UnityEngine::RaycastHit&, float, int)>(&Physics::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Physics::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Vector3, UnityEngine::Vector3, UnityEngine::RaycastHit&, float)>(&Physics::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Physics::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Vector3, UnityEngine::Vector3, UnityEngine::RaycastHit&)>(&Physics::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>()});
  }
};
// Writing MetadataGetter for method: Physics::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Ray, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Ray, float, int)>(&Physics::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Physics::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Ray, float)>(&Physics::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Physics::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Ray)>(&Physics::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>()});
  }
};
// Writing MetadataGetter for method: Physics::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Ray, UnityEngine::RaycastHit&, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Ray, UnityEngine::RaycastHit&, float, int)>(&Physics::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Physics::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Ray, UnityEngine::RaycastHit&, float)>(&Physics::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Physics::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Ray, UnityEngine::RaycastHit&)>(&Physics::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>()});
  }
};
// Writing MetadataGetter for method: Physics::CapsuleCast
// Il2CppName: CapsuleCast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Vector3, UnityEngine::Vector3, float, UnityEngine::Vector3, UnityEngine::RaycastHit&, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::CapsuleCast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "CapsuleCast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::CapsuleCast
// Il2CppName: CapsuleCast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Vector3, UnityEngine::Vector3, float, UnityEngine::Vector3, UnityEngine::RaycastHit&, float, int)>(&Physics::CapsuleCast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "CapsuleCast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Physics::SphereCast
// Il2CppName: SphereCast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Vector3, float, UnityEngine::Vector3, UnityEngine::RaycastHit&, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::SphereCast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "SphereCast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::SphereCast
// Il2CppName: SphereCast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Vector3, float, UnityEngine::Vector3, UnityEngine::RaycastHit&, float, int)>(&Physics::SphereCast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "SphereCast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Physics::Internal_RaycastAll
// Il2CppName: Internal_RaycastAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::RaycastHit>* (*)(UnityEngine::PhysicsScene, UnityEngine::Ray, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::Internal_RaycastAll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "Internal_RaycastAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::RaycastAll
// Il2CppName: RaycastAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::RaycastHit>* (*)(UnityEngine::Vector3, UnityEngine::Vector3, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::RaycastAll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "RaycastAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::RaycastAll
// Il2CppName: RaycastAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::RaycastHit>* (*)(UnityEngine::Vector3, UnityEngine::Vector3, float, int)>(&Physics::RaycastAll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "RaycastAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Physics::RaycastAll
// Il2CppName: RaycastAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::RaycastHit>* (*)(UnityEngine::Vector3, UnityEngine::Vector3, float)>(&Physics::RaycastAll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "RaycastAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Physics::RaycastAll
// Il2CppName: RaycastAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::RaycastHit>* (*)(UnityEngine::Vector3, UnityEngine::Vector3)>(&Physics::RaycastAll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "RaycastAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Physics::RaycastAll
// Il2CppName: RaycastAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::RaycastHit>* (*)(UnityEngine::Ray, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::RaycastAll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "RaycastAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::RaycastAll
// Il2CppName: RaycastAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::RaycastHit>* (*)(UnityEngine::Ray, float, int)>(&Physics::RaycastAll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "RaycastAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Physics::RaycastAll
// Il2CppName: RaycastAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::RaycastHit>* (*)(UnityEngine::Ray, float)>(&Physics::RaycastAll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "RaycastAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Physics::RaycastAll
// Il2CppName: RaycastAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::RaycastHit>* (*)(UnityEngine::Ray)>(&Physics::RaycastAll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "RaycastAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>()});
  }
};
// Writing MetadataGetter for method: Physics::RaycastNonAlloc
// Il2CppName: RaycastNonAlloc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::Ray, ::Array<UnityEngine::RaycastHit>*, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::RaycastNonAlloc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "RaycastNonAlloc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::RaycastHit>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::RaycastNonAlloc
// Il2CppName: RaycastNonAlloc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::Ray, ::Array<UnityEngine::RaycastHit>*, float, int)>(&Physics::RaycastNonAlloc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "RaycastNonAlloc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::RaycastHit>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Physics::RaycastNonAlloc
// Il2CppName: RaycastNonAlloc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::Ray, ::Array<UnityEngine::RaycastHit>*, float)>(&Physics::RaycastNonAlloc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "RaycastNonAlloc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::RaycastHit>*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Physics::RaycastNonAlloc
// Il2CppName: RaycastNonAlloc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::Ray, ::Array<UnityEngine::RaycastHit>*)>(&Physics::RaycastNonAlloc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "RaycastNonAlloc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::RaycastHit>*>()});
  }
};
// Writing MetadataGetter for method: Physics::RaycastNonAlloc
// Il2CppName: RaycastNonAlloc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::Vector3, UnityEngine::Vector3, ::Array<UnityEngine::RaycastHit>*, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::RaycastNonAlloc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "RaycastNonAlloc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::RaycastHit>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::RaycastNonAlloc
// Il2CppName: RaycastNonAlloc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::Vector3, UnityEngine::Vector3, ::Array<UnityEngine::RaycastHit>*, float, int)>(&Physics::RaycastNonAlloc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "RaycastNonAlloc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::RaycastHit>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Physics::RaycastNonAlloc
// Il2CppName: RaycastNonAlloc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::Vector3, UnityEngine::Vector3, ::Array<UnityEngine::RaycastHit>*, float)>(&Physics::RaycastNonAlloc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "RaycastNonAlloc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::RaycastHit>*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Physics::RaycastNonAlloc
// Il2CppName: RaycastNonAlloc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::Vector3, UnityEngine::Vector3, ::Array<UnityEngine::RaycastHit>*)>(&Physics::RaycastNonAlloc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "RaycastNonAlloc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::RaycastHit>*>()});
  }
};
// Writing MetadataGetter for method: Physics::Query_SphereCastAll
// Il2CppName: Query_SphereCastAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::RaycastHit>* (*)(UnityEngine::PhysicsScene, UnityEngine::Vector3, float, UnityEngine::Vector3, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::Query_SphereCastAll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "Query_SphereCastAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::SphereCastAll
// Il2CppName: SphereCastAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::RaycastHit>* (*)(UnityEngine::Vector3, float, UnityEngine::Vector3, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::SphereCastAll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "SphereCastAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::SphereCastAll
// Il2CppName: SphereCastAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::RaycastHit>* (*)(UnityEngine::Ray, float, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::SphereCastAll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "SphereCastAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::SphereCastAll
// Il2CppName: SphereCastAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::RaycastHit>* (*)(UnityEngine::Ray, float, float, int)>(&Physics::SphereCastAll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "SphereCastAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Physics::CheckSphere_Internal
// Il2CppName: CheckSphere_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::PhysicsScene, UnityEngine::Vector3, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::CheckSphere_Internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "CheckSphere_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::CheckSphere
// Il2CppName: CheckSphere
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Vector3, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::CheckSphere)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "CheckSphere", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::CheckSphere
// Il2CppName: CheckSphere
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Vector3, float, int)>(&Physics::CheckSphere)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "CheckSphere", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Physics::CheckCapsule_Internal
// Il2CppName: CheckCapsule_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::PhysicsScene, UnityEngine::Vector3, UnityEngine::Vector3, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::CheckCapsule_Internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "CheckCapsule_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::CheckCapsule
// Il2CppName: CheckCapsule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Vector3, UnityEngine::Vector3, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::CheckCapsule)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "CheckCapsule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::CheckCapsule
// Il2CppName: CheckCapsule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Vector3, UnityEngine::Vector3, float, int)>(&Physics::CheckCapsule)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "CheckCapsule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Physics::OverlapBoxNonAlloc
// Il2CppName: OverlapBoxNonAlloc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::Vector3, UnityEngine::Vector3, ::Array<UnityEngine::Collider*>*, UnityEngine::Quaternion, int, UnityEngine::QueryTriggerInteraction)>(&Physics::OverlapBoxNonAlloc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "OverlapBoxNonAlloc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Collider*>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::OverlapBoxNonAlloc
// Il2CppName: OverlapBoxNonAlloc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::Vector3, UnityEngine::Vector3, ::Array<UnityEngine::Collider*>*, UnityEngine::Quaternion, int)>(&Physics::OverlapBoxNonAlloc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "OverlapBoxNonAlloc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Collider*>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Physics::get_gravity_Injected
// Il2CppName: get_gravity_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Vector3&)>(&Physics::get_gravity_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "get_gravity_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Physics::get_defaultPhysicsScene_Injected
// Il2CppName: get_defaultPhysicsScene_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::PhysicsScene&)>(&Physics::get_defaultPhysicsScene_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "get_defaultPhysicsScene_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene&>()});
  }
};
// Writing MetadataGetter for method: Physics::Internal_RaycastAll_Injected
// Il2CppName: Internal_RaycastAll_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::RaycastHit>* (*)(UnityEngine::PhysicsScene&, UnityEngine::Ray&, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::Internal_RaycastAll_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "Internal_RaycastAll_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::Query_SphereCastAll_Injected
// Il2CppName: Query_SphereCastAll_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::RaycastHit>* (*)(UnityEngine::PhysicsScene&, UnityEngine::Vector3&, float, UnityEngine::Vector3&, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::Query_SphereCastAll_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "Query_SphereCastAll_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::CheckSphere_Internal_Injected
// Il2CppName: CheckSphere_Internal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::PhysicsScene&, UnityEngine::Vector3&, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::CheckSphere_Internal_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "CheckSphere_Internal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Writing MetadataGetter for method: Physics::CheckCapsule_Internal_Injected
// Il2CppName: CheckCapsule_Internal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::PhysicsScene&, UnityEngine::Vector3&, UnityEngine::Vector3&, float, int, UnityEngine::QueryTriggerInteraction)>(&Physics::CheckCapsule_Internal_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics*), "CheckCapsule_Internal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PhysicsScene&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::QueryTriggerInteraction>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AssetFileNameExtensionAttribute
#include "UnityEngine/AssetFileNameExtensionAttribute.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AssetFileNameExtensionAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssetFileNameExtensionAttribute::*)(::Il2CppString*, ::Array<::Il2CppString*>*)>(&AssetFileNameExtensionAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFileNameExtensionAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssetFileNameExtensionAttribute::*)(::Il2CppString*, ::Array<::Il2CppString*>*)>(&AssetFileNameExtensionAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFileNameExtensionAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ThreadAndSerializationSafeAttribute
#include "UnityEngine/ThreadAndSerializationSafeAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: ThreadAndSerializationSafeAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreadAndSerializationSafeAttribute::*)()>(&ThreadAndSerializationSafeAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreadAndSerializationSafeAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreadAndSerializationSafeAttribute::*)()>(&ThreadAndSerializationSafeAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreadAndSerializationSafeAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.WritableAttribute
#include "UnityEngine/WritableAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: WritableAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WritableAttribute::*)()>(&WritableAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WritableAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WritableAttribute::*)()>(&WritableAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WritableAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UnityEngineModuleAssembly
#include "UnityEngine/UnityEngineModuleAssembly.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: UnityEngineModuleAssembly::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngineModuleAssembly::*)()>(&UnityEngineModuleAssembly::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngineModuleAssembly*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngineModuleAssembly::*)()>(&UnityEngineModuleAssembly::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngineModuleAssembly*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.NativeClassAttribute
#include "UnityEngine/NativeClassAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.NativeClassAttribute.set_QualifiedNativeName
void UnityEngine::NativeClassAttribute::set_QualifiedNativeName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::NativeClassAttribute::set_QualifiedNativeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_QualifiedNativeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.NativeClassAttribute.set_Declaration
void UnityEngine::NativeClassAttribute::set_Declaration(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::NativeClassAttribute::set_Declaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Declaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: NativeClassAttribute::set_QualifiedNativeName
// Il2CppName: set_QualifiedNativeName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeClassAttribute::*)(::Il2CppString*)>(&NativeClassAttribute::set_QualifiedNativeName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeClassAttribute*), "set_QualifiedNativeName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NativeClassAttribute::set_Declaration
// Il2CppName: set_Declaration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeClassAttribute::*)(::Il2CppString*)>(&NativeClassAttribute::set_Declaration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeClassAttribute*), "set_Declaration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NativeClassAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeClassAttribute::*)(::Il2CppString*)>(&NativeClassAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeClassAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeClassAttribute::*)(::Il2CppString*)>(&NativeClassAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeClassAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NativeClassAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeClassAttribute::*)(::Il2CppString*, ::Il2CppString*)>(&NativeClassAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeClassAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeClassAttribute::*)(::Il2CppString*, ::Il2CppString*)>(&NativeClassAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeClassAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UnityString
#include "UnityEngine/UnityString.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UnityString.Format
::Il2CppString* UnityEngine::UnityString::Format(::Il2CppString* fmt, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UnityString::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnityString", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fmt), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fmt, args);
}
// Creating initializer_list -> params proxy for: System.String Format(System.String fmt, params System.Object[] args)
::Il2CppString* UnityEngine::UnityString::Format(::Il2CppString* fmt, std::initializer_list<::Il2CppObject*> args) {
  return UnityEngine::UnityString::Format(fmt, ::Array<::Il2CppObject*>::New(args));
}
// Writing MetadataGetter for method: UnityString::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*, ::Array<::Il2CppObject*>*)>(&UnityString::Format)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityString*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Bindings.VisibleToOtherModulesAttribute
#include "UnityEngine/Bindings/VisibleToOtherModulesAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: VisibleToOtherModulesAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VisibleToOtherModulesAttribute::*)(::Array<::Il2CppString*>*)>(&VisibleToOtherModulesAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VisibleToOtherModulesAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VisibleToOtherModulesAttribute::*)(::Array<::Il2CppString*>*)>(&VisibleToOtherModulesAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VisibleToOtherModulesAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: VisibleToOtherModulesAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VisibleToOtherModulesAttribute::*)()>(&VisibleToOtherModulesAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VisibleToOtherModulesAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VisibleToOtherModulesAttribute::*)()>(&VisibleToOtherModulesAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VisibleToOtherModulesAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Bindings.NativeConditionalAttribute
#include "UnityEngine/Bindings/NativeConditionalAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Bindings.NativeConditionalAttribute.set_Condition
void UnityEngine::Bindings::NativeConditionalAttribute::set_Condition(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::NativeConditionalAttribute::set_Condition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Condition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeConditionalAttribute.set_Enabled
void UnityEngine::Bindings::NativeConditionalAttribute::set_Enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::NativeConditionalAttribute::set_Enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: NativeConditionalAttribute::set_Condition
// Il2CppName: set_Condition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeConditionalAttribute::*)(::Il2CppString*)>(&NativeConditionalAttribute::set_Condition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeConditionalAttribute*), "set_Condition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NativeConditionalAttribute::set_Enabled
// Il2CppName: set_Enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeConditionalAttribute::*)(bool)>(&NativeConditionalAttribute::set_Enabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeConditionalAttribute*), "set_Enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: NativeConditionalAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeConditionalAttribute::*)(::Il2CppString*)>(&NativeConditionalAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeConditionalAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeConditionalAttribute::*)(::Il2CppString*)>(&NativeConditionalAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeConditionalAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Bindings.NativeHeaderAttribute
#include "UnityEngine/Bindings/NativeHeaderAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Bindings.NativeHeaderAttribute.set_Header
void UnityEngine::Bindings::NativeHeaderAttribute::set_Header(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::NativeHeaderAttribute::set_Header");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Header", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: NativeHeaderAttribute::set_Header
// Il2CppName: set_Header
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeHeaderAttribute::*)(::Il2CppString*)>(&NativeHeaderAttribute::set_Header)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeHeaderAttribute*), "set_Header", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NativeHeaderAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeHeaderAttribute::*)(::Il2CppString*)>(&NativeHeaderAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeHeaderAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeHeaderAttribute::*)(::Il2CppString*)>(&NativeHeaderAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeHeaderAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Bindings.NativeNameAttribute
#include "UnityEngine/Bindings/NativeNameAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Bindings.NativeNameAttribute.set_Name
void UnityEngine::Bindings::NativeNameAttribute::set_Name(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::NativeNameAttribute::set_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: NativeNameAttribute::set_Name
// Il2CppName: set_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeNameAttribute::*)(::Il2CppString*)>(&NativeNameAttribute::set_Name)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeNameAttribute*), "set_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NativeNameAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeNameAttribute::*)(::Il2CppString*)>(&NativeNameAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeNameAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeNameAttribute::*)(::Il2CppString*)>(&NativeNameAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeNameAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeWritableSelfAttribute
#include "UnityEngine/Bindings/NativeWritableSelfAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Bindings.NativeWritableSelfAttribute.set_WritableSelf
void UnityEngine::Bindings::NativeWritableSelfAttribute::set_WritableSelf(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::NativeWritableSelfAttribute::set_WritableSelf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WritableSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: NativeWritableSelfAttribute::set_WritableSelf
// Il2CppName: set_WritableSelf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeWritableSelfAttribute::*)(bool)>(&NativeWritableSelfAttribute::set_WritableSelf)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeWritableSelfAttribute*), "set_WritableSelf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: NativeWritableSelfAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeWritableSelfAttribute::*)()>(&NativeWritableSelfAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeWritableSelfAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeWritableSelfAttribute::*)()>(&NativeWritableSelfAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeWritableSelfAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Bindings.NativeMethodAttribute
#include "UnityEngine/Bindings/NativeMethodAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Bindings.NativeMethodAttribute.set_Name
void UnityEngine::Bindings::NativeMethodAttribute::set_Name(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::NativeMethodAttribute::set_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeMethodAttribute.set_IsThreadSafe
void UnityEngine::Bindings::NativeMethodAttribute::set_IsThreadSafe(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::NativeMethodAttribute::set_IsThreadSafe");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsThreadSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeMethodAttribute.set_IsFreeFunction
void UnityEngine::Bindings::NativeMethodAttribute::set_IsFreeFunction(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::NativeMethodAttribute::set_IsFreeFunction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsFreeFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeMethodAttribute.set_ThrowsException
void UnityEngine::Bindings::NativeMethodAttribute::set_ThrowsException(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::NativeMethodAttribute::set_ThrowsException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ThrowsException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeMethodAttribute.set_HasExplicitThis
void UnityEngine::Bindings::NativeMethodAttribute::set_HasExplicitThis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::NativeMethodAttribute::set_HasExplicitThis");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HasExplicitThis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: NativeMethodAttribute::set_Name
// Il2CppName: set_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeMethodAttribute::*)(::Il2CppString*)>(&NativeMethodAttribute::set_Name)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeMethodAttribute*), "set_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NativeMethodAttribute::set_IsThreadSafe
// Il2CppName: set_IsThreadSafe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeMethodAttribute::*)(bool)>(&NativeMethodAttribute::set_IsThreadSafe)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeMethodAttribute*), "set_IsThreadSafe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: NativeMethodAttribute::set_IsFreeFunction
// Il2CppName: set_IsFreeFunction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeMethodAttribute::*)(bool)>(&NativeMethodAttribute::set_IsFreeFunction)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeMethodAttribute*), "set_IsFreeFunction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: NativeMethodAttribute::set_ThrowsException
// Il2CppName: set_ThrowsException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeMethodAttribute::*)(bool)>(&NativeMethodAttribute::set_ThrowsException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeMethodAttribute*), "set_ThrowsException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: NativeMethodAttribute::set_HasExplicitThis
// Il2CppName: set_HasExplicitThis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeMethodAttribute::*)(bool)>(&NativeMethodAttribute::set_HasExplicitThis)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeMethodAttribute*), "set_HasExplicitThis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: NativeMethodAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeMethodAttribute::*)(::Il2CppString*)>(&NativeMethodAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeMethodAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeMethodAttribute::*)(::Il2CppString*)>(&NativeMethodAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeMethodAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NativeMethodAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeMethodAttribute::*)(::Il2CppString*, bool)>(&NativeMethodAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeMethodAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeMethodAttribute::*)(::Il2CppString*, bool)>(&NativeMethodAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeMethodAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: NativeMethodAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeMethodAttribute::*)(::Il2CppString*, bool, bool)>(&NativeMethodAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeMethodAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeMethodAttribute::*)(::Il2CppString*, bool, bool)>(&NativeMethodAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeMethodAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: NativeMethodAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeMethodAttribute::*)()>(&NativeMethodAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeMethodAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeMethodAttribute::*)()>(&NativeMethodAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeMethodAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.TargetType
#include "UnityEngine/Bindings/TargetType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.TargetType Function
UnityEngine::Bindings::TargetType UnityEngine::Bindings::TargetType::_get_Function() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::TargetType::_get_Function");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Bindings::TargetType>("UnityEngine.Bindings", "TargetType", "Function"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.TargetType Function
void UnityEngine::Bindings::TargetType::_set_Function(UnityEngine::Bindings::TargetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::TargetType::_set_Function");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "TargetType", "Function", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.TargetType Field
UnityEngine::Bindings::TargetType UnityEngine::Bindings::TargetType::_get_Field() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::TargetType::_get_Field");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Bindings::TargetType>("UnityEngine.Bindings", "TargetType", "Field"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.TargetType Field
void UnityEngine::Bindings::TargetType::_set_Field(UnityEngine::Bindings::TargetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::TargetType::_set_Field");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "TargetType", "Field", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Bindings.NativePropertyAttribute
#include "UnityEngine/Bindings/NativePropertyAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Bindings.NativePropertyAttribute.set_TargetType
void UnityEngine::Bindings::NativePropertyAttribute::set_TargetType(UnityEngine::Bindings::TargetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::NativePropertyAttribute::set_TargetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: NativePropertyAttribute::set_TargetType
// Il2CppName: set_TargetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativePropertyAttribute::*)(UnityEngine::Bindings::TargetType)>(&NativePropertyAttribute::set_TargetType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativePropertyAttribute*), "set_TargetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bindings::TargetType>()});
  }
};
// Writing MetadataGetter for method: NativePropertyAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativePropertyAttribute::*)(::Il2CppString*, bool, UnityEngine::Bindings::TargetType)>(&NativePropertyAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativePropertyAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Bindings::TargetType>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativePropertyAttribute::*)(::Il2CppString*, bool, UnityEngine::Bindings::TargetType)>(&NativePropertyAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativePropertyAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Bindings::TargetType>()});
  }
};
// Writing MetadataGetter for method: NativePropertyAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativePropertyAttribute::*)()>(&NativePropertyAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativePropertyAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativePropertyAttribute::*)()>(&NativePropertyAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativePropertyAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NativePropertyAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativePropertyAttribute::*)(::Il2CppString*)>(&NativePropertyAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativePropertyAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativePropertyAttribute::*)(::Il2CppString*)>(&NativePropertyAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativePropertyAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.CodegenOptions
#include "UnityEngine/Bindings/CodegenOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.CodegenOptions Auto
UnityEngine::Bindings::CodegenOptions UnityEngine::Bindings::CodegenOptions::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::CodegenOptions::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Bindings::CodegenOptions>("UnityEngine.Bindings", "CodegenOptions", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.CodegenOptions Auto
void UnityEngine::Bindings::CodegenOptions::_set_Auto(UnityEngine::Bindings::CodegenOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::CodegenOptions::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "CodegenOptions", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.CodegenOptions Custom
UnityEngine::Bindings::CodegenOptions UnityEngine::Bindings::CodegenOptions::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::CodegenOptions::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Bindings::CodegenOptions>("UnityEngine.Bindings", "CodegenOptions", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.CodegenOptions Custom
void UnityEngine::Bindings::CodegenOptions::_set_Custom(UnityEngine::Bindings::CodegenOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::CodegenOptions::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "CodegenOptions", "Custom", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.CodegenOptions Force
UnityEngine::Bindings::CodegenOptions UnityEngine::Bindings::CodegenOptions::_get_Force() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::CodegenOptions::_get_Force");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Bindings::CodegenOptions>("UnityEngine.Bindings", "CodegenOptions", "Force"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.CodegenOptions Force
void UnityEngine::Bindings::CodegenOptions::_set_Force(UnityEngine::Bindings::CodegenOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::CodegenOptions::_set_Force");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "CodegenOptions", "Force", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeAsStructAttribute
#include "UnityEngine/Bindings/NativeAsStructAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: NativeAsStructAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeAsStructAttribute::*)()>(&NativeAsStructAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeAsStructAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeAsStructAttribute::*)()>(&NativeAsStructAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeAsStructAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Bindings.NativeTypeAttribute
#include "UnityEngine/Bindings/NativeTypeAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Bindings.NativeTypeAttribute.set_Header
void UnityEngine::Bindings::NativeTypeAttribute::set_Header(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::NativeTypeAttribute::set_Header");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Header", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeTypeAttribute.set_IntermediateScriptingStructName
void UnityEngine::Bindings::NativeTypeAttribute::set_IntermediateScriptingStructName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::NativeTypeAttribute::set_IntermediateScriptingStructName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IntermediateScriptingStructName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeTypeAttribute.set_CodegenOptions
void UnityEngine::Bindings::NativeTypeAttribute::set_CodegenOptions(UnityEngine::Bindings::CodegenOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::NativeTypeAttribute::set_CodegenOptions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CodegenOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: NativeTypeAttribute::set_Header
// Il2CppName: set_Header
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeTypeAttribute::*)(::Il2CppString*)>(&NativeTypeAttribute::set_Header)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeTypeAttribute*), "set_Header", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NativeTypeAttribute::set_IntermediateScriptingStructName
// Il2CppName: set_IntermediateScriptingStructName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeTypeAttribute::*)(::Il2CppString*)>(&NativeTypeAttribute::set_IntermediateScriptingStructName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeTypeAttribute*), "set_IntermediateScriptingStructName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NativeTypeAttribute::set_CodegenOptions
// Il2CppName: set_CodegenOptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeTypeAttribute::*)(UnityEngine::Bindings::CodegenOptions)>(&NativeTypeAttribute::set_CodegenOptions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeTypeAttribute*), "set_CodegenOptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bindings::CodegenOptions>()});
  }
};
// Writing MetadataGetter for method: NativeTypeAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeTypeAttribute::*)(UnityEngine::Bindings::CodegenOptions)>(&NativeTypeAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeTypeAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bindings::CodegenOptions>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeTypeAttribute::*)(UnityEngine::Bindings::CodegenOptions)>(&NativeTypeAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeTypeAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bindings::CodegenOptions>()});
  }
};
// Writing MetadataGetter for method: NativeTypeAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeTypeAttribute::*)(::Il2CppString*)>(&NativeTypeAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeTypeAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeTypeAttribute::*)(::Il2CppString*)>(&NativeTypeAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeTypeAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NativeTypeAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeTypeAttribute::*)(UnityEngine::Bindings::CodegenOptions, ::Il2CppString*)>(&NativeTypeAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeTypeAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bindings::CodegenOptions>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeTypeAttribute::*)(UnityEngine::Bindings::CodegenOptions, ::Il2CppString*)>(&NativeTypeAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeTypeAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bindings::CodegenOptions>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NativeTypeAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeTypeAttribute::*)()>(&NativeTypeAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeTypeAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeTypeAttribute::*)()>(&NativeTypeAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeTypeAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NotNullAttribute
#include "UnityEngine/Bindings/NotNullAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: NotNullAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NotNullAttribute::*)()>(&NotNullAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NotNullAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NotNullAttribute::*)()>(&NotNullAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NotNullAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.UnmarshalledAttribute
#include "UnityEngine/Bindings/UnmarshalledAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: UnmarshalledAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnmarshalledAttribute::*)()>(&UnmarshalledAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnmarshalledAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnmarshalledAttribute::*)()>(&UnmarshalledAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnmarshalledAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Bindings.FreeFunctionAttribute
#include "UnityEngine/Bindings/FreeFunctionAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: FreeFunctionAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FreeFunctionAttribute::*)()>(&FreeFunctionAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FreeFunctionAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FreeFunctionAttribute::*)()>(&FreeFunctionAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FreeFunctionAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FreeFunctionAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FreeFunctionAttribute::*)(::Il2CppString*)>(&FreeFunctionAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FreeFunctionAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FreeFunctionAttribute::*)(::Il2CppString*)>(&FreeFunctionAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FreeFunctionAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: FreeFunctionAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FreeFunctionAttribute::*)(::Il2CppString*, bool)>(&FreeFunctionAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FreeFunctionAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FreeFunctionAttribute::*)(::Il2CppString*, bool)>(&FreeFunctionAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FreeFunctionAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.ThreadSafeAttribute
#include "UnityEngine/Bindings/ThreadSafeAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: ThreadSafeAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreadSafeAttribute::*)()>(&ThreadSafeAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreadSafeAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreadSafeAttribute::*)()>(&ThreadSafeAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreadSafeAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.StaticAccessorType
#include "UnityEngine/Bindings/StaticAccessorType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.StaticAccessorType Dot
UnityEngine::Bindings::StaticAccessorType UnityEngine::Bindings::StaticAccessorType::_get_Dot() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::StaticAccessorType::_get_Dot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Bindings::StaticAccessorType>("UnityEngine.Bindings", "StaticAccessorType", "Dot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.StaticAccessorType Dot
void UnityEngine::Bindings::StaticAccessorType::_set_Dot(UnityEngine::Bindings::StaticAccessorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::StaticAccessorType::_set_Dot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "StaticAccessorType", "Dot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.StaticAccessorType Arrow
UnityEngine::Bindings::StaticAccessorType UnityEngine::Bindings::StaticAccessorType::_get_Arrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::StaticAccessorType::_get_Arrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Bindings::StaticAccessorType>("UnityEngine.Bindings", "StaticAccessorType", "Arrow"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.StaticAccessorType Arrow
void UnityEngine::Bindings::StaticAccessorType::_set_Arrow(UnityEngine::Bindings::StaticAccessorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::StaticAccessorType::_set_Arrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "StaticAccessorType", "Arrow", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.StaticAccessorType DoubleColon
UnityEngine::Bindings::StaticAccessorType UnityEngine::Bindings::StaticAccessorType::_get_DoubleColon() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::StaticAccessorType::_get_DoubleColon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Bindings::StaticAccessorType>("UnityEngine.Bindings", "StaticAccessorType", "DoubleColon"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.StaticAccessorType DoubleColon
void UnityEngine::Bindings::StaticAccessorType::_set_DoubleColon(UnityEngine::Bindings::StaticAccessorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::StaticAccessorType::_set_DoubleColon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "StaticAccessorType", "DoubleColon", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.StaticAccessorType ArrowWithDefaultReturnIfNull
UnityEngine::Bindings::StaticAccessorType UnityEngine::Bindings::StaticAccessorType::_get_ArrowWithDefaultReturnIfNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::StaticAccessorType::_get_ArrowWithDefaultReturnIfNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Bindings::StaticAccessorType>("UnityEngine.Bindings", "StaticAccessorType", "ArrowWithDefaultReturnIfNull"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.StaticAccessorType ArrowWithDefaultReturnIfNull
void UnityEngine::Bindings::StaticAccessorType::_set_ArrowWithDefaultReturnIfNull(UnityEngine::Bindings::StaticAccessorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::StaticAccessorType::_set_ArrowWithDefaultReturnIfNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "StaticAccessorType", "ArrowWithDefaultReturnIfNull", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Bindings.StaticAccessorAttribute
#include "UnityEngine/Bindings/StaticAccessorAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Bindings.StaticAccessorAttribute.set_Name
void UnityEngine::Bindings::StaticAccessorAttribute::set_Name(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::StaticAccessorAttribute::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.StaticAccessorAttribute.set_Type
void UnityEngine::Bindings::StaticAccessorAttribute::set_Type(UnityEngine::Bindings::StaticAccessorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::StaticAccessorAttribute::set_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: StaticAccessorAttribute::set_Name
// Il2CppName: set_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StaticAccessorAttribute::*)(::Il2CppString*)>(&StaticAccessorAttribute::set_Name)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StaticAccessorAttribute*), "set_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StaticAccessorAttribute::set_Type
// Il2CppName: set_Type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StaticAccessorAttribute::*)(UnityEngine::Bindings::StaticAccessorType)>(&StaticAccessorAttribute::set_Type)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StaticAccessorAttribute*), "set_Type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bindings::StaticAccessorType>()});
  }
};
// Writing MetadataGetter for method: StaticAccessorAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StaticAccessorAttribute::*)(::Il2CppString*)>(&StaticAccessorAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StaticAccessorAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StaticAccessorAttribute::*)(::Il2CppString*)>(&StaticAccessorAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StaticAccessorAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StaticAccessorAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StaticAccessorAttribute::*)(::Il2CppString*, UnityEngine::Bindings::StaticAccessorType)>(&StaticAccessorAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StaticAccessorAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Bindings::StaticAccessorType>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StaticAccessorAttribute::*)(::Il2CppString*, UnityEngine::Bindings::StaticAccessorType)>(&StaticAccessorAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StaticAccessorAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Bindings::StaticAccessorType>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeThrowsAttribute
#include "UnityEngine/Bindings/NativeThrowsAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Bindings.NativeThrowsAttribute.set_ThrowsException
void UnityEngine::Bindings::NativeThrowsAttribute::set_ThrowsException(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::NativeThrowsAttribute::set_ThrowsException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ThrowsException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: NativeThrowsAttribute::set_ThrowsException
// Il2CppName: set_ThrowsException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeThrowsAttribute::*)(bool)>(&NativeThrowsAttribute::set_ThrowsException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeThrowsAttribute*), "set_ThrowsException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: NativeThrowsAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeThrowsAttribute::*)()>(&NativeThrowsAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeThrowsAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NativeThrowsAttribute::*)()>(&NativeThrowsAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NativeThrowsAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.IgnoreAttribute
#include "UnityEngine/Bindings/IgnoreAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Bindings.IgnoreAttribute.set_DoesNotContributeToSize
void UnityEngine::Bindings::IgnoreAttribute::set_DoesNotContributeToSize(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::IgnoreAttribute::set_DoesNotContributeToSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DoesNotContributeToSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: IgnoreAttribute::set_DoesNotContributeToSize
// Il2CppName: set_DoesNotContributeToSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IgnoreAttribute::*)(bool)>(&IgnoreAttribute::set_DoesNotContributeToSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IgnoreAttribute*), "set_DoesNotContributeToSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: IgnoreAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IgnoreAttribute::*)()>(&IgnoreAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IgnoreAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IgnoreAttribute::*)()>(&IgnoreAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IgnoreAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Scripting.UsedByNativeCodeAttribute
#include "UnityEngine/Scripting/UsedByNativeCodeAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Scripting.UsedByNativeCodeAttribute.set_Name
void UnityEngine::Scripting::UsedByNativeCodeAttribute::set_Name(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Scripting::UsedByNativeCodeAttribute::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: UsedByNativeCodeAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UsedByNativeCodeAttribute::*)(::Il2CppString*)>(&UsedByNativeCodeAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UsedByNativeCodeAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UsedByNativeCodeAttribute::*)(::Il2CppString*)>(&UsedByNativeCodeAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UsedByNativeCodeAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: UsedByNativeCodeAttribute::set_Name
// Il2CppName: set_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UsedByNativeCodeAttribute::*)(::Il2CppString*)>(&UsedByNativeCodeAttribute::set_Name)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UsedByNativeCodeAttribute*), "set_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: UsedByNativeCodeAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UsedByNativeCodeAttribute::*)()>(&UsedByNativeCodeAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UsedByNativeCodeAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UsedByNativeCodeAttribute::*)()>(&UsedByNativeCodeAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UsedByNativeCodeAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Scripting.RequiredByNativeCodeAttribute
#include "UnityEngine/Scripting/RequiredByNativeCodeAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Scripting.RequiredByNativeCodeAttribute.set_Name
void UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_Name(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Scripting.RequiredByNativeCodeAttribute.set_Optional
void UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_Optional(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_Optional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Optional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Scripting.RequiredByNativeCodeAttribute.set_GenerateProxy
void UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_GenerateProxy(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_GenerateProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GenerateProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: RequiredByNativeCodeAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RequiredByNativeCodeAttribute::*)(::Il2CppString*)>(&RequiredByNativeCodeAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RequiredByNativeCodeAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RequiredByNativeCodeAttribute::*)(::Il2CppString*)>(&RequiredByNativeCodeAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RequiredByNativeCodeAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: RequiredByNativeCodeAttribute::set_Name
// Il2CppName: set_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RequiredByNativeCodeAttribute::*)(::Il2CppString*)>(&RequiredByNativeCodeAttribute::set_Name)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RequiredByNativeCodeAttribute*), "set_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: RequiredByNativeCodeAttribute::set_Optional
// Il2CppName: set_Optional
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RequiredByNativeCodeAttribute::*)(bool)>(&RequiredByNativeCodeAttribute::set_Optional)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RequiredByNativeCodeAttribute*), "set_Optional", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RequiredByNativeCodeAttribute::set_GenerateProxy
// Il2CppName: set_GenerateProxy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RequiredByNativeCodeAttribute::*)(bool)>(&RequiredByNativeCodeAttribute::set_GenerateProxy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RequiredByNativeCodeAttribute*), "set_GenerateProxy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RequiredByNativeCodeAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RequiredByNativeCodeAttribute::*)()>(&RequiredByNativeCodeAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RequiredByNativeCodeAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RequiredByNativeCodeAttribute::*)()>(&RequiredByNativeCodeAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RequiredByNativeCodeAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Scripting.GeneratedByOldBindingsGeneratorAttribute
#include "UnityEngine/Scripting/GeneratedByOldBindingsGeneratorAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: GeneratedByOldBindingsGeneratorAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GeneratedByOldBindingsGeneratorAttribute::*)()>(&GeneratedByOldBindingsGeneratorAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GeneratedByOldBindingsGeneratorAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GeneratedByOldBindingsGeneratorAttribute::*)()>(&GeneratedByOldBindingsGeneratorAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GeneratedByOldBindingsGeneratorAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ISubsystemDescriptorImpl
#include "UnityEngine/ISubsystemDescriptorImpl.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ISubsystemDescriptorImpl.set_ptr
void UnityEngine::ISubsystemDescriptorImpl::set_ptr(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ISubsystemDescriptorImpl::set_ptr");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ptr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: ISubsystemDescriptorImpl::set_ptr
// Il2CppName: set_ptr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ISubsystemDescriptorImpl::*)(System::IntPtr)>(&ISubsystemDescriptorImpl::set_ptr)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ISubsystemDescriptorImpl*), "set_ptr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.IntegratedSubsystemDescriptor
#include "UnityEngine/IntegratedSubsystemDescriptor.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.IntegratedSubsystemDescriptor.UnityEngine.ISubsystemDescriptorImpl.set_ptr
void UnityEngine::IntegratedSubsystemDescriptor::UnityEngine_ISubsystemDescriptorImpl_set_ptr(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::IntegratedSubsystemDescriptor::UnityEngine.ISubsystemDescriptorImpl.set_ptr");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ISubsystemDescriptorImpl.set_ptr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: IntegratedSubsystemDescriptor::UnityEngine_ISubsystemDescriptorImpl_set_ptr
// Il2CppName: UnityEngine.ISubsystemDescriptorImpl.set_ptr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IntegratedSubsystemDescriptor::*)(System::IntPtr)>(&IntegratedSubsystemDescriptor::UnityEngine_ISubsystemDescriptorImpl_set_ptr)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IntegratedSubsystemDescriptor*), "UnityEngine.ISubsystemDescriptorImpl.set_ptr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: IntegratedSubsystemDescriptor::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IntegratedSubsystemDescriptor::*)()>(&IntegratedSubsystemDescriptor::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IntegratedSubsystemDescriptor*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IntegratedSubsystemDescriptor::*)()>(&IntegratedSubsystemDescriptor::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IntegratedSubsystemDescriptor*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.SubsystemDescriptor
#include "UnityEngine/SubsystemDescriptor.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SubsystemDescriptor.get_id
::Il2CppString* UnityEngine::SubsystemDescriptor::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SubsystemDescriptor::get_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SubsystemDescriptor::get_id
// Il2CppName: get_id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (SubsystemDescriptor::*)()>(&SubsystemDescriptor::get_id)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SubsystemDescriptor*), "get_id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SubsystemDescriptor::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SubsystemDescriptor::*)()>(&SubsystemDescriptor::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SubsystemDescriptor*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SubsystemDescriptor::*)()>(&SubsystemDescriptor::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SubsystemDescriptor*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Internal_SubsystemInstances
#include "UnityEngine/Internal_SubsystemInstances.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ISubsystem
#include "UnityEngine/ISubsystem.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.IntegratedSubsystem
#include "UnityEngine/IntegratedSubsystem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystem> s_IntegratedSubsystemInstances
System::Collections::Generic::List_1<UnityEngine::ISubsystem*>* UnityEngine::Internal_SubsystemInstances::_get_s_IntegratedSubsystemInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Internal_SubsystemInstances::_get_s_IntegratedSubsystemInstances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::ISubsystem*>*>("UnityEngine", "Internal_SubsystemInstances", "s_IntegratedSubsystemInstances"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystem> s_IntegratedSubsystemInstances
void UnityEngine::Internal_SubsystemInstances::_set_s_IntegratedSubsystemInstances(System::Collections::Generic::List_1<UnityEngine::ISubsystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Internal_SubsystemInstances::_set_s_IntegratedSubsystemInstances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Internal_SubsystemInstances", "s_IntegratedSubsystemInstances", value));
}
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystem> s_StandaloneSubsystemInstances
System::Collections::Generic::List_1<UnityEngine::ISubsystem*>* UnityEngine::Internal_SubsystemInstances::_get_s_StandaloneSubsystemInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Internal_SubsystemInstances::_get_s_StandaloneSubsystemInstances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::ISubsystem*>*>("UnityEngine", "Internal_SubsystemInstances", "s_StandaloneSubsystemInstances"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystem> s_StandaloneSubsystemInstances
void UnityEngine::Internal_SubsystemInstances::_set_s_StandaloneSubsystemInstances(System::Collections::Generic::List_1<UnityEngine::ISubsystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Internal_SubsystemInstances::_set_s_StandaloneSubsystemInstances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Internal_SubsystemInstances", "s_StandaloneSubsystemInstances", value));
}
// Autogenerated method: UnityEngine.Internal_SubsystemInstances.Internal_InitializeManagedInstance
void UnityEngine::Internal_SubsystemInstances::Internal_InitializeManagedInstance(System::IntPtr ptr, UnityEngine::IntegratedSubsystem* inst) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Internal_SubsystemInstances::Internal_InitializeManagedInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemInstances", "Internal_InitializeManagedInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(inst)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr, inst);
}
// Autogenerated method: UnityEngine.Internal_SubsystemInstances.Internal_ClearManagedInstances
void UnityEngine::Internal_SubsystemInstances::Internal_ClearManagedInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Internal_SubsystemInstances::Internal_ClearManagedInstances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemInstances", "Internal_ClearManagedInstances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Internal_SubsystemInstances.Internal_RemoveInstanceByPtr
void UnityEngine::Internal_SubsystemInstances::Internal_RemoveInstanceByPtr(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Internal_SubsystemInstances::Internal_RemoveInstanceByPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemInstances", "Internal_RemoveInstanceByPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.Internal_SubsystemInstances.Internal_GetInstanceByPtr
UnityEngine::IntegratedSubsystem* UnityEngine::Internal_SubsystemInstances::Internal_GetInstanceByPtr(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Internal_SubsystemInstances::Internal_GetInstanceByPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemInstances", "Internal_GetInstanceByPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::IntegratedSubsystem*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.Internal_SubsystemInstances..cctor
void UnityEngine::Internal_SubsystemInstances::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Internal_SubsystemInstances::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemInstances", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Internal_SubsystemInstances::Internal_InitializeManagedInstance
// Il2CppName: Internal_InitializeManagedInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, UnityEngine::IntegratedSubsystem*)>(&Internal_SubsystemInstances::Internal_InitializeManagedInstance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Internal_SubsystemInstances*), "Internal_InitializeManagedInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::IntegratedSubsystem*>()});
  }
};
// Writing MetadataGetter for method: Internal_SubsystemInstances::Internal_ClearManagedInstances
// Il2CppName: Internal_ClearManagedInstances
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Internal_SubsystemInstances::Internal_ClearManagedInstances)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Internal_SubsystemInstances*), "Internal_ClearManagedInstances", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Internal_SubsystemInstances::Internal_RemoveInstanceByPtr
// Il2CppName: Internal_RemoveInstanceByPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&Internal_SubsystemInstances::Internal_RemoveInstanceByPtr)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Internal_SubsystemInstances*), "Internal_RemoveInstanceByPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Internal_SubsystemInstances::Internal_GetInstanceByPtr
// Il2CppName: Internal_GetInstanceByPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::IntegratedSubsystem* (*)(System::IntPtr)>(&Internal_SubsystemInstances::Internal_GetInstanceByPtr)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Internal_SubsystemInstances*), "Internal_GetInstanceByPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Internal_SubsystemInstances::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Internal_SubsystemInstances::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Internal_SubsystemInstances*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ISubsystemDescriptor
#include "UnityEngine/ISubsystemDescriptor.hpp"
// Including type: UnityEngine.SubsystemDescriptor
#include "UnityEngine/SubsystemDescriptor.hpp"
// Including type: UnityEngine.Internal_SubsystemDescriptors
#include "UnityEngine/Internal_SubsystemDescriptors.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ISubsystemDescriptorImpl
#include "UnityEngine/ISubsystemDescriptorImpl.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystemDescriptorImpl> s_IntegratedSubsystemDescriptors
System::Collections::Generic::List_1<UnityEngine::ISubsystemDescriptorImpl*>* UnityEngine::Internal_SubsystemDescriptors::_get_s_IntegratedSubsystemDescriptors() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Internal_SubsystemDescriptors::_get_s_IntegratedSubsystemDescriptors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::ISubsystemDescriptorImpl*>*>("UnityEngine", "Internal_SubsystemDescriptors", "s_IntegratedSubsystemDescriptors"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystemDescriptorImpl> s_IntegratedSubsystemDescriptors
void UnityEngine::Internal_SubsystemDescriptors::_set_s_IntegratedSubsystemDescriptors(System::Collections::Generic::List_1<UnityEngine::ISubsystemDescriptorImpl*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Internal_SubsystemDescriptors::_set_s_IntegratedSubsystemDescriptors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Internal_SubsystemDescriptors", "s_IntegratedSubsystemDescriptors", value));
}
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystemDescriptor> s_StandaloneSubsystemDescriptors
System::Collections::Generic::List_1<UnityEngine::ISubsystemDescriptor*>* UnityEngine::Internal_SubsystemDescriptors::_get_s_StandaloneSubsystemDescriptors() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Internal_SubsystemDescriptors::_get_s_StandaloneSubsystemDescriptors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::ISubsystemDescriptor*>*>("UnityEngine", "Internal_SubsystemDescriptors", "s_StandaloneSubsystemDescriptors"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystemDescriptor> s_StandaloneSubsystemDescriptors
void UnityEngine::Internal_SubsystemDescriptors::_set_s_StandaloneSubsystemDescriptors(System::Collections::Generic::List_1<UnityEngine::ISubsystemDescriptor*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Internal_SubsystemDescriptors::_set_s_StandaloneSubsystemDescriptors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Internal_SubsystemDescriptors", "s_StandaloneSubsystemDescriptors", value));
}
// Autogenerated method: UnityEngine.Internal_SubsystemDescriptors.Internal_AddDescriptor
bool UnityEngine::Internal_SubsystemDescriptors::Internal_AddDescriptor(UnityEngine::SubsystemDescriptor* descriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Internal_SubsystemDescriptors::Internal_AddDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemDescriptors", "Internal_AddDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(descriptor)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, descriptor);
}
// Autogenerated method: UnityEngine.Internal_SubsystemDescriptors.Internal_InitializeManagedDescriptor
void UnityEngine::Internal_SubsystemDescriptors::Internal_InitializeManagedDescriptor(System::IntPtr ptr, UnityEngine::ISubsystemDescriptorImpl* desc) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Internal_SubsystemDescriptors::Internal_InitializeManagedDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemDescriptors", "Internal_InitializeManagedDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(desc)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr, desc);
}
// Autogenerated method: UnityEngine.Internal_SubsystemDescriptors.Internal_ClearManagedDescriptors
void UnityEngine::Internal_SubsystemDescriptors::Internal_ClearManagedDescriptors() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Internal_SubsystemDescriptors::Internal_ClearManagedDescriptors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemDescriptors", "Internal_ClearManagedDescriptors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Internal_SubsystemDescriptors..cctor
void UnityEngine::Internal_SubsystemDescriptors::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Internal_SubsystemDescriptors::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemDescriptors", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Internal_SubsystemDescriptors::Internal_AddDescriptor
// Il2CppName: Internal_AddDescriptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::SubsystemDescriptor*)>(&Internal_SubsystemDescriptors::Internal_AddDescriptor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Internal_SubsystemDescriptors*), "Internal_AddDescriptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::SubsystemDescriptor*>()});
  }
};
// Writing MetadataGetter for method: Internal_SubsystemDescriptors::Internal_InitializeManagedDescriptor
// Il2CppName: Internal_InitializeManagedDescriptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, UnityEngine::ISubsystemDescriptorImpl*)>(&Internal_SubsystemDescriptors::Internal_InitializeManagedDescriptor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Internal_SubsystemDescriptors*), "Internal_InitializeManagedDescriptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::ISubsystemDescriptorImpl*>()});
  }
};
// Writing MetadataGetter for method: Internal_SubsystemDescriptors::Internal_ClearManagedDescriptors
// Il2CppName: Internal_ClearManagedDescriptors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Internal_SubsystemDescriptors::Internal_ClearManagedDescriptors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Internal_SubsystemDescriptors*), "Internal_ClearManagedDescriptors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Internal_SubsystemDescriptors::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Internal_SubsystemDescriptors::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Internal_SubsystemDescriptors*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.SubsystemManager
#include "UnityEngine/SubsystemManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0xDA61E4
// [CompilerGeneratedAttribute] Offset: 0xDA61E4
// Autogenerated static field getter
// Get static field: static private System.Action reloadSubsytemsStarted
System::Action* UnityEngine::SubsystemManager::_get_reloadSubsytemsStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SubsystemManager::_get_reloadSubsytemsStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("UnityEngine", "SubsystemManager", "reloadSubsytemsStarted"));
}
// Autogenerated static field setter
// Set static field: static private System.Action reloadSubsytemsStarted
void UnityEngine::SubsystemManager::_set_reloadSubsytemsStarted(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SubsystemManager::_set_reloadSubsytemsStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SubsystemManager", "reloadSubsytemsStarted", value));
}
// [DebuggerBrowsableAttribute] Offset: 0xDA6220
// [CompilerGeneratedAttribute] Offset: 0xDA6220
// Autogenerated static field getter
// Get static field: static private System.Action reloadSubsytemsCompleted
System::Action* UnityEngine::SubsystemManager::_get_reloadSubsytemsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SubsystemManager::_get_reloadSubsytemsCompleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("UnityEngine", "SubsystemManager", "reloadSubsytemsCompleted"));
}
// Autogenerated static field setter
// Set static field: static private System.Action reloadSubsytemsCompleted
void UnityEngine::SubsystemManager::_set_reloadSubsytemsCompleted(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SubsystemManager::_set_reloadSubsytemsCompleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SubsystemManager", "reloadSubsytemsCompleted", value));
}
// Autogenerated method: UnityEngine.SubsystemManager..cctor
void UnityEngine::SubsystemManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SubsystemManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SubsystemManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SubsystemManager.ReportSingleSubsystemAnalytics
void UnityEngine::SubsystemManager::ReportSingleSubsystemAnalytics(::Il2CppString* id) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SubsystemManager::ReportSingleSubsystemAnalytics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SubsystemManager", "ReportSingleSubsystemAnalytics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, id);
}
// Autogenerated method: UnityEngine.SubsystemManager.StaticConstructScriptingClassMap
void UnityEngine::SubsystemManager::StaticConstructScriptingClassMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SubsystemManager::StaticConstructScriptingClassMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SubsystemManager", "StaticConstructScriptingClassMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SubsystemManager.Internal_ReloadSubsystemsStarted
void UnityEngine::SubsystemManager::Internal_ReloadSubsystemsStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SubsystemManager::Internal_ReloadSubsystemsStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SubsystemManager", "Internal_ReloadSubsystemsStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SubsystemManager.Internal_ReloadSubsystemsCompleted
void UnityEngine::SubsystemManager::Internal_ReloadSubsystemsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SubsystemManager::Internal_ReloadSubsystemsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SubsystemManager", "Internal_ReloadSubsystemsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: SubsystemManager::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SubsystemManager::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SubsystemManager*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SubsystemManager::ReportSingleSubsystemAnalytics
// Il2CppName: ReportSingleSubsystemAnalytics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*)>(&SubsystemManager::ReportSingleSubsystemAnalytics)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SubsystemManager*), "ReportSingleSubsystemAnalytics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SubsystemManager::StaticConstructScriptingClassMap
// Il2CppName: StaticConstructScriptingClassMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SubsystemManager::StaticConstructScriptingClassMap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SubsystemManager*), "StaticConstructScriptingClassMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SubsystemManager::Internal_ReloadSubsystemsStarted
// Il2CppName: Internal_ReloadSubsystemsStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SubsystemManager::Internal_ReloadSubsystemsStarted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SubsystemManager*), "Internal_ReloadSubsystemsStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SubsystemManager::Internal_ReloadSubsystemsCompleted
// Il2CppName: Internal_ReloadSubsystemsCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SubsystemManager::Internal_ReloadSubsystemsCompleted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SubsystemManager*), "Internal_ReloadSubsystemsCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ISubsystemDescriptor
#include "UnityEngine/ISubsystemDescriptor.hpp"
// Including type: UnityEngine.IntegratedSubsystem
#include "UnityEngine/IntegratedSubsystem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.IntegratedSubsystem.SetHandle
void UnityEngine::IntegratedSubsystem::SetHandle(UnityEngine::IntegratedSubsystem* inst) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::IntegratedSubsystem::SetHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inst)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inst);
}
// Writing MetadataGetter for method: IntegratedSubsystem::SetHandle
// Il2CppName: SetHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IntegratedSubsystem::*)(UnityEngine::IntegratedSubsystem*)>(&IntegratedSubsystem::SetHandle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IntegratedSubsystem*), "SetHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::IntegratedSubsystem*>()});
  }
};
// Writing MetadataGetter for method: IntegratedSubsystem::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IntegratedSubsystem::*)()>(&IntegratedSubsystem::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IntegratedSubsystem*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IntegratedSubsystem::*)()>(&IntegratedSubsystem::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IntegratedSubsystem*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestRunner.ITestRunCallback
#include "UnityEngine/TestRunner/ITestRunCallback.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: NUnit.Framework.Interfaces.ITestResult
#include "NUnit/Framework/Interfaces/ITestResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.ITestRunCallback.RunStarted
void UnityEngine::TestRunner::ITestRunCallback::RunStarted(NUnit::Framework::Interfaces::ITest* testsToRun) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::ITestRunCallback::RunStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testsToRun)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, testsToRun);
}
// Autogenerated method: UnityEngine.TestRunner.ITestRunCallback.RunFinished
void UnityEngine::TestRunner::ITestRunCallback::RunFinished(NUnit::Framework::Interfaces::ITestResult* testResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::ITestRunCallback::RunFinished");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testResults)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, testResults);
}
// Autogenerated method: UnityEngine.TestRunner.ITestRunCallback.TestStarted
void UnityEngine::TestRunner::ITestRunCallback::TestStarted(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::ITestRunCallback::TestStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.ITestRunCallback.TestFinished
void UnityEngine::TestRunner::ITestRunCallback::TestFinished(NUnit::Framework::Interfaces::ITestResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::ITestRunCallback::TestFinished");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: ITestRunCallback::RunStarted
// Il2CppName: RunStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ITestRunCallback::*)(NUnit::Framework::Interfaces::ITest*)>(&ITestRunCallback::RunStarted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ITestRunCallback*), "RunStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: ITestRunCallback::RunFinished
// Il2CppName: RunFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ITestRunCallback::*)(NUnit::Framework::Interfaces::ITestResult*)>(&ITestRunCallback::RunFinished)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ITestRunCallback*), "RunFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Writing MetadataGetter for method: ITestRunCallback::TestStarted
// Il2CppName: TestStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ITestRunCallback::*)(NUnit::Framework::Interfaces::ITest*)>(&ITestRunCallback::TestStarted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ITestRunCallback*), "TestStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: ITestRunCallback::TestFinished
// Il2CppName: TestFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ITestRunCallback::*)(NUnit::Framework::Interfaces::ITestResult*)>(&ITestRunCallback::TestFinished)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ITestRunCallback*), "TestFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestRunner.TestRunCallbackAttribute
#include "UnityEngine/TestRunner/TestRunCallbackAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.TestRunner.ITestRunCallback
#include "UnityEngine/TestRunner/ITestRunCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.TestRunCallbackAttribute.ConstructCallback
UnityEngine::TestRunner::ITestRunCallback* UnityEngine::TestRunner::TestRunCallbackAttribute::ConstructCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestRunCallbackAttribute::ConstructCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestRunner::ITestRunCallback*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: TestRunCallbackAttribute::ConstructCallback
// Il2CppName: ConstructCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestRunner::ITestRunCallback* (TestRunCallbackAttribute::*)()>(&TestRunCallbackAttribute::ConstructCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackAttribute*), "ConstructCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.Utils.TestRunCallbackListener
#include "UnityEngine/TestRunner/Utils/TestRunCallbackListener.hpp"
// Including type: UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c__DisplayClass1_0
#include "UnityEngine/TestRunner/Utils/TestRunCallbackListener_--c__DisplayClass1_0.hpp"
// Including type: UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c
#include "UnityEngine/TestRunner/Utils/TestRunCallbackListener_--c.hpp"
// Including type: UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c__DisplayClass4_0
#include "UnityEngine/TestRunner/Utils/TestRunCallbackListener_--c__DisplayClass4_0.hpp"
// Including type: UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c__DisplayClass5_0
#include "UnityEngine/TestRunner/Utils/TestRunCallbackListener_--c__DisplayClass5_0.hpp"
// Including type: UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c__DisplayClass6_0
#include "UnityEngine/TestRunner/Utils/TestRunCallbackListener_--c__DisplayClass6_0.hpp"
// Including type: UnityEngine.TestRunner.ITestRunCallback
#include "UnityEngine/TestRunner/ITestRunCallback.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NUnit.Framework.Interfaces.ITestResult
#include "NUnit/Framework/Interfaces/ITestResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.Utils.TestRunCallbackListener.RunStarted
void UnityEngine::TestRunner::Utils::TestRunCallbackListener::RunStarted(NUnit::Framework::Interfaces::ITest* testsToRun) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::RunStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testsToRun)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, testsToRun);
}
// Autogenerated method: UnityEngine.TestRunner.Utils.TestRunCallbackListener.GetAllCallbacks
::Array<UnityEngine::TestRunner::ITestRunCallback*>* UnityEngine::TestRunner::Utils::TestRunCallbackListener::GetAllCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::GetAllCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.Utils", "TestRunCallbackListener", "GetAllCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::TestRunner::ITestRunCallback*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.Utils.TestRunCallbackListener.InvokeAllCallbacks
void UnityEngine::TestRunner::Utils::TestRunCallbackListener::InvokeAllCallbacks(System::Action_1<UnityEngine::TestRunner::ITestRunCallback*>* invoker) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::InvokeAllCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeAllCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invoker)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, invoker);
}
// Autogenerated method: UnityEngine.TestRunner.Utils.TestRunCallbackListener.RunFinished
void UnityEngine::TestRunner::Utils::TestRunCallbackListener::RunFinished(NUnit::Framework::Interfaces::ITestResult* testResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::RunFinished");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testResults)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, testResults);
}
// Autogenerated method: UnityEngine.TestRunner.Utils.TestRunCallbackListener.TestStarted
void UnityEngine::TestRunner::Utils::TestRunCallbackListener::TestStarted(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::TestStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.Utils.TestRunCallbackListener.TestFinished
void UnityEngine::TestRunner::Utils::TestRunCallbackListener::TestFinished(NUnit::Framework::Interfaces::ITestResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::TestFinished");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: TestRunCallbackListener::RunStarted
// Il2CppName: RunStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::*)(NUnit::Framework::Interfaces::ITest*)>(&TestRunCallbackListener::RunStarted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener*), "RunStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: TestRunCallbackListener::GetAllCallbacks
// Il2CppName: GetAllCallbacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::TestRunner::ITestRunCallback*>* (*)()>(&TestRunCallbackListener::GetAllCallbacks)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener*), "GetAllCallbacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestRunCallbackListener::InvokeAllCallbacks
// Il2CppName: InvokeAllCallbacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::*)(System::Action_1<UnityEngine::TestRunner::ITestRunCallback*>*)>(&TestRunCallbackListener::InvokeAllCallbacks)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener*), "InvokeAllCallbacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<UnityEngine::TestRunner::ITestRunCallback*>*>()});
  }
};
// Writing MetadataGetter for method: TestRunCallbackListener::RunFinished
// Il2CppName: RunFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::*)(NUnit::Framework::Interfaces::ITestResult*)>(&TestRunCallbackListener::RunFinished)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener*), "RunFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Writing MetadataGetter for method: TestRunCallbackListener::TestStarted
// Il2CppName: TestStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::*)(NUnit::Framework::Interfaces::ITest*)>(&TestRunCallbackListener::TestStarted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener*), "TestStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: TestRunCallbackListener::TestFinished
// Il2CppName: TestFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::*)(NUnit::Framework::Interfaces::ITestResult*)>(&TestRunCallbackListener::TestFinished)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener*), "TestFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Writing MetadataGetter for method: TestRunCallbackListener::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::*)()>(&TestRunCallbackListener::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::*)()>(&TestRunCallbackListener::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c__DisplayClass1_0
#include "UnityEngine/TestRunner/Utils/TestRunCallbackListener_--c__DisplayClass1_0.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: UnityEngine.TestRunner.ITestRunCallback
#include "UnityEngine/TestRunner/ITestRunCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c__DisplayClass1_0.<RunStarted>b__0
void UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c__DisplayClass1_0::$RunStarted$b__0(UnityEngine::TestRunner::ITestRunCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c__DisplayClass1_0::<RunStarted>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RunStarted>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callback);
}
// Writing MetadataGetter for method: TestRunCallbackListener::$$c__DisplayClass1_0::$RunStarted$b__0
// Il2CppName: <RunStarted>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::$$c__DisplayClass1_0::*)(UnityEngine::TestRunner::ITestRunCallback*)>(&TestRunCallbackListener::$$c__DisplayClass1_0::$RunStarted$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener::$$c__DisplayClass1_0*), "<RunStarted>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::ITestRunCallback*>()});
  }
};
// Writing MetadataGetter for method: TestRunCallbackListener::$$c__DisplayClass1_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::$$c__DisplayClass1_0::*)()>(&TestRunCallbackListener::$$c__DisplayClass1_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener::$$c__DisplayClass1_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::$$c__DisplayClass1_0::*)()>(&TestRunCallbackListener::$$c__DisplayClass1_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener::$$c__DisplayClass1_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c
#include "UnityEngine/TestRunner/Utils/TestRunCallbackListener_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.AssemblyName
#include "System/Reflection/AssemblyName.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.TestRunner.TestRunCallbackAttribute
#include "UnityEngine/TestRunner/TestRunCallbackAttribute.hpp"
// Including type: UnityEngine.TestRunner.ITestRunCallback
#include "UnityEngine/TestRunner/ITestRunCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c <>9
UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c* UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c*>("UnityEngine.TestRunner.Utils", "TestRunCallbackListener/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c <>9
void UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_set_$$9(UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.Utils", "TestRunCallbackListener/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.AssemblyName,System.Boolean> <>9__2_3
System::Func_2<System::Reflection::AssemblyName*, bool>* UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_get_$$9__2_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_get_$$9__2_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Reflection::AssemblyName*, bool>*>("UnityEngine.TestRunner.Utils", "TestRunCallbackListener/<>c", "<>9__2_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.AssemblyName,System.Boolean> <>9__2_3
void UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_set_$$9__2_3(System::Func_2<System::Reflection::AssemblyName*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_set_$$9__2_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.Utils", "TestRunCallbackListener/<>c", "<>9__2_3", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.Assembly,System.Boolean> <>9__2_0
System::Func_2<System::Reflection::Assembly*, bool>* UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Reflection::Assembly*, bool>*>("UnityEngine.TestRunner.Utils", "TestRunCallbackListener/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.Assembly,System.Boolean> <>9__2_0
void UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_set_$$9__2_0(System::Func_2<System::Reflection::Assembly*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.Utils", "TestRunCallbackListener/<>c", "<>9__2_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.Assembly,System.Collections.Generic.IEnumerable`1<UnityEngine.TestRunner.TestRunCallbackAttribute>> <>9__2_1
System::Func_2<System::Reflection::Assembly*, System::Collections::Generic::IEnumerable_1<UnityEngine::TestRunner::TestRunCallbackAttribute*>*>* UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_get_$$9__2_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_get_$$9__2_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Reflection::Assembly*, System::Collections::Generic::IEnumerable_1<UnityEngine::TestRunner::TestRunCallbackAttribute*>*>*>("UnityEngine.TestRunner.Utils", "TestRunCallbackListener/<>c", "<>9__2_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.Assembly,System.Collections.Generic.IEnumerable`1<UnityEngine.TestRunner.TestRunCallbackAttribute>> <>9__2_1
void UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_set_$$9__2_1(System::Func_2<System::Reflection::Assembly*, System::Collections::Generic::IEnumerable_1<UnityEngine::TestRunner::TestRunCallbackAttribute*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_set_$$9__2_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.Utils", "TestRunCallbackListener/<>c", "<>9__2_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.TestRunner.TestRunCallbackAttribute,UnityEngine.TestRunner.ITestRunCallback> <>9__2_2
System::Func_2<UnityEngine::TestRunner::TestRunCallbackAttribute*, UnityEngine::TestRunner::ITestRunCallback*>* UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_get_$$9__2_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_get_$$9__2_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::TestRunner::TestRunCallbackAttribute*, UnityEngine::TestRunner::ITestRunCallback*>*>("UnityEngine.TestRunner.Utils", "TestRunCallbackListener/<>c", "<>9__2_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.TestRunner.TestRunCallbackAttribute,UnityEngine.TestRunner.ITestRunCallback> <>9__2_2
void UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_set_$$9__2_2(System::Func_2<UnityEngine::TestRunner::TestRunCallbackAttribute*, UnityEngine::TestRunner::ITestRunCallback*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_set_$$9__2_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.Utils", "TestRunCallbackListener/<>c", "<>9__2_2", value)));
}
// Autogenerated method: UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c..cctor
void UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.Utils", "TestRunCallbackListener/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c.<GetAllCallbacks>b__2_0
bool UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::$GetAllCallbacks$b__2_0(System::Reflection::Assembly* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::<GetAllCallbacks>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllCallbacks>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c.<GetAllCallbacks>b__2_3
bool UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::$GetAllCallbacks$b__2_3(System::Reflection::AssemblyName* z) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::<GetAllCallbacks>b__2_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllCallbacks>b__2_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, z);
}
// Autogenerated method: UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c.<GetAllCallbacks>b__2_1
System::Collections::Generic::IEnumerable_1<UnityEngine::TestRunner::TestRunCallbackAttribute*>* UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::$GetAllCallbacks$b__2_1(System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::<GetAllCallbacks>b__2_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllCallbacks>b__2_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::TestRunner::TestRunCallbackAttribute*>*, false>(this, ___internal__method, assembly);
}
// Autogenerated method: UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c.<GetAllCallbacks>b__2_2
UnityEngine::TestRunner::ITestRunCallback* UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::$GetAllCallbacks$b__2_2(UnityEngine::TestRunner::TestRunCallbackAttribute* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c::<GetAllCallbacks>b__2_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllCallbacks>b__2_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestRunner::ITestRunCallback*, false>(this, ___internal__method, attribute);
}
// Writing MetadataGetter for method: TestRunCallbackListener::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&TestRunCallbackListener::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestRunCallbackListener::$$c::$GetAllCallbacks$b__2_0
// Il2CppName: <GetAllCallbacks>b__2_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TestRunCallbackListener::$$c::*)(System::Reflection::Assembly*)>(&TestRunCallbackListener::$$c::$GetAllCallbacks$b__2_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener::$$c*), "<GetAllCallbacks>b__2_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>()});
  }
};
// Writing MetadataGetter for method: TestRunCallbackListener::$$c::$GetAllCallbacks$b__2_3
// Il2CppName: <GetAllCallbacks>b__2_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TestRunCallbackListener::$$c::*)(System::Reflection::AssemblyName*)>(&TestRunCallbackListener::$$c::$GetAllCallbacks$b__2_3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener::$$c*), "<GetAllCallbacks>b__2_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::AssemblyName*>()});
  }
};
// Writing MetadataGetter for method: TestRunCallbackListener::$$c::$GetAllCallbacks$b__2_1
// Il2CppName: <GetAllCallbacks>b__2_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerable_1<UnityEngine::TestRunner::TestRunCallbackAttribute*>* (TestRunCallbackListener::$$c::*)(System::Reflection::Assembly*)>(&TestRunCallbackListener::$$c::$GetAllCallbacks$b__2_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener::$$c*), "<GetAllCallbacks>b__2_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>()});
  }
};
// Writing MetadataGetter for method: TestRunCallbackListener::$$c::$GetAllCallbacks$b__2_2
// Il2CppName: <GetAllCallbacks>b__2_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestRunner::ITestRunCallback* (TestRunCallbackListener::$$c::*)(UnityEngine::TestRunner::TestRunCallbackAttribute*)>(&TestRunCallbackListener::$$c::$GetAllCallbacks$b__2_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener::$$c*), "<GetAllCallbacks>b__2_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::TestRunCallbackAttribute*>()});
  }
};
// Writing MetadataGetter for method: TestRunCallbackListener::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::$$c::*)()>(&TestRunCallbackListener::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::$$c::*)()>(&TestRunCallbackListener::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c__DisplayClass4_0
#include "UnityEngine/TestRunner/Utils/TestRunCallbackListener_--c__DisplayClass4_0.hpp"
// Including type: NUnit.Framework.Interfaces.ITestResult
#include "NUnit/Framework/Interfaces/ITestResult.hpp"
// Including type: UnityEngine.TestRunner.ITestRunCallback
#include "UnityEngine/TestRunner/ITestRunCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c__DisplayClass4_0.<RunFinished>b__0
void UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c__DisplayClass4_0::$RunFinished$b__0(UnityEngine::TestRunner::ITestRunCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c__DisplayClass4_0::<RunFinished>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RunFinished>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callback);
}
// Writing MetadataGetter for method: TestRunCallbackListener::$$c__DisplayClass4_0::$RunFinished$b__0
// Il2CppName: <RunFinished>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::$$c__DisplayClass4_0::*)(UnityEngine::TestRunner::ITestRunCallback*)>(&TestRunCallbackListener::$$c__DisplayClass4_0::$RunFinished$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener::$$c__DisplayClass4_0*), "<RunFinished>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::ITestRunCallback*>()});
  }
};
// Writing MetadataGetter for method: TestRunCallbackListener::$$c__DisplayClass4_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::$$c__DisplayClass4_0::*)()>(&TestRunCallbackListener::$$c__DisplayClass4_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener::$$c__DisplayClass4_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::$$c__DisplayClass4_0::*)()>(&TestRunCallbackListener::$$c__DisplayClass4_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener::$$c__DisplayClass4_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c__DisplayClass5_0
#include "UnityEngine/TestRunner/Utils/TestRunCallbackListener_--c__DisplayClass5_0.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: UnityEngine.TestRunner.ITestRunCallback
#include "UnityEngine/TestRunner/ITestRunCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c__DisplayClass5_0.<TestStarted>b__0
void UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c__DisplayClass5_0::$TestStarted$b__0(UnityEngine::TestRunner::ITestRunCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c__DisplayClass5_0::<TestStarted>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TestStarted>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callback);
}
// Writing MetadataGetter for method: TestRunCallbackListener::$$c__DisplayClass5_0::$TestStarted$b__0
// Il2CppName: <TestStarted>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::$$c__DisplayClass5_0::*)(UnityEngine::TestRunner::ITestRunCallback*)>(&TestRunCallbackListener::$$c__DisplayClass5_0::$TestStarted$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener::$$c__DisplayClass5_0*), "<TestStarted>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::ITestRunCallback*>()});
  }
};
// Writing MetadataGetter for method: TestRunCallbackListener::$$c__DisplayClass5_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::$$c__DisplayClass5_0::*)()>(&TestRunCallbackListener::$$c__DisplayClass5_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener::$$c__DisplayClass5_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::$$c__DisplayClass5_0::*)()>(&TestRunCallbackListener::$$c__DisplayClass5_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener::$$c__DisplayClass5_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c__DisplayClass6_0
#include "UnityEngine/TestRunner/Utils/TestRunCallbackListener_--c__DisplayClass6_0.hpp"
// Including type: NUnit.Framework.Interfaces.ITestResult
#include "NUnit/Framework/Interfaces/ITestResult.hpp"
// Including type: UnityEngine.TestRunner.ITestRunCallback
#include "UnityEngine/TestRunner/ITestRunCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.Utils.TestRunCallbackListener/<>c__DisplayClass6_0.<TestFinished>b__0
void UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c__DisplayClass6_0::$TestFinished$b__0(UnityEngine::TestRunner::ITestRunCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::Utils::TestRunCallbackListener::$$c__DisplayClass6_0::<TestFinished>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TestFinished>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callback);
}
// Writing MetadataGetter for method: TestRunCallbackListener::$$c__DisplayClass6_0::$TestFinished$b__0
// Il2CppName: <TestFinished>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::$$c__DisplayClass6_0::*)(UnityEngine::TestRunner::ITestRunCallback*)>(&TestRunCallbackListener::$$c__DisplayClass6_0::$TestFinished$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener::$$c__DisplayClass6_0*), "<TestFinished>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::ITestRunCallback*>()});
  }
};
// Writing MetadataGetter for method: TestRunCallbackListener::$$c__DisplayClass6_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::$$c__DisplayClass6_0::*)()>(&TestRunCallbackListener::$$c__DisplayClass6_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener::$$c__DisplayClass6_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestRunCallbackListener::$$c__DisplayClass6_0::*)()>(&TestRunCallbackListener::$$c__DisplayClass6_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestRunCallbackListener::$$c__DisplayClass6_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestRunner.TestLaunchers.IRemoteTestResultDataFactory
#include "UnityEngine/TestRunner/TestLaunchers/IRemoteTestResultDataFactory.hpp"
// Including type: UnityEngine.TestRunner.TestLaunchers.RemoteTestResultDataWithTestData
#include "UnityEngine/TestRunner/TestLaunchers/RemoteTestResultDataWithTestData.hpp"
// Including type: NUnit.Framework.Interfaces.ITestResult
#include "NUnit/Framework/Interfaces/ITestResult.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.TestLaunchers.IRemoteTestResultDataFactory.CreateFromTestResult
UnityEngine::TestRunner::TestLaunchers::RemoteTestResultDataWithTestData* UnityEngine::TestRunner::TestLaunchers::IRemoteTestResultDataFactory::CreateFromTestResult(NUnit::Framework::Interfaces::ITestResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::IRemoteTestResultDataFactory::CreateFromTestResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateFromTestResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestRunner::TestLaunchers::RemoteTestResultDataWithTestData*, false>(this, ___internal__method, result);
}
// Autogenerated method: UnityEngine.TestRunner.TestLaunchers.IRemoteTestResultDataFactory.CreateFromTest
UnityEngine::TestRunner::TestLaunchers::RemoteTestResultDataWithTestData* UnityEngine::TestRunner::TestLaunchers::IRemoteTestResultDataFactory::CreateFromTest(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::IRemoteTestResultDataFactory::CreateFromTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateFromTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestRunner::TestLaunchers::RemoteTestResultDataWithTestData*, false>(this, ___internal__method, test);
}
// Writing MetadataGetter for method: IRemoteTestResultDataFactory::CreateFromTestResult
// Il2CppName: CreateFromTestResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestRunner::TestLaunchers::RemoteTestResultDataWithTestData* (IRemoteTestResultDataFactory::*)(NUnit::Framework::Interfaces::ITestResult*)>(&IRemoteTestResultDataFactory::CreateFromTestResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IRemoteTestResultDataFactory*), "CreateFromTestResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Writing MetadataGetter for method: IRemoteTestResultDataFactory::CreateFromTest
// Il2CppName: CreateFromTest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestRunner::TestLaunchers::RemoteTestResultDataWithTestData* (IRemoteTestResultDataFactory::*)(NUnit::Framework::Interfaces::ITest*)>(&IRemoteTestResultDataFactory::CreateFromTest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IRemoteTestResultDataFactory*), "CreateFromTest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestRunner.TestLaunchers.PlayerConnectionMessageIds
#include "UnityEngine/TestRunner/TestLaunchers/PlayerConnectionMessageIds.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.TestLaunchers.PlayerConnectionMessageIds.get_runStartedMessageId
System::Guid UnityEngine::TestRunner::TestLaunchers::PlayerConnectionMessageIds::get_runStartedMessageId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::PlayerConnectionMessageIds::get_runStartedMessageId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.TestLaunchers", "PlayerConnectionMessageIds", "get_runStartedMessageId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.TestLaunchers.PlayerConnectionMessageIds.get_runFinishedMessageId
System::Guid UnityEngine::TestRunner::TestLaunchers::PlayerConnectionMessageIds::get_runFinishedMessageId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::PlayerConnectionMessageIds::get_runFinishedMessageId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.TestLaunchers", "PlayerConnectionMessageIds", "get_runFinishedMessageId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.TestLaunchers.PlayerConnectionMessageIds.get_testStartedMessageId
System::Guid UnityEngine::TestRunner::TestLaunchers::PlayerConnectionMessageIds::get_testStartedMessageId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::PlayerConnectionMessageIds::get_testStartedMessageId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.TestLaunchers", "PlayerConnectionMessageIds", "get_testStartedMessageId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.TestLaunchers.PlayerConnectionMessageIds.get_testFinishedMessageId
System::Guid UnityEngine::TestRunner::TestLaunchers::PlayerConnectionMessageIds::get_testFinishedMessageId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::PlayerConnectionMessageIds::get_testFinishedMessageId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.TestLaunchers", "PlayerConnectionMessageIds", "get_testFinishedMessageId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.TestLaunchers.PlayerConnectionMessageIds.get_quitPlayerMessageId
System::Guid UnityEngine::TestRunner::TestLaunchers::PlayerConnectionMessageIds::get_quitPlayerMessageId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::PlayerConnectionMessageIds::get_quitPlayerMessageId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.TestLaunchers", "PlayerConnectionMessageIds", "get_quitPlayerMessageId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.TestLaunchers.PlayerConnectionMessageIds.get_playerAliveHeartbeat
System::Guid UnityEngine::TestRunner::TestLaunchers::PlayerConnectionMessageIds::get_playerAliveHeartbeat() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::PlayerConnectionMessageIds::get_playerAliveHeartbeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.TestLaunchers", "PlayerConnectionMessageIds", "get_playerAliveHeartbeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: PlayerConnectionMessageIds::get_runStartedMessageId
// Il2CppName: get_runStartedMessageId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Guid (*)()>(&PlayerConnectionMessageIds::get_runStartedMessageId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnectionMessageIds*), "get_runStartedMessageId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerConnectionMessageIds::get_runFinishedMessageId
// Il2CppName: get_runFinishedMessageId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Guid (*)()>(&PlayerConnectionMessageIds::get_runFinishedMessageId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnectionMessageIds*), "get_runFinishedMessageId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerConnectionMessageIds::get_testStartedMessageId
// Il2CppName: get_testStartedMessageId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Guid (*)()>(&PlayerConnectionMessageIds::get_testStartedMessageId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnectionMessageIds*), "get_testStartedMessageId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerConnectionMessageIds::get_testFinishedMessageId
// Il2CppName: get_testFinishedMessageId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Guid (*)()>(&PlayerConnectionMessageIds::get_testFinishedMessageId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnectionMessageIds*), "get_testFinishedMessageId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerConnectionMessageIds::get_quitPlayerMessageId
// Il2CppName: get_quitPlayerMessageId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Guid (*)()>(&PlayerConnectionMessageIds::get_quitPlayerMessageId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnectionMessageIds*), "get_quitPlayerMessageId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerConnectionMessageIds::get_playerAliveHeartbeat
// Il2CppName: get_playerAliveHeartbeat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Guid (*)()>(&PlayerConnectionMessageIds::get_playerAliveHeartbeat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnectionMessageIds*), "get_playerAliveHeartbeat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.TestLaunchers.RemoteTestData
#include "UnityEngine/TestRunner/TestLaunchers/RemoteTestData.hpp"
// Including type: UnityEngine.TestRunner.TestLaunchers.RemoteTestData/<>c
#include "UnityEngine/TestRunner/TestLaunchers/RemoteTestData_--c.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: RemoteTestData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestData::*)(NUnit::Framework::Interfaces::ITest*)>(&RemoteTestData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestData::*)(NUnit::Framework::Interfaces::ITest*)>(&RemoteTestData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.TestLaunchers.RemoteTestData/<>c
#include "UnityEngine/TestRunner/TestLaunchers/RemoteTestData_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.TestRunner.TestLaunchers.RemoteTestData/<>c <>9
UnityEngine::TestRunner::TestLaunchers::RemoteTestData::$$c* UnityEngine::TestRunner::TestLaunchers::RemoteTestData::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::RemoteTestData::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::TestRunner::TestLaunchers::RemoteTestData::$$c*>("UnityEngine.TestRunner.TestLaunchers", "RemoteTestData/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.TestRunner.TestLaunchers.RemoteTestData/<>c <>9
void UnityEngine::TestRunner::TestLaunchers::RemoteTestData::$$c::_set_$$9(UnityEngine::TestRunner::TestLaunchers::RemoteTestData::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::RemoteTestData::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.TestLaunchers", "RemoteTestData/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<NUnit.Framework.Interfaces.ITest,System.String> <>9__18_0
System::Func_2<NUnit::Framework::Interfaces::ITest*, ::Il2CppString*>* UnityEngine::TestRunner::TestLaunchers::RemoteTestData::$$c::_get_$$9__18_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::RemoteTestData::$$c::_get_$$9__18_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<NUnit::Framework::Interfaces::ITest*, ::Il2CppString*>*>("UnityEngine.TestRunner.TestLaunchers", "RemoteTestData/<>c", "<>9__18_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<NUnit.Framework.Interfaces.ITest,System.String> <>9__18_0
void UnityEngine::TestRunner::TestLaunchers::RemoteTestData::$$c::_set_$$9__18_0(System::Func_2<NUnit::Framework::Interfaces::ITest*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::RemoteTestData::$$c::_set_$$9__18_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.TestLaunchers", "RemoteTestData/<>c", "<>9__18_0", value)));
}
// Autogenerated method: UnityEngine.TestRunner.TestLaunchers.RemoteTestData/<>c..cctor
void UnityEngine::TestRunner::TestLaunchers::RemoteTestData::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::RemoteTestData::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.TestLaunchers", "RemoteTestData/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.TestLaunchers.RemoteTestData/<>c.<.ctor>b__18_0
::Il2CppString* UnityEngine::TestRunner::TestLaunchers::RemoteTestData::$$c::$_ctor$b__18_0(NUnit::Framework::Interfaces::ITest* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::RemoteTestData::$$c::<.ctor>b__18_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__18_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, t);
}
// Writing MetadataGetter for method: RemoteTestData::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&RemoteTestData::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestData::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RemoteTestData::$$c::$_ctor$b__18_0
// Il2CppName: <.ctor>b__18_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (RemoteTestData::$$c::*)(NUnit::Framework::Interfaces::ITest*)>(&RemoteTestData::$$c::$_ctor$b__18_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestData::$$c*), "<.ctor>b__18_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: RemoteTestData::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestData::$$c::*)()>(&RemoteTestData::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestData::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestData::$$c::*)()>(&RemoteTestData::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestData::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.TestLaunchers.RemoteTestResultData
#include "UnityEngine/TestRunner/TestLaunchers/RemoteTestResultData.hpp"
// Including type: UnityEngine.TestRunner.TestLaunchers.RemoteTestResultData/<>c
#include "UnityEngine/TestRunner/TestLaunchers/RemoteTestResultData_--c.hpp"
// Including type: NUnit.Framework.Interfaces.ITestResult
#include "NUnit/Framework/Interfaces/ITestResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: RemoteTestResultData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultData::*)(NUnit::Framework::Interfaces::ITestResult*)>(&RemoteTestResultData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultData::*)(NUnit::Framework::Interfaces::ITestResult*)>(&RemoteTestResultData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.TestLaunchers.RemoteTestResultData/<>c
#include "UnityEngine/TestRunner/TestLaunchers/RemoteTestResultData_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: NUnit.Framework.Interfaces.ITestResult
#include "NUnit/Framework/Interfaces/ITestResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.TestRunner.TestLaunchers.RemoteTestResultData/<>c <>9
UnityEngine::TestRunner::TestLaunchers::RemoteTestResultData::$$c* UnityEngine::TestRunner::TestLaunchers::RemoteTestResultData::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::RemoteTestResultData::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::TestRunner::TestLaunchers::RemoteTestResultData::$$c*>("UnityEngine.TestRunner.TestLaunchers", "RemoteTestResultData/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.TestRunner.TestLaunchers.RemoteTestResultData/<>c <>9
void UnityEngine::TestRunner::TestLaunchers::RemoteTestResultData::$$c::_set_$$9(UnityEngine::TestRunner::TestLaunchers::RemoteTestResultData::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::RemoteTestResultData::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.TestLaunchers", "RemoteTestResultData/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<NUnit.Framework.Interfaces.ITestResult,System.String> <>9__19_0
System::Func_2<NUnit::Framework::Interfaces::ITestResult*, ::Il2CppString*>* UnityEngine::TestRunner::TestLaunchers::RemoteTestResultData::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::RemoteTestResultData::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<NUnit::Framework::Interfaces::ITestResult*, ::Il2CppString*>*>("UnityEngine.TestRunner.TestLaunchers", "RemoteTestResultData/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<NUnit.Framework.Interfaces.ITestResult,System.String> <>9__19_0
void UnityEngine::TestRunner::TestLaunchers::RemoteTestResultData::$$c::_set_$$9__19_0(System::Func_2<NUnit::Framework::Interfaces::ITestResult*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::RemoteTestResultData::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.TestLaunchers", "RemoteTestResultData/<>c", "<>9__19_0", value)));
}
// Autogenerated method: UnityEngine.TestRunner.TestLaunchers.RemoteTestResultData/<>c..cctor
void UnityEngine::TestRunner::TestLaunchers::RemoteTestResultData::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::RemoteTestResultData::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.TestLaunchers", "RemoteTestResultData/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.TestLaunchers.RemoteTestResultData/<>c.<.ctor>b__19_0
::Il2CppString* UnityEngine::TestRunner::TestLaunchers::RemoteTestResultData::$$c::$_ctor$b__19_0(NUnit::Framework::Interfaces::ITestResult* child) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::RemoteTestResultData::$$c::<.ctor>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, child);
}
// Writing MetadataGetter for method: RemoteTestResultData::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&RemoteTestResultData::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultData::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RemoteTestResultData::$$c::$_ctor$b__19_0
// Il2CppName: <.ctor>b__19_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (RemoteTestResultData::$$c::*)(NUnit::Framework::Interfaces::ITestResult*)>(&RemoteTestResultData::$$c::$_ctor$b__19_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultData::$$c*), "<.ctor>b__19_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Writing MetadataGetter for method: RemoteTestResultData::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultData::$$c::*)()>(&RemoteTestResultData::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultData::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultData::$$c::*)()>(&RemoteTestResultData::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultData::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.TestLaunchers.RemoteTestResultDataFactory
#include "UnityEngine/TestRunner/TestLaunchers/RemoteTestResultDataFactory.hpp"
// Including type: UnityEngine.TestRunner.TestLaunchers.RemoteTestResultDataWithTestData
#include "UnityEngine/TestRunner/TestLaunchers/RemoteTestResultDataWithTestData.hpp"
// Including type: NUnit.Framework.Interfaces.ITestResult
#include "NUnit/Framework/Interfaces/ITestResult.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: UnityEngine.TestRunner.TestLaunchers.RemoteTestData
#include "UnityEngine/TestRunner/TestLaunchers/RemoteTestData.hpp"
// Including type: UnityEngine.TestRunner.TestLaunchers.RemoteTestResultData
#include "UnityEngine/TestRunner/TestLaunchers/RemoteTestResultData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.TestLaunchers.RemoteTestResultDataFactory.CreateFromTestResult
UnityEngine::TestRunner::TestLaunchers::RemoteTestResultDataWithTestData* UnityEngine::TestRunner::TestLaunchers::RemoteTestResultDataFactory::CreateFromTestResult(NUnit::Framework::Interfaces::ITestResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::RemoteTestResultDataFactory::CreateFromTestResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateFromTestResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestRunner::TestLaunchers::RemoteTestResultDataWithTestData*, false>(this, ___internal__method, result);
}
// Autogenerated method: UnityEngine.TestRunner.TestLaunchers.RemoteTestResultDataFactory.CreateFromTest
UnityEngine::TestRunner::TestLaunchers::RemoteTestResultDataWithTestData* UnityEngine::TestRunner::TestLaunchers::RemoteTestResultDataFactory::CreateFromTest(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::RemoteTestResultDataFactory::CreateFromTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateFromTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestRunner::TestLaunchers::RemoteTestResultDataWithTestData*, false>(this, ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.TestLaunchers.RemoteTestResultDataFactory.CreateTestDataList
::Array<UnityEngine::TestRunner::TestLaunchers::RemoteTestData*>* UnityEngine::TestRunner::TestLaunchers::RemoteTestResultDataFactory::CreateTestDataList(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::RemoteTestResultDataFactory::CreateTestDataList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTestDataList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::TestRunner::TestLaunchers::RemoteTestData*>*, false>(this, ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.TestLaunchers.RemoteTestResultDataFactory.CreateTestResultDataList
::Array<UnityEngine::TestRunner::TestLaunchers::RemoteTestResultData*>* UnityEngine::TestRunner::TestLaunchers::RemoteTestResultDataFactory::CreateTestResultDataList(NUnit::Framework::Interfaces::ITestResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::TestLaunchers::RemoteTestResultDataFactory::CreateTestResultDataList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.TestLaunchers", "RemoteTestResultDataFactory", "CreateTestResultDataList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::TestRunner::TestLaunchers::RemoteTestResultData*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result);
}
// Writing MetadataGetter for method: RemoteTestResultDataFactory::CreateFromTestResult
// Il2CppName: CreateFromTestResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestRunner::TestLaunchers::RemoteTestResultDataWithTestData* (RemoteTestResultDataFactory::*)(NUnit::Framework::Interfaces::ITestResult*)>(&RemoteTestResultDataFactory::CreateFromTestResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultDataFactory*), "CreateFromTestResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Writing MetadataGetter for method: RemoteTestResultDataFactory::CreateFromTest
// Il2CppName: CreateFromTest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestRunner::TestLaunchers::RemoteTestResultDataWithTestData* (RemoteTestResultDataFactory::*)(NUnit::Framework::Interfaces::ITest*)>(&RemoteTestResultDataFactory::CreateFromTest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultDataFactory*), "CreateFromTest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: RemoteTestResultDataFactory::CreateTestDataList
// Il2CppName: CreateTestDataList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::TestRunner::TestLaunchers::RemoteTestData*>* (RemoteTestResultDataFactory::*)(NUnit::Framework::Interfaces::ITest*)>(&RemoteTestResultDataFactory::CreateTestDataList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultDataFactory*), "CreateTestDataList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: RemoteTestResultDataFactory::CreateTestResultDataList
// Il2CppName: CreateTestResultDataList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::TestRunner::TestLaunchers::RemoteTestResultData*>* (*)(NUnit::Framework::Interfaces::ITestResult*)>(&RemoteTestResultDataFactory::CreateTestResultDataList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultDataFactory*), "CreateTestResultDataList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Writing MetadataGetter for method: RemoteTestResultDataFactory::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultDataFactory::*)()>(&RemoteTestResultDataFactory::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultDataFactory*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultDataFactory::*)()>(&RemoteTestResultDataFactory::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultDataFactory*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.TestLaunchers.RemoteTestResultDataWithTestData
#include "UnityEngine/TestRunner/TestLaunchers/RemoteTestResultDataWithTestData.hpp"
// Including type: UnityEngine.TestRunner.TestLaunchers.RemoteTestResultData
#include "UnityEngine/TestRunner/TestLaunchers/RemoteTestResultData.hpp"
// Including type: UnityEngine.TestRunner.TestLaunchers.RemoteTestData
#include "UnityEngine/TestRunner/TestLaunchers/RemoteTestData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: RemoteTestResultDataWithTestData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultDataWithTestData::*)()>(&RemoteTestResultDataWithTestData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultDataWithTestData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultDataWithTestData::*)()>(&RemoteTestResultDataWithTestData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultDataWithTestData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.NUnitExtensions.TestExtensions
#include "UnityEngine/TestRunner/NUnitExtensions/TestExtensions.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.GetTestCategories
System::Collections::Generic::IEnumerable_1<::Il2CppString*>* UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetTestCategories(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetTestCategories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "GetTestCategories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.GetAllCategoriesFromTest
System::Collections::Generic::List_1<::Il2CppString*>* UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetAllCategoriesFromTest(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetAllCategoriesFromTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "GetAllCategoriesFromTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.ParseForNameDuplicates
void UnityEngine::TestRunner::NUnitExtensions::TestExtensions::ParseForNameDuplicates(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::TestExtensions::ParseForNameDuplicates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "ParseForNameDuplicates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.GetChildIndex
int UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetChildIndex(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetChildIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "GetChildIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.HasChildIndex
bool UnityEngine::TestRunner::NUnitExtensions::TestExtensions::HasChildIndex(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::TestExtensions::HasChildIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "HasChildIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.GetAncestorPath
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetAncestorPath(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetAncestorPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "GetAncestorPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.GetUniqueName
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetUniqueName(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetUniqueName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "GetUniqueName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.GetFullName
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetFullName(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetFullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "GetFullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.GetSkipReason
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetSkipReason(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetSkipReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "GetSkipReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.GetParentId
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetParentId(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetParentId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "GetParentId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.GetParentFullName
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetParentFullName(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetParentFullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "GetParentFullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.GetParentUniqueName
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetParentUniqueName(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetParentUniqueName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "GetParentUniqueName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Writing MetadataGetter for method: TestExtensions::GetTestCategories
// Il2CppName: GetTestCategories
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerable_1<::Il2CppString*>* (*)(NUnit::Framework::Interfaces::ITest*)>(&TestExtensions::GetTestCategories)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestExtensions*), "GetTestCategories", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: TestExtensions::GetAllCategoriesFromTest
// Il2CppName: GetAllCategoriesFromTest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<::Il2CppString*>* (*)(NUnit::Framework::Interfaces::ITest*)>(&TestExtensions::GetAllCategoriesFromTest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestExtensions*), "GetAllCategoriesFromTest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: TestExtensions::ParseForNameDuplicates
// Il2CppName: ParseForNameDuplicates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(NUnit::Framework::Interfaces::ITest*)>(&TestExtensions::ParseForNameDuplicates)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestExtensions*), "ParseForNameDuplicates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: TestExtensions::GetChildIndex
// Il2CppName: GetChildIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(NUnit::Framework::Interfaces::ITest*)>(&TestExtensions::GetChildIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestExtensions*), "GetChildIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: TestExtensions::HasChildIndex
// Il2CppName: HasChildIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(NUnit::Framework::Interfaces::ITest*)>(&TestExtensions::HasChildIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestExtensions*), "HasChildIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: TestExtensions::GetAncestorPath
// Il2CppName: GetAncestorPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(NUnit::Framework::Interfaces::ITest*)>(&TestExtensions::GetAncestorPath)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestExtensions*), "GetAncestorPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: TestExtensions::GetUniqueName
// Il2CppName: GetUniqueName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(NUnit::Framework::Interfaces::ITest*)>(&TestExtensions::GetUniqueName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestExtensions*), "GetUniqueName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: TestExtensions::GetFullName
// Il2CppName: GetFullName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(NUnit::Framework::Interfaces::ITest*)>(&TestExtensions::GetFullName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestExtensions*), "GetFullName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: TestExtensions::GetSkipReason
// Il2CppName: GetSkipReason
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(NUnit::Framework::Interfaces::ITest*)>(&TestExtensions::GetSkipReason)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestExtensions*), "GetSkipReason", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: TestExtensions::GetParentId
// Il2CppName: GetParentId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(NUnit::Framework::Interfaces::ITest*)>(&TestExtensions::GetParentId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestExtensions*), "GetParentId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: TestExtensions::GetParentFullName
// Il2CppName: GetParentFullName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(NUnit::Framework::Interfaces::ITest*)>(&TestExtensions::GetParentFullName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestExtensions*), "GetParentFullName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: TestExtensions::GetParentUniqueName
// Il2CppName: GetParentUniqueName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(NUnit::Framework::Interfaces::ITest*)>(&TestExtensions::GetParentUniqueName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestExtensions*), "GetParentUniqueName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.NUnitExtensions.TestResultExtensions
#include "UnityEngine/TestRunner/NUnitExtensions/TestResultExtensions.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: NUnit.Framework.Interfaces.ResultState
#include "NUnit/Framework/Interfaces/ResultState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestResultExtensions.RecordPrefixedException
void UnityEngine::TestRunner::NUnitExtensions::TestResultExtensions::RecordPrefixedException(NUnit::Framework::Internal::TestResult* testResult, ::Il2CppString* prefix, System::Exception* ex, NUnit::Framework::Interfaces::ResultState* resultState) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::TestResultExtensions::RecordPrefixedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestResultExtensions", "RecordPrefixedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testResult), ::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ex), ::il2cpp_utils::ExtractType(resultState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, testResult, prefix, ex, resultState);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestResultExtensions.RecordPrefixedError
void UnityEngine::TestRunner::NUnitExtensions::TestResultExtensions::RecordPrefixedError(NUnit::Framework::Internal::TestResult* testResult, ::Il2CppString* prefix, ::Il2CppString* error, NUnit::Framework::Interfaces::ResultState* resultState) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::TestResultExtensions::RecordPrefixedError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestResultExtensions", "RecordPrefixedError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testResult), ::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(error), ::il2cpp_utils::ExtractType(resultState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, testResult, prefix, error, resultState);
}
// Writing MetadataGetter for method: TestResultExtensions::RecordPrefixedException
// Il2CppName: RecordPrefixedException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(NUnit::Framework::Internal::TestResult*, ::Il2CppString*, System::Exception*, NUnit::Framework::Interfaces::ResultState*)>(&TestResultExtensions::RecordPrefixedException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestResultExtensions*), "RecordPrefixedException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestResult*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Exception*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ResultState*>()});
  }
};
// Writing MetadataGetter for method: TestResultExtensions::RecordPrefixedError
// Il2CppName: RecordPrefixedError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(NUnit::Framework::Internal::TestResult*, ::Il2CppString*, ::Il2CppString*, NUnit::Framework::Interfaces::ResultState*)>(&TestResultExtensions::RecordPrefixedError)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestResultExtensions*), "RecordPrefixedError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestResult*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ResultState*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/CompositeWorkItem.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/UnityWorkItemOrderComparer
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/CompositeWorkItem_UnityWorkItemOrderComparer.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/<PerformWork>d__12
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/CompositeWorkItem_-PerformWork-d__12.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/<RunChildren>d__16
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/CompositeWorkItem_-RunChildren-d__16.hpp"
// Including type: NUnit.Framework.Internal.TestSuite
#include "NUnit/Framework/Internal/TestSuite.hpp"
// Including type: NUnit.Framework.Internal.TestSuiteResult
#include "NUnit/Framework/Internal/TestSuiteResult.hpp"
// Including type: NUnit.Framework.Interfaces.ITestFilter
#include "NUnit/Framework/Interfaces/ITestFilter.hpp"
// Including type: NUnit.Framework.Internal.Commands.TestCommand
#include "NUnit/Framework/Internal/Commands/TestCommand.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NUnit.Framework.Internal.Execution.CountdownEvent
#include "NUnit/Framework/Internal/Execution/CountdownEvent.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.WorkItemFactory
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/WorkItemFactory.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: NUnit.Framework.Interfaces.ResultState
#include "NUnit/Framework/Interfaces/ResultState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem.get_Children
System::Collections::Generic::List_1<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem*>* UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::get_Children");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Children", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem.set_Children
void UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::set_Children(System::Collections::Generic::List_1<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::set_Children");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Children", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem.CheckForCancellation
bool UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::CheckForCancellation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::CheckForCancellation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForCancellation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem.InitializeSetUpAndTearDownCommands
void UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::InitializeSetUpAndTearDownCommands() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::InitializeSetUpAndTearDownCommands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeSetUpAndTearDownCommands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem.PerformOneTimeSetUp
void UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::PerformOneTimeSetUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::PerformOneTimeSetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformOneTimeSetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem.RunChildren
System::Collections::IEnumerable* UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::RunChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::RunChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem.CreateChildWorkItems
void UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::CreateChildWorkItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::CreateChildWorkItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateChildWorkItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem.SortChildren
void UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::SortChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::SortChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem.SkipFixture
void UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::SkipFixture(NUnit::Framework::Interfaces::ResultState* resultState, ::Il2CppString* message, ::Il2CppString* stackTrace) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::SkipFixture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipFixture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultState), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(stackTrace)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, resultState, message, stackTrace);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem.SkipChildren
void UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::SkipChildren(NUnit::Framework::Internal::TestSuite* suite, NUnit::Framework::Interfaces::ResultState* resultState, ::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::SkipChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(suite), ::il2cpp_utils::ExtractType(resultState), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, suite, resultState, message);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem.PerformOneTimeTearDown
void UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::PerformOneTimeTearDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::PerformOneTimeTearDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformOneTimeTearDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem.GetSkipReason
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::GetSkipReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::GetSkipReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSkipReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem.GetProviderStackTrace
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::GetProviderStackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::GetProviderStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProviderStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem.CountDownChildTest
void UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::CountDownChildTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::CountDownChildTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CountDownChildTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem.PerformWork
System::Collections::IEnumerable* UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::PerformWork() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::PerformWork");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformWork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem.Cancel
void UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::Cancel(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::Cancel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, force);
}
// Writing MetadataGetter for method: CompositeWorkItem::get_Children
// Il2CppName: get_Children
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem*>* (CompositeWorkItem::*)()>(&CompositeWorkItem::get_Children)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem*), "get_Children", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::set_Children
// Il2CppName: set_Children
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::*)(System::Collections::Generic::List_1<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem*>*)>(&CompositeWorkItem::set_Children)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem*), "set_Children", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem*>*>()});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::*)(NUnit::Framework::Internal::TestSuite*, NUnit::Framework::Interfaces::ITestFilter*, UnityEngine::TestRunner::NUnitExtensions::Runner::WorkItemFactory*)>(&CompositeWorkItem::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestSuite*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestFilter*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::WorkItemFactory*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::*)(NUnit::Framework::Internal::TestSuite*, NUnit::Framework::Interfaces::ITestFilter*, UnityEngine::TestRunner::NUnitExtensions::Runner::WorkItemFactory*)>(&CompositeWorkItem::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestSuite*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestFilter*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::WorkItemFactory*>()});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::CheckForCancellation
// Il2CppName: CheckForCancellation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CompositeWorkItem::*)()>(&CompositeWorkItem::CheckForCancellation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem*), "CheckForCancellation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::InitializeSetUpAndTearDownCommands
// Il2CppName: InitializeSetUpAndTearDownCommands
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::*)()>(&CompositeWorkItem::InitializeSetUpAndTearDownCommands)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem*), "InitializeSetUpAndTearDownCommands", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::PerformOneTimeSetUp
// Il2CppName: PerformOneTimeSetUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::*)()>(&CompositeWorkItem::PerformOneTimeSetUp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem*), "PerformOneTimeSetUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::RunChildren
// Il2CppName: RunChildren
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerable* (CompositeWorkItem::*)()>(&CompositeWorkItem::RunChildren)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem*), "RunChildren", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::CreateChildWorkItems
// Il2CppName: CreateChildWorkItems
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::*)()>(&CompositeWorkItem::CreateChildWorkItems)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem*), "CreateChildWorkItems", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::SortChildren
// Il2CppName: SortChildren
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::*)()>(&CompositeWorkItem::SortChildren)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem*), "SortChildren", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::SkipFixture
// Il2CppName: SkipFixture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::*)(NUnit::Framework::Interfaces::ResultState*, ::Il2CppString*, ::Il2CppString*)>(&CompositeWorkItem::SkipFixture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem*), "SkipFixture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ResultState*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::SkipChildren
// Il2CppName: SkipChildren
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::*)(NUnit::Framework::Internal::TestSuite*, NUnit::Framework::Interfaces::ResultState*, ::Il2CppString*)>(&CompositeWorkItem::SkipChildren)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem*), "SkipChildren", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestSuite*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ResultState*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::PerformOneTimeTearDown
// Il2CppName: PerformOneTimeTearDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::*)()>(&CompositeWorkItem::PerformOneTimeTearDown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem*), "PerformOneTimeTearDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::GetSkipReason
// Il2CppName: GetSkipReason
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (CompositeWorkItem::*)()>(&CompositeWorkItem::GetSkipReason)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem*), "GetSkipReason", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::GetProviderStackTrace
// Il2CppName: GetProviderStackTrace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (CompositeWorkItem::*)()>(&CompositeWorkItem::GetProviderStackTrace)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem*), "GetProviderStackTrace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::CountDownChildTest
// Il2CppName: CountDownChildTest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::*)()>(&CompositeWorkItem::CountDownChildTest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem*), "CountDownChildTest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::PerformWork
// Il2CppName: PerformWork
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerable* (CompositeWorkItem::*)()>(&CompositeWorkItem::PerformWork)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem*), "PerformWork", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::Cancel
// Il2CppName: Cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::*)(bool)>(&CompositeWorkItem::Cancel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem*), "Cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/UnityWorkItemOrderComparer
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/CompositeWorkItem_UnityWorkItemOrderComparer.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityWorkItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/UnityWorkItemOrderComparer.Compare
int UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::UnityWorkItemOrderComparer::Compare(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem* x, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::UnityWorkItemOrderComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Writing MetadataGetter for method: CompositeWorkItem::UnityWorkItemOrderComparer::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CompositeWorkItem::UnityWorkItemOrderComparer::*)(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem*, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem*)>(&CompositeWorkItem::UnityWorkItemOrderComparer::Compare)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::UnityWorkItemOrderComparer*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem*>()});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::UnityWorkItemOrderComparer::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::UnityWorkItemOrderComparer::*)()>(&CompositeWorkItem::UnityWorkItemOrderComparer::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::UnityWorkItemOrderComparer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::UnityWorkItemOrderComparer::*)()>(&CompositeWorkItem::UnityWorkItemOrderComparer::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::UnityWorkItemOrderComparer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/<PerformWork>d__12
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/CompositeWorkItem_-PerformWork-d__12.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/<PerformWork>d__12.System.IDisposable.Dispose
void UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$PerformWork$d__12::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$PerformWork$d__12::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/<PerformWork>d__12.MoveNext
bool UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$PerformWork$d__12::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$PerformWork$d__12::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/<PerformWork>d__12.<>m__Finally1
void UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$PerformWork$d__12::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$PerformWork$d__12::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/<PerformWork>d__12.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$PerformWork$d__12::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$PerformWork$d__12::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/<PerformWork>d__12.System.Collections.IEnumerator.Reset
void UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$PerformWork$d__12::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$PerformWork$d__12::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/<PerformWork>d__12.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$PerformWork$d__12::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$PerformWork$d__12::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/<PerformWork>d__12.System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$PerformWork$d__12::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$PerformWork$d__12::System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/<PerformWork>d__12.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$PerformWork$d__12::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$PerformWork$d__12::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CompositeWorkItem::$PerformWork$d__12::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::$PerformWork$d__12::*)(int)>(&CompositeWorkItem::$PerformWork$d__12::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::$PerformWork$d__12*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::$PerformWork$d__12::*)(int)>(&CompositeWorkItem::$PerformWork$d__12::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::$PerformWork$d__12*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::$PerformWork$d__12::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::$PerformWork$d__12::*)()>(&CompositeWorkItem::$PerformWork$d__12::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::$PerformWork$d__12*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::$PerformWork$d__12::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CompositeWorkItem::$PerformWork$d__12::*)()>(&CompositeWorkItem::$PerformWork$d__12::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::$PerformWork$d__12*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::$PerformWork$d__12::$$m__Finally1
// Il2CppName: <>m__Finally1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::$PerformWork$d__12::*)()>(&CompositeWorkItem::$PerformWork$d__12::$$m__Finally1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::$PerformWork$d__12*), "<>m__Finally1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::$PerformWork$d__12::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (CompositeWorkItem::$PerformWork$d__12::*)()>(&CompositeWorkItem::$PerformWork$d__12::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::$PerformWork$d__12*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::$PerformWork$d__12::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::$PerformWork$d__12::*)()>(&CompositeWorkItem::$PerformWork$d__12::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::$PerformWork$d__12*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::$PerformWork$d__12::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (CompositeWorkItem::$PerformWork$d__12::*)()>(&CompositeWorkItem::$PerformWork$d__12::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::$PerformWork$d__12*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::$PerformWork$d__12::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator
// Il2CppName: System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* (CompositeWorkItem::$PerformWork$d__12::*)()>(&CompositeWorkItem::$PerformWork$d__12::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::$PerformWork$d__12*), "System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::$PerformWork$d__12::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (CompositeWorkItem::$PerformWork$d__12::*)()>(&CompositeWorkItem::$PerformWork$d__12::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::$PerformWork$d__12*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/<RunChildren>d__16
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/CompositeWorkItem_-RunChildren-d__16.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityWorkItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/<RunChildren>d__16.System.IDisposable.Dispose
void UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$RunChildren$d__16::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$RunChildren$d__16::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/<RunChildren>d__16.MoveNext
bool UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$RunChildren$d__16::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$RunChildren$d__16::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/<RunChildren>d__16.<>m__Finally1
void UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$RunChildren$d__16::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$RunChildren$d__16::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/<RunChildren>d__16.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$RunChildren$d__16::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$RunChildren$d__16::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/<RunChildren>d__16.System.Collections.IEnumerator.Reset
void UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$RunChildren$d__16::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$RunChildren$d__16::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/<RunChildren>d__16.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$RunChildren$d__16::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$RunChildren$d__16::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/<RunChildren>d__16.System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$RunChildren$d__16::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$RunChildren$d__16::System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CompositeWorkItem/<RunChildren>d__16.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$RunChildren$d__16::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CompositeWorkItem::$RunChildren$d__16::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CompositeWorkItem::$RunChildren$d__16::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::$RunChildren$d__16::*)(int)>(&CompositeWorkItem::$RunChildren$d__16::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::$RunChildren$d__16*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::$RunChildren$d__16::*)(int)>(&CompositeWorkItem::$RunChildren$d__16::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::$RunChildren$d__16*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::$RunChildren$d__16::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::$RunChildren$d__16::*)()>(&CompositeWorkItem::$RunChildren$d__16::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::$RunChildren$d__16*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::$RunChildren$d__16::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CompositeWorkItem::$RunChildren$d__16::*)()>(&CompositeWorkItem::$RunChildren$d__16::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::$RunChildren$d__16*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::$RunChildren$d__16::$$m__Finally1
// Il2CppName: <>m__Finally1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::$RunChildren$d__16::*)()>(&CompositeWorkItem::$RunChildren$d__16::$$m__Finally1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::$RunChildren$d__16*), "<>m__Finally1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::$RunChildren$d__16::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (CompositeWorkItem::$RunChildren$d__16::*)()>(&CompositeWorkItem::$RunChildren$d__16::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::$RunChildren$d__16*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::$RunChildren$d__16::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompositeWorkItem::$RunChildren$d__16::*)()>(&CompositeWorkItem::$RunChildren$d__16::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::$RunChildren$d__16*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::$RunChildren$d__16::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (CompositeWorkItem::$RunChildren$d__16::*)()>(&CompositeWorkItem::$RunChildren$d__16::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::$RunChildren$d__16*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::$RunChildren$d__16::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator
// Il2CppName: System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* (CompositeWorkItem::$RunChildren$d__16::*)()>(&CompositeWorkItem::$RunChildren$d__16::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::$RunChildren$d__16*), "System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompositeWorkItem::$RunChildren$d__16::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (CompositeWorkItem::$RunChildren$d__16::*)()>(&CompositeWorkItem::$RunChildren$d__16::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompositeWorkItem::$RunChildren$d__16*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.CoroutineTestWorkItem
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/CoroutineTestWorkItem.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.CoroutineTestWorkItem/<PerformWork>d__6
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/CoroutineTestWorkItem_-PerformWork-d__6.hpp"
// Including type: NUnit.Framework.Internal.Commands.TestCommand
#include "NUnit/Framework/Internal/Commands/TestCommand.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
// Including type: NUnit.Framework.Interfaces.ITestFilter
#include "NUnit/Framework/Interfaces/ITestFilter.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.MonoBehaviour m_MonoBehaviourCoroutineRunner
UnityEngine::MonoBehaviour* UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::_get_m_MonoBehaviourCoroutineRunner() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::_get_m_MonoBehaviourCoroutineRunner");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MonoBehaviour*>("UnityEngine.TestRunner.NUnitExtensions.Runner", "CoroutineTestWorkItem", "m_MonoBehaviourCoroutineRunner"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.MonoBehaviour m_MonoBehaviourCoroutineRunner
void UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::_set_m_MonoBehaviourCoroutineRunner(UnityEngine::MonoBehaviour* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::_set_m_MonoBehaviourCoroutineRunner");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.NUnitExtensions.Runner", "CoroutineTestWorkItem", "m_MonoBehaviourCoroutineRunner", value));
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CoroutineTestWorkItem.get_monoBehaviourCoroutineRunner
UnityEngine::MonoBehaviour* UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::get_monoBehaviourCoroutineRunner() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::get_monoBehaviourCoroutineRunner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions.Runner", "CoroutineTestWorkItem", "get_monoBehaviourCoroutineRunner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::MonoBehaviour*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CoroutineTestWorkItem.set_monoBehaviourCoroutineRunner
void UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::set_monoBehaviourCoroutineRunner(UnityEngine::MonoBehaviour* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::set_monoBehaviourCoroutineRunner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions.Runner", "CoroutineTestWorkItem", "set_monoBehaviourCoroutineRunner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CoroutineTestWorkItem.PerformWork
System::Collections::IEnumerable* UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::PerformWork() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::PerformWork");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformWork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerable*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CoroutineTestWorkItem::get_monoBehaviourCoroutineRunner
// Il2CppName: get_monoBehaviourCoroutineRunner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::MonoBehaviour* (*)()>(&CoroutineTestWorkItem::get_monoBehaviourCoroutineRunner)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineTestWorkItem*), "get_monoBehaviourCoroutineRunner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineTestWorkItem::set_monoBehaviourCoroutineRunner
// Il2CppName: set_monoBehaviourCoroutineRunner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::MonoBehaviour*)>(&CoroutineTestWorkItem::set_monoBehaviourCoroutineRunner)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineTestWorkItem*), "set_monoBehaviourCoroutineRunner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::MonoBehaviour*>()});
  }
};
// Writing MetadataGetter for method: CoroutineTestWorkItem::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineTestWorkItem::*)(NUnit::Framework::Internal::TestMethod*, NUnit::Framework::Interfaces::ITestFilter*)>(&CoroutineTestWorkItem::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineTestWorkItem*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestMethod*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestFilter*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineTestWorkItem::*)(NUnit::Framework::Internal::TestMethod*, NUnit::Framework::Interfaces::ITestFilter*)>(&CoroutineTestWorkItem::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineTestWorkItem*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestMethod*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestFilter*>()});
  }
};
// Writing MetadataGetter for method: CoroutineTestWorkItem::PerformWork
// Il2CppName: PerformWork
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerable* (CoroutineTestWorkItem::*)()>(&CoroutineTestWorkItem::PerformWork)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineTestWorkItem*), "PerformWork", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.CoroutineTestWorkItem/<PerformWork>d__6
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/CoroutineTestWorkItem_-PerformWork-d__6.hpp"
// Including type: UnityEngine.TestTools.Utils.CoroutineRunner
#include "UnityEngine/TestTools/Utils/CoroutineRunner.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CoroutineTestWorkItem/<PerformWork>d__6.System.IDisposable.Dispose
void UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::$PerformWork$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::$PerformWork$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CoroutineTestWorkItem/<PerformWork>d__6.MoveNext
bool UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::$PerformWork$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::$PerformWork$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CoroutineTestWorkItem/<PerformWork>d__6.<>m__Finally1
void UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::$PerformWork$d__6::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::$PerformWork$d__6::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CoroutineTestWorkItem/<PerformWork>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::$PerformWork$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::$PerformWork$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CoroutineTestWorkItem/<PerformWork>d__6.System.Collections.IEnumerator.Reset
void UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::$PerformWork$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::$PerformWork$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CoroutineTestWorkItem/<PerformWork>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::$PerformWork$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::$PerformWork$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CoroutineTestWorkItem/<PerformWork>d__6.System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::$PerformWork$d__6::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::$PerformWork$d__6::System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.CoroutineTestWorkItem/<PerformWork>d__6.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::$PerformWork$d__6::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::CoroutineTestWorkItem::$PerformWork$d__6::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CoroutineTestWorkItem::$PerformWork$d__6::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineTestWorkItem::$PerformWork$d__6::*)(int)>(&CoroutineTestWorkItem::$PerformWork$d__6::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineTestWorkItem::$PerformWork$d__6*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineTestWorkItem::$PerformWork$d__6::*)(int)>(&CoroutineTestWorkItem::$PerformWork$d__6::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineTestWorkItem::$PerformWork$d__6*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CoroutineTestWorkItem::$PerformWork$d__6::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineTestWorkItem::$PerformWork$d__6::*)()>(&CoroutineTestWorkItem::$PerformWork$d__6::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineTestWorkItem::$PerformWork$d__6*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineTestWorkItem::$PerformWork$d__6::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CoroutineTestWorkItem::$PerformWork$d__6::*)()>(&CoroutineTestWorkItem::$PerformWork$d__6::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineTestWorkItem::$PerformWork$d__6*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineTestWorkItem::$PerformWork$d__6::$$m__Finally1
// Il2CppName: <>m__Finally1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineTestWorkItem::$PerformWork$d__6::*)()>(&CoroutineTestWorkItem::$PerformWork$d__6::$$m__Finally1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineTestWorkItem::$PerformWork$d__6*), "<>m__Finally1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineTestWorkItem::$PerformWork$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (CoroutineTestWorkItem::$PerformWork$d__6::*)()>(&CoroutineTestWorkItem::$PerformWork$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineTestWorkItem::$PerformWork$d__6*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineTestWorkItem::$PerformWork$d__6::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineTestWorkItem::$PerformWork$d__6::*)()>(&CoroutineTestWorkItem::$PerformWork$d__6::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineTestWorkItem::$PerformWork$d__6*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineTestWorkItem::$PerformWork$d__6::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (CoroutineTestWorkItem::$PerformWork$d__6::*)()>(&CoroutineTestWorkItem::$PerformWork$d__6::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineTestWorkItem::$PerformWork$d__6*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineTestWorkItem::$PerformWork$d__6::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator
// Il2CppName: System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* (CoroutineTestWorkItem::$PerformWork$d__6::*)()>(&CoroutineTestWorkItem::$PerformWork$d__6::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineTestWorkItem::$PerformWork$d__6*), "System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineTestWorkItem::$PerformWork$d__6::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (CoroutineTestWorkItem::$PerformWork$d__6::*)()>(&CoroutineTestWorkItem::$PerformWork$d__6::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineTestWorkItem::$PerformWork$d__6*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.EditModeTestCallbacks
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/EditModeTestCallbacks.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xE3DBE0
// Autogenerated static field getter
// Get static field: static private System.Action <RestoringTestContext>k__BackingField
System::Action* UnityEngine::TestRunner::NUnitExtensions::Runner::EditModeTestCallbacks::_get_$RestoringTestContext$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::EditModeTestCallbacks::_get_$RestoringTestContext$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action*>("UnityEngine.TestRunner.NUnitExtensions.Runner", "EditModeTestCallbacks", "<RestoringTestContext>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Action <RestoringTestContext>k__BackingField
void UnityEngine::TestRunner::NUnitExtensions::Runner::EditModeTestCallbacks::_set_$RestoringTestContext$k__BackingField(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::EditModeTestCallbacks::_set_$RestoringTestContext$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.NUnitExtensions.Runner", "EditModeTestCallbacks", "<RestoringTestContext>k__BackingField", value));
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.EditModeTestCallbacks.get_RestoringTestContext
System::Action* UnityEngine::TestRunner::NUnitExtensions::Runner::EditModeTestCallbacks::get_RestoringTestContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::EditModeTestCallbacks::get_RestoringTestContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions.Runner", "EditModeTestCallbacks", "get_RestoringTestContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Action*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: EditModeTestCallbacks::get_RestoringTestContext
// Il2CppName: get_RestoringTestContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Action* (*)()>(&EditModeTestCallbacks::get_RestoringTestContext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditModeTestCallbacks*), "get_RestoringTestContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.DefaultTestWorkItem
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/DefaultTestWorkItem.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.DefaultTestWorkItem/<PerformWork>d__2
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/DefaultTestWorkItem_-PerformWork-d__2.hpp"
// Including type: NUnit.Framework.Internal.Commands.TestCommand
#include "NUnit/Framework/Internal/Commands/TestCommand.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
// Including type: NUnit.Framework.Interfaces.ITestFilter
#include "NUnit/Framework/Interfaces/ITestFilter.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.DefaultTestWorkItem.PerformWork
System::Collections::IEnumerable* UnityEngine::TestRunner::NUnitExtensions::Runner::DefaultTestWorkItem::PerformWork() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::DefaultTestWorkItem::PerformWork");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformWork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerable*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: DefaultTestWorkItem::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefaultTestWorkItem::*)(NUnit::Framework::Internal::TestMethod*, NUnit::Framework::Interfaces::ITestFilter*)>(&DefaultTestWorkItem::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestWorkItem*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestMethod*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestFilter*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefaultTestWorkItem::*)(NUnit::Framework::Internal::TestMethod*, NUnit::Framework::Interfaces::ITestFilter*)>(&DefaultTestWorkItem::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestWorkItem*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestMethod*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestFilter*>()});
  }
};
// Writing MetadataGetter for method: DefaultTestWorkItem::PerformWork
// Il2CppName: PerformWork
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerable* (DefaultTestWorkItem::*)()>(&DefaultTestWorkItem::PerformWork)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestWorkItem*), "PerformWork", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.DefaultTestWorkItem/<PerformWork>d__2
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/DefaultTestWorkItem_-PerformWork-d__2.hpp"
// Including type: UnityEngine.TestTools.IEditModeTestYieldInstruction
#include "UnityEngine/TestTools/IEditModeTestYieldInstruction.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.DefaultTestWorkItem/<PerformWork>d__2.System.IDisposable.Dispose
void UnityEngine::TestRunner::NUnitExtensions::Runner::DefaultTestWorkItem::$PerformWork$d__2::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::DefaultTestWorkItem::$PerformWork$d__2::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.DefaultTestWorkItem/<PerformWork>d__2.MoveNext
bool UnityEngine::TestRunner::NUnitExtensions::Runner::DefaultTestWorkItem::$PerformWork$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::DefaultTestWorkItem::$PerformWork$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.DefaultTestWorkItem/<PerformWork>d__2.<>m__Finally1
void UnityEngine::TestRunner::NUnitExtensions::Runner::DefaultTestWorkItem::$PerformWork$d__2::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::DefaultTestWorkItem::$PerformWork$d__2::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.DefaultTestWorkItem/<PerformWork>d__2.<>m__Finally2
void UnityEngine::TestRunner::NUnitExtensions::Runner::DefaultTestWorkItem::$PerformWork$d__2::$$m__Finally2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::DefaultTestWorkItem::$PerformWork$d__2::<>m__Finally2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.DefaultTestWorkItem/<PerformWork>d__2.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestRunner::NUnitExtensions::Runner::DefaultTestWorkItem::$PerformWork$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::DefaultTestWorkItem::$PerformWork$d__2::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.DefaultTestWorkItem/<PerformWork>d__2.System.Collections.IEnumerator.Reset
void UnityEngine::TestRunner::NUnitExtensions::Runner::DefaultTestWorkItem::$PerformWork$d__2::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::DefaultTestWorkItem::$PerformWork$d__2::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.DefaultTestWorkItem/<PerformWork>d__2.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestRunner::NUnitExtensions::Runner::DefaultTestWorkItem::$PerformWork$d__2::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::DefaultTestWorkItem::$PerformWork$d__2::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.DefaultTestWorkItem/<PerformWork>d__2.System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* UnityEngine::TestRunner::NUnitExtensions::Runner::DefaultTestWorkItem::$PerformWork$d__2::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::DefaultTestWorkItem::$PerformWork$d__2::System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.DefaultTestWorkItem/<PerformWork>d__2.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::TestRunner::NUnitExtensions::Runner::DefaultTestWorkItem::$PerformWork$d__2::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::DefaultTestWorkItem::$PerformWork$d__2::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: DefaultTestWorkItem::$PerformWork$d__2::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefaultTestWorkItem::$PerformWork$d__2::*)(int)>(&DefaultTestWorkItem::$PerformWork$d__2::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestWorkItem::$PerformWork$d__2*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefaultTestWorkItem::$PerformWork$d__2::*)(int)>(&DefaultTestWorkItem::$PerformWork$d__2::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestWorkItem::$PerformWork$d__2*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DefaultTestWorkItem::$PerformWork$d__2::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefaultTestWorkItem::$PerformWork$d__2::*)()>(&DefaultTestWorkItem::$PerformWork$d__2::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestWorkItem::$PerformWork$d__2*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefaultTestWorkItem::$PerformWork$d__2::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DefaultTestWorkItem::$PerformWork$d__2::*)()>(&DefaultTestWorkItem::$PerformWork$d__2::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestWorkItem::$PerformWork$d__2*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefaultTestWorkItem::$PerformWork$d__2::$$m__Finally1
// Il2CppName: <>m__Finally1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefaultTestWorkItem::$PerformWork$d__2::*)()>(&DefaultTestWorkItem::$PerformWork$d__2::$$m__Finally1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestWorkItem::$PerformWork$d__2*), "<>m__Finally1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefaultTestWorkItem::$PerformWork$d__2::$$m__Finally2
// Il2CppName: <>m__Finally2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefaultTestWorkItem::$PerformWork$d__2::*)()>(&DefaultTestWorkItem::$PerformWork$d__2::$$m__Finally2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestWorkItem::$PerformWork$d__2*), "<>m__Finally2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefaultTestWorkItem::$PerformWork$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (DefaultTestWorkItem::$PerformWork$d__2::*)()>(&DefaultTestWorkItem::$PerformWork$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestWorkItem::$PerformWork$d__2*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefaultTestWorkItem::$PerformWork$d__2::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefaultTestWorkItem::$PerformWork$d__2::*)()>(&DefaultTestWorkItem::$PerformWork$d__2::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestWorkItem::$PerformWork$d__2*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefaultTestWorkItem::$PerformWork$d__2::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (DefaultTestWorkItem::$PerformWork$d__2::*)()>(&DefaultTestWorkItem::$PerformWork$d__2::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestWorkItem::$PerformWork$d__2*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefaultTestWorkItem::$PerformWork$d__2::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator
// Il2CppName: System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* (DefaultTestWorkItem::$PerformWork$d__2::*)()>(&DefaultTestWorkItem::$PerformWork$d__2::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestWorkItem::$PerformWork$d__2*), "System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefaultTestWorkItem::$PerformWork$d__2::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (DefaultTestWorkItem::$PerformWork$d__2::*)()>(&DefaultTestWorkItem::$PerformWork$d__2::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestWorkItem::$PerformWork$d__2*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.FailCommand
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/FailCommand.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.FailCommand/<ExecuteEnumerable>d__4
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/FailCommand_-ExecuteEnumerable-d__4.hpp"
// Including type: NUnit.Framework.Interfaces.ResultState
#include "NUnit/Framework/Interfaces/ResultState.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.FailCommand.ExecuteEnumerable
System::Collections::IEnumerable* UnityEngine::TestRunner::NUnitExtensions::Runner::FailCommand::ExecuteEnumerable(NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::FailCommand::ExecuteEnumerable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteEnumerable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerable*, false>(this, ___internal__method, context);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.FailCommand.Execute
NUnit::Framework::Internal::TestResult* UnityEngine::TestRunner::NUnitExtensions::Runner::FailCommand::Execute(NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::FailCommand::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method, context);
}
// Writing MetadataGetter for method: FailCommand::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FailCommand::*)(NUnit::Framework::Internal::Test*, NUnit::Framework::Interfaces::ResultState*, ::Il2CppString*)>(&FailCommand::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FailCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Test*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ResultState*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FailCommand::*)(NUnit::Framework::Internal::Test*, NUnit::Framework::Interfaces::ResultState*, ::Il2CppString*)>(&FailCommand::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FailCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Test*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ResultState*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: FailCommand::ExecuteEnumerable
// Il2CppName: ExecuteEnumerable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerable* (FailCommand::*)(NUnit::Framework::Internal::ITestExecutionContext*)>(&FailCommand::ExecuteEnumerable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FailCommand*), "ExecuteEnumerable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::ITestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: FailCommand::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Internal::TestResult* (FailCommand::*)(NUnit::Framework::Internal::ITestExecutionContext*)>(&FailCommand::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FailCommand*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::ITestExecutionContext*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.FailCommand/<ExecuteEnumerable>d__4
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/FailCommand_-ExecuteEnumerable-d__4.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.FailCommand/<ExecuteEnumerable>d__4.System.IDisposable.Dispose
void UnityEngine::TestRunner::NUnitExtensions::Runner::FailCommand::$ExecuteEnumerable$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::FailCommand::$ExecuteEnumerable$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.FailCommand/<ExecuteEnumerable>d__4.MoveNext
bool UnityEngine::TestRunner::NUnitExtensions::Runner::FailCommand::$ExecuteEnumerable$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::FailCommand::$ExecuteEnumerable$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.FailCommand/<ExecuteEnumerable>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestRunner::NUnitExtensions::Runner::FailCommand::$ExecuteEnumerable$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::FailCommand::$ExecuteEnumerable$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.FailCommand/<ExecuteEnumerable>d__4.System.Collections.IEnumerator.Reset
void UnityEngine::TestRunner::NUnitExtensions::Runner::FailCommand::$ExecuteEnumerable$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::FailCommand::$ExecuteEnumerable$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.FailCommand/<ExecuteEnumerable>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestRunner::NUnitExtensions::Runner::FailCommand::$ExecuteEnumerable$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::FailCommand::$ExecuteEnumerable$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.FailCommand/<ExecuteEnumerable>d__4.System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* UnityEngine::TestRunner::NUnitExtensions::Runner::FailCommand::$ExecuteEnumerable$d__4::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::FailCommand::$ExecuteEnumerable$d__4::System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.FailCommand/<ExecuteEnumerable>d__4.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::TestRunner::NUnitExtensions::Runner::FailCommand::$ExecuteEnumerable$d__4::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::FailCommand::$ExecuteEnumerable$d__4::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: FailCommand::$ExecuteEnumerable$d__4::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FailCommand::$ExecuteEnumerable$d__4::*)(int)>(&FailCommand::$ExecuteEnumerable$d__4::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FailCommand::$ExecuteEnumerable$d__4*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FailCommand::$ExecuteEnumerable$d__4::*)(int)>(&FailCommand::$ExecuteEnumerable$d__4::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FailCommand::$ExecuteEnumerable$d__4*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: FailCommand::$ExecuteEnumerable$d__4::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FailCommand::$ExecuteEnumerable$d__4::*)()>(&FailCommand::$ExecuteEnumerable$d__4::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FailCommand::$ExecuteEnumerable$d__4*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FailCommand::$ExecuteEnumerable$d__4::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (FailCommand::$ExecuteEnumerable$d__4::*)()>(&FailCommand::$ExecuteEnumerable$d__4::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FailCommand::$ExecuteEnumerable$d__4*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FailCommand::$ExecuteEnumerable$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (FailCommand::$ExecuteEnumerable$d__4::*)()>(&FailCommand::$ExecuteEnumerable$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FailCommand::$ExecuteEnumerable$d__4*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FailCommand::$ExecuteEnumerable$d__4::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FailCommand::$ExecuteEnumerable$d__4::*)()>(&FailCommand::$ExecuteEnumerable$d__4::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FailCommand::$ExecuteEnumerable$d__4*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FailCommand::$ExecuteEnumerable$d__4::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (FailCommand::$ExecuteEnumerable$d__4::*)()>(&FailCommand::$ExecuteEnumerable$d__4::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FailCommand::$ExecuteEnumerable$d__4*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FailCommand::$ExecuteEnumerable$d__4::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator
// Il2CppName: System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* (FailCommand::$ExecuteEnumerable$d__4::*)()>(&FailCommand::$ExecuteEnumerable$d__4::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FailCommand::$ExecuteEnumerable$d__4*), "System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FailCommand::$ExecuteEnumerable$d__4::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (FailCommand::$ExecuteEnumerable$d__4::*)()>(&FailCommand::$ExecuteEnumerable$d__4::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FailCommand::$ExecuteEnumerable$d__4*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.IEnumerableTestMethodCommand
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/IEnumerableTestMethodCommand.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.IEnumerableTestMethodCommand.ExecuteEnumerable
System::Collections::IEnumerable* UnityEngine::TestRunner::NUnitExtensions::Runner::IEnumerableTestMethodCommand::ExecuteEnumerable(NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::IEnumerableTestMethodCommand::ExecuteEnumerable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteEnumerable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerable*, false>(this, ___internal__method, context);
}
// Writing MetadataGetter for method: IEnumerableTestMethodCommand::ExecuteEnumerable
// Il2CppName: ExecuteEnumerable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerable* (IEnumerableTestMethodCommand::*)(NUnit::Framework::Internal::ITestExecutionContext*)>(&IEnumerableTestMethodCommand::ExecuteEnumerable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IEnumerableTestMethodCommand*), "ExecuteEnumerable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::ITestExecutionContext*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.PlaymodeWorkItemFactory
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/PlaymodeWorkItemFactory.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityWorkItem.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
// Including type: NUnit.Framework.Interfaces.ITestFilter
#include "NUnit/Framework/Interfaces/ITestFilter.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.PlaymodeWorkItemFactory.Create
UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem* UnityEngine::TestRunner::NUnitExtensions::Runner::PlaymodeWorkItemFactory::Create(NUnit::Framework::Internal::TestMethod* method, NUnit::Framework::Interfaces::ITestFilter* filter, NUnit::Framework::Interfaces::ITest* loadedTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::PlaymodeWorkItemFactory::Create");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(loadedTest)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem*, false>(this, ___internal__method, method, filter, loadedTest);
}
// Writing MetadataGetter for method: PlaymodeWorkItemFactory::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem* (PlaymodeWorkItemFactory::*)(NUnit::Framework::Internal::TestMethod*, NUnit::Framework::Interfaces::ITestFilter*, NUnit::Framework::Interfaces::ITest*)>(&PlaymodeWorkItemFactory::Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeWorkItemFactory*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestMethod*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestFilter*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: PlaymodeWorkItemFactory::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeWorkItemFactory::*)()>(&PlaymodeWorkItemFactory::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeWorkItemFactory*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeWorkItemFactory::*)()>(&PlaymodeWorkItemFactory::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeWorkItemFactory*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.TestCommandBuilder
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/TestCommandBuilder.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.TestCommandBuilder/<>c
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/TestCommandBuilder_--c.hpp"
// Including type: NUnit.Framework.Internal.Commands.TestCommand
#include "NUnit/Framework/Internal/Commands/TestCommand.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
// Including type: NUnit.Framework.Interfaces.ITestFilter
#include "NUnit/Framework/Interfaces/ITestFilter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.TestCommandBuilder.BuildTestCommand
NUnit::Framework::Internal::Commands::TestCommand* UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::BuildTestCommand(NUnit::Framework::Internal::TestMethod* test, NUnit::Framework::Interfaces::ITestFilter* filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::BuildTestCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions.Runner", "TestCommandBuilder", "BuildTestCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test), ::il2cpp_utils::ExtractType(filter)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::Commands::TestCommand*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test, filter);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.TestCommandBuilder.GetTestBuilderName
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::GetTestBuilderName(NUnit::Framework::Internal::TestMethod* testMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::GetTestBuilderName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions.Runner", "TestCommandBuilder", "GetTestBuilderName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testMethod)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, testMethod);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.TestCommandBuilder.TryReplaceWithEnumerableCommand
NUnit::Framework::Internal::Commands::TestCommand* UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::TryReplaceWithEnumerableCommand(NUnit::Framework::Internal::Commands::TestCommand* command) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::TryReplaceWithEnumerableCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions.Runner", "TestCommandBuilder", "TryReplaceWithEnumerableCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(command)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::Commands::TestCommand*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, command);
}
// Writing MetadataGetter for method: TestCommandBuilder::BuildTestCommand
// Il2CppName: BuildTestCommand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Internal::Commands::TestCommand* (*)(NUnit::Framework::Internal::TestMethod*, NUnit::Framework::Interfaces::ITestFilter*)>(&TestCommandBuilder::BuildTestCommand)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestCommandBuilder*), "BuildTestCommand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestMethod*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestFilter*>()});
  }
};
// Writing MetadataGetter for method: TestCommandBuilder::GetTestBuilderName
// Il2CppName: GetTestBuilderName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(NUnit::Framework::Internal::TestMethod*)>(&TestCommandBuilder::GetTestBuilderName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestCommandBuilder*), "GetTestBuilderName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestMethod*>()});
  }
};
// Writing MetadataGetter for method: TestCommandBuilder::TryReplaceWithEnumerableCommand
// Il2CppName: TryReplaceWithEnumerableCommand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Internal::Commands::TestCommand* (*)(NUnit::Framework::Internal::Commands::TestCommand*)>(&TestCommandBuilder::TryReplaceWithEnumerableCommand)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestCommandBuilder*), "TryReplaceWithEnumerableCommand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Commands::TestCommand*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.TestCommandBuilder/<>c
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/TestCommandBuilder_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: NUnit.Framework.Interfaces.ITestBuilder
#include "NUnit/Framework/Interfaces/ITestBuilder.hpp"
// Including type: NUnit.Framework.Interfaces.ISimpleTestBuilder
#include "NUnit/Framework/Interfaces/ISimpleTestBuilder.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.TestRunner.NUnitExtensions.Runner.TestCommandBuilder/<>c <>9
UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c* UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c*>("UnityEngine.TestRunner.NUnitExtensions.Runner", "TestCommandBuilder/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.TestRunner.NUnitExtensions.Runner.TestCommandBuilder/<>c <>9
void UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::_set_$$9(UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.NUnitExtensions.Runner", "TestCommandBuilder/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<NUnit.Framework.Interfaces.ITestBuilder,System.String> <>9__1_0
System::Func_2<NUnit::Framework::Interfaces::ITestBuilder*, ::Il2CppString*>* UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::_get_$$9__1_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::_get_$$9__1_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<NUnit::Framework::Interfaces::ITestBuilder*, ::Il2CppString*>*>("UnityEngine.TestRunner.NUnitExtensions.Runner", "TestCommandBuilder/<>c", "<>9__1_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<NUnit.Framework.Interfaces.ITestBuilder,System.String> <>9__1_0
void UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::_set_$$9__1_0(System::Func_2<NUnit::Framework::Interfaces::ITestBuilder*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::_set_$$9__1_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.NUnitExtensions.Runner", "TestCommandBuilder/<>c", "<>9__1_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<NUnit.Framework.Interfaces.ISimpleTestBuilder,System.String> <>9__1_1
System::Func_2<NUnit::Framework::Interfaces::ISimpleTestBuilder*, ::Il2CppString*>* UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::_get_$$9__1_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::_get_$$9__1_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<NUnit::Framework::Interfaces::ISimpleTestBuilder*, ::Il2CppString*>*>("UnityEngine.TestRunner.NUnitExtensions.Runner", "TestCommandBuilder/<>c", "<>9__1_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<NUnit.Framework.Interfaces.ISimpleTestBuilder,System.String> <>9__1_1
void UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::_set_$$9__1_1(System::Func_2<NUnit::Framework::Interfaces::ISimpleTestBuilder*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::_set_$$9__1_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.NUnitExtensions.Runner", "TestCommandBuilder/<>c", "<>9__1_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<System.String>> <>9__1_2
System::Func_2<System::Collections::Generic::IEnumerable_1<::Il2CppString*>*, System::Collections::Generic::IEnumerable_1<::Il2CppString*>*>* UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::_get_$$9__1_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::_get_$$9__1_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Collections::Generic::IEnumerable_1<::Il2CppString*>*, System::Collections::Generic::IEnumerable_1<::Il2CppString*>*>*>("UnityEngine.TestRunner.NUnitExtensions.Runner", "TestCommandBuilder/<>c", "<>9__1_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<System.String>> <>9__1_2
void UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::_set_$$9__1_2(System::Func_2<System::Collections::Generic::IEnumerable_1<::Il2CppString*>*, System::Collections::Generic::IEnumerable_1<::Il2CppString*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::_set_$$9__1_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.NUnitExtensions.Runner", "TestCommandBuilder/<>c", "<>9__1_2", value)));
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.TestCommandBuilder/<>c..cctor
void UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions.Runner", "TestCommandBuilder/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.TestCommandBuilder/<>c.<GetTestBuilderName>b__1_0
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::$GetTestBuilderName$b__1_0(NUnit::Framework::Interfaces::ITestBuilder* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::<GetTestBuilderName>b__1_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetTestBuilderName>b__1_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, attribute);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.TestCommandBuilder/<>c.<GetTestBuilderName>b__1_1
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::$GetTestBuilderName$b__1_1(NUnit::Framework::Interfaces::ISimpleTestBuilder* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::<GetTestBuilderName>b__1_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetTestBuilderName>b__1_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, attribute);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.TestCommandBuilder/<>c.<GetTestBuilderName>b__1_2
System::Collections::Generic::IEnumerable_1<::Il2CppString*>* UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::$GetTestBuilderName$b__1_2(System::Collections::Generic::IEnumerable_1<::Il2CppString*>* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::TestCommandBuilder::$$c::<GetTestBuilderName>b__1_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetTestBuilderName>b__1_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<::Il2CppString*>*, false>(this, ___internal__method, v);
}
// Writing MetadataGetter for method: TestCommandBuilder::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&TestCommandBuilder::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestCommandBuilder::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestCommandBuilder::$$c::$GetTestBuilderName$b__1_0
// Il2CppName: <GetTestBuilderName>b__1_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (TestCommandBuilder::$$c::*)(NUnit::Framework::Interfaces::ITestBuilder*)>(&TestCommandBuilder::$$c::$GetTestBuilderName$b__1_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestCommandBuilder::$$c*), "<GetTestBuilderName>b__1_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestBuilder*>()});
  }
};
// Writing MetadataGetter for method: TestCommandBuilder::$$c::$GetTestBuilderName$b__1_1
// Il2CppName: <GetTestBuilderName>b__1_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (TestCommandBuilder::$$c::*)(NUnit::Framework::Interfaces::ISimpleTestBuilder*)>(&TestCommandBuilder::$$c::$GetTestBuilderName$b__1_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestCommandBuilder::$$c*), "<GetTestBuilderName>b__1_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ISimpleTestBuilder*>()});
  }
};
// Writing MetadataGetter for method: TestCommandBuilder::$$c::$GetTestBuilderName$b__1_2
// Il2CppName: <GetTestBuilderName>b__1_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerable_1<::Il2CppString*>* (TestCommandBuilder::$$c::*)(System::Collections::Generic::IEnumerable_1<::Il2CppString*>*)>(&TestCommandBuilder::$$c::$GetTestBuilderName$b__1_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestCommandBuilder::$$c*), "<GetTestBuilderName>b__1_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IEnumerable_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: TestCommandBuilder::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestCommandBuilder::$$c::*)()>(&TestCommandBuilder::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestCommandBuilder::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestCommandBuilder::$$c::*)()>(&TestCommandBuilder::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestCommandBuilder::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityLogCheckDelegatingCommand.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<>c__DisplayClass2_0
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityLogCheckDelegatingCommand_--c__DisplayClass2_0.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<>c__DisplayClass3_0
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityLogCheckDelegatingCommand_--c__DisplayClass3_0.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<>c__DisplayClass3_1
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityLogCheckDelegatingCommand_--c__DisplayClass3_1.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<ExecuteEnumerable>d__3
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityLogCheckDelegatingCommand_-ExecuteEnumerable-d__3.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.TestTools.Logging.LogScope
#include "UnityEngine/TestTools/Logging/LogScope.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Object,System.Nullable`1<System.Boolean>> s_AttributeCache
System::Collections::Generic::Dictionary_2<::Il2CppObject*, System::Nullable_1<bool>>* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::_get_s_AttributeCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::_get_s_AttributeCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppObject*, System::Nullable_1<bool>>*>("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityLogCheckDelegatingCommand", "s_AttributeCache")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Object,System.Nullable`1<System.Boolean>> s_AttributeCache
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::_set_s_AttributeCache(System::Collections::Generic::Dictionary_2<::Il2CppObject*, System::Nullable_1<bool>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::_set_s_AttributeCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityLogCheckDelegatingCommand", "s_AttributeCache", value));
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand.ExecuteEnumerable
System::Collections::IEnumerable* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::ExecuteEnumerable(NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::ExecuteEnumerable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteEnumerable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerable*, false>(this, ___internal__method, context);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand.CaptureException
bool UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::CaptureException(NUnit::Framework::Internal::TestResult* result, System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::CaptureException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityLogCheckDelegatingCommand", "CaptureException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(action)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, action);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand.ExecuteAndCheckLog
bool UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::ExecuteAndCheckLog(UnityEngine::TestTools::Logging::LogScope* logScope, NUnit::Framework::Internal::TestResult* result, System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::ExecuteAndCheckLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityLogCheckDelegatingCommand", "ExecuteAndCheckLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logScope), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(action)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, logScope, result, action);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand.PostTestValidation
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::PostTestValidation(UnityEngine::TestTools::Logging::LogScope* logScope, NUnit::Framework::Internal::Commands::TestCommand* command, NUnit::Framework::Internal::TestResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::PostTestValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityLogCheckDelegatingCommand", "PostTestValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logScope), ::il2cpp_utils::ExtractType(command), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, logScope, command, result);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand.CheckLogs
bool UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::CheckLogs(NUnit::Framework::Internal::TestResult* result, UnityEngine::TestTools::Logging::LogScope* logScope) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::CheckLogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityLogCheckDelegatingCommand", "CheckLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(logScope)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, logScope);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand.CheckFailingLogs
bool UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::CheckFailingLogs(UnityEngine::TestTools::Logging::LogScope* logScope, NUnit::Framework::Internal::TestResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::CheckFailingLogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityLogCheckDelegatingCommand", "CheckFailingLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logScope), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, logScope, result);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand.CheckExpectedLogs
bool UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::CheckExpectedLogs(UnityEngine::TestTools::Logging::LogScope* logScope, NUnit::Framework::Internal::TestResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::CheckExpectedLogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityLogCheckDelegatingCommand", "CheckExpectedLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logScope), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, logScope, result);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand.MustExpect
bool UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::MustExpect(System::Reflection::MemberInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::MustExpect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityLogCheckDelegatingCommand", "MustExpect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand..cctor
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityLogCheckDelegatingCommand", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand.Execute
NUnit::Framework::Internal::TestResult* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::Execute(NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method, context);
}
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::ExecuteEnumerable
// Il2CppName: ExecuteEnumerable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerable* (UnityLogCheckDelegatingCommand::*)(NUnit::Framework::Internal::ITestExecutionContext*)>(&UnityLogCheckDelegatingCommand::ExecuteEnumerable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand*), "ExecuteEnumerable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::ITestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::CaptureException
// Il2CppName: CaptureException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(NUnit::Framework::Internal::TestResult*, System::Action*)>(&UnityLogCheckDelegatingCommand::CaptureException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand*), "CaptureException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestResult*>(), ::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::ExecuteAndCheckLog
// Il2CppName: ExecuteAndCheckLog
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::TestTools::Logging::LogScope*, NUnit::Framework::Internal::TestResult*, System::Action*)>(&UnityLogCheckDelegatingCommand::ExecuteAndCheckLog)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand*), "ExecuteAndCheckLog", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::Logging::LogScope*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestResult*>(), ::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::PostTestValidation
// Il2CppName: PostTestValidation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::TestTools::Logging::LogScope*, NUnit::Framework::Internal::Commands::TestCommand*, NUnit::Framework::Internal::TestResult*)>(&UnityLogCheckDelegatingCommand::PostTestValidation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand*), "PostTestValidation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::Logging::LogScope*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Commands::TestCommand*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestResult*>()});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::CheckLogs
// Il2CppName: CheckLogs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(NUnit::Framework::Internal::TestResult*, UnityEngine::TestTools::Logging::LogScope*)>(&UnityLogCheckDelegatingCommand::CheckLogs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand*), "CheckLogs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestResult*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::Logging::LogScope*>()});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::CheckFailingLogs
// Il2CppName: CheckFailingLogs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::TestTools::Logging::LogScope*, NUnit::Framework::Internal::TestResult*)>(&UnityLogCheckDelegatingCommand::CheckFailingLogs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand*), "CheckFailingLogs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::Logging::LogScope*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestResult*>()});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::CheckExpectedLogs
// Il2CppName: CheckExpectedLogs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::TestTools::Logging::LogScope*, NUnit::Framework::Internal::TestResult*)>(&UnityLogCheckDelegatingCommand::CheckExpectedLogs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand*), "CheckExpectedLogs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::Logging::LogScope*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestResult*>()});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::MustExpect
// Il2CppName: MustExpect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Reflection::MemberInfo*)>(&UnityLogCheckDelegatingCommand::MustExpect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand*), "MustExpect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MemberInfo*>()});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityLogCheckDelegatingCommand::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogCheckDelegatingCommand::*)(NUnit::Framework::Internal::Commands::TestCommand*)>(&UnityLogCheckDelegatingCommand::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Commands::TestCommand*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogCheckDelegatingCommand::*)(NUnit::Framework::Internal::Commands::TestCommand*)>(&UnityLogCheckDelegatingCommand::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Commands::TestCommand*>()});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Internal::TestResult* (UnityLogCheckDelegatingCommand::*)(NUnit::Framework::Internal::ITestExecutionContext*)>(&UnityLogCheckDelegatingCommand::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::ITestExecutionContext*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<>c__DisplayClass2_0
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityLogCheckDelegatingCommand_--c__DisplayClass2_0.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<>c__DisplayClass2_0.<Execute>b__0
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$$c__DisplayClass2_0::$Execute$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$$c__DisplayClass2_0::<Execute>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Execute>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::$$c__DisplayClass2_0::$Execute$b__0
// Il2CppName: <Execute>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogCheckDelegatingCommand::$$c__DisplayClass2_0::*)()>(&UnityLogCheckDelegatingCommand::$$c__DisplayClass2_0::$Execute$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand::$$c__DisplayClass2_0*), "<Execute>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::$$c__DisplayClass2_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogCheckDelegatingCommand::$$c__DisplayClass2_0::*)()>(&UnityLogCheckDelegatingCommand::$$c__DisplayClass2_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand::$$c__DisplayClass2_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogCheckDelegatingCommand::$$c__DisplayClass2_0::*)()>(&UnityLogCheckDelegatingCommand::$$c__DisplayClass2_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand::$$c__DisplayClass2_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<>c__DisplayClass3_0
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityLogCheckDelegatingCommand_--c__DisplayClass3_0.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.IEnumerableTestMethodCommand
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/IEnumerableTestMethodCommand.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::$$c__DisplayClass3_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogCheckDelegatingCommand::$$c__DisplayClass3_0::*)()>(&UnityLogCheckDelegatingCommand::$$c__DisplayClass3_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand::$$c__DisplayClass3_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogCheckDelegatingCommand::$$c__DisplayClass3_0::*)()>(&UnityLogCheckDelegatingCommand::$$c__DisplayClass3_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand::$$c__DisplayClass3_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<>c__DisplayClass3_1
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityLogCheckDelegatingCommand_--c__DisplayClass3_1.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<>c__DisplayClass3_0
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityLogCheckDelegatingCommand_--c__DisplayClass3_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<>c__DisplayClass3_1.<ExecuteEnumerable>b__0
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$$c__DisplayClass3_1::$ExecuteEnumerable$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$$c__DisplayClass3_1::<ExecuteEnumerable>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ExecuteEnumerable>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::$$c__DisplayClass3_1::$ExecuteEnumerable$b__0
// Il2CppName: <ExecuteEnumerable>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogCheckDelegatingCommand::$$c__DisplayClass3_1::*)()>(&UnityLogCheckDelegatingCommand::$$c__DisplayClass3_1::$ExecuteEnumerable$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand::$$c__DisplayClass3_1*), "<ExecuteEnumerable>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::$$c__DisplayClass3_1::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogCheckDelegatingCommand::$$c__DisplayClass3_1::*)()>(&UnityLogCheckDelegatingCommand::$$c__DisplayClass3_1::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand::$$c__DisplayClass3_1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogCheckDelegatingCommand::$$c__DisplayClass3_1::*)()>(&UnityLogCheckDelegatingCommand::$$c__DisplayClass3_1::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand::$$c__DisplayClass3_1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<ExecuteEnumerable>d__3
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityLogCheckDelegatingCommand_-ExecuteEnumerable-d__3.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
// Including type: UnityEngine.TestTools.Logging.LogScope
#include "UnityEngine/TestTools/Logging/LogScope.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<>c__DisplayClass3_1
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityLogCheckDelegatingCommand_--c__DisplayClass3_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<ExecuteEnumerable>d__3.System.IDisposable.Dispose
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<ExecuteEnumerable>d__3.MoveNext
bool UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<ExecuteEnumerable>d__3.<>m__Finally1
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<ExecuteEnumerable>d__3.<>m__Finally2
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::$$m__Finally2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::<>m__Finally2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<ExecuteEnumerable>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<ExecuteEnumerable>d__3.System.Collections.IEnumerator.Reset
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<ExecuteEnumerable>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<ExecuteEnumerable>d__3.System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityLogCheckDelegatingCommand/<ExecuteEnumerable>d__3.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::*)(int)>(&UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::*)(int)>(&UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::*)()>(&UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::*)()>(&UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::$$m__Finally1
// Il2CppName: <>m__Finally1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::*)()>(&UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::$$m__Finally1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3*), "<>m__Finally1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::$$m__Finally2
// Il2CppName: <>m__Finally2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::*)()>(&UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::$$m__Finally2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3*), "<>m__Finally2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::*)()>(&UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::*)()>(&UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::*)()>(&UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator
// Il2CppName: System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* (UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::*)()>(&UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3*), "System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::*)()>(&UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogCheckDelegatingCommand::$ExecuteEnumerable$d__3*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestAssemblyRunner
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityTestAssemblyRunner.hpp"
// Including type: UnityEngine.TestTools.NUnitExtensions.UnityTestAssemblyBuilder
#include "UnityEngine/TestTools/NUnitExtensions/UnityTestAssemblyBuilder.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.WorkItemFactory
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/WorkItemFactory.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityTestExecutionContext.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityWorkItem.hpp"
// Including type: NUnit.Framework.Interfaces.ITestResult
#include "NUnit/Framework/Interfaces/ITestResult.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: UnityEngine.TestTools.TestPlatform
#include "UnityEngine/TestTools/TestPlatform.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: NUnit.Framework.Interfaces.ITestListener
#include "NUnit/Framework/Interfaces/ITestListener.hpp"
// Including type: NUnit.Framework.Interfaces.ITestFilter
#include "NUnit/Framework/Interfaces/ITestFilter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestAssemblyRunner.get_Context
UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::get_Context() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::get_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestAssemblyRunner.set_Context
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::set_Context(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::set_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestAssemblyRunner.set_Settings
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::set_Settings(System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::set_Settings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestAssemblyRunner.get_LoadedTest
NUnit::Framework::Interfaces::ITest* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::get_LoadedTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::get_LoadedTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoadedTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ITest*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestAssemblyRunner.set_LoadedTest
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::set_LoadedTest(NUnit::Framework::Interfaces::ITest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::set_LoadedTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LoadedTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestAssemblyRunner.get_Result
NUnit::Framework::Interfaces::ITestResult* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::get_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::get_Result");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Result", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ITestResult*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestAssemblyRunner.get_IsTestRunning
bool UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::get_IsTestRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::get_IsTestRunning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsTestRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestAssemblyRunner.get_IsTestComplete
bool UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::get_IsTestComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::get_IsTestComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsTestComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestAssemblyRunner.Load
NUnit::Framework::Interfaces::ITest* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::Load(::Array<System::Reflection::Assembly*>* assemblies, UnityEngine::TestTools::TestPlatform testPlatform, System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppObject*>* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::Load");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblies), ::il2cpp_utils::ExtractType(testPlatform), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ITest*, false>(this, ___internal__method, assemblies, testPlatform, settings);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestAssemblyRunner.Run
System::Collections::IEnumerable* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::Run(NUnit::Framework::Interfaces::ITestListener* listener, NUnit::Framework::Interfaces::ITestFilter* filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(filter)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerable*, false>(this, ___internal__method, listener, filter);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestAssemblyRunner.get_TopLevelWorkItem
UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::get_TopLevelWorkItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::get_TopLevelWorkItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TopLevelWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestAssemblyRunner.set_TopLevelWorkItem
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::set_TopLevelWorkItem(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::set_TopLevelWorkItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TopLevelWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestAssemblyRunner.StopRun
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::StopRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner::StopRun");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRun", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UnityTestAssemblyRunner::get_Context
// Il2CppName: get_Context
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* (UnityTestAssemblyRunner::*)()>(&UnityTestAssemblyRunner::get_Context)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyRunner*), "get_Context", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyRunner::set_Context
// Il2CppName: set_Context
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestAssemblyRunner::*)(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&UnityTestAssemblyRunner::set_Context)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyRunner*), "set_Context", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyRunner::set_Settings
// Il2CppName: set_Settings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestAssemblyRunner::*)(System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppObject*>*)>(&UnityTestAssemblyRunner::set_Settings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyRunner*), "set_Settings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyRunner::get_LoadedTest
// Il2CppName: get_LoadedTest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Interfaces::ITest* (UnityTestAssemblyRunner::*)()>(&UnityTestAssemblyRunner::get_LoadedTest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyRunner*), "get_LoadedTest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyRunner::set_LoadedTest
// Il2CppName: set_LoadedTest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestAssemblyRunner::*)(NUnit::Framework::Interfaces::ITest*)>(&UnityTestAssemblyRunner::set_LoadedTest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyRunner*), "set_LoadedTest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyRunner::get_Result
// Il2CppName: get_Result
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Interfaces::ITestResult* (UnityTestAssemblyRunner::*)()>(&UnityTestAssemblyRunner::get_Result)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyRunner*), "get_Result", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyRunner::get_IsTestRunning
// Il2CppName: get_IsTestRunning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityTestAssemblyRunner::*)()>(&UnityTestAssemblyRunner::get_IsTestRunning)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyRunner*), "get_IsTestRunning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyRunner::get_IsTestComplete
// Il2CppName: get_IsTestComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityTestAssemblyRunner::*)()>(&UnityTestAssemblyRunner::get_IsTestComplete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyRunner*), "get_IsTestComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyRunner::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestAssemblyRunner::*)(UnityEngine::TestTools::NUnitExtensions::UnityTestAssemblyBuilder*, UnityEngine::TestRunner::NUnitExtensions::Runner::WorkItemFactory*)>(&UnityTestAssemblyRunner::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyRunner*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::NUnitExtensions::UnityTestAssemblyBuilder*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::WorkItemFactory*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestAssemblyRunner::*)(UnityEngine::TestTools::NUnitExtensions::UnityTestAssemblyBuilder*, UnityEngine::TestRunner::NUnitExtensions::Runner::WorkItemFactory*)>(&UnityTestAssemblyRunner::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyRunner*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::NUnitExtensions::UnityTestAssemblyBuilder*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::WorkItemFactory*>()});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyRunner::Load
// Il2CppName: Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Interfaces::ITest* (UnityTestAssemblyRunner::*)(::Array<System::Reflection::Assembly*>*, UnityEngine::TestTools::TestPlatform, System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppObject*>*)>(&UnityTestAssemblyRunner::Load)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyRunner*), "Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<System::Reflection::Assembly*>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::TestPlatform>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyRunner::Run
// Il2CppName: Run
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerable* (UnityTestAssemblyRunner::*)(NUnit::Framework::Interfaces::ITestListener*, NUnit::Framework::Interfaces::ITestFilter*)>(&UnityTestAssemblyRunner::Run)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyRunner*), "Run", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestListener*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestFilter*>()});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyRunner::get_TopLevelWorkItem
// Il2CppName: get_TopLevelWorkItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem* (UnityTestAssemblyRunner::*)()>(&UnityTestAssemblyRunner::get_TopLevelWorkItem)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyRunner*), "get_TopLevelWorkItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyRunner::set_TopLevelWorkItem
// Il2CppName: set_TopLevelWorkItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestAssemblyRunner::*)(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem*)>(&UnityTestAssemblyRunner::set_TopLevelWorkItem)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyRunner*), "set_TopLevelWorkItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem*>()});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyRunner::StopRun
// Il2CppName: StopRun
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestAssemblyRunner::*)()>(&UnityTestAssemblyRunner::StopRun)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyRunner*), "StopRun", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityTestExecutionContext.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NUnit.Framework.ITestAction
#include "NUnit/Framework/ITestAction.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: NUnit.Framework.Interfaces.ITestListener
#include "NUnit/Framework/Interfaces/ITestListener.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: NUnit.Framework.Internal.Execution.IWorkItemDispatcher
#include "NUnit/Framework/Internal/Execution/IWorkItemDispatcher.hpp"
// Including type: NUnit.Framework.Internal.Randomizer
#include "NUnit/Framework/Internal/Randomizer.hpp"
// Including type: NUnit.Framework.Constraints.ValueFormatter
#include "NUnit/Framework/Constraints/ValueFormatter.hpp"
// Including type: UnityEngine.TestTools.BeforeAfterTestCommandState
#include "UnityEngine/TestTools/BeforeAfterTestCommandState.hpp"
// Including type: UnityEngine.TestTools.EnumerableTestState
#include "UnityEngine/TestTools/EnumerableTestState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xE3DC30
// Autogenerated static field getter
// Get static field: static private UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext <CurrentContext>k__BackingField
UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::_get_$CurrentContext$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::_get_$CurrentContext$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityTestExecutionContext", "<CurrentContext>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext <CurrentContext>k__BackingField
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::_set_$CurrentContext$k__BackingField(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::_set_$CurrentContext$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityTestExecutionContext", "<CurrentContext>k__BackingField", value));
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.get_CurrentContext
UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityTestExecutionContext", "get_CurrentContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.set_CurrentContext
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_CurrentContext(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_CurrentContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityTestExecutionContext", "set_CurrentContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.get_CurrentTest
NUnit::Framework::Internal::Test* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::Test*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.set_CurrentTest
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_CurrentTest(NUnit::Framework::Internal::Test* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_CurrentTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.get_StartTime
System::DateTime UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_StartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_StartTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.set_StartTime
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_StartTime(System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_StartTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.get_StartTicks
int64_t UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_StartTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_StartTicks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.set_StartTicks
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_StartTicks(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_StartTicks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StartTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.get_CurrentResult
NUnit::Framework::Internal::TestResult* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.set_CurrentResult
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_CurrentResult(NUnit::Framework::Internal::TestResult* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_CurrentResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.get_TestObject
::Il2CppObject* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_TestObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_TestObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TestObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.set_TestObject
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_TestObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_TestObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TestObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.get_WorkDirectory
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_WorkDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_WorkDirectory");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WorkDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.set_WorkDirectory
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_WorkDirectory(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_WorkDirectory");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WorkDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.get_ExecutionStatus
NUnit::Framework::Internal::TestExecutionStatus UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_ExecutionStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_ExecutionStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExecutionStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::TestExecutionStatus, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.set_ExecutionStatus
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_ExecutionStatus(NUnit::Framework::Internal::TestExecutionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_ExecutionStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExecutionStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.get_UpstreamActions
System::Collections::Generic::List_1<NUnit::Framework::ITestAction*>* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_UpstreamActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_UpstreamActions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UpstreamActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<NUnit::Framework::ITestAction*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.set_UpstreamActions
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_UpstreamActions(System::Collections::Generic::List_1<NUnit::Framework::ITestAction*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_UpstreamActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UpstreamActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.get_TestCaseTimeout
int UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_TestCaseTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_TestCaseTimeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TestCaseTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.set_TestCaseTimeout
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_TestCaseTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_TestCaseTimeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TestCaseTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.get_CurrentCulture
System::Globalization::CultureInfo* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentCulture");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.set_CurrentCulture
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_CurrentCulture(System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_CurrentCulture");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.get_CurrentUICulture
System::Globalization::CultureInfo* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentUICulture");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentUICulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.set_CurrentUICulture
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_CurrentUICulture(System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_CurrentUICulture");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentUICulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.get_Listener
NUnit::Framework::Interfaces::ITestListener* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_Listener() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_Listener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Listener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ITestListener*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.set_Listener
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_Listener(NUnit::Framework::Interfaces::ITestListener* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_Listener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Listener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.get_OutWriter
System::IO::TextWriter* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_OutWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_OutWriter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OutWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::TextWriter*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.set_OutWriter
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_OutWriter(System::IO::TextWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_OutWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OutWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.get_CurrentValueFormatter
NUnit::Framework::Constraints::ValueFormatter* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentValueFormatter() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentValueFormatter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentValueFormatter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::ValueFormatter*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.get_SetUpTearDownState
UnityEngine::TestTools::BeforeAfterTestCommandState* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_SetUpTearDownState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_SetUpTearDownState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SetUpTearDownState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestTools::BeforeAfterTestCommandState*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.set_SetUpTearDownState
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_SetUpTearDownState(UnityEngine::TestTools::BeforeAfterTestCommandState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_SetUpTearDownState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SetUpTearDownState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.get_OuterUnityTestActionState
UnityEngine::TestTools::BeforeAfterTestCommandState* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_OuterUnityTestActionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_OuterUnityTestActionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OuterUnityTestActionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestTools::BeforeAfterTestCommandState*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.set_OuterUnityTestActionState
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_OuterUnityTestActionState(UnityEngine::TestTools::BeforeAfterTestCommandState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_OuterUnityTestActionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OuterUnityTestActionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.get_EnumerableTestState
UnityEngine::TestTools::EnumerableTestState* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_EnumerableTestState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_EnumerableTestState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnumerableTestState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestTools::EnumerableTestState*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.set_EnumerableTestState
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_EnumerableTestState(UnityEngine::TestTools::EnumerableTestState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_EnumerableTestState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnumerableTestState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext.IncrementAssertCount
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::IncrementAssertCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::IncrementAssertCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementAssertCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UnityTestExecutionContext::get_CurrentContext
// Il2CppName: get_CurrentContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* (*)()>(&UnityTestExecutionContext::get_CurrentContext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "get_CurrentContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::set_CurrentContext
// Il2CppName: set_CurrentContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&UnityTestExecutionContext::set_CurrentContext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "set_CurrentContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::get_CurrentTest
// Il2CppName: get_CurrentTest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Internal::Test* (UnityTestExecutionContext::*)()>(&UnityTestExecutionContext::get_CurrentTest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "get_CurrentTest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::set_CurrentTest
// Il2CppName: set_CurrentTest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)(NUnit::Framework::Internal::Test*)>(&UnityTestExecutionContext::set_CurrentTest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "set_CurrentTest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Test*>()});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::get_StartTime
// Il2CppName: get_StartTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (UnityTestExecutionContext::*)()>(&UnityTestExecutionContext::get_StartTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "get_StartTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::set_StartTime
// Il2CppName: set_StartTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)(System::DateTime)>(&UnityTestExecutionContext::set_StartTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "set_StartTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::DateTime>()});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::get_StartTicks
// Il2CppName: get_StartTicks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (UnityTestExecutionContext::*)()>(&UnityTestExecutionContext::get_StartTicks)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "get_StartTicks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::set_StartTicks
// Il2CppName: set_StartTicks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)(int64_t)>(&UnityTestExecutionContext::set_StartTicks)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "set_StartTicks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::get_CurrentResult
// Il2CppName: get_CurrentResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Internal::TestResult* (UnityTestExecutionContext::*)()>(&UnityTestExecutionContext::get_CurrentResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "get_CurrentResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::set_CurrentResult
// Il2CppName: set_CurrentResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)(NUnit::Framework::Internal::TestResult*)>(&UnityTestExecutionContext::set_CurrentResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "set_CurrentResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestResult*>()});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::get_TestObject
// Il2CppName: get_TestObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityTestExecutionContext::*)()>(&UnityTestExecutionContext::get_TestObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "get_TestObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::set_TestObject
// Il2CppName: set_TestObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)(::Il2CppObject*)>(&UnityTestExecutionContext::set_TestObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "set_TestObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::get_WorkDirectory
// Il2CppName: get_WorkDirectory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UnityTestExecutionContext::*)()>(&UnityTestExecutionContext::get_WorkDirectory)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "get_WorkDirectory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::set_WorkDirectory
// Il2CppName: set_WorkDirectory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)(::Il2CppString*)>(&UnityTestExecutionContext::set_WorkDirectory)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "set_WorkDirectory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::get_ExecutionStatus
// Il2CppName: get_ExecutionStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Internal::TestExecutionStatus (UnityTestExecutionContext::*)()>(&UnityTestExecutionContext::get_ExecutionStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "get_ExecutionStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::set_ExecutionStatus
// Il2CppName: set_ExecutionStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)(NUnit::Framework::Internal::TestExecutionStatus)>(&UnityTestExecutionContext::set_ExecutionStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "set_ExecutionStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestExecutionStatus>()});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::get_UpstreamActions
// Il2CppName: get_UpstreamActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<NUnit::Framework::ITestAction*>* (UnityTestExecutionContext::*)()>(&UnityTestExecutionContext::get_UpstreamActions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "get_UpstreamActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::set_UpstreamActions
// Il2CppName: set_UpstreamActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)(System::Collections::Generic::List_1<NUnit::Framework::ITestAction*>*)>(&UnityTestExecutionContext::set_UpstreamActions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "set_UpstreamActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<NUnit::Framework::ITestAction*>*>()});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::get_TestCaseTimeout
// Il2CppName: get_TestCaseTimeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityTestExecutionContext::*)()>(&UnityTestExecutionContext::get_TestCaseTimeout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "get_TestCaseTimeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::set_TestCaseTimeout
// Il2CppName: set_TestCaseTimeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)(int)>(&UnityTestExecutionContext::set_TestCaseTimeout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "set_TestCaseTimeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::get_CurrentCulture
// Il2CppName: get_CurrentCulture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Globalization::CultureInfo* (UnityTestExecutionContext::*)()>(&UnityTestExecutionContext::get_CurrentCulture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "get_CurrentCulture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::set_CurrentCulture
// Il2CppName: set_CurrentCulture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)(System::Globalization::CultureInfo*)>(&UnityTestExecutionContext::set_CurrentCulture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "set_CurrentCulture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Globalization::CultureInfo*>()});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::get_CurrentUICulture
// Il2CppName: get_CurrentUICulture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Globalization::CultureInfo* (UnityTestExecutionContext::*)()>(&UnityTestExecutionContext::get_CurrentUICulture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "get_CurrentUICulture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::set_CurrentUICulture
// Il2CppName: set_CurrentUICulture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)(System::Globalization::CultureInfo*)>(&UnityTestExecutionContext::set_CurrentUICulture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "set_CurrentUICulture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Globalization::CultureInfo*>()});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::get_Listener
// Il2CppName: get_Listener
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Interfaces::ITestListener* (UnityTestExecutionContext::*)()>(&UnityTestExecutionContext::get_Listener)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "get_Listener", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::set_Listener
// Il2CppName: set_Listener
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)(NUnit::Framework::Interfaces::ITestListener*)>(&UnityTestExecutionContext::set_Listener)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "set_Listener", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestListener*>()});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&UnityTestExecutionContext::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&UnityTestExecutionContext::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::get_OutWriter
// Il2CppName: get_OutWriter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IO::TextWriter* (UnityTestExecutionContext::*)()>(&UnityTestExecutionContext::get_OutWriter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "get_OutWriter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::set_OutWriter
// Il2CppName: set_OutWriter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)(System::IO::TextWriter*)>(&UnityTestExecutionContext::set_OutWriter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "set_OutWriter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::TextWriter*>()});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::get_CurrentValueFormatter
// Il2CppName: get_CurrentValueFormatter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Constraints::ValueFormatter* (UnityTestExecutionContext::*)()>(&UnityTestExecutionContext::get_CurrentValueFormatter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "get_CurrentValueFormatter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::get_SetUpTearDownState
// Il2CppName: get_SetUpTearDownState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestTools::BeforeAfterTestCommandState* (UnityTestExecutionContext::*)()>(&UnityTestExecutionContext::get_SetUpTearDownState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "get_SetUpTearDownState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::set_SetUpTearDownState
// Il2CppName: set_SetUpTearDownState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)(UnityEngine::TestTools::BeforeAfterTestCommandState*)>(&UnityTestExecutionContext::set_SetUpTearDownState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "set_SetUpTearDownState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::BeforeAfterTestCommandState*>()});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::get_OuterUnityTestActionState
// Il2CppName: get_OuterUnityTestActionState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestTools::BeforeAfterTestCommandState* (UnityTestExecutionContext::*)()>(&UnityTestExecutionContext::get_OuterUnityTestActionState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "get_OuterUnityTestActionState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::set_OuterUnityTestActionState
// Il2CppName: set_OuterUnityTestActionState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)(UnityEngine::TestTools::BeforeAfterTestCommandState*)>(&UnityTestExecutionContext::set_OuterUnityTestActionState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "set_OuterUnityTestActionState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::BeforeAfterTestCommandState*>()});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::get_EnumerableTestState
// Il2CppName: get_EnumerableTestState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestTools::EnumerableTestState* (UnityTestExecutionContext::*)()>(&UnityTestExecutionContext::get_EnumerableTestState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "get_EnumerableTestState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::set_EnumerableTestState
// Il2CppName: set_EnumerableTestState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)(UnityEngine::TestTools::EnumerableTestState*)>(&UnityTestExecutionContext::set_EnumerableTestState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "set_EnumerableTestState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::EnumerableTestState*>()});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::IncrementAssertCount
// Il2CppName: IncrementAssertCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)()>(&UnityTestExecutionContext::IncrementAssertCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), "IncrementAssertCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestExecutionContext::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)()>(&UnityTestExecutionContext::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestExecutionContext::*)()>(&UnityTestExecutionContext::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestExecutionContext*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityWorkItem.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.WorkItemFactory
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/WorkItemFactory.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityTestExecutionContext.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NUnit.Framework.ITestAction
#include "NUnit/Framework/ITestAction.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Int32 k_DefaultTimeout
int UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::_get_k_DefaultTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::_get_k_DefaultTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityWorkItem", "k_DefaultTimeout"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 k_DefaultTimeout
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::_set_k_DefaultTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::_set_k_DefaultTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityWorkItem", "k_DefaultTimeout", value));
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem.get_ResultedInDomainReload
bool UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::get_ResultedInDomainReload() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::get_ResultedInDomainReload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResultedInDomainReload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem.set_ResultedInDomainReload
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::set_ResultedInDomainReload(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::set_ResultedInDomainReload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ResultedInDomainReload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem.get_Context
UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::get_Context() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::get_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem.set_Context
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::set_Context(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::set_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem.get_Test
NUnit::Framework::Internal::Test* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::get_Test() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::get_Test");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Test", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::Test*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem.set_Test
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::set_Test(NUnit::Framework::Internal::Test* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::set_Test");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Test", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem.get_Result
NUnit::Framework::Internal::TestResult* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::get_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::get_Result");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Result", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem.set_Result
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::set_Result(NUnit::Framework::Internal::TestResult* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::set_Result");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Result", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem.get_State
NUnit::Framework::Internal::Execution::WorkItemState UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::Execution::WorkItemState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem.set_State
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::set_State(NUnit::Framework::Internal::Execution::WorkItemState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::set_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem.get_Actions
System::Collections::Generic::List_1<NUnit::Framework::ITestAction*>* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::get_Actions() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::get_Actions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Actions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<NUnit::Framework::ITestAction*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem.set_Actions
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::set_Actions(System::Collections::Generic::List_1<NUnit::Framework::ITestAction*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::set_Actions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Actions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem.ShouldRestore
bool UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::ShouldRestore(NUnit::Framework::Interfaces::ITest* loadedTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::ShouldRestore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityWorkItem", "ShouldRestore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loadedTest)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, loadedTest);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem.ShouldExecuteStartEvent
bool UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::ShouldExecuteStartEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::ShouldExecuteStartEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldExecuteStartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem.PerformWork
System::Collections::IEnumerable* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::PerformWork() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::PerformWork");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformWork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem.InitializeContext
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::InitializeContext(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::InitializeContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem.Execute
System::Collections::IEnumerable* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem.WorkItemComplete
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::WorkItemComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::WorkItemComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WorkItemComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem.Cancel
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::Cancel(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::Cancel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem.<ShouldExecuteStartEvent>b__33_0
bool UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::$ShouldExecuteStartEvent$b__33_0(::Il2CppString* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem::<ShouldExecuteStartEvent>b__33_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ShouldExecuteStartEvent>b__33_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Writing MetadataGetter for method: UnityWorkItem::get_ResultedInDomainReload
// Il2CppName: get_ResultedInDomainReload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityWorkItem::*)()>(&UnityWorkItem::get_ResultedInDomainReload)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), "get_ResultedInDomainReload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityWorkItem::set_ResultedInDomainReload
// Il2CppName: set_ResultedInDomainReload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWorkItem::*)(bool)>(&UnityWorkItem::set_ResultedInDomainReload)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), "set_ResultedInDomainReload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityWorkItem::get_Context
// Il2CppName: get_Context
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* (UnityWorkItem::*)()>(&UnityWorkItem::get_Context)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), "get_Context", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityWorkItem::set_Context
// Il2CppName: set_Context
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWorkItem::*)(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&UnityWorkItem::set_Context)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), "set_Context", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: UnityWorkItem::get_Test
// Il2CppName: get_Test
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Internal::Test* (UnityWorkItem::*)()>(&UnityWorkItem::get_Test)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), "get_Test", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityWorkItem::set_Test
// Il2CppName: set_Test
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWorkItem::*)(NUnit::Framework::Internal::Test*)>(&UnityWorkItem::set_Test)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), "set_Test", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Test*>()});
  }
};
// Writing MetadataGetter for method: UnityWorkItem::get_Result
// Il2CppName: get_Result
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Internal::TestResult* (UnityWorkItem::*)()>(&UnityWorkItem::get_Result)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), "get_Result", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityWorkItem::set_Result
// Il2CppName: set_Result
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWorkItem::*)(NUnit::Framework::Internal::TestResult*)>(&UnityWorkItem::set_Result)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), "set_Result", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestResult*>()});
  }
};
// Writing MetadataGetter for method: UnityWorkItem::get_State
// Il2CppName: get_State
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Internal::Execution::WorkItemState (UnityWorkItem::*)()>(&UnityWorkItem::get_State)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), "get_State", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityWorkItem::set_State
// Il2CppName: set_State
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWorkItem::*)(NUnit::Framework::Internal::Execution::WorkItemState)>(&UnityWorkItem::set_State)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), "set_State", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Execution::WorkItemState>()});
  }
};
// Writing MetadataGetter for method: UnityWorkItem::get_Actions
// Il2CppName: get_Actions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<NUnit::Framework::ITestAction*>* (UnityWorkItem::*)()>(&UnityWorkItem::get_Actions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), "get_Actions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityWorkItem::set_Actions
// Il2CppName: set_Actions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWorkItem::*)(System::Collections::Generic::List_1<NUnit::Framework::ITestAction*>*)>(&UnityWorkItem::set_Actions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), "set_Actions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<NUnit::Framework::ITestAction*>*>()});
  }
};
// Writing MetadataGetter for method: UnityWorkItem::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWorkItem::*)(NUnit::Framework::Internal::Test*, UnityEngine::TestRunner::NUnitExtensions::Runner::WorkItemFactory*)>(&UnityWorkItem::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Test*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::WorkItemFactory*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWorkItem::*)(NUnit::Framework::Internal::Test*, UnityEngine::TestRunner::NUnitExtensions::Runner::WorkItemFactory*)>(&UnityWorkItem::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Test*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::WorkItemFactory*>()});
  }
};
// Writing MetadataGetter for method: UnityWorkItem::ShouldRestore
// Il2CppName: ShouldRestore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(NUnit::Framework::Interfaces::ITest*)>(&UnityWorkItem::ShouldRestore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), "ShouldRestore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: UnityWorkItem::ShouldExecuteStartEvent
// Il2CppName: ShouldExecuteStartEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityWorkItem::*)()>(&UnityWorkItem::ShouldExecuteStartEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), "ShouldExecuteStartEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityWorkItem::PerformWork
// Il2CppName: PerformWork
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerable* (UnityWorkItem::*)()>(&UnityWorkItem::PerformWork)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), "PerformWork", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityWorkItem::InitializeContext
// Il2CppName: InitializeContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWorkItem::*)(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&UnityWorkItem::InitializeContext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), "InitializeContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: UnityWorkItem::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerable* (UnityWorkItem::*)()>(&UnityWorkItem::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityWorkItem::WorkItemComplete
// Il2CppName: WorkItemComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWorkItem::*)()>(&UnityWorkItem::WorkItemComplete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), "WorkItemComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityWorkItem::Cancel
// Il2CppName: Cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWorkItem::*)(bool)>(&UnityWorkItem::Cancel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), "Cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityWorkItem::$ShouldExecuteStartEvent$b__33_0
// Il2CppName: <ShouldExecuteStartEvent>b__33_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityWorkItem::*)(::Il2CppString*)>(&UnityWorkItem::$ShouldExecuteStartEvent$b__33_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItem*), "<ShouldExecuteStartEvent>b__33_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItemDataHolder
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityWorkItemDataHolder.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.List`1<System.String> alreadyStartedTests
System::Collections::Generic::List_1<::Il2CppString*>* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItemDataHolder::_get_alreadyStartedTests() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItemDataHolder::_get_alreadyStartedTests");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<::Il2CppString*>*>("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityWorkItemDataHolder", "alreadyStartedTests"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.List`1<System.String> alreadyStartedTests
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItemDataHolder::_set_alreadyStartedTests(System::Collections::Generic::List_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItemDataHolder::_set_alreadyStartedTests");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityWorkItemDataHolder", "alreadyStartedTests", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.List`1<System.String> alreadyExecutedTests
System::Collections::Generic::List_1<::Il2CppString*>* UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItemDataHolder::_get_alreadyExecutedTests() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItemDataHolder::_get_alreadyExecutedTests");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<::Il2CppString*>*>("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityWorkItemDataHolder", "alreadyExecutedTests"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.List`1<System.String> alreadyExecutedTests
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItemDataHolder::_set_alreadyExecutedTests(System::Collections::Generic::List_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItemDataHolder::_set_alreadyExecutedTests");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityWorkItemDataHolder", "alreadyExecutedTests", value));
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItemDataHolder..cctor
void UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItemDataHolder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItemDataHolder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityWorkItemDataHolder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: UnityWorkItemDataHolder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityWorkItemDataHolder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityWorkItemDataHolder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.WorkItemFactory
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/WorkItemFactory.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityWorkItem
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityWorkItem.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: NUnit.Framework.Interfaces.ITestFilter
#include "NUnit/Framework/Interfaces/ITestFilter.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.WorkItemFactory.Create
UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem* UnityEngine::TestRunner::NUnitExtensions::Runner::WorkItemFactory::Create(NUnit::Framework::Interfaces::ITest* loadedTest, NUnit::Framework::Interfaces::ITestFilter* filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::WorkItemFactory::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loadedTest), ::il2cpp_utils::ExtractType(filter)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem*, false>(this, ___internal__method, loadedTest, filter);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Runner.WorkItemFactory.Create
UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem* UnityEngine::TestRunner::NUnitExtensions::Runner::WorkItemFactory::Create(NUnit::Framework::Internal::TestMethod* method, NUnit::Framework::Interfaces::ITestFilter* filter, NUnit::Framework::Interfaces::ITest* loadedTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Runner::WorkItemFactory::Create");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(loadedTest)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem*, false>(this, ___internal__method, method, filter, loadedTest);
}
// Writing MetadataGetter for method: WorkItemFactory::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem* (WorkItemFactory::*)(NUnit::Framework::Interfaces::ITest*, NUnit::Framework::Interfaces::ITestFilter*)>(&WorkItemFactory::Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WorkItemFactory*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestFilter*>()});
  }
};
// Writing MetadataGetter for method: WorkItemFactory::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityWorkItem* (WorkItemFactory::*)(NUnit::Framework::Internal::TestMethod*, NUnit::Framework::Interfaces::ITestFilter*, NUnit::Framework::Interfaces::ITest*)>(&WorkItemFactory::Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WorkItemFactory*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestMethod*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestFilter*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: WorkItemFactory::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WorkItemFactory::*)()>(&WorkItemFactory::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WorkItemFactory*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WorkItemFactory::*)()>(&WorkItemFactory::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WorkItemFactory*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Filters.AssemblyNameFilter
#include "UnityEngine/TestRunner/NUnitExtensions/Filters/AssemblyNameFilter.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Filters.AssemblyNameFilter.Match
bool UnityEngine::TestRunner::NUnitExtensions::Filters::AssemblyNameFilter::Match(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Filters::AssemblyNameFilter::Match");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Filters.AssemblyNameFilter.get_ElementName
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::Filters::AssemblyNameFilter::get_ElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Filters::AssemblyNameFilter::get_ElementName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: AssemblyNameFilter::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyNameFilter::*)(::Il2CppString*)>(&AssemblyNameFilter::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyNameFilter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyNameFilter::*)(::Il2CppString*)>(&AssemblyNameFilter::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyNameFilter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: AssemblyNameFilter::Match
// Il2CppName: Match
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (AssemblyNameFilter::*)(NUnit::Framework::Interfaces::ITest*)>(&AssemblyNameFilter::Match)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyNameFilter*), "Match", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: AssemblyNameFilter::get_ElementName
// Il2CppName: get_ElementName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (AssemblyNameFilter::*)()>(&AssemblyNameFilter::get_ElementName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyNameFilter*), "get_ElementName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Filters.CategoryFilterExtended
#include "UnityEngine/TestRunner/NUnitExtensions/Filters/CategoryFilterExtended.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String k_DefaultCategory
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::Filters::CategoryFilterExtended::_get_k_DefaultCategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Filters::CategoryFilterExtended::_get_k_DefaultCategory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("UnityEngine.TestRunner.NUnitExtensions.Filters", "CategoryFilterExtended", "k_DefaultCategory"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_DefaultCategory
void UnityEngine::TestRunner::NUnitExtensions::Filters::CategoryFilterExtended::_set_k_DefaultCategory(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Filters::CategoryFilterExtended::_set_k_DefaultCategory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestRunner.NUnitExtensions.Filters", "CategoryFilterExtended", "k_DefaultCategory", value));
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Filters.CategoryFilterExtended.Match
bool UnityEngine::TestRunner::NUnitExtensions::Filters::CategoryFilterExtended::Match(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Filters::CategoryFilterExtended::Match");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.Filters.CategoryFilterExtended..cctor
void UnityEngine::TestRunner::NUnitExtensions::Filters::CategoryFilterExtended::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestRunner::NUnitExtensions::Filters::CategoryFilterExtended::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions.Filters", "CategoryFilterExtended", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: CategoryFilterExtended::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CategoryFilterExtended::*)(::Il2CppString*)>(&CategoryFilterExtended::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CategoryFilterExtended*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CategoryFilterExtended::*)(::Il2CppString*)>(&CategoryFilterExtended::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CategoryFilterExtended*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CategoryFilterExtended::Match
// Il2CppName: Match
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CategoryFilterExtended::*)(NUnit::Framework::Interfaces::ITest*)>(&CategoryFilterExtended::Match)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CategoryFilterExtended*), "Match", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: CategoryFilterExtended::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CategoryFilterExtended::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CategoryFilterExtended*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.TestEnumerator
#include "UnityEngine/TestTools/TestEnumerator.hpp"
// Including type: UnityEngine.TestTools.TestEnumerator/<Execute>d__6
#include "UnityEngine/TestTools/TestEnumerator_-Execute-d__6.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.IEnumerator m_TestEnumerator
System::Collections::IEnumerator* UnityEngine::TestTools::TestEnumerator::_get_m_TestEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestEnumerator::_get_m_TestEnumerator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IEnumerator*>("UnityEngine.TestTools", "TestEnumerator", "m_TestEnumerator"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.IEnumerator m_TestEnumerator
void UnityEngine::TestTools::TestEnumerator::_set_m_TestEnumerator(System::Collections::IEnumerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestEnumerator::_set_m_TestEnumerator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestTools", "TestEnumerator", "m_TestEnumerator", value));
}
// Autogenerated method: UnityEngine.TestTools.TestEnumerator.Execute
System::Collections::IEnumerator* UnityEngine::TestTools::TestEnumerator::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestEnumerator::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: TestEnumerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestEnumerator::*)(NUnit::Framework::Internal::ITestExecutionContext*, System::Collections::IEnumerator*)>(&TestEnumerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestEnumerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::ITestExecutionContext*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::IEnumerator*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestEnumerator::*)(NUnit::Framework::Internal::ITestExecutionContext*, System::Collections::IEnumerator*)>(&TestEnumerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestEnumerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::ITestExecutionContext*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::IEnumerator*>()});
  }
};
// Writing MetadataGetter for method: TestEnumerator::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (TestEnumerator::*)()>(&TestEnumerator::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestEnumerator*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestEnumerator/<Execute>d__6
#include "UnityEngine/TestTools/TestEnumerator_-Execute-d__6.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestEnumerator/<Execute>d__6.System.IDisposable.Dispose
void UnityEngine::TestTools::TestEnumerator::$Execute$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestEnumerator::$Execute$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestEnumerator/<Execute>d__6.MoveNext
bool UnityEngine::TestTools::TestEnumerator::$Execute$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestEnumerator::$Execute$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestEnumerator/<Execute>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestTools::TestEnumerator::$Execute$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestEnumerator::$Execute$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestEnumerator/<Execute>d__6.System.Collections.IEnumerator.Reset
void UnityEngine::TestTools::TestEnumerator::$Execute$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestEnumerator::$Execute$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestEnumerator/<Execute>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestTools::TestEnumerator::$Execute$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestEnumerator::$Execute$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: TestEnumerator::$Execute$d__6::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestEnumerator::$Execute$d__6::*)(int)>(&TestEnumerator::$Execute$d__6::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestEnumerator::$Execute$d__6*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestEnumerator::$Execute$d__6::*)(int)>(&TestEnumerator::$Execute$d__6::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestEnumerator::$Execute$d__6*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TestEnumerator::$Execute$d__6::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestEnumerator::$Execute$d__6::*)()>(&TestEnumerator::$Execute$d__6::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestEnumerator::$Execute$d__6*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestEnumerator::$Execute$d__6::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TestEnumerator::$Execute$d__6::*)()>(&TestEnumerator::$Execute$d__6::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestEnumerator::$Execute$d__6*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestEnumerator::$Execute$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (TestEnumerator::$Execute$d__6::*)()>(&TestEnumerator::$Execute$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestEnumerator::$Execute$d__6*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestEnumerator::$Execute$d__6::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestEnumerator::$Execute$d__6::*)()>(&TestEnumerator::$Execute$d__6::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestEnumerator::$Execute$d__6*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestEnumerator::$Execute$d__6::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (TestEnumerator::$Execute$d__6::*)()>(&TestEnumerator::$Execute$d__6::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestEnumerator::$Execute$d__6*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.TestMustExpectAllLogsAttribute
#include "UnityEngine/TestTools/TestMustExpectAllLogsAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestMustExpectAllLogsAttribute.get_MustExpect
bool UnityEngine::TestTools::TestMustExpectAllLogsAttribute::get_MustExpect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestMustExpectAllLogsAttribute::get_MustExpect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MustExpect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: TestMustExpectAllLogsAttribute::get_MustExpect
// Il2CppName: get_MustExpect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TestMustExpectAllLogsAttribute::*)()>(&TestMustExpectAllLogsAttribute::get_MustExpect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestMustExpectAllLogsAttribute*), "get_MustExpect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.BeforeAfterTestCommandState
#include "UnityEngine/TestTools/BeforeAfterTestCommandState.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.BeforeAfterTestCommandState.Reset
void UnityEngine::TestTools::BeforeAfterTestCommandState::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::BeforeAfterTestCommandState::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.BeforeAfterTestCommandState.StoreTestResult
void UnityEngine::TestTools::BeforeAfterTestCommandState::StoreTestResult(NUnit::Framework::Internal::TestResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::BeforeAfterTestCommandState::StoreTestResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreTestResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: UnityEngine.TestTools.BeforeAfterTestCommandState.ApplyTestResult
void UnityEngine::TestTools::BeforeAfterTestCommandState::ApplyTestResult(NUnit::Framework::Internal::TestResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::BeforeAfterTestCommandState::ApplyTestResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyTestResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: BeforeAfterTestCommandState::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeforeAfterTestCommandState::*)()>(&BeforeAfterTestCommandState::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeforeAfterTestCommandState*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeforeAfterTestCommandState::StoreTestResult
// Il2CppName: StoreTestResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeforeAfterTestCommandState::*)(NUnit::Framework::Internal::TestResult*)>(&BeforeAfterTestCommandState::StoreTestResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeforeAfterTestCommandState*), "StoreTestResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestResult*>()});
  }
};
// Writing MetadataGetter for method: BeforeAfterTestCommandState::ApplyTestResult
// Il2CppName: ApplyTestResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeforeAfterTestCommandState::*)(NUnit::Framework::Internal::TestResult*)>(&BeforeAfterTestCommandState::ApplyTestResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeforeAfterTestCommandState*), "ApplyTestResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestResult*>()});
  }
};
// Writing MetadataGetter for method: BeforeAfterTestCommandState::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeforeAfterTestCommandState::*)()>(&BeforeAfterTestCommandState::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeforeAfterTestCommandState*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeforeAfterTestCommandState::*)()>(&BeforeAfterTestCommandState::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeforeAfterTestCommandState*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.EnumerableApplyChangesToContextCommand
#include "UnityEngine/TestTools/EnumerableApplyChangesToContextCommand.hpp"
// Including type: UnityEngine.TestTools.EnumerableApplyChangesToContextCommand/<ExecuteEnumerable>d__1
#include "UnityEngine/TestTools/EnumerableApplyChangesToContextCommand_-ExecuteEnumerable-d__1.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: NUnit.Framework.Interfaces.IApplyToContext
#include "NUnit/Framework/Interfaces/IApplyToContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.EnumerableApplyChangesToContextCommand.ExecuteEnumerable
System::Collections::IEnumerable* UnityEngine::TestTools::EnumerableApplyChangesToContextCommand::ExecuteEnumerable(NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableApplyChangesToContextCommand::ExecuteEnumerable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteEnumerable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerable*, false>(this, ___internal__method, context);
}
// Writing MetadataGetter for method: EnumerableApplyChangesToContextCommand::ExecuteEnumerable
// Il2CppName: ExecuteEnumerable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerable* (EnumerableApplyChangesToContextCommand::*)(NUnit::Framework::Internal::ITestExecutionContext*)>(&EnumerableApplyChangesToContextCommand::ExecuteEnumerable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableApplyChangesToContextCommand*), "ExecuteEnumerable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::ITestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: EnumerableApplyChangesToContextCommand::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableApplyChangesToContextCommand::*)(NUnit::Framework::Internal::Commands::TestCommand*, System::Collections::Generic::IEnumerable_1<NUnit::Framework::Interfaces::IApplyToContext*>*)>(&EnumerableApplyChangesToContextCommand::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableApplyChangesToContextCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Commands::TestCommand*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IEnumerable_1<NUnit::Framework::Interfaces::IApplyToContext*>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableApplyChangesToContextCommand::*)(NUnit::Framework::Internal::Commands::TestCommand*, System::Collections::Generic::IEnumerable_1<NUnit::Framework::Interfaces::IApplyToContext*>*)>(&EnumerableApplyChangesToContextCommand::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableApplyChangesToContextCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Commands::TestCommand*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IEnumerable_1<NUnit::Framework::Interfaces::IApplyToContext*>*>()});
  }
};
