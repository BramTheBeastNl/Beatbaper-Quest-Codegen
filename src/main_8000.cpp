// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.TimerThread/TimerQueue
#include "System/Net/TimerThread_TimerQueue.hpp"
// Including type: System.Net.TimerThread/TimerNode
#include "System/Net/TimerThread_TimerNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.TimerThread/InfiniteTimerQueue
#include "System/Net/TimerThread_InfiniteTimerQueue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.TimerThread/TimerNode
#include "System/Net/TimerThread_TimerNode.hpp"
// Including type: System.Net.TimerThread/Callback
#include "System/Net/TimerThread_Callback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.TimerThread/TimerNode.get_Next
System::Net::TimerThread::TimerNode* System::Net::TimerThread::TimerNode::get_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::TimerThread::TimerNode::get_Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::TimerThread::TimerNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.TimerThread/TimerNode.set_Next
void System::Net::TimerThread::TimerNode::set_Next(System::Net::TimerThread::TimerNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::TimerThread::TimerNode::set_Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.TimerThread/TimerNode.get_Prev
System::Net::TimerThread::TimerNode* System::Net::TimerThread::TimerNode::get_Prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::TimerThread::TimerNode::get_Prev");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prev", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::TimerThread::TimerNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.TimerThread/TimerNode.set_Prev
void System::Net::TimerThread::TimerNode::set_Prev(System::Net::TimerThread::TimerNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::TimerThread::TimerNode::set_Prev");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Prev", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.TimerThread/TimerNode.Cancel
bool System::Net::TimerThread::TimerNode::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::TimerThread::TimerNode::Cancel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.TimerThread/TimerNode/TimerState
#include "System/Net/TimerThread_TimerNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.TimerThread/TimerNode/TimerState Ready
System::Net::TimerThread::TimerNode::TimerState System::Net::TimerThread::TimerNode::TimerState::_get_Ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::TimerThread::TimerNode::TimerState::_get_Ready");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::TimerThread::TimerNode::TimerState>("System.Net", "TimerThread/TimerNode/TimerState", "Ready"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.TimerThread/TimerNode/TimerState Ready
void System::Net::TimerThread::TimerNode::TimerState::_set_Ready(System::Net::TimerThread::TimerNode::TimerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::TimerThread::TimerNode::TimerState::_set_Ready");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread/TimerNode/TimerState", "Ready", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.TimerThread/TimerNode/TimerState Fired
System::Net::TimerThread::TimerNode::TimerState System::Net::TimerThread::TimerNode::TimerState::_get_Fired() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::TimerThread::TimerNode::TimerState::_get_Fired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::TimerThread::TimerNode::TimerState>("System.Net", "TimerThread/TimerNode/TimerState", "Fired"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.TimerThread/TimerNode/TimerState Fired
void System::Net::TimerThread::TimerNode::TimerState::_set_Fired(System::Net::TimerThread::TimerNode::TimerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::TimerThread::TimerNode::TimerState::_set_Fired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread/TimerNode/TimerState", "Fired", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.TimerThread/TimerNode/TimerState Cancelled
System::Net::TimerThread::TimerNode::TimerState System::Net::TimerThread::TimerNode::TimerState::_get_Cancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::TimerThread::TimerNode::TimerState::_get_Cancelled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::TimerThread::TimerNode::TimerState>("System.Net", "TimerThread/TimerNode/TimerState", "Cancelled"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.TimerThread/TimerNode/TimerState Cancelled
void System::Net::TimerThread::TimerNode::TimerState::_set_Cancelled(System::Net::TimerThread::TimerNode::TimerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::TimerThread::TimerNode::TimerState::_set_Cancelled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread/TimerNode/TimerState", "Cancelled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.TimerThread/TimerNode/TimerState Sentinel
System::Net::TimerThread::TimerNode::TimerState System::Net::TimerThread::TimerNode::TimerState::_get_Sentinel() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::TimerThread::TimerNode::TimerState::_get_Sentinel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::TimerThread::TimerNode::TimerState>("System.Net", "TimerThread/TimerNode/TimerState", "Sentinel"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.TimerThread/TimerNode/TimerState Sentinel
void System::Net::TimerThread::TimerNode::TimerState::_set_Sentinel(System::Net::TimerThread::TimerNode::TimerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::TimerThread::TimerNode::TimerState::_set_Sentinel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread/TimerNode/TimerState", "Sentinel", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.EmptyWebProxy
#include "System/Net/EmptyWebProxy.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.EmptyWebProxy.GetProxy
System::Uri* System::Net::EmptyWebProxy::GetProxy(System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EmptyWebProxy::GetProxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Net.EmptyWebProxy.IsBypassed
bool System::Net::EmptyWebProxy::IsBypassed(System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EmptyWebProxy::IsBypassed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBypassed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Net.EmptyWebProxy.get_Credentials
System::Net::ICredentials* System::Net::EmptyWebProxy::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EmptyWebProxy::get_Credentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Credentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.CookieVariant
#include "System/Net/CookieVariant.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.CookieVariant Unknown
System::Net::CookieVariant System::Net::CookieVariant::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieVariant::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieVariant>("System.Net", "CookieVariant", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieVariant Unknown
void System::Net::CookieVariant::_set_Unknown(System::Net::CookieVariant value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieVariant::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieVariant", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieVariant Plain
System::Net::CookieVariant System::Net::CookieVariant::_get_Plain() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieVariant::_get_Plain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieVariant>("System.Net", "CookieVariant", "Plain"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieVariant Plain
void System::Net::CookieVariant::_set_Plain(System::Net::CookieVariant value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieVariant::_set_Plain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieVariant", "Plain", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieVariant Rfc2109
System::Net::CookieVariant System::Net::CookieVariant::_get_Rfc2109() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieVariant::_get_Rfc2109");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieVariant>("System.Net", "CookieVariant", "Rfc2109"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieVariant Rfc2109
void System::Net::CookieVariant::_set_Rfc2109(System::Net::CookieVariant value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieVariant::_set_Rfc2109");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieVariant", "Rfc2109", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieVariant Rfc2965
System::Net::CookieVariant System::Net::CookieVariant::_get_Rfc2965() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieVariant::_get_Rfc2965");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieVariant>("System.Net", "CookieVariant", "Rfc2965"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieVariant Rfc2965
void System::Net::CookieVariant::_set_Rfc2965(System::Net::CookieVariant value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieVariant::_set_Rfc2965");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieVariant", "Rfc2965", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieVariant Default
System::Net::CookieVariant System::Net::CookieVariant::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieVariant::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieVariant>("System.Net", "CookieVariant", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieVariant Default
void System::Net::CookieVariant::_set_Default(System::Net::CookieVariant value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieVariant::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieVariant", "Default", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Cookie
#include "System/Net/Cookie.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.Comparer
#include "System/Net/Comparer.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Char[] PortSplitDelimiters
::Array<::Il2CppChar>* System::Net::Cookie::_get_PortSplitDelimiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::_get_PortSplitDelimiters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Net", "Cookie", "PortSplitDelimiters"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] PortSplitDelimiters
void System::Net::Cookie::_set_PortSplitDelimiters(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::_set_PortSplitDelimiters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "PortSplitDelimiters", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] Reserved2Name
::Array<::Il2CppChar>* System::Net::Cookie::_get_Reserved2Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::_get_Reserved2Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Net", "Cookie", "Reserved2Name"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] Reserved2Name
void System::Net::Cookie::_set_Reserved2Name(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::_set_Reserved2Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "Reserved2Name", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] Reserved2Value
::Array<::Il2CppChar>* System::Net::Cookie::_get_Reserved2Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::_get_Reserved2Value");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Net", "Cookie", "Reserved2Value"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] Reserved2Value
void System::Net::Cookie::_set_Reserved2Value(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::_set_Reserved2Value");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "Reserved2Value", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.Comparer staticComparer
System::Net::Comparer* System::Net::Cookie::_get_staticComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::_get_staticComparer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Comparer*>("System.Net", "Cookie", "staticComparer"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.Comparer staticComparer
void System::Net::Cookie::_set_staticComparer(System::Net::Comparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::_set_staticComparer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "staticComparer", value));
}
// Autogenerated method: System.Net.Cookie.get_Comment
::Il2CppString* System::Net::Cookie::get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::get_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Comment
void System::Net::Cookie::set_Comment(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::set_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.set_CommentUri
void System::Net::Cookie::set_CommentUri(System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::set_CommentUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CommentUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.set_HttpOnly
void System::Net::Cookie::set_HttpOnly(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::set_HttpOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HttpOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.set_Discard
void System::Net::Cookie::set_Discard(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::set_Discard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Discard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_Domain
::Il2CppString* System::Net::Cookie::get_Domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::get_Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Domain
void System::Net::Cookie::set_Domain(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::set_Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get__Domain
::Il2CppString* System::Net::Cookie::get__Domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::get__Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.get_Expired
bool System::Net::Cookie::get_Expired() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::get_Expired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Expired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Expires
void System::Net::Cookie::set_Expires(System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::set_Expires");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Expires", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_Name
::Il2CppString* System::Net::Cookie::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Name
void System::Net::Cookie::set_Name(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.InternalSetName
bool System::Net::Cookie::InternalSetName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::InternalSetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_Path
::Il2CppString* System::Net::Cookie::get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::get_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Path
void System::Net::Cookie::set_Path(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::set_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get__Path
::Il2CppString* System::Net::Cookie::get__Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::get__Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.get_Plain
bool System::Net::Cookie::get_Plain() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::get_Plain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Plain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.IsDomainEqualToHost
bool System::Net::Cookie::IsDomainEqualToHost(::Il2CppString* domain, ::Il2CppString* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::IsDomainEqualToHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Cookie", "IsDomainEqualToHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(domain), ::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, domain, host);
}
// Autogenerated method: System.Net.Cookie.VerifySetDefaults
bool System::Net::Cookie::VerifySetDefaults(System::Net::CookieVariant variant, System::Uri* uri, bool isLocalDomain, ::Il2CppString* localDomain, bool set_default, bool isThrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::VerifySetDefaults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySetDefaults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variant), ::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(isLocalDomain), ::il2cpp_utils::ExtractType(localDomain), ::il2cpp_utils::ExtractType(set_default), ::il2cpp_utils::ExtractType(isThrow)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, variant, uri, isLocalDomain, localDomain, set_default, isThrow);
}
// Autogenerated method: System.Net.Cookie.DomainCharsTest
bool System::Net::Cookie::DomainCharsTest(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::DomainCharsTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Cookie", "DomainCharsTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Net.Cookie.get_Port
::Il2CppString* System::Net::Cookie::get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::get_Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Port
void System::Net::Cookie::set_Port(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::set_Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_PortList
::Array<int>* System::Net::Cookie::get_PortList() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::get_PortList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PortList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.get__Port
::Il2CppString* System::Net::Cookie::get__Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::get__Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.get_Secure
bool System::Net::Cookie::get_Secure() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::get_Secure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Secure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Secure
void System::Net::Cookie::set_Secure(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::set_Secure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Secure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_Value
::Il2CppString* System::Net::Cookie::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Value
void System::Net::Cookie::set_Value(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_Variant
System::Net::CookieVariant System::Net::Cookie::get_Variant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::get_Variant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Variant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::CookieVariant, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.get_DomainKey
::Il2CppString* System::Net::Cookie::get_DomainKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::get_DomainKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DomainKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.get_Version
int System::Net::Cookie::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Version
void System::Net::Cookie::set_Version(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::set_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get__Version
::Il2CppString* System::Net::Cookie::get__Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::get__Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.GetComparer
System::Collections::IComparer* System::Net::Cookie::GetComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::GetComparer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Cookie", "GetComparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IComparer*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Cookie..cctor
void System::Net::Cookie::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Cookie", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Cookie.Equals
bool System::Net::Cookie::Equals(::Il2CppObject* comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comparand)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, comparand);
}
// Autogenerated method: System.Net.Cookie.GetHashCode
int System::Net::Cookie::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.ToString
::Il2CppString* System::Net::Cookie::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cookie::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.CookieToken
#include "System/Net/CookieToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Nothing
System::Net::CookieToken System::Net::CookieToken::_get_Nothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_get_Nothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieToken>("System.Net", "CookieToken", "Nothing"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Nothing
void System::Net::CookieToken::_set_Nothing(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_set_Nothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Nothing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken NameValuePair
System::Net::CookieToken System::Net::CookieToken::_get_NameValuePair() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_get_NameValuePair");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieToken>("System.Net", "CookieToken", "NameValuePair"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken NameValuePair
void System::Net::CookieToken::_set_NameValuePair(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_set_NameValuePair");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "NameValuePair", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Attribute
System::Net::CookieToken System::Net::CookieToken::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieToken>("System.Net", "CookieToken", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Attribute
void System::Net::CookieToken::_set_Attribute(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken EndToken
System::Net::CookieToken System::Net::CookieToken::_get_EndToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_get_EndToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieToken>("System.Net", "CookieToken", "EndToken"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken EndToken
void System::Net::CookieToken::_set_EndToken(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_set_EndToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "EndToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken EndCookie
System::Net::CookieToken System::Net::CookieToken::_get_EndCookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_get_EndCookie");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieToken>("System.Net", "CookieToken", "EndCookie"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken EndCookie
void System::Net::CookieToken::_set_EndCookie(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_set_EndCookie");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "EndCookie", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken End
System::Net::CookieToken System::Net::CookieToken::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieToken>("System.Net", "CookieToken", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken End
void System::Net::CookieToken::_set_End(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "End", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Equals
System::Net::CookieToken System::Net::CookieToken::_get_Equals() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_get_Equals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieToken>("System.Net", "CookieToken", "Equals"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Equals
void System::Net::CookieToken::_set_Equals(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_set_Equals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Equals", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Comment
System::Net::CookieToken System::Net::CookieToken::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieToken>("System.Net", "CookieToken", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Comment
void System::Net::CookieToken::_set_Comment(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken CommentUrl
System::Net::CookieToken System::Net::CookieToken::_get_CommentUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_get_CommentUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieToken>("System.Net", "CookieToken", "CommentUrl"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken CommentUrl
void System::Net::CookieToken::_set_CommentUrl(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_set_CommentUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "CommentUrl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken CookieName
System::Net::CookieToken System::Net::CookieToken::_get_CookieName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_get_CookieName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieToken>("System.Net", "CookieToken", "CookieName"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken CookieName
void System::Net::CookieToken::_set_CookieName(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_set_CookieName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "CookieName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Discard
System::Net::CookieToken System::Net::CookieToken::_get_Discard() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_get_Discard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieToken>("System.Net", "CookieToken", "Discard"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Discard
void System::Net::CookieToken::_set_Discard(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_set_Discard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Discard", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Domain
System::Net::CookieToken System::Net::CookieToken::_get_Domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_get_Domain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieToken>("System.Net", "CookieToken", "Domain"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Domain
void System::Net::CookieToken::_set_Domain(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_set_Domain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Domain", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Expires
System::Net::CookieToken System::Net::CookieToken::_get_Expires() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_get_Expires");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieToken>("System.Net", "CookieToken", "Expires"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Expires
void System::Net::CookieToken::_set_Expires(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_set_Expires");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Expires", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken MaxAge
System::Net::CookieToken System::Net::CookieToken::_get_MaxAge() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_get_MaxAge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieToken>("System.Net", "CookieToken", "MaxAge"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken MaxAge
void System::Net::CookieToken::_set_MaxAge(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_set_MaxAge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "MaxAge", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Path
System::Net::CookieToken System::Net::CookieToken::_get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_get_Path");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieToken>("System.Net", "CookieToken", "Path"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Path
void System::Net::CookieToken::_set_Path(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_set_Path");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Path", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Port
System::Net::CookieToken System::Net::CookieToken::_get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_get_Port");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieToken>("System.Net", "CookieToken", "Port"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Port
void System::Net::CookieToken::_set_Port(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_set_Port");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Port", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Secure
System::Net::CookieToken System::Net::CookieToken::_get_Secure() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_get_Secure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieToken>("System.Net", "CookieToken", "Secure"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Secure
void System::Net::CookieToken::_set_Secure(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_set_Secure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Secure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken HttpOnly
System::Net::CookieToken System::Net::CookieToken::_get_HttpOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_get_HttpOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieToken>("System.Net", "CookieToken", "HttpOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken HttpOnly
void System::Net::CookieToken::_set_HttpOnly(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_set_HttpOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "HttpOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Unknown
System::Net::CookieToken System::Net::CookieToken::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieToken>("System.Net", "CookieToken", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Unknown
void System::Net::CookieToken::_set_Unknown(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Version
System::Net::CookieToken System::Net::CookieToken::_get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_get_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieToken>("System.Net", "CookieToken", "Version"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Version
void System::Net::CookieToken::_set_Version(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieToken::_set_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Version", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.CookieTokenizer
#include "System/Net/CookieTokenizer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Net.CookieTokenizer/RecognizedAttribute[] RecognizedAttributes
::Array<System::Net::CookieTokenizer::RecognizedAttribute>* System::Net::CookieTokenizer::_get_RecognizedAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::_get_RecognizedAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Net::CookieTokenizer::RecognizedAttribute>*>("System.Net", "CookieTokenizer", "RecognizedAttributes"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.CookieTokenizer/RecognizedAttribute[] RecognizedAttributes
void System::Net::CookieTokenizer::_set_RecognizedAttributes(::Array<System::Net::CookieTokenizer::RecognizedAttribute>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::_set_RecognizedAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieTokenizer", "RecognizedAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.CookieTokenizer/RecognizedAttribute[] RecognizedServerAttributes
::Array<System::Net::CookieTokenizer::RecognizedAttribute>* System::Net::CookieTokenizer::_get_RecognizedServerAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::_get_RecognizedServerAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Net::CookieTokenizer::RecognizedAttribute>*>("System.Net", "CookieTokenizer", "RecognizedServerAttributes"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.CookieTokenizer/RecognizedAttribute[] RecognizedServerAttributes
void System::Net::CookieTokenizer::_set_RecognizedServerAttributes(::Array<System::Net::CookieTokenizer::RecognizedAttribute>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::_set_RecognizedServerAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieTokenizer", "RecognizedServerAttributes", value));
}
// Autogenerated method: System.Net.CookieTokenizer.get_EndOfCookie
bool System::Net::CookieTokenizer::get_EndOfCookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::get_EndOfCookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndOfCookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.set_EndOfCookie
void System::Net::CookieTokenizer::set_EndOfCookie(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::set_EndOfCookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EndOfCookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.CookieTokenizer.get_Eof
bool System::Net::CookieTokenizer::get_Eof() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::get_Eof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Eof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.get_Name
::Il2CppString* System::Net::CookieTokenizer::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.set_Name
void System::Net::CookieTokenizer::set_Name(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.CookieTokenizer.get_Quoted
bool System::Net::CookieTokenizer::get_Quoted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::get_Quoted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Quoted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.set_Quoted
void System::Net::CookieTokenizer::set_Quoted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::set_Quoted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Quoted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.CookieTokenizer.get_Token
System::Net::CookieToken System::Net::CookieTokenizer::get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::get_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::CookieToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.set_Token
void System::Net::CookieTokenizer::set_Token(System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::set_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.CookieTokenizer.get_Value
::Il2CppString* System::Net::CookieTokenizer::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.set_Value
void System::Net::CookieTokenizer::set_Value(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.CookieTokenizer.Extract
::Il2CppString* System::Net::CookieTokenizer::Extract() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::Extract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Extract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.FindNext
System::Net::CookieToken System::Net::CookieTokenizer::FindNext(bool ignoreComma, bool ignoreEquals) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::FindNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignoreComma), ::il2cpp_utils::ExtractType(ignoreEquals)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::CookieToken, false>(this, ___internal__method, ignoreComma, ignoreEquals);
}
// Autogenerated method: System.Net.CookieTokenizer.Next
System::Net::CookieToken System::Net::CookieTokenizer::Next(bool first, bool parseResponseCookies) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(parseResponseCookies)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::CookieToken, false>(this, ___internal__method, first, parseResponseCookies);
}
// Autogenerated method: System.Net.CookieTokenizer.Reset
void System::Net::CookieTokenizer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.TokenFromName
System::Net::CookieToken System::Net::CookieTokenizer::TokenFromName(bool parseResponseCookies) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::TokenFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TokenFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parseResponseCookies)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::CookieToken, false>(this, ___internal__method, parseResponseCookies);
}
// Autogenerated method: System.Net.CookieTokenizer..cctor
void System::Net::CookieTokenizer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "CookieTokenizer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.CookieTokenizer/RecognizedAttribute
#include "System/Net/CookieTokenizer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.CookieTokenizer/RecognizedAttribute.get_Token
System::Net::CookieToken System::Net::CookieTokenizer::RecognizedAttribute::get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::RecognizedAttribute::get_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::CookieToken, false>(*this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer/RecognizedAttribute.IsEqualTo
bool System::Net::CookieTokenizer::RecognizedAttribute::IsEqualTo(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieTokenizer::RecognizedAttribute::IsEqualTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsEqualTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.CookieParser
#include "System/Net/CookieParser.hpp"
// Including type: System.Net.CookieTokenizer
#include "System/Net/CookieTokenizer.hpp"
// Including type: System.Net.Cookie
#include "System/Net/Cookie.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.CookieParser.Get
System::Net::Cookie* System::Net::CookieParser::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieParser::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Cookie*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieParser.CheckQuoted
::Il2CppString* System::Net::CookieParser::CheckQuoted(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieParser::CheckQuoted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "CookieParser", "CheckQuoted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Comparer
#include "System/Net/Comparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Comparer.System.Collections.IComparer.Compare
int System::Net::Comparer::System_Collections_IComparer_Compare(::Il2CppObject* ol, ::Il2CppObject* _or) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Comparer::System.Collections.IComparer.Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IComparer.Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ol), ::il2cpp_utils::ExtractType(_or)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, ol, _or);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.CookieCollection
#include "System/Net/CookieCollection.hpp"
// Including type: System.Net.CookieCollection/Stamp
#include "System/Net/CookieCollection_Stamp.hpp"
// Including type: System.Net.CookieCollection/CookieCollectionEnumerator
#include "System/Net/CookieCollection_CookieCollectionEnumerator.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Net.Cookie
#include "System/Net/Cookie.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.CookieCollection.get_Item
System::Net::Cookie* System::Net::CookieCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Cookie*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Net.CookieCollection.Add
void System::Net::CookieCollection::Add(System::Net::Cookie* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cookie);
}
// Autogenerated method: System.Net.CookieCollection.Add
void System::Net::CookieCollection::Add(System::Net::CookieCollection* cookies) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookies)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cookies);
}
// Autogenerated method: System.Net.CookieCollection.get_Count
int System::Net::CookieCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieCollection.CopyTo
void System::Net::CookieCollection::CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Net.CookieCollection.TimeStamp
System::DateTime System::Net::CookieCollection::TimeStamp(System::Net::CookieCollection::Stamp how) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::TimeStamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TimeStamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(how)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method, how);
}
// Autogenerated method: System.Net.CookieCollection.get_IsOtherVersionSeen
bool System::Net::CookieCollection::get_IsOtherVersionSeen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::get_IsOtherVersionSeen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOtherVersionSeen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieCollection.InternalAdd
int System::Net::CookieCollection::InternalAdd(System::Net::Cookie* cookie, bool isStrict) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::InternalAdd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalAdd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie), ::il2cpp_utils::ExtractType(isStrict)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, cookie, isStrict);
}
// Autogenerated method: System.Net.CookieCollection.IndexOf
int System::Net::CookieCollection::IndexOf(System::Net::Cookie* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, cookie);
}
// Autogenerated method: System.Net.CookieCollection.RemoveAt
void System::Net::CookieCollection::RemoveAt(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: System.Net.CookieCollection.GetEnumerator
System::Collections::IEnumerator* System::Net::CookieCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.CookieCollection/Stamp
#include "System/Net/CookieCollection_Stamp.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.CookieCollection/Stamp Check
System::Net::CookieCollection::Stamp System::Net::CookieCollection::Stamp::_get_Check() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::Stamp::_get_Check");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieCollection::Stamp>("System.Net", "CookieCollection/Stamp", "Check"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieCollection/Stamp Check
void System::Net::CookieCollection::Stamp::_set_Check(System::Net::CookieCollection::Stamp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::Stamp::_set_Check");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieCollection/Stamp", "Check", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieCollection/Stamp Set
System::Net::CookieCollection::Stamp System::Net::CookieCollection::Stamp::_get_Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::Stamp::_get_Set");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieCollection::Stamp>("System.Net", "CookieCollection/Stamp", "Set"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieCollection/Stamp Set
void System::Net::CookieCollection::Stamp::_set_Set(System::Net::CookieCollection::Stamp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::Stamp::_set_Set");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieCollection/Stamp", "Set", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieCollection/Stamp SetToUnused
System::Net::CookieCollection::Stamp System::Net::CookieCollection::Stamp::_get_SetToUnused() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::Stamp::_get_SetToUnused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieCollection::Stamp>("System.Net", "CookieCollection/Stamp", "SetToUnused"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieCollection/Stamp SetToUnused
void System::Net::CookieCollection::Stamp::_set_SetToUnused(System::Net::CookieCollection::Stamp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::Stamp::_set_SetToUnused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieCollection/Stamp", "SetToUnused", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieCollection/Stamp SetToMaxUsed
System::Net::CookieCollection::Stamp System::Net::CookieCollection::Stamp::_get_SetToMaxUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::Stamp::_get_SetToMaxUsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::CookieCollection::Stamp>("System.Net", "CookieCollection/Stamp", "SetToMaxUsed"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieCollection/Stamp SetToMaxUsed
void System::Net::CookieCollection::Stamp::_set_SetToMaxUsed(System::Net::CookieCollection::Stamp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::Stamp::_set_SetToMaxUsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieCollection/Stamp", "SetToMaxUsed", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.CookieCollection/CookieCollectionEnumerator
#include "System/Net/CookieCollection_CookieCollectionEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.CookieCollection/CookieCollectionEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Net::CookieCollection::CookieCollectionEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::CookieCollectionEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieCollection/CookieCollectionEnumerator.System.Collections.IEnumerator.MoveNext
bool System::Net::CookieCollection::CookieCollectionEnumerator::System_Collections_IEnumerator_MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::CookieCollectionEnumerator::System.Collections.IEnumerator.MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieCollection/CookieCollectionEnumerator.System.Collections.IEnumerator.Reset
void System::Net::CookieCollection::CookieCollectionEnumerator::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieCollection::CookieCollectionEnumerator::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HeaderVariantInfo
#include "System/Net/HeaderVariantInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.HeaderVariantInfo.get_Name
::Il2CppString* System::Net::HeaderVariantInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HeaderVariantInfo::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Net.HeaderVariantInfo.get_Variant
System::Net::CookieVariant System::Net::HeaderVariantInfo::get_Variant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HeaderVariantInfo::get_Variant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Variant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::CookieVariant, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.CookieContainer
#include "System/Net/CookieContainer.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Net.PathList
#include "System/Net/PathList.hpp"
// Including type: System.Net.Cookie
#include "System/Net/Cookie.hpp"
// Including type: System.Net.CookieCollection
#include "System/Net/CookieCollection.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Net.HeaderVariantInfo[] HeaderInfo
::Array<System::Net::HeaderVariantInfo>* System::Net::CookieContainer::_get_HeaderInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieContainer::_get_HeaderInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Net::HeaderVariantInfo>*>("System.Net", "CookieContainer", "HeaderInfo"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.HeaderVariantInfo[] HeaderInfo
void System::Net::CookieContainer::_set_HeaderInfo(::Array<System::Net::HeaderVariantInfo>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieContainer::_set_HeaderInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieContainer", "HeaderInfo", value));
}
// Autogenerated method: System.Net.CookieContainer.AddRemoveDomain
void System::Net::CookieContainer::AddRemoveDomain(::Il2CppString* key, System::Net::PathList* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieContainer::AddRemoveDomain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRemoveDomain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Net.CookieContainer.Add
void System::Net::CookieContainer::Add(System::Net::Cookie* cookie, bool throwOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieContainer::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie), ::il2cpp_utils::ExtractType(throwOnError)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cookie, throwOnError);
}
// Autogenerated method: System.Net.CookieContainer.AgeCookies
bool System::Net::CookieContainer::AgeCookies(::Il2CppString* domain) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieContainer::AgeCookies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AgeCookies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(domain)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, domain);
}
// Autogenerated method: System.Net.CookieContainer.ExpireCollection
int System::Net::CookieContainer::ExpireCollection(System::Net::CookieCollection* cc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieContainer::ExpireCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpireCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cc)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, cc);
}
// Autogenerated method: System.Net.CookieContainer.IsLocalDomain
bool System::Net::CookieContainer::IsLocalDomain(::Il2CppString* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieContainer::IsLocalDomain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLocalDomain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.CookieContainer.CookieCutter
System::Net::CookieCollection* System::Net::CookieContainer::CookieCutter(System::Uri* uri, ::Il2CppString* headerName, ::Il2CppString* setCookieHeader, bool isThrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieContainer::CookieCutter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CookieCutter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(headerName), ::il2cpp_utils::ExtractType(setCookieHeader), ::il2cpp_utils::ExtractType(isThrow)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::CookieCollection*, false>(this, ___internal__method, uri, headerName, setCookieHeader, isThrow);
}
// Autogenerated method: System.Net.CookieContainer.InternalGetCookies
System::Net::CookieCollection* System::Net::CookieContainer::InternalGetCookies(System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieContainer::InternalGetCookies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetCookies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::CookieCollection*, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Net.CookieContainer.BuildCookieCollectionFromDomainMatches
void System::Net::CookieContainer::BuildCookieCollectionFromDomainMatches(System::Uri* uri, bool isSecure, int port, System::Net::CookieCollection* cookies, System::Collections::Generic::List_1<::Il2CppString*>* domainAttribute, bool matchOnlyPlainCookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieContainer::BuildCookieCollectionFromDomainMatches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildCookieCollectionFromDomainMatches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(isSecure), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(cookies), ::il2cpp_utils::ExtractType(domainAttribute), ::il2cpp_utils::ExtractType(matchOnlyPlainCookie)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, uri, isSecure, port, cookies, domainAttribute, matchOnlyPlainCookie);
}
// Autogenerated method: System.Net.CookieContainer.MergeUpdateCollections
void System::Net::CookieContainer::MergeUpdateCollections(System::Net::CookieCollection* destination, System::Net::CookieCollection* source, int port, bool isSecure, bool isPlainOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieContainer::MergeUpdateCollections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MergeUpdateCollections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(isSecure), ::il2cpp_utils::ExtractType(isPlainOnly)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, destination, source, port, isSecure, isPlainOnly);
}
// Autogenerated method: System.Net.CookieContainer.GetCookieHeader
::Il2CppString* System::Net::CookieContainer::GetCookieHeader(System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieContainer::GetCookieHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCookieHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Net.CookieContainer.GetCookieHeader
::Il2CppString* System::Net::CookieContainer::GetCookieHeader(System::Uri* uri, ::Il2CppString*& optCookie2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieContainer::GetCookieHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCookieHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, uri, optCookie2);
}
// Autogenerated method: System.Net.CookieContainer..cctor
void System::Net::CookieContainer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieContainer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "CookieContainer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.PathList
#include "System/Net/PathList.hpp"
// Including type: System.Net.PathList/PathListComparer
#include "System/Net/PathList_PathListComparer.hpp"
// Including type: System.Collections.SortedList
#include "System/Collections/SortedList.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.PathList.get_Count
int System::Net::PathList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::PathList::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.PathList.GetCookiesCount
int System::Net::PathList::GetCookiesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::PathList::GetCookiesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCookiesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.PathList.get_Values
System::Collections::ICollection* System::Net::PathList::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::PathList::get_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.PathList.get_Item
::Il2CppObject* System::Net::PathList::get_Item(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::PathList::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Net.PathList.set_Item
void System::Net::PathList::set_Item(::Il2CppString* s, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::PathList::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s, value);
}
// Autogenerated method: System.Net.PathList.GetEnumerator
System::Collections::IEnumerator* System::Net::PathList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::PathList::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.PathList.get_SyncRoot
::Il2CppObject* System::Net::PathList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::PathList::get_SyncRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.PathList/PathListComparer
#include "System/Net/PathList_PathListComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Net.PathList/PathListComparer StaticInstance
System::Net::PathList::PathListComparer* System::Net::PathList::PathListComparer::_get_StaticInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::PathList::PathListComparer::_get_StaticInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::PathList::PathListComparer*>("System.Net", "PathList/PathListComparer", "StaticInstance"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Net.PathList/PathListComparer StaticInstance
void System::Net::PathList::PathListComparer::_set_StaticInstance(System::Net::PathList::PathListComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::PathList::PathListComparer::_set_StaticInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "PathList/PathListComparer", "StaticInstance", value));
}
// Autogenerated method: System.Net.PathList/PathListComparer.System.Collections.IComparer.Compare
int System::Net::PathList::PathListComparer::System_Collections_IComparer_Compare(::Il2CppObject* ol, ::Il2CppObject* _or) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::PathList::PathListComparer::System.Collections.IComparer.Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IComparer.Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ol), ::il2cpp_utils::ExtractType(_or)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, ol, _or);
}
// Autogenerated method: System.Net.PathList/PathListComparer..cctor
void System::Net::PathList::PathListComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::PathList::PathListComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "PathList/PathListComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.CookieException
#include "System/Net/CookieException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.CookieException.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::CookieException::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieException::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.CookieException.GetObjectData
void System::Net::CookieException::GetObjectData(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::CookieException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.FileWebRequest
#include "System/Net/FileWebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.LazyAsyncResult
#include "System/Net/LazyAsyncResult.hpp"
// Including type: System.Threading.WaitCallback
#include "System/Threading/WaitCallback.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.WaitCallback s_GetRequestStreamCallback
System::Threading::WaitCallback* System::Net::FileWebRequest::_get_s_GetRequestStreamCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::_get_s_GetRequestStreamCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::WaitCallback*>("System.Net", "FileWebRequest", "s_GetRequestStreamCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.WaitCallback s_GetRequestStreamCallback
void System::Net::FileWebRequest::_set_s_GetRequestStreamCallback(System::Threading::WaitCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::_set_s_GetRequestStreamCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FileWebRequest", "s_GetRequestStreamCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.WaitCallback s_GetResponseCallback
System::Threading::WaitCallback* System::Net::FileWebRequest::_get_s_GetResponseCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::_get_s_GetResponseCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::WaitCallback*>("System.Net", "FileWebRequest", "s_GetResponseCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.WaitCallback s_GetResponseCallback
void System::Net::FileWebRequest::_set_s_GetResponseCallback(System::Threading::WaitCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::_set_s_GetResponseCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FileWebRequest", "s_GetResponseCallback", value));
}
// Autogenerated method: System.Net.FileWebRequest.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::FileWebRequest::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.FileWebRequest.get_Aborted
bool System::Net::FileWebRequest::get_Aborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::get_Aborted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Aborted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.CanGetRequestStream
bool System::Net::FileWebRequest::CanGetRequestStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::CanGetRequestStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanGetRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.GetRequestStreamCallback
void System::Net::FileWebRequest::GetRequestStreamCallback(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::GetRequestStreamCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "FileWebRequest", "GetRequestStreamCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, state);
}
// Autogenerated method: System.Net.FileWebRequest.GetResponseCallback
void System::Net::FileWebRequest::GetResponseCallback(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::GetResponseCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "FileWebRequest", "GetResponseCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, state);
}
// Autogenerated method: System.Net.FileWebRequest.UnblockReader
void System::Net::FileWebRequest::UnblockReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::UnblockReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnblockReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.GetObjectData
void System::Net::FileWebRequest::GetObjectData(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.FileWebRequest.set_ConnectionGroupName
void System::Net::FileWebRequest::set_ConnectionGroupName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::set_ConnectionGroupName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ConnectionGroupName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.get_ContentLength
int64_t System::Net::FileWebRequest::get_ContentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::get_ContentLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.set_ContentLength
void System::Net::FileWebRequest::set_ContentLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::set_ContentLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.get_Credentials
System::Net::ICredentials* System::Net::FileWebRequest::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::get_Credentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Credentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.set_Credentials
void System::Net::FileWebRequest::set_Credentials(System::Net::ICredentials* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::set_Credentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Credentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.get_Headers
System::Net::WebHeaderCollection* System::Net::FileWebRequest::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::get_Headers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebHeaderCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.get_Method
::Il2CppString* System::Net::FileWebRequest::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::get_Method");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.set_Method
void System::Net::FileWebRequest::set_Method(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::set_Method");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.set_PreAuthenticate
void System::Net::FileWebRequest::set_PreAuthenticate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::set_PreAuthenticate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PreAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.get_Proxy
System::Net::IWebProxy* System::Net::FileWebRequest::get_Proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::get_Proxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Proxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IWebProxy*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.set_Proxy
void System::Net::FileWebRequest::set_Proxy(System::Net::IWebProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::set_Proxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Proxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.get_Timeout
int System::Net::FileWebRequest::get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::get_Timeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.get_RequestUri
System::Uri* System::Net::FileWebRequest::get_RequestUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::get_RequestUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.BeginGetRequestStream
System::IAsyncResult* System::Net::FileWebRequest::BeginGetRequestStream(System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::BeginGetRequestStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginGetRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.FileWebRequest.BeginGetResponse
System::IAsyncResult* System::Net::FileWebRequest::BeginGetResponse(System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::BeginGetResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginGetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.FileWebRequest.EndGetRequestStream
System::IO::Stream* System::Net::FileWebRequest::EndGetRequestStream(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::EndGetRequestStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndGetRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.FileWebRequest.EndGetResponse
System::Net::WebResponse* System::Net::FileWebRequest::EndGetResponse(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::EndGetResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndGetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebResponse*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.FileWebRequest.GetResponse
System::Net::WebResponse* System::Net::FileWebRequest::GetResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::GetResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebResponse*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.get_UseDefaultCredentials
bool System::Net::FileWebRequest::get_UseDefaultCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::get_UseDefaultCredentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseDefaultCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.set_UseDefaultCredentials
void System::Net::FileWebRequest::set_UseDefaultCredentials(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::set_UseDefaultCredentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseDefaultCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.Abort
void System::Net::FileWebRequest::Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::Abort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Abort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest..cctor
void System::Net::FileWebRequest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "FileWebRequest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.FileWebRequestCreator
#include "System/Net/FileWebRequestCreator.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.FileWebRequestCreator.Create
System::Net::WebRequest* System::Net::FileWebRequestCreator::Create(System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebRequestCreator::Create");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebRequest*, false>(this, ___internal__method, uri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.FileWebStream
#include "System/Net/FileWebStream.hpp"
// Including type: System.Net.FileWebRequest
#include "System/Net/FileWebRequest.hpp"
// Including type: System.Net.CloseExState
#include "System/Net/CloseExState.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.FileWebStream.System.Net.ICloseEx.CloseEx
void System::Net::FileWebStream::System_Net_ICloseEx_CloseEx(System::Net::CloseExState closeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebStream::System.Net.ICloseEx.CloseEx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Net.ICloseEx.CloseEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(closeState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, closeState);
}
// Autogenerated method: System.Net.FileWebStream.CheckError
void System::Net::FileWebStream::CheckError() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebStream::CheckError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebStream.Dispose
void System::Net::FileWebStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.FileWebStream.Read
int System::Net::FileWebStream::Read(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.FileWebStream.Write
void System::Net::FileWebStream::Write(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.FileWebStream.BeginRead
System::IAsyncResult* System::Net::FileWebStream::BeginRead(::Array<uint8_t>* buffer, int offset, int size, System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, callback, state);
}
// Autogenerated method: System.Net.FileWebStream.EndRead
int System::Net::FileWebStream::EndRead(System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, ar);
}
// Autogenerated method: System.Net.FileWebStream.BeginWrite
System::IAsyncResult* System::Net::FileWebStream::BeginWrite(::Array<uint8_t>* buffer, int offset, int size, System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, callback, state);
}
// Autogenerated method: System.Net.FileWebStream.EndWrite
void System::Net::FileWebStream::EndWrite(System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.FileWebResponse
#include "System/Net/FileWebResponse.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.FileWebRequest
#include "System/Net/FileWebRequest.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Net.CloseExState
#include "System/Net/CloseExState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.FileWebResponse.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::FileWebResponse::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebResponse::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.FileWebResponse.CheckDisposed
void System::Net::FileWebResponse::CheckDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebResponse::CheckDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebResponse.System.Net.ICloseEx.CloseEx
void System::Net::FileWebResponse::System_Net_ICloseEx_CloseEx(System::Net::CloseExState closeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebResponse::System.Net.ICloseEx.CloseEx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Net.ICloseEx.CloseEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(closeState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, closeState);
}
// Autogenerated method: System.Net.FileWebResponse.GetObjectData
void System::Net::FileWebResponse::GetObjectData(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebResponse::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.FileWebResponse.get_Headers
System::Net::WebHeaderCollection* System::Net::FileWebResponse::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebResponse::get_Headers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebHeaderCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebResponse.get_ResponseUri
System::Uri* System::Net::FileWebResponse::get_ResponseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebResponse::get_ResponseUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResponseUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebResponse.Close
void System::Net::FileWebResponse::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebResponse::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebResponse.GetResponseStream
System::IO::Stream* System::Net::FileWebResponse::GetResponseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FileWebResponse::GetResponseStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponseStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.IWebProxy.GetProxy
System::Uri* System::Net::IWebProxy::GetProxy(System::Uri* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::IWebProxy::GetProxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination)})));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(this, ___internal__method, destination);
}
// Autogenerated method: System.Net.IWebProxy.IsBypassed
bool System::Net::IWebProxy::IsBypassed(System::Uri* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::IWebProxy::IsBypassed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBypassed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.IWebProxy.get_Credentials
System::Net::ICredentials* System::Net::IWebProxy::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::IWebProxy::get_Credentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Credentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.WebProxy
#include "System/Net/WebProxy.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Net.AutoWebProxyScriptEngine
#include "System/Net/AutoWebProxyScriptEngine.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.WebProxy.get_Credentials
System::Net::ICredentials* System::Net::WebProxy::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebProxy::get_Credentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Credentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.get_UseDefaultCredentials
bool System::Net::WebProxy::get_UseDefaultCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebProxy::get_UseDefaultCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseDefaultCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.set_UseDefaultCredentials
void System::Net::WebProxy::set_UseDefaultCredentials(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebProxy::set_UseDefaultCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseDefaultCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebProxy.GetProxy
System::Uri* System::Net::WebProxy::GetProxy(System::Uri* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebProxy::GetProxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination)})));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(this, ___internal__method, destination);
}
// Autogenerated method: System.Net.WebProxy.UpdateRegExList
void System::Net::WebProxy::UpdateRegExList(bool canThrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebProxy::UpdateRegExList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRegExList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canThrow)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, canThrow);
}
// Autogenerated method: System.Net.WebProxy.IsMatchInBypassList
bool System::Net::WebProxy::IsMatchInBypassList(System::Uri* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebProxy::IsMatchInBypassList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatchInBypassList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Net.WebProxy.IsLocal
bool System::Net::WebProxy::IsLocal(System::Uri* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebProxy::IsLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.WebProxy.IsLocalInProxyHash
bool System::Net::WebProxy::IsLocalInProxyHash(System::Uri* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebProxy::IsLocalInProxyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLocalInProxyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.WebProxy.IsBypassed
bool System::Net::WebProxy::IsBypassed(System::Uri* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebProxy::IsBypassed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBypassed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.WebProxy.IsBypassedManual
bool System::Net::WebProxy::IsBypassedManual(System::Uri* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebProxy::IsBypassedManual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBypassedManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::WebProxy::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebProxy::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.WebProxy.GetObjectData
void System::Net::WebProxy::GetObjectData(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebProxy::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.WebProxy.get_ScriptEngine
System::Net::AutoWebProxyScriptEngine* System::Net::WebProxy::get_ScriptEngine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebProxy::get_ScriptEngine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ScriptEngine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::AutoWebProxyScriptEngine*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.CreateDefaultProxy
System::Net::IWebProxy* System::Net::WebProxy::CreateDefaultProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebProxy::CreateDefaultProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebProxy", "CreateDefaultProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IWebProxy*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.UnsafeUpdateFromRegistry
void System::Net::WebProxy::UnsafeUpdateFromRegistry() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebProxy::UnsafeUpdateFromRegistry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsafeUpdateFromRegistry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.GetProxyAuto
bool System::Net::WebProxy::GetProxyAuto(System::Uri* destination, System::Uri*& proxyUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebProxy::GetProxyAuto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxyAuto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<System::Uri*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, destination, proxyUri);
}
// Autogenerated method: System.Net.WebProxy.IsBypassedAuto
bool System::Net::WebProxy::IsBypassedAuto(System::Uri* destination, bool& isBypassed) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebProxy::IsBypassedAuto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBypassedAuto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, destination, isBypassed);
}
// Autogenerated method: System.Net.WebProxy.AreAllBypassed
bool System::Net::WebProxy::AreAllBypassed(System::Collections::Generic::IEnumerable_1<::Il2CppString*>* proxies, bool checkFirstOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebProxy::AreAllBypassed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebProxy", "AreAllBypassed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxies), ::il2cpp_utils::ExtractType(checkFirstOnly)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxies, checkFirstOnly);
}
// Autogenerated method: System.Net.WebProxy.ProxyUri
System::Uri* System::Net::WebProxy::ProxyUri(::Il2CppString* proxyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebProxy::ProxyUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebProxy", "ProxyUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyName)})));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxyName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.AutoWebProxyScriptEngine
#include "System/Net/AutoWebProxyScriptEngine.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.AutoWebProxyScriptEngine.GetProxies
bool System::Net::AutoWebProxyScriptEngine::GetProxies(System::Uri* destination, System::Collections::Generic::IList_1<::Il2CppString*>*& proxyList) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::AutoWebProxyScriptEngine::GetProxies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IList_1<::Il2CppString*>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, destination, proxyList);
}
// Autogenerated method: System.Net.AutoWebProxyScriptEngine.GetProxies
bool System::Net::AutoWebProxyScriptEngine::GetProxies(System::Uri* destination, System::Collections::Generic::IList_1<::Il2CppString*>*& proxyList, int& syncStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::AutoWebProxyScriptEngine::GetProxies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IList_1<::Il2CppString*>*&>(), ::il2cpp_utils::ExtractType(syncStatus)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, destination, proxyList, syncStatus);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.UnsafeNclNativeMethods/HttpApi
#include "System/Net/UnsafeNclNativeMethods_HttpApi.hpp"
// Including type: System.Net.UnsafeNclNativeMethods/HttpApi/HTTP_REQUEST_HEADER_ID
#include "System/Net/UnsafeNclNativeMethods_HttpApi_HTTP_REQUEST_HEADER_ID.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] m_Strings
::Array<::Il2CppString*>* System::Net::UnsafeNclNativeMethods::HttpApi::_get_m_Strings() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::UnsafeNclNativeMethods::HttpApi::_get_m_Strings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("System.Net", "UnsafeNclNativeMethods/HttpApi", "m_Strings"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] m_Strings
void System::Net::UnsafeNclNativeMethods::HttpApi::_set_m_Strings(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::UnsafeNclNativeMethods::HttpApi::_set_m_Strings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi", "m_Strings", value));
}
// Autogenerated method: System.Net.UnsafeNclNativeMethods/HttpApi..cctor
void System::Net::UnsafeNclNativeMethods::HttpApi::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::UnsafeNclNativeMethods::HttpApi::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "UnsafeNclNativeMethods/HttpApi", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.UnsafeNclNativeMethods/HttpApi/HTTP_REQUEST_HEADER_ID
#include "System/Net/UnsafeNclNativeMethods_HttpApi_HTTP_REQUEST_HEADER_ID.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] m_Strings
::Array<::Il2CppString*>* System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::_get_m_Strings() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::_get_m_Strings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("System.Net", "UnsafeNclNativeMethods/HttpApi/HTTP_REQUEST_HEADER_ID", "m_Strings"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] m_Strings
void System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::_set_m_Strings(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::_set_m_Strings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/HTTP_REQUEST_HEADER_ID", "m_Strings", value));
}
// Autogenerated method: System.Net.UnsafeNclNativeMethods/HttpApi/HTTP_REQUEST_HEADER_ID.ToString
::Il2CppString* System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::ToString(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "UnsafeNclNativeMethods/HttpApi/HTTP_REQUEST_HEADER_ID", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, position);
}
// Autogenerated method: System.Net.UnsafeNclNativeMethods/HttpApi/HTTP_REQUEST_HEADER_ID..cctor
void System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "UnsafeNclNativeMethods/HttpApi/HTTP_REQUEST_HEADER_ID", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.UnsafeNclNativeMethods/SecureStringHelper
#include "System/Net/UnsafeNclNativeMethods_SecureStringHelper.hpp"
// Including type: System.Security.SecureString
#include "System/Security/SecureString.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.UnsafeNclNativeMethods/SecureStringHelper.CreateString
::Il2CppString* System::Net::UnsafeNclNativeMethods::SecureStringHelper::CreateString(System::Security::SecureString* secureString) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::UnsafeNclNativeMethods::SecureStringHelper::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "UnsafeNclNativeMethods/SecureStringHelper", "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secureString)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, secureString);
}
// Autogenerated method: System.Net.UnsafeNclNativeMethods/SecureStringHelper.CreateSecureString
System::Security::SecureString* System::Net::UnsafeNclNativeMethods::SecureStringHelper::CreateSecureString(::Il2CppString* plainString) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::UnsafeNclNativeMethods::SecureStringHelper::CreateSecureString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "UnsafeNclNativeMethods/SecureStringHelper", "CreateSecureString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plainString)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::SecureString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, plainString);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Logging
#include "System/Net/Logging.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Boolean On
bool System::Net::Logging::_get_On() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Logging::_get_On");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Net", "Logging", "On"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Boolean On
void System::Net::Logging::_set_On(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Logging::_set_On");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Logging", "On", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.ServerCertValidationCallback
#include "System/Net/ServerCertValidationCallback.hpp"
// Including type: System.Net.ServerCertValidationCallback/CallbackContext
#include "System/Net/ServerCertValidationCallback_CallbackContext.hpp"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.ServerCertValidationCallback.Callback
void System::Net::ServerCertValidationCallback::Callback(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServerCertValidationCallback::Callback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Callback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Net.ServerCertValidationCallback.Invoke
bool System::Net::ServerCertValidationCallback::Invoke(::Il2CppObject* request, System::Security::Cryptography::X509Certificates::X509Certificate* certificate, System::Security::Cryptography::X509Certificates::X509Chain* chain, System::Net::Security::SslPolicyErrors sslPolicyErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServerCertValidationCallback::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(sslPolicyErrors)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, request, certificate, chain, sslPolicyErrors);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.ServerCertValidationCallback/CallbackContext
#include "System/Net/ServerCertValidationCallback_CallbackContext.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.AuthenticationManager
#include "System/Net/AuthenticationManager.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Net.ICredentialPolicy
#include "System/Net/ICredentialPolicy.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.ArrayList modules
System::Collections::ArrayList* System::Net::AuthenticationManager::_get_modules() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::AuthenticationManager::_get_modules");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::ArrayList*>("System.Net", "AuthenticationManager", "modules"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.ArrayList modules
void System::Net::AuthenticationManager::_set_modules(System::Collections::ArrayList* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::AuthenticationManager::_set_modules");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "AuthenticationManager", "modules", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object locker
::Il2CppObject* System::Net::AuthenticationManager::_get_locker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::AuthenticationManager::_get_locker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Net", "AuthenticationManager", "locker"));
}
// Autogenerated static field setter
// Set static field: static private System.Object locker
void System::Net::AuthenticationManager::_set_locker(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::AuthenticationManager::_set_locker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "AuthenticationManager", "locker", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.ICredentialPolicy credential_policy
System::Net::ICredentialPolicy* System::Net::AuthenticationManager::_get_credential_policy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::AuthenticationManager::_get_credential_policy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::ICredentialPolicy*>("System.Net", "AuthenticationManager", "credential_policy"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.ICredentialPolicy credential_policy
void System::Net::AuthenticationManager::_set_credential_policy(System::Net::ICredentialPolicy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::AuthenticationManager::_set_credential_policy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "AuthenticationManager", "credential_policy", value));
}
// Autogenerated method: System.Net.AuthenticationManager.EnsureModules
void System::Net::AuthenticationManager::EnsureModules() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::AuthenticationManager::EnsureModules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "EnsureModules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.AuthenticationManager.Authenticate
System::Net::Authorization* System::Net::AuthenticationManager::Authenticate(::Il2CppString* challenge, System::Net::WebRequest* request, System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::AuthenticationManager::Authenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "Authenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Authorization*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challenge, request, credentials);
}
// Autogenerated method: System.Net.AuthenticationManager.DoAuthenticate
System::Net::Authorization* System::Net::AuthenticationManager::DoAuthenticate(::Il2CppString* challenge, System::Net::WebRequest* request, System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::AuthenticationManager::DoAuthenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "DoAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Authorization*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challenge, request, credentials);
}
// Autogenerated method: System.Net.AuthenticationManager.PreAuthenticate
System::Net::Authorization* System::Net::AuthenticationManager::PreAuthenticate(System::Net::WebRequest* request, System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::AuthenticationManager::PreAuthenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "PreAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Authorization*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, request, credentials);
}
// Autogenerated method: System.Net.AuthenticationManager..cctor
void System::Net::AuthenticationManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::AuthenticationManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.BasicClient
#include "System/Net/BasicClient.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.BasicClient.Authenticate
System::Net::Authorization* System::Net::BasicClient::Authenticate(::Il2CppString* challenge, System::Net::WebRequest* webRequest, System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::BasicClient::Authenticate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Authenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge), ::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Authorization*, false>(this, ___internal__method, challenge, webRequest, credentials);
}
// Autogenerated method: System.Net.BasicClient.GetBytes
::Array<uint8_t>* System::Net::BasicClient::GetBytes(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::BasicClient::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "BasicClient", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Net.BasicClient.InternalAuthenticate
System::Net::Authorization* System::Net::BasicClient::InternalAuthenticate(System::Net::WebRequest* webRequest, System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::BasicClient::InternalAuthenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "BasicClient", "InternalAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Authorization*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, webRequest, credentials);
}
// Autogenerated method: System.Net.BasicClient.PreAuthenticate
System::Net::Authorization* System::Net::BasicClient::PreAuthenticate(System::Net::WebRequest* webRequest, System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::BasicClient::PreAuthenticate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Authorization*, false>(this, ___internal__method, webRequest, credentials);
}
// Autogenerated method: System.Net.BasicClient.get_AuthenticationType
::Il2CppString* System::Net::BasicClient::get_AuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::BasicClient::get_AuthenticationType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthenticationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.BindIPEndPoint
#include "System/Net/BindIPEndPoint.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.ServicePoint
#include "System/Net/ServicePoint.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.BindIPEndPoint.Invoke
System::Net::IPEndPoint* System::Net::BindIPEndPoint::Invoke(System::Net::ServicePoint* servicePoint, System::Net::IPEndPoint* remoteEndPoint, int retryCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::BindIPEndPoint::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(servicePoint), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(retryCount)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPEndPoint*, false>(this, ___internal__method, servicePoint, remoteEndPoint, retryCount);
}
// Autogenerated method: System.Net.BindIPEndPoint.BeginInvoke
System::IAsyncResult* System::Net::BindIPEndPoint::BeginInvoke(System::Net::ServicePoint* servicePoint, System::Net::IPEndPoint* remoteEndPoint, int retryCount, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::BindIPEndPoint::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(servicePoint), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(retryCount), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, servicePoint, remoteEndPoint, retryCount, callback, object);
}
// Autogenerated method: System.Net.BindIPEndPoint.EndInvoke
System::Net::IPEndPoint* System::Net::BindIPEndPoint::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::BindIPEndPoint::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPEndPoint*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.ChunkedInputStream
#include "System/Net/ChunkedInputStream.hpp"
// Including type: System.Net.ChunkedInputStream/ReadBufferState
#include "System/Net/ChunkedInputStream_ReadBufferState.hpp"
// Including type: System.Net.MonoChunkStream
#include "System/Net/MonoChunkStream.hpp"
// Including type: System.Net.HttpListenerContext
#include "System/Net/HttpListenerContext.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.ChunkedInputStream.OnRead
void System::Net::ChunkedInputStream::OnRead(System::IAsyncResult* base_ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ChunkedInputStream::OnRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(base_ares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, base_ares);
}
// Autogenerated method: System.Net.ChunkedInputStream.Read
int System::Net::ChunkedInputStream::Read(::Array<uint8_t>*& buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ChunkedInputStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Net.ChunkedInputStream.BeginRead
System::IAsyncResult* System::Net::ChunkedInputStream::BeginRead(::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* cback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ChunkedInputStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, cback, state);
}
// Autogenerated method: System.Net.ChunkedInputStream.EndRead
int System::Net::ChunkedInputStream::EndRead(System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ChunkedInputStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.ChunkedInputStream.Close
void System::Net::ChunkedInputStream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ChunkedInputStream::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.ChunkedInputStream/ReadBufferState
#include "System/Net/ChunkedInputStream_ReadBufferState.hpp"
// Including type: System.Net.HttpStreamAsyncResult
#include "System/Net/HttpStreamAsyncResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.DecompressionMethods
#include "System/Net/DecompressionMethods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.DecompressionMethods None
System::Net::DecompressionMethods System::Net::DecompressionMethods::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DecompressionMethods::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::DecompressionMethods>("System.Net", "DecompressionMethods", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.DecompressionMethods None
void System::Net::DecompressionMethods::_set_None(System::Net::DecompressionMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DecompressionMethods::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "DecompressionMethods", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.DecompressionMethods GZip
System::Net::DecompressionMethods System::Net::DecompressionMethods::_get_GZip() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DecompressionMethods::_get_GZip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::DecompressionMethods>("System.Net", "DecompressionMethods", "GZip"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.DecompressionMethods GZip
void System::Net::DecompressionMethods::_set_GZip(System::Net::DecompressionMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DecompressionMethods::_set_GZip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "DecompressionMethods", "GZip", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.DecompressionMethods Deflate
System::Net::DecompressionMethods System::Net::DecompressionMethods::_get_Deflate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DecompressionMethods::_get_Deflate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::DecompressionMethods>("System.Net", "DecompressionMethods", "Deflate"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.DecompressionMethods Deflate
void System::Net::DecompressionMethods::_set_Deflate(System::Net::DecompressionMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DecompressionMethods::_set_Deflate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "DecompressionMethods", "Deflate", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.DigestHeaderParser
#include "System/Net/DigestHeaderParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] keywords
::Array<::Il2CppString*>* System::Net::DigestHeaderParser::_get_keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestHeaderParser::_get_keywords");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("System.Net", "DigestHeaderParser", "keywords"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] keywords
void System::Net::DigestHeaderParser::_set_keywords(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestHeaderParser::_set_keywords");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "DigestHeaderParser", "keywords", value));
}
// Autogenerated method: System.Net.DigestHeaderParser.get_Realm
::Il2CppString* System::Net::DigestHeaderParser::get_Realm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestHeaderParser::get_Realm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Realm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.get_Opaque
::Il2CppString* System::Net::DigestHeaderParser::get_Opaque() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestHeaderParser::get_Opaque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Opaque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.get_Nonce
::Il2CppString* System::Net::DigestHeaderParser::get_Nonce() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestHeaderParser::get_Nonce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Nonce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.get_Algorithm
::Il2CppString* System::Net::DigestHeaderParser::get_Algorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestHeaderParser::get_Algorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Algorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.get_QOP
::Il2CppString* System::Net::DigestHeaderParser::get_QOP() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestHeaderParser::get_QOP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QOP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.Parse
bool System::Net::DigestHeaderParser::Parse() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestHeaderParser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.SkipWhitespace
void System::Net::DigestHeaderParser::SkipWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestHeaderParser::SkipWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.GetKey
::Il2CppString* System::Net::DigestHeaderParser::GetKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestHeaderParser::GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.GetKeywordAndValue
bool System::Net::DigestHeaderParser::GetKeywordAndValue(::Il2CppString*& key, ::Il2CppString*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestHeaderParser::GetKeywordAndValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKeywordAndValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Net.DigestHeaderParser..cctor
void System::Net::DigestHeaderParser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestHeaderParser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "DigestHeaderParser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.DigestSession
#include "System/Net/DigestSession.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
// Including type: System.Net.DigestHeaderParser
#include "System/Net/DigestHeaderParser.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.RandomNumberGenerator rng
System::Security::Cryptography::RandomNumberGenerator* System::Net::DigestSession::_get_rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestSession::_get_rng");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::RandomNumberGenerator*>("System.Net", "DigestSession", "rng"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.RandomNumberGenerator rng
void System::Net::DigestSession::_set_rng(System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestSession::_set_rng");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "DigestSession", "rng", value));
}
// Autogenerated method: System.Net.DigestSession..cctor
void System::Net::DigestSession::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestSession::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "DigestSession", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.get_Algorithm
::Il2CppString* System::Net::DigestSession::get_Algorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestSession::get_Algorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Algorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.get_Realm
::Il2CppString* System::Net::DigestSession::get_Realm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestSession::get_Realm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Realm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.get_Nonce
::Il2CppString* System::Net::DigestSession::get_Nonce() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestSession::get_Nonce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Nonce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.get_Opaque
::Il2CppString* System::Net::DigestSession::get_Opaque() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestSession::get_Opaque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Opaque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.get_QOP
::Il2CppString* System::Net::DigestSession::get_QOP() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestSession::get_QOP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QOP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.get_CNonce
::Il2CppString* System::Net::DigestSession::get_CNonce() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestSession::get_CNonce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CNonce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.Parse
bool System::Net::DigestSession::Parse(::Il2CppString* challenge) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestSession::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, challenge);
}
// Autogenerated method: System.Net.DigestSession.HashToHexString
::Il2CppString* System::Net::DigestSession::HashToHexString(::Il2CppString* toBeHashed) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestSession::HashToHexString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashToHexString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toBeHashed)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, toBeHashed);
}
// Autogenerated method: System.Net.DigestSession.HA1
::Il2CppString* System::Net::DigestSession::HA1(::Il2CppString* username, ::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestSession::HA1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HA1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(username), ::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, username, password);
}
// Autogenerated method: System.Net.DigestSession.HA2
::Il2CppString* System::Net::DigestSession::HA2(System::Net::HttpWebRequest* webRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestSession::HA2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HA2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(webRequest)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, webRequest);
}
// Autogenerated method: System.Net.DigestSession.Response
::Il2CppString* System::Net::DigestSession::Response(::Il2CppString* username, ::Il2CppString* password, System::Net::HttpWebRequest* webRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestSession::Response");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Response", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(username), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(webRequest)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, username, password, webRequest);
}
// Autogenerated method: System.Net.DigestSession.Authenticate
System::Net::Authorization* System::Net::DigestSession::Authenticate(System::Net::WebRequest* webRequest, System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestSession::Authenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Authenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Authorization*, false>(this, ___internal__method, webRequest, credentials);
}
// Autogenerated method: System.Net.DigestSession.get_LastUse
System::DateTime System::Net::DigestSession::get_LastUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestSession::get_LastUse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastUse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.DigestClient
#include "System/Net/DigestClient.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Hashtable cache
System::Collections::Hashtable* System::Net::DigestClient::_get_cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestClient::_get_cache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("System.Net", "DigestClient", "cache"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Hashtable cache
void System::Net::DigestClient::_set_cache(System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestClient::_set_cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "DigestClient", "cache", value));
}
// Autogenerated method: System.Net.DigestClient.get_Cache
System::Collections::Hashtable* System::Net::DigestClient::get_Cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestClient::get_Cache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "DigestClient", "get_Cache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Hashtable*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.DigestClient.CheckExpired
void System::Net::DigestClient::CheckExpired(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestClient::CheckExpired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "DigestClient", "CheckExpired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, count);
}
// Autogenerated method: System.Net.DigestClient.Authenticate
System::Net::Authorization* System::Net::DigestClient::Authenticate(::Il2CppString* challenge, System::Net::WebRequest* webRequest, System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestClient::Authenticate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Authenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge), ::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Authorization*, false>(this, ___internal__method, challenge, webRequest, credentials);
}
// Autogenerated method: System.Net.DigestClient.PreAuthenticate
System::Net::Authorization* System::Net::DigestClient::PreAuthenticate(System::Net::WebRequest* webRequest, System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestClient::PreAuthenticate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Authorization*, false>(this, ___internal__method, webRequest, credentials);
}
// Autogenerated method: System.Net.DigestClient.get_AuthenticationType
::Il2CppString* System::Net::DigestClient::get_AuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestClient::get_AuthenticationType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthenticationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestClient..cctor
void System::Net::DigestClient::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::DigestClient::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "DigestClient", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Dns
#include "System/Net/Dns.hpp"
// Including type: System.Net.IPHostEntry
#include "System/Net/IPHostEntry.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Dns.GetHostByName_internal
bool System::Net::Dns::GetHostByName_internal(::Il2CppString* host, ::Il2CppString*& h_name, ::Array<::Il2CppString*>*& h_aliases, ::Array<::Il2CppString*>*& h_addr_list, int hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Dns::GetHostByName_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostByName_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*&>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*&>(), ::il2cpp_utils::ExtractType(hint)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, host, h_name, h_aliases, h_addr_list, hint);
}
// Autogenerated method: System.Net.Dns.GetHostByAddr_internal
bool System::Net::Dns::GetHostByAddr_internal(::Il2CppString* addr, ::Il2CppString*& h_name, ::Array<::Il2CppString*>*& h_aliases, ::Array<::Il2CppString*>*& h_addr_list, int hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Dns::GetHostByAddr_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostByAddr_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(addr), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*&>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*&>(), ::il2cpp_utils::ExtractType(hint)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, addr, h_name, h_aliases, h_addr_list, hint);
}
// Autogenerated method: System.Net.Dns.GetHostName_internal
bool System::Net::Dns::GetHostName_internal(::Il2CppString*& h_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Dns::GetHostName_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostName_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h_name);
}
// Autogenerated method: System.Net.Dns.Error_11001
void System::Net::Dns::Error_11001(::Il2CppString* hostName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Dns::Error_11001");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "Error_11001", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hostName);
}
// Autogenerated method: System.Net.Dns.hostent_to_IPHostEntry
System::Net::IPHostEntry* System::Net::Dns::hostent_to_IPHostEntry(::Il2CppString* originalHostName, ::Il2CppString* h_name, ::Array<::Il2CppString*>* h_aliases, ::Array<::Il2CppString*>* h_addrlist) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Dns::hostent_to_IPHostEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "hostent_to_IPHostEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalHostName), ::il2cpp_utils::ExtractType(h_name), ::il2cpp_utils::ExtractType(h_aliases), ::il2cpp_utils::ExtractType(h_addrlist)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPHostEntry*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, originalHostName, h_name, h_aliases, h_addrlist);
}
// Autogenerated method: System.Net.Dns.GetHostByAddressFromString
System::Net::IPHostEntry* System::Net::Dns::GetHostByAddressFromString(::Il2CppString* address, bool parse) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Dns::GetHostByAddressFromString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostByAddressFromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(parse)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPHostEntry*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, address, parse);
}
// Autogenerated method: System.Net.Dns.GetHostEntry
System::Net::IPHostEntry* System::Net::Dns::GetHostEntry(::Il2CppString* hostNameOrAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Dns::GetHostEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostNameOrAddress)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPHostEntry*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hostNameOrAddress);
}
// Autogenerated method: System.Net.Dns.GetHostEntry
System::Net::IPHostEntry* System::Net::Dns::GetHostEntry(System::Net::IPAddress* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Dns::GetHostEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPHostEntry*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, address);
}
// Autogenerated method: System.Net.Dns.GetHostAddresses
::Array<System::Net::IPAddress*>* System::Net::Dns::GetHostAddresses(::Il2CppString* hostNameOrAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Dns::GetHostAddresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostNameOrAddress)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Net::IPAddress*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hostNameOrAddress);
}
// Autogenerated method: System.Net.Dns.GetHostByName
System::Net::IPHostEntry* System::Net::Dns::GetHostByName(::Il2CppString* hostName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Dns::GetHostByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostName)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPHostEntry*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hostName);
}
// Autogenerated method: System.Net.Dns.GetHostName
::Il2CppString* System::Net::Dns::GetHostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Dns::GetHostName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.EndPointListener
#include "System/Net/EndPointListener.hpp"
// Including type: System.Net.HttpListener
#include "System/Net/HttpListener.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Net.HttpConnection
#include "System/Net/HttpConnection.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.Sockets.SocketAsyncEventArgs
#include "System/Net/Sockets/SocketAsyncEventArgs.hpp"
// Including type: System.Net.HttpListenerContext
#include "System/Net/HttpListenerContext.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.ListenerPrefix
#include "System/Net/ListenerPrefix.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.EndPointListener.get_Listener
System::Net::HttpListener* System::Net::EndPointListener::get_Listener() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointListener::get_Listener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Listener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::HttpListener*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.EndPointListener.Accept
void System::Net::EndPointListener::Accept(System::Net::Sockets::Socket* socket, System::Net::Sockets::SocketAsyncEventArgs* e, System::Net::Sockets::Socket*& accepted) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointListener::Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointListener", "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(accepted)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, socket, e, accepted);
}
// Autogenerated method: System.Net.EndPointListener.ProcessAccept
void System::Net::EndPointListener::ProcessAccept(System::Net::Sockets::SocketAsyncEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointListener::ProcessAccept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointListener", "ProcessAccept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args);
}
// Autogenerated method: System.Net.EndPointListener.OnAccept
void System::Net::EndPointListener::OnAccept(::Il2CppObject* sender, System::Net::Sockets::SocketAsyncEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointListener::OnAccept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointListener", "OnAccept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sender, e);
}
// Autogenerated method: System.Net.EndPointListener.RemoveConnection
void System::Net::EndPointListener::RemoveConnection(System::Net::HttpConnection* conn) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointListener::RemoveConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(conn)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, conn);
}
// Autogenerated method: System.Net.EndPointListener.BindContext
bool System::Net::EndPointListener::BindContext(System::Net::HttpListenerContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointListener::BindContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Net.EndPointListener.UnbindContext
void System::Net::EndPointListener::UnbindContext(System::Net::HttpListenerContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointListener::UnbindContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnbindContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Net.EndPointListener.SearchListener
System::Net::HttpListener* System::Net::EndPointListener::SearchListener(System::Uri* uri, System::Net::ListenerPrefix*& prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointListener::SearchListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractIndependentType<System::Net::ListenerPrefix*&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::HttpListener*, false>(this, ___internal__method, uri, prefix);
}
// Autogenerated method: System.Net.EndPointListener.MatchFromList
System::Net::HttpListener* System::Net::EndPointListener::MatchFromList(::Il2CppString* host, ::Il2CppString* path, System::Collections::ArrayList* list, System::Net::ListenerPrefix*& prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointListener::MatchFromList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchFromList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractIndependentType<System::Net::ListenerPrefix*&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::HttpListener*, false>(this, ___internal__method, host, path, list, prefix);
}
// Autogenerated method: System.Net.EndPointListener.AddSpecial
void System::Net::EndPointListener::AddSpecial(System::Collections::ArrayList* coll, System::Net::ListenerPrefix* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointListener::AddSpecial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSpecial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coll), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, coll, prefix);
}
// Autogenerated method: System.Net.EndPointListener.RemoveSpecial
bool System::Net::EndPointListener::RemoveSpecial(System::Collections::ArrayList* coll, System::Net::ListenerPrefix* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointListener::RemoveSpecial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSpecial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coll), ::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, coll, prefix);
}
// Autogenerated method: System.Net.EndPointListener.CheckIfRemove
void System::Net::EndPointListener::CheckIfRemove() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointListener::CheckIfRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.EndPointListener.Close
void System::Net::EndPointListener::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointListener::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.EndPointListener.AddPrefix
void System::Net::EndPointListener::AddPrefix(System::Net::ListenerPrefix* prefix, System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointListener::AddPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, listener);
}
// Autogenerated method: System.Net.EndPointListener.RemovePrefix
void System::Net::EndPointListener::RemovePrefix(System::Net::ListenerPrefix* prefix, System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointListener::RemovePrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemovePrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, listener);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.EndPointManager
#include "System/Net/EndPointManager.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Net.HttpListener
#include "System/Net/HttpListener.hpp"
// Including type: System.Net.EndPointListener
#include "System/Net/EndPointListener.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable ip_to_endpoints
System::Collections::Hashtable* System::Net::EndPointManager::_get_ip_to_endpoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointManager::_get_ip_to_endpoints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("System.Net", "EndPointManager", "ip_to_endpoints"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable ip_to_endpoints
void System::Net::EndPointManager::_set_ip_to_endpoints(System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointManager::_set_ip_to_endpoints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "EndPointManager", "ip_to_endpoints", value));
}
// Autogenerated method: System.Net.EndPointManager.AddListener
void System::Net::EndPointManager::AddListener(System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointManager::AddListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "AddListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, listener);
}
// Autogenerated method: System.Net.EndPointManager.AddPrefix
void System::Net::EndPointManager::AddPrefix(::Il2CppString* prefix, System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointManager::AddPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "AddPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, prefix, listener);
}
// Autogenerated method: System.Net.EndPointManager.AddPrefixInternal
void System::Net::EndPointManager::AddPrefixInternal(::Il2CppString* p, System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointManager::AddPrefixInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "AddPrefixInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, p, listener);
}
// Autogenerated method: System.Net.EndPointManager.GetEPListener
System::Net::EndPointListener* System::Net::EndPointManager::GetEPListener(::Il2CppString* host, int port, System::Net::HttpListener* listener, bool secure) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointManager::GetEPListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "GetEPListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(secure)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::EndPointListener*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, host, port, listener, secure);
}
// Autogenerated method: System.Net.EndPointManager.RemoveEndPoint
void System::Net::EndPointManager::RemoveEndPoint(System::Net::EndPointListener* epl, System::Net::IPEndPoint* ep) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointManager::RemoveEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "RemoveEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(epl), ::il2cpp_utils::ExtractType(ep)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, epl, ep);
}
// Autogenerated method: System.Net.EndPointManager.RemoveListener
void System::Net::EndPointManager::RemoveListener(System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointManager::RemoveListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "RemoveListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, listener);
}
// Autogenerated method: System.Net.EndPointManager.RemovePrefix
void System::Net::EndPointManager::RemovePrefix(::Il2CppString* prefix, System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointManager::RemovePrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "RemovePrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, prefix, listener);
}
// Autogenerated method: System.Net.EndPointManager.RemovePrefixInternal
void System::Net::EndPointManager::RemovePrefixInternal(::Il2CppString* prefix, System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointManager::RemovePrefixInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "RemovePrefixInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, prefix, listener);
}
// Autogenerated method: System.Net.EndPointManager..cctor
void System::Net::EndPointManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::EndPointManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.FtpAsyncResult
#include "System/Net/FtpAsyncResult.hpp"
// Including type: System.Net.FtpWebResponse
#include "System/Net/FtpWebResponse.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.FtpAsyncResult.get_AsyncState
::Il2CppObject* System::Net::FtpAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpAsyncResult.get_AsyncWaitHandle
System::Threading::WaitHandle* System::Net::FtpAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncWaitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpAsyncResult.get_CompletedSynchronously
bool System::Net::FtpAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpAsyncResult.get_IsCompleted
bool System::Net::FtpAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpAsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpAsyncResult.get_GotException
bool System::Net::FtpAsyncResult::get_GotException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpAsyncResult::get_GotException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GotException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpAsyncResult.get_Exception
System::Exception* System::Net::FtpAsyncResult::get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpAsyncResult::get_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpAsyncResult.get_Response
System::Net::FtpWebResponse* System::Net::FtpAsyncResult::get_Response() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpAsyncResult::get_Response");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Response", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::FtpWebResponse*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpAsyncResult.get_Stream
System::IO::Stream* System::Net::FtpAsyncResult::get_Stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpAsyncResult::get_Stream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Stream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpAsyncResult.set_Stream
void System::Net::FtpAsyncResult::set_Stream(System::IO::Stream* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpAsyncResult::set_Stream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Stream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpAsyncResult.WaitUntilComplete
bool System::Net::FtpAsyncResult::WaitUntilComplete(int timeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpAsyncResult::WaitUntilComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitUntilComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout), ::il2cpp_utils::ExtractType(exitContext)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, timeout, exitContext);
}
// Autogenerated method: System.Net.FtpAsyncResult.SetCompleted
void System::Net::FtpAsyncResult::SetCompleted(bool synch, System::Exception* exc, System::Net::FtpWebResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpAsyncResult::SetCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(synch), ::il2cpp_utils::ExtractType(exc), ::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, synch, exc, response);
}
// Autogenerated method: System.Net.FtpAsyncResult.SetCompleted
void System::Net::FtpAsyncResult::SetCompleted(bool synch, System::Net::FtpWebResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpAsyncResult::SetCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(synch), ::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, synch, response);
}
// Autogenerated method: System.Net.FtpAsyncResult.SetCompleted
void System::Net::FtpAsyncResult::SetCompleted(bool synch, System::Exception* exc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpAsyncResult::SetCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(synch), ::il2cpp_utils::ExtractType(exc)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, synch, exc);
}
// Autogenerated method: System.Net.FtpAsyncResult.DoCallback
void System::Net::FtpAsyncResult::DoCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpAsyncResult::DoCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.FtpDataStream
#include "System/Net/FtpDataStream.hpp"
// Including type: System.Net.FtpDataStream/WriteDelegate
#include "System/Net/FtpDataStream_WriteDelegate.hpp"
// Including type: System.Net.FtpDataStream/ReadDelegate
#include "System/Net/FtpDataStream_ReadDelegate.hpp"
// Including type: System.Net.FtpWebRequest
#include "System/Net/FtpWebRequest.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.FtpDataStream.ReadInternal
int System::Net::FtpDataStream::ReadInternal(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::ReadInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.FtpDataStream.WriteInternal
void System::Net::FtpDataStream::WriteInternal(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::WriteInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.FtpDataStream.System.IDisposable.Dispose
void System::Net::FtpDataStream::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpDataStream.CheckDisposed
void System::Net::FtpDataStream::CheckDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::CheckDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpDataStream.get_CanRead
bool System::Net::FtpDataStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpDataStream.get_CanWrite
bool System::Net::FtpDataStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpDataStream.get_CanSeek
bool System::Net::FtpDataStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpDataStream.get_Length
int64_t System::Net::FtpDataStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpDataStream.get_Position
int64_t System::Net::FtpDataStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpDataStream.set_Position
void System::Net::FtpDataStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpDataStream.Close
void System::Net::FtpDataStream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpDataStream.Flush
void System::Net::FtpDataStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpDataStream.Seek
int64_t System::Net::FtpDataStream::Seek(int64_t offset, System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.Net.FtpDataStream.SetLength
void System::Net::FtpDataStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpDataStream.BeginRead
System::IAsyncResult* System::Net::FtpDataStream::BeginRead(::Array<uint8_t>* buffer, int offset, int size, System::AsyncCallback* cb, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, cb, state);
}
// Autogenerated method: System.Net.FtpDataStream.EndRead
int System::Net::FtpDataStream::EndRead(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.FtpDataStream.Read
int System::Net::FtpDataStream::Read(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.FtpDataStream.BeginWrite
System::IAsyncResult* System::Net::FtpDataStream::BeginWrite(::Array<uint8_t>* buffer, int offset, int size, System::AsyncCallback* cb, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, cb, state);
}
// Autogenerated method: System.Net.FtpDataStream.EndWrite
void System::Net::FtpDataStream::EndWrite(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.FtpDataStream.Write
void System::Net::FtpDataStream::Write(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.FtpDataStream.Finalize
void System::Net::FtpDataStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpDataStream.Dispose
void System::Net::FtpDataStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.FtpDataStream/WriteDelegate
#include "System/Net/FtpDataStream_WriteDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.FtpDataStream/WriteDelegate.Invoke
void System::Net::FtpDataStream::WriteDelegate::Invoke(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::WriteDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.FtpDataStream/WriteDelegate.BeginInvoke
System::IAsyncResult* System::Net::FtpDataStream::WriteDelegate::BeginInvoke(::Array<uint8_t>* buffer, int offset, int size, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::WriteDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, callback, object);
}
// Autogenerated method: System.Net.FtpDataStream/WriteDelegate.EndInvoke
void System::Net::FtpDataStream::WriteDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::WriteDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.FtpDataStream/ReadDelegate
#include "System/Net/FtpDataStream_ReadDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.FtpDataStream/ReadDelegate.Invoke
int System::Net::FtpDataStream::ReadDelegate::Invoke(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::ReadDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.FtpDataStream/ReadDelegate.BeginInvoke
System::IAsyncResult* System::Net::FtpDataStream::ReadDelegate::BeginInvoke(::Array<uint8_t>* buffer, int offset, int size, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::ReadDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, callback, object);
}
// Autogenerated method: System.Net.FtpDataStream/ReadDelegate.EndInvoke
int System::Net::FtpDataStream::ReadDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpDataStream::ReadDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.FtpRequestCreator
#include "System/Net/FtpRequestCreator.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.FtpRequestCreator.Create
System::Net::WebRequest* System::Net::FtpRequestCreator::Create(System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpRequestCreator::Create");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebRequest*, false>(this, ___internal__method, uri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.FtpStatus
#include "System/Net/FtpStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.FtpStatus.get_StatusCode
System::Net::FtpStatusCode System::Net::FtpStatus::get_StatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpStatus::get_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::FtpStatusCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpStatus.get_StatusDescription
::Il2CppString* System::Net::FtpStatus::get_StatusDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpStatus::get_StatusDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.FtpWebRequest
#include "System/Net/FtpWebRequest.hpp"
// Including type: System.Net.FtpAsyncResult
#include "System/Net/FtpAsyncResult.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.ServicePoint
#include "System/Net/ServicePoint.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.StreamReader
#include "System/IO/StreamReader.hpp"
// Including type: System.Net.NetworkCredential
#include "System/Net/NetworkCredential.hpp"
// Including type: System.Net.IPHostEntry
#include "System/Net/IPHostEntry.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Net.FtpWebResponse
#include "System/Net/FtpWebResponse.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Net.FtpStatus
#include "System/Net/FtpStatus.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String[] supportedCommands
::Array<::Il2CppString*>* System::Net::FtpWebRequest::_get_supportedCommands() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::_get_supportedCommands");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("System.Net", "FtpWebRequest", "supportedCommands"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] supportedCommands
void System::Net::FtpWebRequest::_set_supportedCommands(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::_set_supportedCommands");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpWebRequest", "supportedCommands", value));
}
// Autogenerated method: System.Net.FtpWebRequest.GetMustImplement
System::Exception* System::Net::FtpWebRequest::GetMustImplement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::GetMustImplement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "FtpWebRequest", "GetMustImplement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.get_EnableSsl
bool System::Net::FtpWebRequest::get_EnableSsl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::get_EnableSsl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableSsl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.get_ReadWriteTimeout
int System::Net::FtpWebRequest::get_ReadWriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::get_ReadWriteTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadWriteTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.get_ServicePoint
System::Net::ServicePoint* System::Net::FtpWebRequest::get_ServicePoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::get_ServicePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServicePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::ServicePoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.get_DataType
::Il2CppString* System::Net::FtpWebRequest::get_DataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::get_DataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.get_State
System::Net::FtpWebRequest::RequestState System::Net::FtpWebRequest::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::FtpWebRequest::RequestState, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.set_State
void System::Net::FtpWebRequest::set_State(System::Net::FtpWebRequest::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::set_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebRequest.GetServicePoint
System::Net::ServicePoint* System::Net::FtpWebRequest::GetServicePoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::GetServicePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServicePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::ServicePoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.ResolveHost
void System::Net::FtpWebRequest::ResolveHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::ResolveHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.ProcessRequest
void System::Net::FtpWebRequest::ProcessRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::ProcessRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.SetType
void System::Net::FtpWebRequest::SetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::SetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.GetRemoteFolderPath
::Il2CppString* System::Net::FtpWebRequest::GetRemoteFolderPath(System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::GetRemoteFolderPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemoteFolderPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Net.FtpWebRequest.CWDAndSetFileName
void System::Net::FtpWebRequest::CWDAndSetFileName(System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::CWDAndSetFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CWDAndSetFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Net.FtpWebRequest.ProcessMethod
void System::Net::FtpWebRequest::ProcessMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::ProcessMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.CloseControlConnection
void System::Net::FtpWebRequest::CloseControlConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::CloseControlConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseControlConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.CloseDataConnection
void System::Net::FtpWebRequest::CloseDataConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::CloseDataConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseDataConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.CloseConnection
void System::Net::FtpWebRequest::CloseConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::CloseConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.ProcessSimpleMethod
void System::Net::FtpWebRequest::ProcessSimpleMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::ProcessSimpleMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSimpleMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.UploadData
void System::Net::FtpWebRequest::UploadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::UploadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.DownloadData
void System::Net::FtpWebRequest::DownloadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::DownloadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DownloadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.CheckRequestStarted
void System::Net::FtpWebRequest::CheckRequestStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::CheckRequestStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRequestStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.OpenControlConnection
void System::Net::FtpWebRequest::OpenControlConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::OpenControlConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenControlConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.GetInitialPath
::Il2CppString* System::Net::FtpWebRequest::GetInitialPath(System::Net::FtpStatus* status) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::GetInitialPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "FtpWebRequest", "GetInitialPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, status);
}
// Autogenerated method: System.Net.FtpWebRequest.SetupPassiveConnection
System::Net::Sockets::Socket* System::Net::FtpWebRequest::SetupPassiveConnection(::Il2CppString* statusDescription, bool ipv6) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::SetupPassiveConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupPassiveConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(statusDescription), ::il2cpp_utils::ExtractType(ipv6)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Sockets::Socket*, false>(this, ___internal__method, statusDescription, ipv6);
}
// Autogenerated method: System.Net.FtpWebRequest.GetPortV4
int System::Net::FtpWebRequest::GetPortV4(::Il2CppString* responseString) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::GetPortV4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPortV4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseString)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, responseString);
}
// Autogenerated method: System.Net.FtpWebRequest.GetPortV6
int System::Net::FtpWebRequest::GetPortV6(::Il2CppString* responseString) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::GetPortV6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPortV6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseString)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, responseString);
}
// Autogenerated method: System.Net.FtpWebRequest.FormatAddress
::Il2CppString* System::Net::FtpWebRequest::FormatAddress(System::Net::IPAddress* address, int Port) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::FormatAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(Port)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, address, Port);
}
// Autogenerated method: System.Net.FtpWebRequest.FormatAddressV6
::Il2CppString* System::Net::FtpWebRequest::FormatAddressV6(System::Net::IPAddress* address, int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::FormatAddressV6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatAddressV6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(port)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, address, port);
}
// Autogenerated method: System.Net.FtpWebRequest.CreateExceptionFromResponse
System::Exception* System::Net::FtpWebRequest::CreateExceptionFromResponse(System::Net::FtpStatus* status) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::CreateExceptionFromResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateExceptionFromResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(this, ___internal__method, status);
}
// Autogenerated method: System.Net.FtpWebRequest.SetTransferCompleted
void System::Net::FtpWebRequest::SetTransferCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::SetTransferCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTransferCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.OperationCompleted
void System::Net::FtpWebRequest::OperationCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::OperationCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OperationCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.SetCompleteWithError
void System::Net::FtpWebRequest::SetCompleteWithError(System::Exception* exc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::SetCompleteWithError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompleteWithError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exc)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, exc);
}
// Autogenerated method: System.Net.FtpWebRequest.InitDataConnection
System::Net::Sockets::Socket* System::Net::FtpWebRequest::InitDataConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::InitDataConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitDataConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Sockets::Socket*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.OpenDataConnection
void System::Net::FtpWebRequest::OpenDataConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::OpenDataConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenDataConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.Authenticate
void System::Net::FtpWebRequest::Authenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::Authenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Authenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.SendCommand
System::Net::FtpStatus* System::Net::FtpWebRequest::SendCommand(::Il2CppString* command, ::Array<::Il2CppString*>* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::SendCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(command), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::FtpStatus*, false>(this, ___internal__method, command, parameters);
}
// Creating initializer_list -> params proxy for: System.Net.FtpStatus SendCommand(System.String command, params System.String[] parameters)
System::Net::FtpStatus* System::Net::FtpWebRequest::SendCommand(::Il2CppString* command, std::initializer_list<::Il2CppString*> parameters) {
  return System::Net::FtpWebRequest::SendCommand(command, ::Array<::Il2CppString*>::New(parameters));
}
// Autogenerated method: System.Net.FtpWebRequest.SendCommand
System::Net::FtpStatus* System::Net::FtpWebRequest::SendCommand(bool waitResponse, ::Il2CppString* command, ::Array<::Il2CppString*>* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::SendCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waitResponse), ::il2cpp_utils::ExtractType(command), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::FtpStatus*, false>(this, ___internal__method, waitResponse, command, parameters);
}
// Creating initializer_list -> params proxy for: System.Net.FtpStatus SendCommand(System.Boolean waitResponse, System.String command, params System.String[] parameters)
System::Net::FtpStatus* System::Net::FtpWebRequest::SendCommand(bool waitResponse, ::Il2CppString* command, std::initializer_list<::Il2CppString*> parameters) {
  return System::Net::FtpWebRequest::SendCommand(waitResponse, command, ::Array<::Il2CppString*>::New(parameters));
}
// Autogenerated method: System.Net.FtpWebRequest.ServiceNotAvailable
System::Net::FtpStatus* System::Net::FtpWebRequest::ServiceNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::ServiceNotAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "FtpWebRequest", "ServiceNotAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::FtpStatus*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.GetResponseStatus
System::Net::FtpStatus* System::Net::FtpWebRequest::GetResponseStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::GetResponseStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponseStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::FtpStatus*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.InitiateSecureConnection
void System::Net::FtpWebRequest::InitiateSecureConnection(System::IO::Stream*& stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::InitiateSecureConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitiateSecureConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: System.Net.FtpWebRequest.ChangeToSSLSocket
bool System::Net::FtpWebRequest::ChangeToSSLSocket(System::IO::Stream*& stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::ChangeToSSLSocket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeToSSLSocket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, stream);
}
// Autogenerated method: System.Net.FtpWebRequest.InFinalState
bool System::Net::FtpWebRequest::InFinalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::InFinalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InFinalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.InProgress
bool System::Net::FtpWebRequest::InProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::InProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.CheckIfAborted
void System::Net::FtpWebRequest::CheckIfAborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::CheckIfAborted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfAborted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.CheckFinalState
void System::Net::FtpWebRequest::CheckFinalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::CheckFinalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckFinalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.set_ConnectionGroupName
void System::Net::FtpWebRequest::set_ConnectionGroupName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::set_ConnectionGroupName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ConnectionGroupName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebRequest.get_ContentLength
int64_t System::Net::FtpWebRequest::get_ContentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::get_ContentLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.set_ContentLength
void System::Net::FtpWebRequest::set_ContentLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::set_ContentLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebRequest.get_Credentials
System::Net::ICredentials* System::Net::FtpWebRequest::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::get_Credentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Credentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.set_Credentials
void System::Net::FtpWebRequest::set_Credentials(System::Net::ICredentials* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::set_Credentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Credentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebRequest.get_Headers
System::Net::WebHeaderCollection* System::Net::FtpWebRequest::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::get_Headers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebHeaderCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.get_Method
::Il2CppString* System::Net::FtpWebRequest::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::get_Method");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.set_Method
void System::Net::FtpWebRequest::set_Method(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::set_Method");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebRequest.set_PreAuthenticate
void System::Net::FtpWebRequest::set_PreAuthenticate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::set_PreAuthenticate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PreAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebRequest.get_Proxy
System::Net::IWebProxy* System::Net::FtpWebRequest::get_Proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::get_Proxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Proxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IWebProxy*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.set_Proxy
void System::Net::FtpWebRequest::set_Proxy(System::Net::IWebProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::set_Proxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Proxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebRequest.get_RequestUri
System::Uri* System::Net::FtpWebRequest::get_RequestUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::get_RequestUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.get_UseDefaultCredentials
bool System::Net::FtpWebRequest::get_UseDefaultCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::get_UseDefaultCredentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseDefaultCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.set_UseDefaultCredentials
void System::Net::FtpWebRequest::set_UseDefaultCredentials(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::set_UseDefaultCredentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseDefaultCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebRequest.get_Timeout
int System::Net::FtpWebRequest::get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::get_Timeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.Abort
void System::Net::FtpWebRequest::Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::Abort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Abort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.BeginGetResponse
System::IAsyncResult* System::Net::FtpWebRequest::BeginGetResponse(System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::BeginGetResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginGetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.FtpWebRequest.EndGetResponse
System::Net::WebResponse* System::Net::FtpWebRequest::EndGetResponse(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::EndGetResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndGetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebResponse*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.FtpWebRequest.GetResponse
System::Net::WebResponse* System::Net::FtpWebRequest::GetResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::GetResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebResponse*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.BeginGetRequestStream
System::IAsyncResult* System::Net::FtpWebRequest::BeginGetRequestStream(System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::BeginGetRequestStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginGetRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.FtpWebRequest.EndGetRequestStream
System::IO::Stream* System::Net::FtpWebRequest::EndGetRequestStream(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::EndGetRequestStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndGetRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.FtpWebRequest..cctor
void System::Net::FtpWebRequest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "FtpWebRequest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.FtpWebRequest/RequestState
#include "System/Net/FtpWebRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.FtpWebRequest/RequestState Before
System::Net::FtpWebRequest::RequestState System::Net::FtpWebRequest::RequestState::_get_Before() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::RequestState::_get_Before");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::FtpWebRequest::RequestState>("System.Net", "FtpWebRequest/RequestState", "Before"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpWebRequest/RequestState Before
void System::Net::FtpWebRequest::RequestState::_set_Before(System::Net::FtpWebRequest::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::RequestState::_set_Before");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpWebRequest/RequestState", "Before", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpWebRequest/RequestState Scheduled
System::Net::FtpWebRequest::RequestState System::Net::FtpWebRequest::RequestState::_get_Scheduled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::RequestState::_get_Scheduled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::FtpWebRequest::RequestState>("System.Net", "FtpWebRequest/RequestState", "Scheduled"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpWebRequest/RequestState Scheduled
void System::Net::FtpWebRequest::RequestState::_set_Scheduled(System::Net::FtpWebRequest::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::RequestState::_set_Scheduled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpWebRequest/RequestState", "Scheduled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpWebRequest/RequestState Connecting
System::Net::FtpWebRequest::RequestState System::Net::FtpWebRequest::RequestState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::RequestState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::FtpWebRequest::RequestState>("System.Net", "FtpWebRequest/RequestState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpWebRequest/RequestState Connecting
void System::Net::FtpWebRequest::RequestState::_set_Connecting(System::Net::FtpWebRequest::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::RequestState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpWebRequest/RequestState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpWebRequest/RequestState Authenticating
System::Net::FtpWebRequest::RequestState System::Net::FtpWebRequest::RequestState::_get_Authenticating() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::RequestState::_get_Authenticating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::FtpWebRequest::RequestState>("System.Net", "FtpWebRequest/RequestState", "Authenticating"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpWebRequest/RequestState Authenticating
void System::Net::FtpWebRequest::RequestState::_set_Authenticating(System::Net::FtpWebRequest::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::RequestState::_set_Authenticating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpWebRequest/RequestState", "Authenticating", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpWebRequest/RequestState OpeningData
System::Net::FtpWebRequest::RequestState System::Net::FtpWebRequest::RequestState::_get_OpeningData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::RequestState::_get_OpeningData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::FtpWebRequest::RequestState>("System.Net", "FtpWebRequest/RequestState", "OpeningData"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpWebRequest/RequestState OpeningData
void System::Net::FtpWebRequest::RequestState::_set_OpeningData(System::Net::FtpWebRequest::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::RequestState::_set_OpeningData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpWebRequest/RequestState", "OpeningData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpWebRequest/RequestState TransferInProgress
System::Net::FtpWebRequest::RequestState System::Net::FtpWebRequest::RequestState::_get_TransferInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::RequestState::_get_TransferInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::FtpWebRequest::RequestState>("System.Net", "FtpWebRequest/RequestState", "TransferInProgress"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpWebRequest/RequestState TransferInProgress
void System::Net::FtpWebRequest::RequestState::_set_TransferInProgress(System::Net::FtpWebRequest::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::RequestState::_set_TransferInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpWebRequest/RequestState", "TransferInProgress", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpWebRequest/RequestState Finished
System::Net::FtpWebRequest::RequestState System::Net::FtpWebRequest::RequestState::_get_Finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::RequestState::_get_Finished");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::FtpWebRequest::RequestState>("System.Net", "FtpWebRequest/RequestState", "Finished"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpWebRequest/RequestState Finished
void System::Net::FtpWebRequest::RequestState::_set_Finished(System::Net::FtpWebRequest::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::RequestState::_set_Finished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpWebRequest/RequestState", "Finished", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpWebRequest/RequestState Aborted
System::Net::FtpWebRequest::RequestState System::Net::FtpWebRequest::RequestState::_get_Aborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::RequestState::_get_Aborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::FtpWebRequest::RequestState>("System.Net", "FtpWebRequest/RequestState", "Aborted"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpWebRequest/RequestState Aborted
void System::Net::FtpWebRequest::RequestState::_set_Aborted(System::Net::FtpWebRequest::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::RequestState::_set_Aborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpWebRequest/RequestState", "Aborted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpWebRequest/RequestState Error
System::Net::FtpWebRequest::RequestState System::Net::FtpWebRequest::RequestState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::RequestState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::FtpWebRequest::RequestState>("System.Net", "FtpWebRequest/RequestState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpWebRequest/RequestState Error
void System::Net::FtpWebRequest::RequestState::_set_Error(System::Net::FtpWebRequest::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebRequest::RequestState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpWebRequest/RequestState", "Error", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.FtpWebResponse
#include "System/Net/FtpWebResponse.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.FtpWebRequest
#include "System/Net/FtpWebRequest.hpp"
// Including type: System.Net.FtpStatus
#include "System/Net/FtpStatus.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.FtpWebResponse.set_LastModified
void System::Net::FtpWebResponse::set_LastModified(System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebResponse::set_LastModified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LastModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebResponse.set_BannerMessage
void System::Net::FtpWebResponse::set_BannerMessage(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebResponse::set_BannerMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BannerMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebResponse.set_WelcomeMessage
void System::Net::FtpWebResponse::set_WelcomeMessage(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebResponse::set_WelcomeMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WelcomeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebResponse.set_StatusCode
void System::Net::FtpWebResponse::set_StatusCode(System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebResponse::set_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebResponse.set_Stream
void System::Net::FtpWebResponse::set_Stream(System::IO::Stream* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebResponse::set_Stream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Stream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebResponse.UpdateStatus
void System::Net::FtpWebResponse::UpdateStatus(System::Net::FtpStatus* status) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebResponse::UpdateStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, status);
}
// Autogenerated method: System.Net.FtpWebResponse.CheckDisposed
void System::Net::FtpWebResponse::CheckDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebResponse::CheckDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebResponse.IsFinal
bool System::Net::FtpWebResponse::IsFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebResponse::IsFinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebResponse.get_Headers
System::Net::WebHeaderCollection* System::Net::FtpWebResponse::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebResponse::get_Headers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebHeaderCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebResponse.get_ResponseUri
System::Uri* System::Net::FtpWebResponse::get_ResponseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebResponse::get_ResponseUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResponseUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebResponse.Close
void System::Net::FtpWebResponse::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebResponse::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebResponse.GetResponseStream
System::IO::Stream* System::Net::FtpWebResponse::GetResponseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::FtpWebResponse::GetResponseStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponseStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HttpConnection
#include "System/Net/HttpConnection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.EndPointListener
#include "System/Net/EndPointListener.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: System.Net.HttpListenerContext
#include "System/Net/HttpListenerContext.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Net.ListenerPrefix
#include "System/Net/ListenerPrefix.hpp"
// Including type: System.Net.RequestStream
#include "System/Net/RequestStream.hpp"
// Including type: System.Net.ResponseStream
#include "System/Net/ResponseStream.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Threading.Timer
#include "System/Threading/Timer.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.HttpListener
#include "System/Net/HttpListener.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.AsyncCallback onread_cb
System::AsyncCallback* System::Net::HttpConnection::_get_onread_cb() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::_get_onread_cb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AsyncCallback*>("System.Net", "HttpConnection", "onread_cb"));
}
// Autogenerated static field setter
// Set static field: static private System.AsyncCallback onread_cb
void System::Net::HttpConnection::_set_onread_cb(System::AsyncCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::_set_onread_cb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpConnection", "onread_cb", value));
}
// Autogenerated method: System.Net.HttpConnection.Init
void System::Net::HttpConnection::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.get_Reuses
int System::Net::HttpConnection::get_Reuses() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::get_Reuses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Reuses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.get_LocalEndPoint
System::Net::IPEndPoint* System::Net::HttpConnection::get_LocalEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::get_LocalEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.get_IsSecure
bool System::Net::HttpConnection::get_IsSecure() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::get_IsSecure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSecure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.set_Prefix
void System::Net::HttpConnection::set_Prefix(System::Net::ListenerPrefix* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::set_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpConnection.OnTimeout
void System::Net::HttpConnection::OnTimeout(::Il2CppObject* unused) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::OnTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unused)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, unused);
}
// Autogenerated method: System.Net.HttpConnection.BeginReadRequest
void System::Net::HttpConnection::BeginReadRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::BeginReadRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginReadRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.GetRequestStream
System::Net::RequestStream* System::Net::HttpConnection::GetRequestStream(bool chunked, int64_t contentlength) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::GetRequestStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunked), ::il2cpp_utils::ExtractType(contentlength)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::RequestStream*, false>(this, ___internal__method, chunked, contentlength);
}
// Autogenerated method: System.Net.HttpConnection.GetResponseStream
System::Net::ResponseStream* System::Net::HttpConnection::GetResponseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::GetResponseStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponseStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::ResponseStream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.OnRead
void System::Net::HttpConnection::OnRead(System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::OnRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpConnection", "OnRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ares);
}
// Autogenerated method: System.Net.HttpConnection.OnReadInternal
void System::Net::HttpConnection::OnReadInternal(System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::OnReadInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnReadInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.HttpConnection.RemoveConnection
void System::Net::HttpConnection::RemoveConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::RemoveConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.ProcessInput
bool System::Net::HttpConnection::ProcessInput(System::IO::MemoryStream* ms) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::ProcessInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ms)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, ms);
}
// Autogenerated method: System.Net.HttpConnection.ReadLine
::Il2CppString* System::Net::HttpConnection::ReadLine(::Array<uint8_t>* buffer, int offset, int len, int& used) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::ReadLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(used)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, buffer, offset, len, used);
}
// Autogenerated method: System.Net.HttpConnection.SendError
void System::Net::HttpConnection::SendError(::Il2CppString* msg, int status) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::SendError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(status)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, msg, status);
}
// Autogenerated method: System.Net.HttpConnection.SendError
void System::Net::HttpConnection::SendError() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::SendError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.Unbind
void System::Net::HttpConnection::Unbind() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::Unbind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unbind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.CloseSocket
void System::Net::HttpConnection::CloseSocket() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::CloseSocket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseSocket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.Close
void System::Net::HttpConnection::Close(bool force_close) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force_close)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, force_close);
}
// Autogenerated method: System.Net.HttpConnection..cctor
void System::Net::HttpConnection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpConnection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.<.ctor>b__24_0
bool System::Net::HttpConnection::$_ctor$b__24_0(::Il2CppObject* t, System::Security::Cryptography::X509Certificates::X509Certificate* c, System::Security::Cryptography::X509Certificates::X509Chain* ch, System::Net::Security::SslPolicyErrors e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::<.ctor>b__24_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__24_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, t, c, ch, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.HttpConnection/InputState
#include "System/Net/HttpConnection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.HttpConnection/InputState RequestLine
System::Net::HttpConnection::InputState System::Net::HttpConnection::InputState::_get_RequestLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::InputState::_get_RequestLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::HttpConnection::InputState>("System.Net", "HttpConnection/InputState", "RequestLine"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.HttpConnection/InputState RequestLine
void System::Net::HttpConnection::InputState::_set_RequestLine(System::Net::HttpConnection::InputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::InputState::_set_RequestLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpConnection/InputState", "RequestLine", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.HttpConnection/InputState Headers
System::Net::HttpConnection::InputState System::Net::HttpConnection::InputState::_get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::InputState::_get_Headers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::HttpConnection::InputState>("System.Net", "HttpConnection/InputState", "Headers"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.HttpConnection/InputState Headers
void System::Net::HttpConnection::InputState::_set_Headers(System::Net::HttpConnection::InputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::InputState::_set_Headers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpConnection/InputState", "Headers", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.HttpConnection/LineState
#include "System/Net/HttpConnection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.HttpConnection/LineState None
System::Net::HttpConnection::LineState System::Net::HttpConnection::LineState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::LineState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::HttpConnection::LineState>("System.Net", "HttpConnection/LineState", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.HttpConnection/LineState None
void System::Net::HttpConnection::LineState::_set_None(System::Net::HttpConnection::LineState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::LineState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpConnection/LineState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.HttpConnection/LineState CR
System::Net::HttpConnection::LineState System::Net::HttpConnection::LineState::_get_CR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::LineState::_get_CR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::HttpConnection::LineState>("System.Net", "HttpConnection/LineState", "CR"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.HttpConnection/LineState CR
void System::Net::HttpConnection::LineState::_set_CR(System::Net::HttpConnection::LineState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::LineState::_set_CR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpConnection/LineState", "CR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.HttpConnection/LineState LF
System::Net::HttpConnection::LineState System::Net::HttpConnection::LineState::_get_LF() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::LineState::_get_LF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::HttpConnection::LineState>("System.Net", "HttpConnection/LineState", "LF"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.HttpConnection/LineState LF
void System::Net::HttpConnection::LineState::_set_LF(System::Net::HttpConnection::LineState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpConnection::LineState::_set_LF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpConnection/LineState", "LF", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HttpListener
#include "System/Net/HttpListener.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Net.HttpListenerPrefixCollection
#include "System/Net/HttpListenerPrefixCollection.hpp"
// Including type: System.Net.AuthenticationSchemeSelector
#include "System/Net/AuthenticationSchemeSelector.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Net.ServiceNameStore
#include "System/Net/ServiceNameStore.hpp"
// Including type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
#include "System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Net.HttpListenerContext
#include "System/Net/HttpListenerContext.hpp"
// Including type: System.Net.HttpConnection
#include "System/Net/HttpConnection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.HttpListener.LoadCertificateAndKey
System::Security::Cryptography::X509Certificates::X509Certificate* System::Net::HttpListener::LoadCertificateAndKey(System::Net::IPAddress* addr, int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::LoadCertificateAndKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadCertificateAndKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(addr), ::il2cpp_utils::ExtractType(port)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, addr, port);
}
// Autogenerated method: System.Net.HttpListener.CreateSslStream
System::Net::Security::SslStream* System::Net::HttpListener::CreateSslStream(System::IO::Stream* innerStream, bool ownsStream, System::Net::Security::RemoteCertificateValidationCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::CreateSslStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSslStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(innerStream), ::il2cpp_utils::ExtractType(ownsStream), ::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Security::SslStream*, false>(this, ___internal__method, innerStream, ownsStream, callback);
}
// Autogenerated method: System.Net.HttpListener.get_AuthenticationSchemes
System::Net::AuthenticationSchemes System::Net::HttpListener::get_AuthenticationSchemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::get_AuthenticationSchemes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthenticationSchemes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::AuthenticationSchemes, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.get_AuthenticationSchemeSelectorDelegate
System::Net::AuthenticationSchemeSelector* System::Net::HttpListener::get_AuthenticationSchemeSelectorDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::get_AuthenticationSchemeSelectorDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthenticationSchemeSelectorDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::AuthenticationSchemeSelector*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.get_IgnoreWriteExceptions
bool System::Net::HttpListener::get_IgnoreWriteExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::get_IgnoreWriteExceptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IgnoreWriteExceptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.get_IsListening
bool System::Net::HttpListener::get_IsListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::get_IsListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.get_Prefixes
System::Net::HttpListenerPrefixCollection* System::Net::HttpListener::get_Prefixes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::get_Prefixes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefixes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::HttpListenerPrefixCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.get_Realm
::Il2CppString* System::Net::HttpListener::get_Realm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::get_Realm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Realm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.Close
void System::Net::HttpListener::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.Close
void System::Net::HttpListener::Close(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: System.Net.HttpListener.Cleanup
void System::Net::HttpListener::Cleanup(bool close_existing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::Cleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(close_existing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, close_existing);
}
// Autogenerated method: System.Net.HttpListener.BeginGetContext
System::IAsyncResult* System::Net::HttpListener::BeginGetContext(System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::BeginGetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginGetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.HttpListener.EndGetContext
System::Net::HttpListenerContext* System::Net::HttpListener::EndGetContext(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::EndGetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndGetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::HttpListenerContext*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.HttpListener.SelectAuthenticationScheme
System::Net::AuthenticationSchemes System::Net::HttpListener::SelectAuthenticationScheme(System::Net::HttpListenerContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::SelectAuthenticationScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectAuthenticationScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::AuthenticationSchemes, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Net.HttpListener.GetContext
System::Net::HttpListenerContext* System::Net::HttpListener::GetContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::GetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::HttpListenerContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.Start
void System::Net::HttpListener::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.Stop
void System::Net::HttpListener::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.System.IDisposable.Dispose
void System::Net::HttpListener::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.CheckDisposed
void System::Net::HttpListener::CheckDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::CheckDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.GetContextFromQueue
System::Net::HttpListenerContext* System::Net::HttpListener::GetContextFromQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::GetContextFromQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContextFromQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::HttpListenerContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.RegisterContext
void System::Net::HttpListener::RegisterContext(System::Net::HttpListenerContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::RegisterContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Net.HttpListener.UnregisterContext
void System::Net::HttpListener::UnregisterContext(System::Net::HttpListenerContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::UnregisterContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Net.HttpListener.AddConnection
void System::Net::HttpListener::AddConnection(System::Net::HttpConnection* cnc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::AddConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cnc)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cnc);
}
// Autogenerated method: System.Net.HttpListener.RemoveConnection
void System::Net::HttpListener::RemoveConnection(System::Net::HttpConnection* cnc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListener::RemoveConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cnc)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cnc);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HttpListenerBasicIdentity
#include "System/Net/HttpListenerBasicIdentity.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HttpListenerContext
#include "System/Net/HttpListenerContext.hpp"
// Including type: System.Net.HttpListenerRequest
#include "System/Net/HttpListenerRequest.hpp"
// Including type: System.Net.HttpListenerResponse
#include "System/Net/HttpListenerResponse.hpp"
// Including type: System.Security.Principal.IPrincipal
#include "System/Security/Principal/IPrincipal.hpp"
// Including type: System.Net.HttpConnection
#include "System/Net/HttpConnection.hpp"
// Including type: System.Net.HttpListener
#include "System/Net/HttpListener.hpp"
// Including type: System.Net.AuthenticationSchemes
#include "System/Net/AuthenticationSchemes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.HttpListenerContext.get_ErrorStatus
int System::Net::HttpListenerContext::get_ErrorStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerContext::get_ErrorStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ErrorStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerContext.set_ErrorStatus
void System::Net::HttpListenerContext::set_ErrorStatus(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerContext::set_ErrorStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ErrorStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerContext.get_ErrorMessage
::Il2CppString* System::Net::HttpListenerContext::get_ErrorMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerContext::get_ErrorMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ErrorMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerContext.set_ErrorMessage
void System::Net::HttpListenerContext::set_ErrorMessage(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerContext::set_ErrorMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ErrorMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerContext.get_HaveError
bool System::Net::HttpListenerContext::get_HaveError() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerContext::get_HaveError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HaveError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerContext.get_Connection
System::Net::HttpConnection* System::Net::HttpListenerContext::get_Connection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerContext::get_Connection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Connection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::HttpConnection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerContext.get_Request
System::Net::HttpListenerRequest* System::Net::HttpListenerContext::get_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerContext::get_Request");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Request", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::HttpListenerRequest*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerContext.get_Response
System::Net::HttpListenerResponse* System::Net::HttpListenerContext::get_Response() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerContext::get_Response");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Response", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::HttpListenerResponse*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerContext.ParseAuthentication
void System::Net::HttpListenerContext::ParseAuthentication(System::Net::AuthenticationSchemes expectedSchemes) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerContext::ParseAuthentication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAuthentication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expectedSchemes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, expectedSchemes);
}
// Autogenerated method: System.Net.HttpListenerContext.ParseBasicAuthentication
System::Security::Principal::IPrincipal* System::Net::HttpListenerContext::ParseBasicAuthentication(::Il2CppString* authData) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerContext::ParseBasicAuthentication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseBasicAuthentication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(authData)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Principal::IPrincipal*, false>(this, ___internal__method, authData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HttpListenerPrefixCollection
#include "System/Net/HttpListenerPrefixCollection.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.HttpListener
#include "System/Net/HttpListener.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.HttpListenerPrefixCollection.get_Count
int System::Net::HttpListenerPrefixCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerPrefixCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerPrefixCollection.get_IsReadOnly
bool System::Net::HttpListenerPrefixCollection::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerPrefixCollection::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerPrefixCollection.Add
void System::Net::HttpListenerPrefixCollection::Add(::Il2CppString* uriPrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerPrefixCollection::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriPrefix)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, uriPrefix);
}
// Autogenerated method: System.Net.HttpListenerPrefixCollection.Clear
void System::Net::HttpListenerPrefixCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerPrefixCollection::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerPrefixCollection.Contains
bool System::Net::HttpListenerPrefixCollection::Contains(::Il2CppString* uriPrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerPrefixCollection::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriPrefix)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, uriPrefix);
}
// Autogenerated method: System.Net.HttpListenerPrefixCollection.CopyTo
void System::Net::HttpListenerPrefixCollection::CopyTo(::Array<::Il2CppString*>* array, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerPrefixCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, offset);
}
// Autogenerated method: System.Net.HttpListenerPrefixCollection.GetEnumerator
System::Collections::Generic::IEnumerator_1<::Il2CppString*>* System::Net::HttpListenerPrefixCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerPrefixCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Net::HttpListenerPrefixCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerPrefixCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerPrefixCollection.Remove
bool System::Net::HttpListenerPrefixCollection::Remove(::Il2CppString* uriPrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerPrefixCollection::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriPrefix)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, uriPrefix);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HttpListenerRequest
#include "System/Net/HttpListenerRequest.hpp"
// Including type: System.Net.CookieCollection
#include "System/Net/CookieCollection.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Collections.Specialized.NameValueCollection
#include "System/Collections/Specialized/NameValueCollection.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.HttpListenerContext
#include "System/Net/HttpListenerContext.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] _100continue
::Array<uint8_t>* System::Net::HttpListenerRequest::_get__100continue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::_get__100continue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.Net", "HttpListenerRequest", "_100continue"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _100continue
void System::Net::HttpListenerRequest::_set__100continue(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::_set__100continue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpListenerRequest", "_100continue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char[] separators
::Array<::Il2CppChar>* System::Net::HttpListenerRequest::_get_separators() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::_get_separators");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Net", "HttpListenerRequest", "separators"));
}
// Autogenerated static field setter
// Set static field: static private System.Char[] separators
void System::Net::HttpListenerRequest::_set_separators(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::_set_separators");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpListenerRequest", "separators", value));
}
// Autogenerated method: System.Net.HttpListenerRequest.SetRequestLine
void System::Net::HttpListenerRequest::SetRequestLine(::Il2CppString* req) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::SetRequestLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRequestLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(req)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, req);
}
// Autogenerated method: System.Net.HttpListenerRequest.CreateQueryString
void System::Net::HttpListenerRequest::CreateQueryString(::Il2CppString* query) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::CreateQueryString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateQueryString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(query)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, query);
}
// Autogenerated method: System.Net.HttpListenerRequest.MaybeUri
bool System::Net::HttpListenerRequest::MaybeUri(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::MaybeUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpListenerRequest", "MaybeUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Net.HttpListenerRequest.IsPredefinedScheme
bool System::Net::HttpListenerRequest::IsPredefinedScheme(::Il2CppString* scheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::IsPredefinedScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpListenerRequest", "IsPredefinedScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scheme)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, scheme);
}
// Autogenerated method: System.Net.HttpListenerRequest.FinishInitialization
void System::Net::HttpListenerRequest::FinishInitialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::FinishInitialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishInitialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.Unquote
::Il2CppString* System::Net::HttpListenerRequest::Unquote(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::Unquote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpListenerRequest", "Unquote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Net.HttpListenerRequest.AddHeader
void System::Net::HttpListenerRequest::AddHeader(::Il2CppString* header) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::AddHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(header)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, header);
}
// Autogenerated method: System.Net.HttpListenerRequest.FlushInput
bool System::Net::HttpListenerRequest::FlushInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::FlushInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_HasEntityBody
bool System::Net::HttpListenerRequest::get_HasEntityBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::get_HasEntityBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasEntityBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_Headers
System::Collections::Specialized::NameValueCollection* System::Net::HttpListenerRequest::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::get_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Specialized::NameValueCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_InputStream
System::IO::Stream* System::Net::HttpListenerRequest::get_InputStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::get_InputStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_IsSecureConnection
bool System::Net::HttpListenerRequest::get_IsSecureConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::get_IsSecureConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSecureConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_KeepAlive
bool System::Net::HttpListenerRequest::get_KeepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::get_KeepAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeepAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_LocalEndPoint
System::Net::IPEndPoint* System::Net::HttpListenerRequest::get_LocalEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::get_LocalEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_ProtocolVersion
System::Version* System::Net::HttpListenerRequest::get_ProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::get_ProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Version*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_Url
System::Uri* System::Net::HttpListenerRequest::get_Url() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::get_Url");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Url", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_UserHostAddress
::Il2CppString* System::Net::HttpListenerRequest::get_UserHostAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::get_UserHostAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserHostAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_UserHostName
::Il2CppString* System::Net::HttpListenerRequest::get_UserHostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::get_UserHostName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserHostName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest..cctor
void System::Net::HttpListenerRequest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerRequest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpListenerRequest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HttpListenerResponse
#include "System/Net/HttpListenerResponse.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Net.CookieCollection
#include "System/Net/CookieCollection.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.Net.ResponseStream
#include "System/Net/ResponseStream.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Net.HttpListenerContext
#include "System/Net/HttpListenerContext.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: System.Net.Cookie
#include "System/Net/Cookie.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String tspecials
::Il2CppString* System::Net::HttpListenerResponse::_get_tspecials() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::_get_tspecials");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Net", "HttpListenerResponse", "tspecials"));
}
// Autogenerated static field setter
// Set static field: static private System.String tspecials
void System::Net::HttpListenerResponse::_set_tspecials(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::_set_tspecials");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpListenerResponse", "tspecials", value));
}
// Autogenerated method: System.Net.HttpListenerResponse.get_ForceCloseChunked
bool System::Net::HttpListenerResponse::get_ForceCloseChunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::get_ForceCloseChunked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ForceCloseChunked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.get_ContentEncoding
System::Text::Encoding* System::Net::HttpListenerResponse::get_ContentEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::get_ContentEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.set_ContentLength64
void System::Net::HttpListenerResponse::set_ContentLength64(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::set_ContentLength64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentLength64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerResponse.set_ContentType
void System::Net::HttpListenerResponse::set_ContentType(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::set_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerResponse.get_Headers
System::Net::WebHeaderCollection* System::Net::HttpListenerResponse::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::get_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebHeaderCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.get_OutputStream
System::IO::Stream* System::Net::HttpListenerResponse::get_OutputStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::get_OutputStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OutputStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.get_SendChunked
bool System::Net::HttpListenerResponse::get_SendChunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::get_SendChunked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SendChunked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.set_SendChunked
void System::Net::HttpListenerResponse::set_SendChunked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::set_SendChunked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendChunked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerResponse.set_StatusCode
void System::Net::HttpListenerResponse::set_StatusCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::set_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerResponse.System.IDisposable.Dispose
void System::Net::HttpListenerResponse::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.Close
void System::Net::HttpListenerResponse::Close(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: System.Net.HttpListenerResponse.Close
void System::Net::HttpListenerResponse::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.Close
void System::Net::HttpListenerResponse::Close(::Array<uint8_t>* responseEntity, bool willBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseEntity), ::il2cpp_utils::ExtractType(willBlock)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, responseEntity, willBlock);
}
// Autogenerated method: System.Net.HttpListenerResponse.SendHeaders
void System::Net::HttpListenerResponse::SendHeaders(bool closing, System::IO::MemoryStream* ms) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::SendHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(closing), ::il2cpp_utils::ExtractType(ms)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, closing, ms);
}
// Autogenerated method: System.Net.HttpListenerResponse.FormatHeaders
::Il2CppString* System::Net::HttpListenerResponse::FormatHeaders(System::Net::WebHeaderCollection* headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::FormatHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpListenerResponse", "FormatHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, headers);
}
// Autogenerated method: System.Net.HttpListenerResponse.CookieToClientString
::Il2CppString* System::Net::HttpListenerResponse::CookieToClientString(System::Net::Cookie* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::CookieToClientString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpListenerResponse", "CookieToClientString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cookie);
}
// Autogenerated method: System.Net.HttpListenerResponse.QuotedString
::Il2CppString* System::Net::HttpListenerResponse::QuotedString(System::Net::Cookie* cookie, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::QuotedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpListenerResponse", "QuotedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cookie, value);
}
// Autogenerated method: System.Net.HttpListenerResponse.IsToken
bool System::Net::HttpListenerResponse::IsToken(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::IsToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpListenerResponse", "IsToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerResponse..cctor
void System::Net::HttpListenerResponse::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerResponse::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpListenerResponse", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.HttpRequestCreator
#include "System/Net/HttpRequestCreator.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.HttpRequestCreator.Create
System::Net::WebRequest* System::Net::HttpRequestCreator::Create(System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpRequestCreator::Create");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebRequest*, false>(this, ___internal__method, uri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HttpStreamAsyncResult
#include "System/Net/HttpStreamAsyncResult.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.HttpStreamAsyncResult.Complete
void System::Net::HttpStreamAsyncResult::Complete(System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpStreamAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Net.HttpStreamAsyncResult.Complete
void System::Net::HttpStreamAsyncResult::Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpStreamAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpStreamAsyncResult.get_AsyncState
::Il2CppObject* System::Net::HttpStreamAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpStreamAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpStreamAsyncResult.get_AsyncWaitHandle
System::Threading::WaitHandle* System::Net::HttpStreamAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpStreamAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncWaitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpStreamAsyncResult.get_CompletedSynchronously
bool System::Net::HttpStreamAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpStreamAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpStreamAsyncResult.get_IsCompleted
bool System::Net::HttpStreamAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpStreamAsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Net.HttpWebRequest/<>c__DisplayClass238_0
#include "System/Net/HttpWebRequest_--c__DisplayClass238_0.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Net.HttpContinueDelegate
#include "System/Net/HttpContinueDelegate.hpp"
// Including type: System.Net.CookieContainer
#include "System/Net/CookieContainer.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Net.ServicePoint
#include "System/Net/ServicePoint.hpp"
// Including type: System.Net.WebConnectionStream
#include "System/Net/WebConnectionStream.hpp"
// Including type: System.Net.HttpWebResponse
#include "System/Net/HttpWebResponse.hpp"
// Including type: System.Net.WebAsyncResult
#include "System/Net/WebAsyncResult.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Net.WebConnection
#include "System/Net/WebConnection.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: System.Net.ServerCertValidationCallback
#include "System/Net/ServerCertValidationCallback.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.SimpleAsyncResult
#include "System/Net/SimpleAsyncResult.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Net.HttpStatusCode
#include "System/Net/HttpStatusCode.hpp"
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
// Including type: System.Net.WebExceptionStatus
#include "System/Net/WebExceptionStatus.hpp"
// Including type: System.Net.SimpleAsyncCallback
#include "System/Net/SimpleAsyncCallback.hpp"
// Including type: System.Net.WebConnectionData
#include "System/Net/WebConnectionData.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 defaultMaxResponseHeadersLength
int System::Net::HttpWebRequest::_get_defaultMaxResponseHeadersLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::_get_defaultMaxResponseHeadersLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "HttpWebRequest", "defaultMaxResponseHeadersLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 defaultMaxResponseHeadersLength
void System::Net::HttpWebRequest::_set_defaultMaxResponseHeadersLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::_set_defaultMaxResponseHeadersLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpWebRequest", "defaultMaxResponseHeadersLength", value));
}
// Autogenerated method: System.Net.HttpWebRequest.ResetAuthorization
void System::Net::HttpWebRequest::ResetAuthorization() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::ResetAuthorization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetAuthorization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Address
System::Uri* System::Net::HttpWebRequest::get_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_Address");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Address", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_Address
void System::Net::HttpWebRequest::set_Address(System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_Address");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Address", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.set_AllowAutoRedirect
void System::Net::HttpWebRequest::set_AllowAutoRedirect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_AllowAutoRedirect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowAutoRedirect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_AllowWriteStreamBuffering
bool System::Net::HttpWebRequest::get_AllowWriteStreamBuffering() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_AllowWriteStreamBuffering");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowWriteStreamBuffering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_AllowWriteStreamBuffering
void System::Net::HttpWebRequest::set_AllowWriteStreamBuffering(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_AllowWriteStreamBuffering");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowWriteStreamBuffering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_AutomaticDecompression
System::Net::DecompressionMethods System::Net::HttpWebRequest::get_AutomaticDecompression() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_AutomaticDecompression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutomaticDecompression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::DecompressionMethods, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_AutomaticDecompression
void System::Net::HttpWebRequest::set_AutomaticDecompression(System::Net::DecompressionMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_AutomaticDecompression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AutomaticDecompression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_InternalAllowBuffering
bool System::Net::HttpWebRequest::get_InternalAllowBuffering() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_InternalAllowBuffering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalAllowBuffering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_MethodWithBuffer
bool System::Net::HttpWebRequest::get_MethodWithBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_MethodWithBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodWithBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_TlsProvider
Mono::Security::Interface::MonoTlsProvider* System::Net::HttpWebRequest::get_TlsProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_TlsProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TlsProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoTlsProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_TlsSettings
Mono::Security::Interface::MonoTlsSettings* System::Net::HttpWebRequest::get_TlsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_TlsSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TlsSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoTlsSettings*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ClientCertificates
System::Security::Cryptography::X509Certificates::X509CertificateCollection* System::Net::HttpWebRequest::get_ClientCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_ClientCertificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509CertificateCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_InternalContentLength
void System::Net::HttpWebRequest::set_InternalContentLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_InternalContentLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InternalContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ThrowOnError
bool System::Net::HttpWebRequest::get_ThrowOnError() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_ThrowOnError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ThrowOnError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_ThrowOnError
void System::Net::HttpWebRequest::set_ThrowOnError(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_ThrowOnError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ThrowOnError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.set_CookieContainer
void System::Net::HttpWebRequest::set_CookieContainer(System::Net::CookieContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_CookieContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CookieContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Host
::Il2CppString* System::Net::HttpWebRequest::get_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_Host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_Host
void System::Net::HttpWebRequest::set_Host(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_Host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.CheckValidHost
bool System::Net::HttpWebRequest::CheckValidHost(::Il2CppString* scheme, ::Il2CppString* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::CheckValidHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpWebRequest", "CheckValidHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scheme), ::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, scheme, val);
}
// Autogenerated method: System.Net.HttpWebRequest.get_KeepAlive
bool System::Net::HttpWebRequest::get_KeepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_KeepAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeepAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_KeepAlive
void System::Net::HttpWebRequest::set_KeepAlive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_KeepAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_KeepAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.set_MaximumAutomaticRedirections
void System::Net::HttpWebRequest::set_MaximumAutomaticRedirections(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_MaximumAutomaticRedirections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaximumAutomaticRedirections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ReadWriteTimeout
int System::Net::HttpWebRequest::get_ReadWriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_ReadWriteTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadWriteTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ProtocolVersion
System::Version* System::Net::HttpWebRequest::get_ProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_ProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Version*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_ProtocolVersion
void System::Net::HttpWebRequest::set_ProtocolVersion(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_ProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_SendChunked
bool System::Net::HttpWebRequest::get_SendChunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_SendChunked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SendChunked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_SendChunked
void System::Net::HttpWebRequest::set_SendChunked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_SendChunked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendChunked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ServicePoint
System::Net::ServicePoint* System::Net::HttpWebRequest::get_ServicePoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_ServicePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServicePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::ServicePoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ServicePointNoLock
System::Net::ServicePoint* System::Net::HttpWebRequest::get_ServicePointNoLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_ServicePointNoLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServicePointNoLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::ServicePoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_TransferEncoding
::Il2CppString* System::Net::HttpWebRequest::get_TransferEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_TransferEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransferEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_UnsafeAuthenticatedConnectionSharing
bool System::Net::HttpWebRequest::get_UnsafeAuthenticatedConnectionSharing() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_UnsafeAuthenticatedConnectionSharing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnsafeAuthenticatedConnectionSharing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ExpectContinue
bool System::Net::HttpWebRequest::get_ExpectContinue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_ExpectContinue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpectContinue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_ExpectContinue
void System::Net::HttpWebRequest::set_ExpectContinue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_ExpectContinue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExpectContinue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_AuthUri
System::Uri* System::Net::HttpWebRequest::get_AuthUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_AuthUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ProxyQuery
bool System::Net::HttpWebRequest::get_ProxyQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_ProxyQuery");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProxyQuery", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ServerCertValidationCallback
System::Net::ServerCertValidationCallback* System::Net::HttpWebRequest::get_ServerCertValidationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_ServerCertValidationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerCertValidationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::ServerCertValidationCallback*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.GetServicePoint
System::Net::ServicePoint* System::Net::HttpWebRequest::GetServicePoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::GetServicePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServicePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::ServicePoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.CheckIfForceWrite
bool System::Net::HttpWebRequest::CheckIfForceWrite(System::Net::SimpleAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::CheckIfForceWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfForceWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated method: System.Net.HttpWebRequest.get_FinishedReading
bool System::Net::HttpWebRequest::get_FinishedReading() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_FinishedReading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FinishedReading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_FinishedReading
void System::Net::HttpWebRequest::set_FinishedReading(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_FinishedReading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FinishedReading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Aborted
bool System::Net::HttpWebRequest::get_Aborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_Aborted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Aborted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::HttpWebRequest::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.HttpWebRequest.CheckRequestStarted
void System::Net::HttpWebRequest::CheckRequestStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::CheckRequestStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRequestStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.DoContinueDelegate
void System::Net::HttpWebRequest::DoContinueDelegate(int statusCode, System::Net::WebHeaderCollection* headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::DoContinueDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoContinueDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(statusCode), ::il2cpp_utils::ExtractType(headers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, statusCode, headers);
}
// Autogenerated method: System.Net.HttpWebRequest.RewriteRedirectToGet
void System::Net::HttpWebRequest::RewriteRedirectToGet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::RewriteRedirectToGet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RewriteRedirectToGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.Redirect
bool System::Net::HttpWebRequest::Redirect(System::Net::WebAsyncResult* result, System::Net::HttpStatusCode code, System::Net::WebResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::Redirect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Redirect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(response)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result, code, response);
}
// Autogenerated method: System.Net.HttpWebRequest.GetHeaders
::Il2CppString* System::Net::HttpWebRequest::GetHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::GetHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.DoPreAuthenticate
void System::Net::HttpWebRequest::DoPreAuthenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::DoPreAuthenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoPreAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.SetWriteStreamError
void System::Net::HttpWebRequest::SetWriteStreamError(System::Net::WebExceptionStatus status, System::Exception* exc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::SetWriteStreamError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWriteStreamError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status), ::il2cpp_utils::ExtractType(exc)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, status, exc);
}
// Autogenerated method: System.Net.HttpWebRequest.GetRequestHeaders
::Array<uint8_t>* System::Net::HttpWebRequest::GetRequestHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::GetRequestHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequestHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.SetWriteStream
void System::Net::HttpWebRequest::SetWriteStream(System::Net::WebConnectionStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::SetWriteStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWriteStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: System.Net.HttpWebRequest.SetWriteStreamInner
void System::Net::HttpWebRequest::SetWriteStreamInner(System::Net::SimpleAsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::SetWriteStreamInner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWriteStreamInner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: System.Net.HttpWebRequest.SetWriteStreamError
void System::Net::HttpWebRequest::SetWriteStreamError(System::Exception* exc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::SetWriteStreamError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWriteStreamError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exc)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, exc);
}
// Autogenerated method: System.Net.HttpWebRequest.SetResponseError
void System::Net::HttpWebRequest::SetResponseError(System::Net::WebExceptionStatus status, System::Exception* e, ::Il2CppString* where) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::SetResponseError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetResponseError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(where)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, status, e, where);
}
// Autogenerated method: System.Net.HttpWebRequest.CheckSendError
void System::Net::HttpWebRequest::CheckSendError(System::Net::WebConnectionData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::CheckSendError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckSendError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Net.HttpWebRequest.HandleNtlmAuth
bool System::Net::HttpWebRequest::HandleNtlmAuth(System::Net::WebAsyncResult* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::HandleNtlmAuth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNtlmAuth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, r);
}
// Autogenerated method: System.Net.HttpWebRequest.SetResponseData
void System::Net::HttpWebRequest::SetResponseData(System::Net::WebConnectionData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::SetResponseData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetResponseData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Net.HttpWebRequest.CheckAuthorization
bool System::Net::HttpWebRequest::CheckAuthorization(System::Net::WebResponse* response, System::Net::HttpStatusCode code) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::CheckAuthorization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAuthorization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, response, code);
}
// Autogenerated method: System.Net.HttpWebRequest.CheckFinalStatus
bool System::Net::HttpWebRequest::CheckFinalStatus(System::Net::WebAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::CheckFinalStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckFinalStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ReuseConnection
bool System::Net::HttpWebRequest::get_ReuseConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_ReuseConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReuseConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_ReuseConnection
void System::Net::HttpWebRequest::set_ReuseConnection(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_ReuseConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReuseConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.<SetWriteStream>b__258_0
void System::Net::HttpWebRequest::$SetWriteStream$b__258_0(System::Net::SimpleAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::<SetWriteStream>b__258_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetWriteStream>b__258_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: System.Net.HttpWebRequest.<SetWriteStream>b__258_1
void System::Net::HttpWebRequest::$SetWriteStream$b__258_1(System::Net::SimpleAsyncResult* inner) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::<SetWriteStream>b__258_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetWriteStream>b__258_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inner)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inner);
}
// Autogenerated method: System.Net.HttpWebRequest.<SetWriteStreamInner>b__259_0
bool System::Net::HttpWebRequest::$SetWriteStreamInner$b__259_0(System::Net::SimpleAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::<SetWriteStreamInner>b__259_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetWriteStreamInner>b__259_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated method: System.Net.HttpWebRequest..cctor
void System::Net::HttpWebRequest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpWebRequest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_ConnectionGroupName
void System::Net::HttpWebRequest::set_ConnectionGroupName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_ConnectionGroupName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ConnectionGroupName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ContentLength
int64_t System::Net::HttpWebRequest::get_ContentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_ContentLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_ContentLength
void System::Net::HttpWebRequest::set_ContentLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_ContentLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Credentials
System::Net::ICredentials* System::Net::HttpWebRequest::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_Credentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Credentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_Credentials
void System::Net::HttpWebRequest::set_Credentials(System::Net::ICredentials* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_Credentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Credentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Headers
System::Net::WebHeaderCollection* System::Net::HttpWebRequest::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_Headers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebHeaderCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Method
::Il2CppString* System::Net::HttpWebRequest::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_Method");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_Method
void System::Net::HttpWebRequest::set_Method(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_Method");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.set_PreAuthenticate
void System::Net::HttpWebRequest::set_PreAuthenticate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_PreAuthenticate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PreAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Proxy
System::Net::IWebProxy* System::Net::HttpWebRequest::get_Proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_Proxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Proxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IWebProxy*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_Proxy
void System::Net::HttpWebRequest::set_Proxy(System::Net::IWebProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_Proxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Proxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_RequestUri
System::Uri* System::Net::HttpWebRequest::get_RequestUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_RequestUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Timeout
int System::Net::HttpWebRequest::get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_Timeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_UseDefaultCredentials
bool System::Net::HttpWebRequest::get_UseDefaultCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::get_UseDefaultCredentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseDefaultCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_UseDefaultCredentials
void System::Net::HttpWebRequest::set_UseDefaultCredentials(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::set_UseDefaultCredentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseDefaultCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.BeginGetRequestStream
System::IAsyncResult* System::Net::HttpWebRequest::BeginGetRequestStream(System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::BeginGetRequestStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginGetRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.HttpWebRequest.EndGetRequestStream
System::IO::Stream* System::Net::HttpWebRequest::EndGetRequestStream(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::EndGetRequestStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndGetRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.HttpWebRequest.BeginGetResponse
System::IAsyncResult* System::Net::HttpWebRequest::BeginGetResponse(System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::BeginGetResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginGetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.HttpWebRequest.EndGetResponse
System::Net::WebResponse* System::Net::HttpWebRequest::EndGetResponse(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::EndGetResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndGetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebResponse*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.HttpWebRequest.GetResponse
System::Net::WebResponse* System::Net::HttpWebRequest::GetResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::GetResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebResponse*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.Abort
void System::Net::HttpWebRequest::Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::Abort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Abort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.GetObjectData
void System::Net::HttpWebRequest::GetObjectData(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.HttpWebRequest/NtlmAuthState
#include "System/Net/HttpWebRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.HttpWebRequest/NtlmAuthState None
System::Net::HttpWebRequest::NtlmAuthState System::Net::HttpWebRequest::NtlmAuthState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::NtlmAuthState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::HttpWebRequest::NtlmAuthState>("System.Net", "HttpWebRequest/NtlmAuthState", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.HttpWebRequest/NtlmAuthState None
void System::Net::HttpWebRequest::NtlmAuthState::_set_None(System::Net::HttpWebRequest::NtlmAuthState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::NtlmAuthState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpWebRequest/NtlmAuthState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.HttpWebRequest/NtlmAuthState Challenge
System::Net::HttpWebRequest::NtlmAuthState System::Net::HttpWebRequest::NtlmAuthState::_get_Challenge() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::NtlmAuthState::_get_Challenge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::HttpWebRequest::NtlmAuthState>("System.Net", "HttpWebRequest/NtlmAuthState", "Challenge"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.HttpWebRequest/NtlmAuthState Challenge
void System::Net::HttpWebRequest::NtlmAuthState::_set_Challenge(System::Net::HttpWebRequest::NtlmAuthState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::NtlmAuthState::_set_Challenge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpWebRequest/NtlmAuthState", "Challenge", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.HttpWebRequest/NtlmAuthState Response
System::Net::HttpWebRequest::NtlmAuthState System::Net::HttpWebRequest::NtlmAuthState::_get_Response() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::NtlmAuthState::_get_Response");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::HttpWebRequest::NtlmAuthState>("System.Net", "HttpWebRequest/NtlmAuthState", "Response"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.HttpWebRequest/NtlmAuthState Response
void System::Net::HttpWebRequest::NtlmAuthState::_set_Response(System::Net::HttpWebRequest::NtlmAuthState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::NtlmAuthState::_set_Response");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpWebRequest/NtlmAuthState", "Response", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HttpWebRequest/AuthorizationState
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Net.HttpWebRequest/NtlmAuthState
// Already included the same include: System/Net/HttpWebRequest.hpp
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
// Including type: System.Net.HttpStatusCode
#include "System/Net/HttpStatusCode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.HttpWebRequest/AuthorizationState.get_IsCompleted
bool System::Net::HttpWebRequest::AuthorizationState::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::AuthorizationState::get_IsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest/AuthorizationState.get_NtlmAuthState
System::Net::HttpWebRequest::NtlmAuthState System::Net::HttpWebRequest::AuthorizationState::get_NtlmAuthState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::AuthorizationState::get_NtlmAuthState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NtlmAuthState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::HttpWebRequest::NtlmAuthState, false>(*this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest/AuthorizationState.get_IsNtlmAuthenticated
bool System::Net::HttpWebRequest::AuthorizationState::get_IsNtlmAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::AuthorizationState::get_IsNtlmAuthenticated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsNtlmAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest/AuthorizationState.CheckAuthorization
bool System::Net::HttpWebRequest::AuthorizationState::CheckAuthorization(System::Net::WebResponse* response, System::Net::HttpStatusCode code) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::AuthorizationState::CheckAuthorization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckAuthorization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, response, code);
}
// Autogenerated method: System.Net.HttpWebRequest/AuthorizationState.Reset
void System::Net::HttpWebRequest::AuthorizationState::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::AuthorizationState::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest/AuthorizationState.ToString
::Il2CppString* System::Net::HttpWebRequest::AuthorizationState::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::AuthorizationState::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.HttpWebRequest/<>c__DisplayClass238_0
#include "System/Net/HttpWebRequest_--c__DisplayClass238_0.hpp"
// Including type: System.Net.WebAsyncResult
#include "System/Net/WebAsyncResult.hpp"
// Including type: System.Net.SimpleAsyncResult
#include "System/Net/SimpleAsyncResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.HttpWebRequest/<>c__DisplayClass238_0.<BeginGetResponse>b__0
void System::Net::HttpWebRequest::$$c__DisplayClass238_0::$BeginGetResponse$b__0(System::Net::SimpleAsyncResult* inner) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebRequest::$$c__DisplayClass238_0::<BeginGetResponse>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginGetResponse>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inner)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inner);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HttpWebResponse
#include "System/Net/HttpWebResponse.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.Net.CookieCollection
#include "System/Net/CookieCollection.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Net.CookieContainer
#include "System/Net/CookieContainer.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.WebConnectionData
#include "System/Net/WebConnectionData.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.HttpWebResponse.get_StatusCode
System::Net::HttpStatusCode System::Net::HttpWebResponse::get_StatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebResponse::get_StatusCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::HttpStatusCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebResponse.get_StatusDescription
::Il2CppString* System::Net::HttpWebResponse::get_StatusDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebResponse::get_StatusDescription");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebResponse.ReadAll
void System::Net::HttpWebResponse::ReadAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebResponse::ReadAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebResponse.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::HttpWebResponse::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebResponse::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.HttpWebResponse.System.IDisposable.Dispose
void System::Net::HttpWebResponse::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebResponse::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebResponse.CheckDisposed
void System::Net::HttpWebResponse::CheckDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebResponse::CheckDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebResponse.FillCookies
void System::Net::HttpWebResponse::FillCookies() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebResponse::FillCookies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillCookies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebResponse.get_Headers
System::Net::WebHeaderCollection* System::Net::HttpWebResponse::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebResponse::get_Headers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebHeaderCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebResponse.get_ResponseUri
System::Uri* System::Net::HttpWebResponse::get_ResponseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebResponse::get_ResponseUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResponseUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebResponse.GetResponseStream
System::IO::Stream* System::Net::HttpWebResponse::GetResponseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebResponse::GetResponseStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponseStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebResponse.GetObjectData
void System::Net::HttpWebResponse::GetObjectData(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebResponse::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.HttpWebResponse.Close
void System::Net::HttpWebResponse::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebResponse::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebResponse.Dispose
void System::Net::HttpWebResponse::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpWebResponse::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.IPv6AddressFormatter
#include "System/Net/IPv6AddressFormatter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.IPv6AddressFormatter.SwapUShort
uint16_t System::Net::IPv6AddressFormatter::SwapUShort(uint16_t number) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::IPv6AddressFormatter::SwapUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "IPv6AddressFormatter", "SwapUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number)})));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number);
}
// Autogenerated method: System.Net.IPv6AddressFormatter.AsIPv4Int
uint System::Net::IPv6AddressFormatter::AsIPv4Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::IPv6AddressFormatter::AsIPv4Int");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AsIPv4Int", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(*this, ___internal__method);
}
// Autogenerated method: System.Net.IPv6AddressFormatter.IsIPv4Compatible
bool System::Net::IPv6AddressFormatter::IsIPv4Compatible() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::IPv6AddressFormatter::IsIPv4Compatible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsIPv4Compatible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.Net.IPv6AddressFormatter.IsIPv4Mapped
bool System::Net::IPv6AddressFormatter::IsIPv4Mapped() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::IPv6AddressFormatter::IsIPv4Mapped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsIPv4Mapped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.Net.IPv6AddressFormatter.ToString
::Il2CppString* System::Net::IPv6AddressFormatter::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::IPv6AddressFormatter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.IWebConnectionState
#include "System/Net/IWebConnectionState.hpp"
// Including type: System.Net.WebConnectionGroup
#include "System/Net/WebConnectionGroup.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.IWebConnectionState.get_Group
System::Net::WebConnectionGroup* System::Net::IWebConnectionState::get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::IWebConnectionState::get_Group");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebConnectionGroup*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.IWebConnectionState.TrySetBusy
bool System::Net::IWebConnectionState::TrySetBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::IWebConnectionState::TrySetBusy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySetBusy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.IWebConnectionState.SetIdle
void System::Net::IWebConnectionState::SetIdle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::IWebConnectionState::SetIdle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIdle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.ListenerAsyncResult
#include "System/Net/ListenerAsyncResult.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Net.HttpListenerContext
#include "System/Net/HttpListenerContext.hpp"
// Including type: System.Threading.WaitCallback
#include "System/Threading/WaitCallback.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.WaitCallback InvokeCB
System::Threading::WaitCallback* System::Net::ListenerAsyncResult::_get_InvokeCB() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerAsyncResult::_get_InvokeCB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::WaitCallback*>("System.Net", "ListenerAsyncResult", "InvokeCB"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.WaitCallback InvokeCB
void System::Net::ListenerAsyncResult::_set_InvokeCB(System::Threading::WaitCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerAsyncResult::_set_InvokeCB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ListenerAsyncResult", "InvokeCB", value));
}
// Autogenerated method: System.Net.ListenerAsyncResult.Complete
void System::Net::ListenerAsyncResult::Complete(System::Exception* exc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exc)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, exc);
}
// Autogenerated method: System.Net.ListenerAsyncResult.InvokeCallback
void System::Net::ListenerAsyncResult::InvokeCallback(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerAsyncResult::InvokeCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ListenerAsyncResult", "InvokeCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, o);
}
// Autogenerated method: System.Net.ListenerAsyncResult.Complete
void System::Net::ListenerAsyncResult::Complete(System::Net::HttpListenerContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Net.ListenerAsyncResult.Complete
void System::Net::ListenerAsyncResult::Complete(System::Net::HttpListenerContext* context, bool synch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(synch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, synch);
}
// Autogenerated method: System.Net.ListenerAsyncResult.GetContext
System::Net::HttpListenerContext* System::Net::ListenerAsyncResult::GetContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerAsyncResult::GetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::HttpListenerContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ListenerAsyncResult.get_AsyncState
::Il2CppObject* System::Net::ListenerAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ListenerAsyncResult.get_AsyncWaitHandle
System::Threading::WaitHandle* System::Net::ListenerAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncWaitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ListenerAsyncResult.get_CompletedSynchronously
bool System::Net::ListenerAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ListenerAsyncResult.get_IsCompleted
bool System::Net::ListenerAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerAsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ListenerAsyncResult..cctor
void System::Net::ListenerAsyncResult::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerAsyncResult::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ListenerAsyncResult", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.ListenerPrefix
#include "System/Net/ListenerPrefix.hpp"
// Including type: System.Net.HttpListener
#include "System/Net/HttpListener.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.ListenerPrefix.get_Secure
bool System::Net::ListenerPrefix::get_Secure() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerPrefix::get_Secure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Secure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ListenerPrefix.get_Host
::Il2CppString* System::Net::ListenerPrefix::get_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerPrefix::get_Host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ListenerPrefix.get_Port
int System::Net::ListenerPrefix::get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerPrefix::get_Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ListenerPrefix.get_Path
::Il2CppString* System::Net::ListenerPrefix::get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerPrefix::get_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ListenerPrefix.Parse
void System::Net::ListenerPrefix::Parse(::Il2CppString* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerPrefix::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Net.ListenerPrefix.CheckUri
void System::Net::ListenerPrefix::CheckUri(::Il2CppString* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerPrefix::CheckUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ListenerPrefix", "CheckUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: System.Net.ListenerPrefix.ToString
::Il2CppString* System::Net::ListenerPrefix::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerPrefix::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ListenerPrefix.Equals
bool System::Net::ListenerPrefix::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerPrefix::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Net.ListenerPrefix.GetHashCode
int System::Net::ListenerPrefix::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ListenerPrefix::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.MonoChunkStream
#include "System/Net/MonoChunkStream.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Net.MonoChunkStream/Chunk
#include "System/Net/MonoChunkStream_Chunk.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.MonoChunkStream.ResetBuffer
void System::Net::MonoChunkStream::ResetBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::ResetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.MonoChunkStream.WriteAndReadBack
void System::Net::MonoChunkStream::WriteAndReadBack(::Array<uint8_t>* buffer, int offset, int size, int& read) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::WriteAndReadBack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAndReadBack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(read)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, size, read);
}
// Autogenerated method: System.Net.MonoChunkStream.Read
int System::Net::MonoChunkStream::Read(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.MonoChunkStream.ReadFromChunks
int System::Net::MonoChunkStream::ReadFromChunks(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::ReadFromChunks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadFromChunks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.MonoChunkStream.Write
void System::Net::MonoChunkStream::Write(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.MonoChunkStream.InternalWrite
void System::Net::MonoChunkStream::InternalWrite(::Array<uint8_t>* buffer, int& offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::InternalWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.MonoChunkStream.get_WantMore
bool System::Net::MonoChunkStream::get_WantMore() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::get_WantMore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WantMore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.MonoChunkStream.get_DataAvailable
bool System::Net::MonoChunkStream::get_DataAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::get_DataAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.MonoChunkStream.get_ChunkLeft
int System::Net::MonoChunkStream::get_ChunkLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::get_ChunkLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChunkLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.MonoChunkStream.ReadBody
System::Net::MonoChunkStream::State System::Net::MonoChunkStream::ReadBody(::Array<uint8_t>* buffer, int& offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::ReadBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::MonoChunkStream::State, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.MonoChunkStream.GetChunkSize
System::Net::MonoChunkStream::State System::Net::MonoChunkStream::GetChunkSize(::Array<uint8_t>* buffer, int& offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::GetChunkSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChunkSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::MonoChunkStream::State, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.MonoChunkStream.RemoveChunkExtension
::Il2CppString* System::Net::MonoChunkStream::RemoveChunkExtension(::Il2CppString* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::RemoveChunkExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "MonoChunkStream", "RemoveChunkExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Net.MonoChunkStream.ReadCRLF
System::Net::MonoChunkStream::State System::Net::MonoChunkStream::ReadCRLF(::Array<uint8_t>* buffer, int& offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::ReadCRLF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCRLF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::MonoChunkStream::State, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.MonoChunkStream.ReadTrailer
System::Net::MonoChunkStream::State System::Net::MonoChunkStream::ReadTrailer(::Array<uint8_t>* buffer, int& offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::ReadTrailer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadTrailer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::MonoChunkStream::State, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.MonoChunkStream.ThrowProtocolViolation
void System::Net::MonoChunkStream::ThrowProtocolViolation(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::ThrowProtocolViolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "MonoChunkStream", "ThrowProtocolViolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.MonoChunkStream/State
#include "System/Net/MonoChunkStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.MonoChunkStream/State None
System::Net::MonoChunkStream::State System::Net::MonoChunkStream::State::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::State::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::MonoChunkStream::State>("System.Net", "MonoChunkStream/State", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.MonoChunkStream/State None
void System::Net::MonoChunkStream::State::_set_None(System::Net::MonoChunkStream::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::State::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "MonoChunkStream/State", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.MonoChunkStream/State PartialSize
System::Net::MonoChunkStream::State System::Net::MonoChunkStream::State::_get_PartialSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::State::_get_PartialSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::MonoChunkStream::State>("System.Net", "MonoChunkStream/State", "PartialSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.MonoChunkStream/State PartialSize
void System::Net::MonoChunkStream::State::_set_PartialSize(System::Net::MonoChunkStream::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::State::_set_PartialSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "MonoChunkStream/State", "PartialSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.MonoChunkStream/State Body
System::Net::MonoChunkStream::State System::Net::MonoChunkStream::State::_get_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::State::_get_Body");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::MonoChunkStream::State>("System.Net", "MonoChunkStream/State", "Body"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.MonoChunkStream/State Body
void System::Net::MonoChunkStream::State::_set_Body(System::Net::MonoChunkStream::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::State::_set_Body");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "MonoChunkStream/State", "Body", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.MonoChunkStream/State BodyFinished
System::Net::MonoChunkStream::State System::Net::MonoChunkStream::State::_get_BodyFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::State::_get_BodyFinished");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::MonoChunkStream::State>("System.Net", "MonoChunkStream/State", "BodyFinished"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.MonoChunkStream/State BodyFinished
void System::Net::MonoChunkStream::State::_set_BodyFinished(System::Net::MonoChunkStream::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::State::_set_BodyFinished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "MonoChunkStream/State", "BodyFinished", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.MonoChunkStream/State Trailer
System::Net::MonoChunkStream::State System::Net::MonoChunkStream::State::_get_Trailer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::State::_get_Trailer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::MonoChunkStream::State>("System.Net", "MonoChunkStream/State", "Trailer"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.MonoChunkStream/State Trailer
void System::Net::MonoChunkStream::State::_set_Trailer(System::Net::MonoChunkStream::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::State::_set_Trailer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "MonoChunkStream/State", "Trailer", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.MonoChunkStream/Chunk
#include "System/Net/MonoChunkStream_Chunk.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.MonoChunkStream/Chunk.Read
int System::Net::MonoChunkStream::Chunk::Read(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::MonoChunkStream::Chunk::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NtlmClient
#include "System/Net/NtlmClient.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NtlmClient.Authenticate
System::Net::Authorization* System::Net::NtlmClient::Authenticate(::Il2CppString* challenge, System::Net::WebRequest* webRequest, System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NtlmClient::Authenticate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Authenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge), ::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Authorization*, false>(this, ___internal__method, challenge, webRequest, credentials);
}
// Autogenerated method: System.Net.NtlmClient.PreAuthenticate
System::Net::Authorization* System::Net::NtlmClient::PreAuthenticate(System::Net::WebRequest* webRequest, System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NtlmClient::PreAuthenticate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Authorization*, false>(this, ___internal__method, webRequest, credentials);
}
// Autogenerated method: System.Net.NtlmClient.get_AuthenticationType
::Il2CppString* System::Net::NtlmClient::get_AuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NtlmClient::get_AuthenticationType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthenticationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.RequestStream
#include "System/Net/RequestStream.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.RequestStream.FillFromBuffer
int System::Net::RequestStream::FillFromBuffer(::Array<uint8_t>* buffer, int off, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::RequestStream::FillFromBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillFromBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(off), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, off, count);
}
// Autogenerated method: System.Net.RequestStream.get_CanRead
bool System::Net::RequestStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::RequestStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.RequestStream.get_CanSeek
bool System::Net::RequestStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::RequestStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.RequestStream.get_CanWrite
bool System::Net::RequestStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::RequestStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.RequestStream.get_Length
int64_t System::Net::RequestStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::RequestStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.RequestStream.get_Position
int64_t System::Net::RequestStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::RequestStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.RequestStream.set_Position
void System::Net::RequestStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::RequestStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.RequestStream.Close
void System::Net::RequestStream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::RequestStream::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.RequestStream.Flush
void System::Net::RequestStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::RequestStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.RequestStream.Read
int System::Net::RequestStream::Read(::Array<uint8_t>*& buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::RequestStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Net.RequestStream.BeginRead
System::IAsyncResult* System::Net::RequestStream::BeginRead(::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* cback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::RequestStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, cback, state);
}
// Autogenerated method: System.Net.RequestStream.EndRead
int System::Net::RequestStream::EndRead(System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::RequestStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.RequestStream.Seek
int64_t System::Net::RequestStream::Seek(int64_t offset, System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::RequestStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.Net.RequestStream.SetLength
void System::Net::RequestStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::RequestStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.RequestStream.Write
void System::Net::RequestStream::Write(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::RequestStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Net.RequestStream.BeginWrite
System::IAsyncResult* System::Net::RequestStream::BeginWrite(::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* cback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::RequestStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, cback, state);
}
// Autogenerated method: System.Net.RequestStream.EndWrite
void System::Net::RequestStream::EndWrite(System::IAsyncResult* async_result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::RequestStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(async_result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, async_result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.ResponseStream
#include "System/Net/ResponseStream.hpp"
// Including type: System.Net.HttpListenerResponse
#include "System/Net/HttpListenerResponse.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] crlf
::Array<uint8_t>* System::Net::ResponseStream::_get_crlf() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::_get_crlf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.Net", "ResponseStream", "crlf"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] crlf
void System::Net::ResponseStream::_set_crlf(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::_set_crlf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ResponseStream", "crlf", value));
}
// Autogenerated method: System.Net.ResponseStream.GetHeaders
System::IO::MemoryStream* System::Net::ResponseStream::GetHeaders(bool closing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::GetHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(closing)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::MemoryStream*, false>(this, ___internal__method, closing);
}
// Autogenerated method: System.Net.ResponseStream.GetChunkSizeBytes
::Array<uint8_t>* System::Net::ResponseStream::GetChunkSizeBytes(int size, bool final) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::GetChunkSizeBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ResponseStream", "GetChunkSizeBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(final)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size, final);
}
// Autogenerated method: System.Net.ResponseStream.InternalWrite
void System::Net::ResponseStream::InternalWrite(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::InternalWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Net.ResponseStream.get_CanRead
bool System::Net::ResponseStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ResponseStream.get_CanSeek
bool System::Net::ResponseStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ResponseStream.get_CanWrite
bool System::Net::ResponseStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ResponseStream.get_Length
int64_t System::Net::ResponseStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ResponseStream.get_Position
int64_t System::Net::ResponseStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ResponseStream.set_Position
void System::Net::ResponseStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.ResponseStream.Close
void System::Net::ResponseStream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ResponseStream.Flush
void System::Net::ResponseStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ResponseStream.Write
void System::Net::ResponseStream::Write(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Net.ResponseStream.BeginWrite
System::IAsyncResult* System::Net::ResponseStream::BeginWrite(::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* cback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, cback, state);
}
// Autogenerated method: System.Net.ResponseStream.EndWrite
void System::Net::ResponseStream::EndWrite(System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.ResponseStream.Read
int System::Net::ResponseStream::Read(::Array<uint8_t>*& buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Net.ResponseStream.BeginRead
System::IAsyncResult* System::Net::ResponseStream::BeginRead(::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* cback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, cback, state);
}
// Autogenerated method: System.Net.ResponseStream.EndRead
int System::Net::ResponseStream::EndRead(System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.ResponseStream.Seek
int64_t System::Net::ResponseStream::Seek(int64_t offset, System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.Net.ResponseStream.SetLength
void System::Net::ResponseStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.ResponseStream..cctor
void System::Net::ResponseStream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ResponseStream::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ResponseStream", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.ServicePoint
#include "System/Net/ServicePoint.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Net.IPHostEntry
#include "System/Net/IPHostEntry.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Net.WebConnectionGroup
#include "System/Net/WebConnectionGroup.hpp"
// Including type: System.Net.BindIPEndPoint
#include "System/Net/BindIPEndPoint.hpp"
// Including type: System.Threading.Timer
#include "System/Threading/Timer.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.ServicePoint.get_Address
System::Uri* System::Net::ServicePoint::get_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::get_Address");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Address", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ServicePoint.get_ConnectionLimit
int System::Net::ServicePoint::get_ConnectionLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::get_ConnectionLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConnectionLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ServicePoint.get_ProtocolVersion
System::Version* System::Net::ServicePoint::get_ProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::get_ProtocolVersion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Version*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ServicePoint.set_Expect100Continue
void System::Net::ServicePoint::set_Expect100Continue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::set_Expect100Continue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Expect100Continue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.ServicePoint.get_UseNagleAlgorithm
bool System::Net::ServicePoint::get_UseNagleAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::get_UseNagleAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseNagleAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ServicePoint.set_UseNagleAlgorithm
void System::Net::ServicePoint::set_UseNagleAlgorithm(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::set_UseNagleAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseNagleAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.ServicePoint.get_SendContinue
bool System::Net::ServicePoint::get_SendContinue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::get_SendContinue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SendContinue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ServicePoint.set_SendContinue
void System::Net::ServicePoint::set_SendContinue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::set_SendContinue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendContinue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.ServicePoint.SetTcpKeepAlive
void System::Net::ServicePoint::SetTcpKeepAlive(bool enabled, int keepAliveTime, int keepAliveInterval) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::SetTcpKeepAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTcpKeepAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled), ::il2cpp_utils::ExtractType(keepAliveTime), ::il2cpp_utils::ExtractType(keepAliveInterval)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, enabled, keepAliveTime, keepAliveInterval);
}
// Autogenerated method: System.Net.ServicePoint.KeepAliveSetup
void System::Net::ServicePoint::KeepAliveSetup(System::Net::Sockets::Socket* socket) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::KeepAliveSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeepAliveSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, socket);
}
// Autogenerated method: System.Net.ServicePoint.PutBytes
void System::Net::ServicePoint::PutBytes(::Array<uint8_t>* bytes, uint v, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::PutBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ServicePoint", "PutBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes, v, offset);
}
// Autogenerated method: System.Net.ServicePoint.get_UsesProxy
bool System::Net::ServicePoint::get_UsesProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::get_UsesProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UsesProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ServicePoint.set_UsesProxy
void System::Net::ServicePoint::set_UsesProxy(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::set_UsesProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UsesProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.ServicePoint.get_UseConnect
bool System::Net::ServicePoint::get_UseConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::get_UseConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ServicePoint.set_UseConnect
void System::Net::ServicePoint::set_UseConnect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::set_UseConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.ServicePoint.GetConnectionGroup
System::Net::WebConnectionGroup* System::Net::ServicePoint::GetConnectionGroup(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::GetConnectionGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectionGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebConnectionGroup*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Net.ServicePoint.RemoveConnectionGroup
void System::Net::ServicePoint::RemoveConnectionGroup(System::Net::WebConnectionGroup* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::RemoveConnectionGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveConnectionGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, group);
}
// Autogenerated method: System.Net.ServicePoint.CheckAvailableForRecycling
bool System::Net::ServicePoint::CheckAvailableForRecycling(System::DateTime& outIdleSince) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::CheckAvailableForRecycling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAvailableForRecycling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::DateTime&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, outIdleSince);
}
// Autogenerated method: System.Net.ServicePoint.IdleTimerCallback
void System::Net::ServicePoint::IdleTimerCallback(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::IdleTimerCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IdleTimerCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.ServicePoint.get_HasTimedOut
bool System::Net::ServicePoint::get_HasTimedOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::get_HasTimedOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasTimedOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ServicePoint.get_HostEntry
System::Net::IPHostEntry* System::Net::ServicePoint::get_HostEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::get_HostEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HostEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPHostEntry*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ServicePoint.SetVersion
void System::Net::ServicePoint::SetVersion(System::Version* version) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::SetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, version);
}
// Autogenerated method: System.Net.ServicePoint.SendRequest
System::EventHandler* System::Net::ServicePoint::SendRequest(System::Net::HttpWebRequest* request, ::Il2CppString* groupName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::SendRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(groupName)})));
  return ::il2cpp_utils::RunMethodThrow<System::EventHandler*, false>(this, ___internal__method, request, groupName);
}
// Autogenerated method: System.Net.ServicePoint.CloseConnectionGroup
bool System::Net::ServicePoint::CloseConnectionGroup(::Il2CppString* connectionGroupName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::CloseConnectionGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseConnectionGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionGroupName)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, connectionGroupName);
}
// Autogenerated method: System.Net.ServicePoint.UpdateServerCertificate
void System::Net::ServicePoint::UpdateServerCertificate(System::Security::Cryptography::X509Certificates::X509Certificate* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::UpdateServerCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateServerCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Net.ServicePoint.UpdateClientCertificate
void System::Net::ServicePoint::UpdateClientCertificate(System::Security::Cryptography::X509Certificates::X509Certificate* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::UpdateClientCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateClientCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Net.ServicePoint.CallEndPointDelegate
bool System::Net::ServicePoint::CallEndPointDelegate(System::Net::Sockets::Socket* sock, System::Net::IPEndPoint* remote) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::CallEndPointDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallEndPointDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sock), ::il2cpp_utils::ExtractType(remote)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sock, remote);
}
// Autogenerated method: System.Net.ServicePoint.<GetConnectionGroup>b__66_0
void System::Net::ServicePoint::$GetConnectionGroup$b__66_0(::Il2CppObject* s, System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePoint::<GetConnectionGroup>b__66_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetConnectionGroup>b__66_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.ServicePointManager
#include "System/Net/ServicePointManager.hpp"
// Including type: System.Net.ServicePointManager/SPKey
#include "System/Net/ServicePointManager_SPKey.hpp"
// Including type: System.Collections.Specialized.HybridDictionary
#include "System/Collections/Specialized/HybridDictionary.hpp"
// Including type: System.Net.ICertificatePolicy
#include "System/Net/ICertificatePolicy.hpp"
// Including type: System.Net.ServerCertValidationCallback
#include "System/Net/ServerCertValidationCallback.hpp"
// Including type: System.Net.ServicePoint
#include "System/Net/ServicePoint.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Specialized.HybridDictionary servicePoints
System::Collections::Specialized::HybridDictionary* System::Net::ServicePointManager::_get_servicePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_get_servicePoints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Specialized::HybridDictionary*>("System.Net", "ServicePointManager", "servicePoints"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Specialized.HybridDictionary servicePoints
void System::Net::ServicePointManager::_set_servicePoints(System::Collections::Specialized::HybridDictionary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_set_servicePoints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ServicePointManager", "servicePoints", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.ICertificatePolicy policy
System::Net::ICertificatePolicy* System::Net::ServicePointManager::_get_policy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_get_policy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::ICertificatePolicy*>("System.Net", "ServicePointManager", "policy"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.ICertificatePolicy policy
void System::Net::ServicePointManager::_set_policy(System::Net::ICertificatePolicy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_set_policy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ServicePointManager", "policy", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 defaultConnectionLimit
int System::Net::ServicePointManager::_get_defaultConnectionLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_get_defaultConnectionLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "ServicePointManager", "defaultConnectionLimit"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 defaultConnectionLimit
void System::Net::ServicePointManager::_set_defaultConnectionLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_set_defaultConnectionLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ServicePointManager", "defaultConnectionLimit", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 maxServicePointIdleTime
int System::Net::ServicePointManager::_get_maxServicePointIdleTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_get_maxServicePointIdleTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "ServicePointManager", "maxServicePointIdleTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 maxServicePointIdleTime
void System::Net::ServicePointManager::_set_maxServicePointIdleTime(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_set_maxServicePointIdleTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ServicePointManager", "maxServicePointIdleTime", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 maxServicePoints
int System::Net::ServicePointManager::_get_maxServicePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_get_maxServicePoints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "ServicePointManager", "maxServicePoints"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 maxServicePoints
void System::Net::ServicePointManager::_set_maxServicePoints(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_set_maxServicePoints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ServicePointManager", "maxServicePoints", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 dnsRefreshTimeout
int System::Net::ServicePointManager::_get_dnsRefreshTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_get_dnsRefreshTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "ServicePointManager", "dnsRefreshTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 dnsRefreshTimeout
void System::Net::ServicePointManager::_set_dnsRefreshTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_set_dnsRefreshTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ServicePointManager", "dnsRefreshTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _checkCRL
bool System::Net::ServicePointManager::_get__checkCRL() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_get__checkCRL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Net", "ServicePointManager", "_checkCRL"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _checkCRL
void System::Net::ServicePointManager::_set__checkCRL(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_set__checkCRL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ServicePointManager", "_checkCRL", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.SecurityProtocolType _securityProtocol
System::Net::SecurityProtocolType System::Net::ServicePointManager::_get__securityProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_get__securityProtocol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::SecurityProtocolType>("System.Net", "ServicePointManager", "_securityProtocol"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.SecurityProtocolType _securityProtocol
void System::Net::ServicePointManager::_set__securityProtocol(System::Net::SecurityProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_set__securityProtocol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ServicePointManager", "_securityProtocol", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean expectContinue
bool System::Net::ServicePointManager::_get_expectContinue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_get_expectContinue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Net", "ServicePointManager", "expectContinue"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean expectContinue
void System::Net::ServicePointManager::_set_expectContinue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_set_expectContinue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ServicePointManager", "expectContinue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean useNagle
bool System::Net::ServicePointManager::_get_useNagle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_get_useNagle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Net", "ServicePointManager", "useNagle"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean useNagle
void System::Net::ServicePointManager::_set_useNagle(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_set_useNagle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ServicePointManager", "useNagle", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.ServerCertValidationCallback server_cert_cb
System::Net::ServerCertValidationCallback* System::Net::ServicePointManager::_get_server_cert_cb() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_get_server_cert_cb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::ServerCertValidationCallback*>("System.Net", "ServicePointManager", "server_cert_cb"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.ServerCertValidationCallback server_cert_cb
void System::Net::ServicePointManager::_set_server_cert_cb(System::Net::ServerCertValidationCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_set_server_cert_cb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ServicePointManager", "server_cert_cb", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean tcp_keepalive
bool System::Net::ServicePointManager::_get_tcp_keepalive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_get_tcp_keepalive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Net", "ServicePointManager", "tcp_keepalive"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean tcp_keepalive
void System::Net::ServicePointManager::_set_tcp_keepalive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_set_tcp_keepalive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ServicePointManager", "tcp_keepalive", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 tcp_keepalive_time
int System::Net::ServicePointManager::_get_tcp_keepalive_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_get_tcp_keepalive_time");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "ServicePointManager", "tcp_keepalive_time"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 tcp_keepalive_time
void System::Net::ServicePointManager::_set_tcp_keepalive_time(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_set_tcp_keepalive_time");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ServicePointManager", "tcp_keepalive_time", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 tcp_keepalive_interval
int System::Net::ServicePointManager::_get_tcp_keepalive_interval() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_get_tcp_keepalive_interval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "ServicePointManager", "tcp_keepalive_interval"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 tcp_keepalive_interval
void System::Net::ServicePointManager::_set_tcp_keepalive_interval(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::_set_tcp_keepalive_interval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ServicePointManager", "tcp_keepalive_interval", value));
}
// Autogenerated method: System.Net.ServicePointManager..cctor
void System::Net::ServicePointManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ServicePointManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.ServicePointManager.GetLegacyCertificatePolicy
System::Net::ICertificatePolicy* System::Net::ServicePointManager::GetLegacyCertificatePolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::GetLegacyCertificatePolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ServicePointManager", "GetLegacyCertificatePolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::ICertificatePolicy*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.ServicePointManager.get_CheckCertificateRevocationList
bool System::Net::ServicePointManager::get_CheckCertificateRevocationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::get_CheckCertificateRevocationList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ServicePointManager", "get_CheckCertificateRevocationList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.ServicePointManager.get_DnsRefreshTimeout
int System::Net::ServicePointManager::get_DnsRefreshTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::get_DnsRefreshTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ServicePointManager", "get_DnsRefreshTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.ServicePointManager.get_SecurityProtocol
System::Net::SecurityProtocolType System::Net::ServicePointManager::get_SecurityProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::get_SecurityProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ServicePointManager", "get_SecurityProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::SecurityProtocolType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.ServicePointManager.get_ServerCertValidationCallback
System::Net::ServerCertValidationCallback* System::Net::ServicePointManager::get_ServerCertValidationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::get_ServerCertValidationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ServicePointManager", "get_ServerCertValidationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::ServerCertValidationCallback*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.ServicePointManager.FindServicePoint
System::Net::ServicePoint* System::Net::ServicePointManager::FindServicePoint(System::Uri* address, System::Net::IWebProxy* proxy) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::FindServicePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ServicePointManager", "FindServicePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(proxy)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::ServicePoint*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, address, proxy);
}
// Autogenerated method: System.Net.ServicePointManager.CloseConnectionGroup
void System::Net::ServicePointManager::CloseConnectionGroup(::Il2CppString* connectionGroupName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::CloseConnectionGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ServicePointManager", "CloseConnectionGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionGroupName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connectionGroupName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.ServicePointManager/SPKey
#include "System/Net/ServicePointManager_SPKey.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.ServicePointManager/SPKey.get_UsesProxy
bool System::Net::ServicePointManager::SPKey::get_UsesProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::SPKey::get_UsesProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UsesProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ServicePointManager/SPKey.GetHashCode
int System::Net::ServicePointManager::SPKey::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::SPKey::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ServicePointManager/SPKey.Equals
bool System::Net::ServicePointManager::SPKey::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ServicePointManager::SPKey::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.SimpleAsyncCallback
#include "System/Net/SimpleAsyncCallback.hpp"
// Including type: System.Net.SimpleAsyncResult
#include "System/Net/SimpleAsyncResult.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.SimpleAsyncCallback.Invoke
void System::Net::SimpleAsyncCallback::Invoke(System::Net::SimpleAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: System.Net.SimpleAsyncCallback.BeginInvoke
System::IAsyncResult* System::Net::SimpleAsyncCallback::BeginInvoke(System::Net::SimpleAsyncResult* result, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, result, callback, object);
}
// Autogenerated method: System.Net.SimpleAsyncCallback.EndInvoke
void System::Net::SimpleAsyncCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.SimpleAsyncResult
#include "System/Net/SimpleAsyncResult.hpp"
// Including type: System.Net.SimpleAsyncResult/<>c__DisplayClass9_0
#include "System/Net/SimpleAsyncResult_--c__DisplayClass9_0.hpp"
// Including type: System.Net.SimpleAsyncResult/<>c__DisplayClass11_0
#include "System/Net/SimpleAsyncResult_--c__DisplayClass11_0.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Net.SimpleAsyncCallback
#include "System/Net/SimpleAsyncCallback.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.SimpleAsyncResult.Run
void System::Net::SimpleAsyncResult::Run(System::Func_2<System::Net::SimpleAsyncResult*, bool>* func, System::Net::SimpleAsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "SimpleAsyncResult", "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(func), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, func, callback);
}
// Autogenerated method: System.Net.SimpleAsyncResult.RunWithLock
void System::Net::SimpleAsyncResult::RunWithLock(::Il2CppObject* locker, System::Func_2<System::Net::SimpleAsyncResult*, bool>* func, System::Net::SimpleAsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::RunWithLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "SimpleAsyncResult", "RunWithLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locker), ::il2cpp_utils::ExtractType(func), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, locker, func, callback);
}
// Autogenerated method: System.Net.SimpleAsyncResult.Reset_internal
void System::Net::SimpleAsyncResult::Reset_internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::Reset_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.SimpleAsyncResult.SetCompleted
void System::Net::SimpleAsyncResult::SetCompleted(bool synch, System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::SetCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(synch), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, synch, e);
}
// Autogenerated method: System.Net.SimpleAsyncResult.SetCompleted
void System::Net::SimpleAsyncResult::SetCompleted(bool synch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::SetCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(synch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, synch);
}
// Autogenerated method: System.Net.SimpleAsyncResult.SetCompleted_internal
void System::Net::SimpleAsyncResult::SetCompleted_internal(bool synch, System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::SetCompleted_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompleted_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(synch), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, synch, e);
}
// Autogenerated method: System.Net.SimpleAsyncResult.SetCompleted_internal
void System::Net::SimpleAsyncResult::SetCompleted_internal(bool synch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::SetCompleted_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompleted_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(synch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, synch);
}
// Autogenerated method: System.Net.SimpleAsyncResult.DoCallback_private
void System::Net::SimpleAsyncResult::DoCallback_private() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::DoCallback_private");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoCallback_private", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.SimpleAsyncResult.DoCallback_internal
void System::Net::SimpleAsyncResult::DoCallback_internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::DoCallback_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoCallback_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.SimpleAsyncResult.WaitUntilComplete
void System::Net::SimpleAsyncResult::WaitUntilComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::WaitUntilComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitUntilComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.SimpleAsyncResult.WaitUntilComplete
bool System::Net::SimpleAsyncResult::WaitUntilComplete(int timeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::WaitUntilComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitUntilComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout), ::il2cpp_utils::ExtractType(exitContext)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, timeout, exitContext);
}
// Autogenerated method: System.Net.SimpleAsyncResult.get_AsyncState
::Il2CppObject* System::Net::SimpleAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.SimpleAsyncResult.get_AsyncWaitHandle
System::Threading::WaitHandle* System::Net::SimpleAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncWaitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.SimpleAsyncResult.get_CompletedSynchronously
bool System::Net::SimpleAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.SimpleAsyncResult.get_CompletedSynchronouslyPeek
bool System::Net::SimpleAsyncResult::get_CompletedSynchronouslyPeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::get_CompletedSynchronouslyPeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedSynchronouslyPeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.SimpleAsyncResult.get_IsCompleted
bool System::Net::SimpleAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.SimpleAsyncResult.get_GotException
bool System::Net::SimpleAsyncResult::get_GotException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::get_GotException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GotException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.SimpleAsyncResult.get_Exception
System::Exception* System::Net::SimpleAsyncResult::get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::get_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.SimpleAsyncResult/<>c__DisplayClass9_0
#include "System/Net/SimpleAsyncResult_--c__DisplayClass9_0.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.SimpleAsyncResult/<>c__DisplayClass9_0.<.ctor>b__0
void System::Net::SimpleAsyncResult::$$c__DisplayClass9_0::$_ctor$b__0(System::Net::SimpleAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::$$c__DisplayClass9_0::<.ctor>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.SimpleAsyncResult/<>c__DisplayClass11_0
#include "System/Net/SimpleAsyncResult_--c__DisplayClass11_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Net.SimpleAsyncCallback
#include "System/Net/SimpleAsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.SimpleAsyncResult/<>c__DisplayClass11_0.<RunWithLock>b__0
bool System::Net::SimpleAsyncResult::$$c__DisplayClass11_0::$RunWithLock$b__0(System::Net::SimpleAsyncResult* inner) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::$$c__DisplayClass11_0::<RunWithLock>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RunWithLock>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inner)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, inner);
}
// Autogenerated method: System.Net.SimpleAsyncResult/<>c__DisplayClass11_0.<RunWithLock>b__1
void System::Net::SimpleAsyncResult::$$c__DisplayClass11_0::$RunWithLock$b__1(System::Net::SimpleAsyncResult* inner) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::SimpleAsyncResult::$$c__DisplayClass11_0::<RunWithLock>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RunWithLock>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inner)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inner);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.WebAsyncResult
#include "System/Net/WebAsyncResult.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Net.HttpWebResponse
#include "System/Net/HttpWebResponse.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.WebAsyncResult.Reset
void System::Net::WebAsyncResult::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebAsyncResult::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebAsyncResult.SetCompleted
void System::Net::WebAsyncResult::SetCompleted(bool synch, int nbytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebAsyncResult::SetCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(synch), ::il2cpp_utils::ExtractType(nbytes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, synch, nbytes);
}
// Autogenerated method: System.Net.WebAsyncResult.SetCompleted
void System::Net::WebAsyncResult::SetCompleted(bool synch, System::IO::Stream* writeStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebAsyncResult::SetCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(synch), ::il2cpp_utils::ExtractType(writeStream)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, synch, writeStream);
}
// Autogenerated method: System.Net.WebAsyncResult.SetCompleted
void System::Net::WebAsyncResult::SetCompleted(bool synch, System::Net::HttpWebResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebAsyncResult::SetCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(synch), ::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, synch, response);
}
// Autogenerated method: System.Net.WebAsyncResult.DoCallback
void System::Net::WebAsyncResult::DoCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebAsyncResult::DoCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebAsyncResult.get_NBytes
int System::Net::WebAsyncResult::get_NBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebAsyncResult::get_NBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebAsyncResult.set_NBytes
void System::Net::WebAsyncResult::set_NBytes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebAsyncResult::set_NBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebAsyncResult.get_InnerAsyncResult
System::IAsyncResult* System::Net::WebAsyncResult::get_InnerAsyncResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebAsyncResult::get_InnerAsyncResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InnerAsyncResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebAsyncResult.set_InnerAsyncResult
void System::Net::WebAsyncResult::set_InnerAsyncResult(System::IAsyncResult* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebAsyncResult::set_InnerAsyncResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InnerAsyncResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebAsyncResult.get_WriteStream
System::IO::Stream* System::Net::WebAsyncResult::get_WriteStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebAsyncResult::get_WriteStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebAsyncResult.get_Response
System::Net::HttpWebResponse* System::Net::WebAsyncResult::get_Response() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebAsyncResult::get_Response");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Response", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::HttpWebResponse*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebAsyncResult.get_Buffer
::Array<uint8_t>* System::Net::WebAsyncResult::get_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebAsyncResult::get_Buffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Buffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebAsyncResult.get_Offset
int System::Net::WebAsyncResult::get_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebAsyncResult::get_Offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebAsyncResult.get_Size
int System::Net::WebAsyncResult::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebAsyncResult::get_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.ReadState
#include "System/Net/ReadState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.ReadState None
System::Net::ReadState System::Net::ReadState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ReadState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::ReadState>("System.Net", "ReadState", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ReadState None
void System::Net::ReadState::_set_None(System::Net::ReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ReadState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ReadState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ReadState Status
System::Net::ReadState System::Net::ReadState::_get_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ReadState::_get_Status");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::ReadState>("System.Net", "ReadState", "Status"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ReadState Status
void System::Net::ReadState::_set_Status(System::Net::ReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ReadState::_set_Status");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ReadState", "Status", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ReadState Headers
System::Net::ReadState System::Net::ReadState::_get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ReadState::_get_Headers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::ReadState>("System.Net", "ReadState", "Headers"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ReadState Headers
void System::Net::ReadState::_set_Headers(System::Net::ReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ReadState::_set_Headers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ReadState", "Headers", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ReadState Content
System::Net::ReadState System::Net::ReadState::_get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ReadState::_get_Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::ReadState>("System.Net", "ReadState", "Content"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ReadState Content
void System::Net::ReadState::_set_Content(System::Net::ReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ReadState::_set_Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ReadState", "Content", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ReadState Aborted
System::Net::ReadState System::Net::ReadState::_get_Aborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ReadState::_get_Aborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::ReadState>("System.Net", "ReadState", "Aborted"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ReadState Aborted
void System::Net::ReadState::_set_Aborted(System::Net::ReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::ReadState::_set_Aborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ReadState", "Aborted", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.WebConnection
#include "System/Net/WebConnection.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Net.WebConnection/AbortHelper
#include "System/Net/WebConnection_AbortHelper.hpp"
// Including type: System.Net.ServicePoint
#include "System/Net/ServicePoint.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Net.IWebConnectionState
#include "System/Net/IWebConnectionState.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.Net.WebConnectionData
#include "System/Net/WebConnectionData.hpp"
// Including type: System.Net.MonoChunkStream
#include "System/Net/MonoChunkStream.hpp"
// Including type: System.Collections.Queue
#include "System/Collections/Queue.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Net.NetworkCredential
#include "System/Net/NetworkCredential.hpp"
// Including type: Mono.Net.Security.MonoTlsStream
#include "Mono/Net/Security/MonoTlsStream.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.WebConnection.CanReuse
bool System::Net::WebConnection::CanReuse() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::CanReuse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanReuse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnection.Connect
void System::Net::WebConnection::Connect(System::Net::HttpWebRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: System.Net.WebConnection.CreateTunnel
bool System::Net::WebConnection::CreateTunnel(System::Net::HttpWebRequest* request, System::Uri* connectUri, System::IO::Stream* stream, ::Array<uint8_t>*& buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::CreateTunnel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTunnel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(connectUri), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, request, connectUri, stream, buffer);
}
// Autogenerated method: System.Net.WebConnection.ReadHeaders
System::Net::WebHeaderCollection* System::Net::WebConnection::ReadHeaders(System::IO::Stream* stream, ::Array<uint8_t>*& retBuffer, int& status) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::ReadHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebHeaderCollection*, false>(this, ___internal__method, stream, retBuffer, status);
}
// Autogenerated method: System.Net.WebConnection.FlushContents
void System::Net::WebConnection::FlushContents(System::IO::Stream* stream, int contentLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::FlushContents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushContents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(contentLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stream, contentLength);
}
// Autogenerated method: System.Net.WebConnection.CreateStream
bool System::Net::WebConnection::CreateStream(System::Net::HttpWebRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::CreateStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, request);
}
// Autogenerated method: System.Net.WebConnection.HandleError
void System::Net::WebConnection::HandleError(System::Net::WebExceptionStatus st, System::Exception* e, ::Il2CppString* where) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::HandleError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(where)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, st, e, where);
}
// Autogenerated method: System.Net.WebConnection.ReadDone
void System::Net::WebConnection::ReadDone(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::ReadDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: System.Net.WebConnection.ExpectContent
bool System::Net::WebConnection::ExpectContent(int statusCode, ::Il2CppString* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::ExpectContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebConnection", "ExpectContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(statusCode), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, statusCode, method);
}
// Autogenerated method: System.Net.WebConnection.InitRead
void System::Net::WebConnection::InitRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::InitRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnection.GetResponse
int System::Net::WebConnection::GetResponse(System::Net::WebConnectionData* data, System::Net::ServicePoint* sPoint, ::Array<uint8_t>* buffer, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::GetResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebConnection", "GetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(sPoint), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data, sPoint, buffer, max);
}
// Autogenerated method: System.Net.WebConnection.InitConnection
void System::Net::WebConnection::InitConnection(System::Net::HttpWebRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::InitConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: System.Net.WebConnection.SendRequest
System::EventHandler* System::Net::WebConnection::SendRequest(System::Net::HttpWebRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::SendRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  return ::il2cpp_utils::RunMethodThrow<System::EventHandler*, false>(this, ___internal__method, request);
}
// Autogenerated method: System.Net.WebConnection.SendNext
void System::Net::WebConnection::SendNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::SendNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnection.NextRead
void System::Net::WebConnection::NextRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::NextRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnection.ReadLine
bool System::Net::WebConnection::ReadLine(::Array<uint8_t>* buffer, int& start, int max, ::Il2CppString*& output) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::ReadLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebConnection", "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(max), ::il2cpp_utils::ExtractType(output)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buffer, start, max, output);
}
// Autogenerated method: System.Net.WebConnection.BeginRead
System::IAsyncResult* System::Net::WebConnection::BeginRead(System::Net::HttpWebRequest* request, ::Array<uint8_t>* buffer, int offset, int size, System::AsyncCallback* cb, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::BeginRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, request, buffer, offset, size, cb, state);
}
// Autogenerated method: System.Net.WebConnection.EndRead
int System::Net::WebConnection::EndRead(System::Net::HttpWebRequest* request, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::EndRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, request, result);
}
// Autogenerated method: System.Net.WebConnection.EnsureRead
int System::Net::WebConnection::EnsureRead(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::EnsureRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.WebConnection.CompleteChunkedRead
bool System::Net::WebConnection::CompleteChunkedRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::CompleteChunkedRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteChunkedRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnection.BeginWrite
System::IAsyncResult* System::Net::WebConnection::BeginWrite(System::Net::HttpWebRequest* request, ::Array<uint8_t>* buffer, int offset, int size, System::AsyncCallback* cb, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::BeginWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, request, buffer, offset, size, cb, state);
}
// Autogenerated method: System.Net.WebConnection.EndWrite
bool System::Net::WebConnection::EndWrite(System::Net::HttpWebRequest* request, bool throwOnError, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::EndWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(throwOnError), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, request, throwOnError, result);
}
// Autogenerated method: System.Net.WebConnection.Read
int System::Net::WebConnection::Read(System::Net::HttpWebRequest* request, ::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, request, buffer, offset, size);
}
// Autogenerated method: System.Net.WebConnection.Write
bool System::Net::WebConnection::Write(System::Net::HttpWebRequest* request, ::Array<uint8_t>* buffer, int offset, int size, ::Il2CppString*& err_msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(err_msg)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, request, buffer, offset, size, err_msg);
}
// Autogenerated method: System.Net.WebConnection.Close
void System::Net::WebConnection::Close(bool sendNext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sendNext)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sendNext);
}
// Autogenerated method: System.Net.WebConnection.Abort
void System::Net::WebConnection::Abort(::Il2CppObject* sender, System::EventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::Abort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Abort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sender, args);
}
// Autogenerated method: System.Net.WebConnection.ResetNtlm
void System::Net::WebConnection::ResetNtlm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::ResetNtlm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetNtlm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnection.set_PriorityRequest
void System::Net::WebConnection::set_PriorityRequest(System::Net::HttpWebRequest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::set_PriorityRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PriorityRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebConnection.get_NtlmAuthenticated
bool System::Net::WebConnection::get_NtlmAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::get_NtlmAuthenticated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NtlmAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnection.set_NtlmAuthenticated
void System::Net::WebConnection::set_NtlmAuthenticated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::set_NtlmAuthenticated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NtlmAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebConnection.get_NtlmCredential
System::Net::NetworkCredential* System::Net::WebConnection::get_NtlmCredential() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::get_NtlmCredential");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NtlmCredential", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkCredential*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnection.set_NtlmCredential
void System::Net::WebConnection::set_NtlmCredential(System::Net::NetworkCredential* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::set_NtlmCredential");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NtlmCredential", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebConnection.get_UnsafeAuthenticatedConnectionSharing
bool System::Net::WebConnection::get_UnsafeAuthenticatedConnectionSharing() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::get_UnsafeAuthenticatedConnectionSharing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnsafeAuthenticatedConnectionSharing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnection.set_UnsafeAuthenticatedConnectionSharing
void System::Net::WebConnection::set_UnsafeAuthenticatedConnectionSharing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::set_UnsafeAuthenticatedConnectionSharing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UnsafeAuthenticatedConnectionSharing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebConnection.<SendRequest>b__41_0
void System::Net::WebConnection::$SendRequest$b__41_0(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::<SendRequest>b__41_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SendRequest>b__41_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, o);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.WebConnection/NtlmAuthState
#include "System/Net/WebConnection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.WebConnection/NtlmAuthState None
System::Net::WebConnection::NtlmAuthState System::Net::WebConnection::NtlmAuthState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::NtlmAuthState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::WebConnection::NtlmAuthState>("System.Net", "WebConnection/NtlmAuthState", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebConnection/NtlmAuthState None
void System::Net::WebConnection::NtlmAuthState::_set_None(System::Net::WebConnection::NtlmAuthState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::NtlmAuthState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebConnection/NtlmAuthState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebConnection/NtlmAuthState Challenge
System::Net::WebConnection::NtlmAuthState System::Net::WebConnection::NtlmAuthState::_get_Challenge() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::NtlmAuthState::_get_Challenge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::WebConnection::NtlmAuthState>("System.Net", "WebConnection/NtlmAuthState", "Challenge"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebConnection/NtlmAuthState Challenge
void System::Net::WebConnection::NtlmAuthState::_set_Challenge(System::Net::WebConnection::NtlmAuthState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::NtlmAuthState::_set_Challenge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebConnection/NtlmAuthState", "Challenge", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebConnection/NtlmAuthState Response
System::Net::WebConnection::NtlmAuthState System::Net::WebConnection::NtlmAuthState::_get_Response() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::NtlmAuthState::_get_Response");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::WebConnection::NtlmAuthState>("System.Net", "WebConnection/NtlmAuthState", "Response"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebConnection/NtlmAuthState Response
void System::Net::WebConnection::NtlmAuthState::_set_Response(System::Net::WebConnection::NtlmAuthState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::NtlmAuthState::_set_Response");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebConnection/NtlmAuthState", "Response", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.WebConnection/AbortHelper
#include "System/Net/WebConnection_AbortHelper.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.WebConnection/AbortHelper.Abort
void System::Net::WebConnection::AbortHelper::Abort(::Il2CppObject* sender, System::EventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnection::AbortHelper::Abort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Abort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sender, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.WebConnectionData
#include "System/Net/WebConnectionData.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.WebConnectionData.get_request
System::Net::HttpWebRequest* System::Net::WebConnectionData::get_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionData::get_request");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_request", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::HttpWebRequest*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionData.set_request
void System::Net::WebConnectionData::set_request(System::Net::HttpWebRequest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionData::set_request");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_request", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebConnectionData.get_ReadState
System::Net::ReadState System::Net::WebConnectionData::get_ReadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionData::get_ReadState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::ReadState, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionData.set_ReadState
void System::Net::WebConnectionData::set_ReadState(System::Net::ReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionData::set_ReadState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReadState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.WebConnectionGroup
#include "System/Net/WebConnectionGroup.hpp"
// Including type: System.Net.WebConnectionGroup/ConnectionState
#include "System/Net/WebConnectionGroup_ConnectionState.hpp"
// Including type: System.Net.ServicePoint
#include "System/Net/ServicePoint.hpp"
// Including type: System.Collections.Generic.LinkedList`1
#include "System/Collections/Generic/LinkedList_1.hpp"
// Including type: System.Collections.Queue
#include "System/Collections/Queue.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.Net.WebConnection
#include "System/Net/WebConnection.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.WebConnectionGroup.add_ConnectionClosed
void System::Net::WebConnectionGroup::add_ConnectionClosed(System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionGroup::add_ConnectionClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ConnectionClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebConnectionGroup.remove_ConnectionClosed
void System::Net::WebConnectionGroup::remove_ConnectionClosed(System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionGroup::remove_ConnectionClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ConnectionClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebConnectionGroup.OnConnectionClosed
void System::Net::WebConnectionGroup::OnConnectionClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionGroup::OnConnectionClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnConnectionClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionGroup.Close
void System::Net::WebConnectionGroup::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionGroup::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionGroup.GetConnection
System::Net::WebConnection* System::Net::WebConnectionGroup::GetConnection(System::Net::HttpWebRequest* request, bool& created) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionGroup::GetConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebConnection*, false>(this, ___internal__method, request, created);
}
// Autogenerated method: System.Net.WebConnectionGroup.PrepareSharingNtlm
void System::Net::WebConnectionGroup::PrepareSharingNtlm(System::Net::WebConnection* cnc, System::Net::HttpWebRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionGroup::PrepareSharingNtlm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebConnectionGroup", "PrepareSharingNtlm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cnc), ::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cnc, request);
}
// Autogenerated method: System.Net.WebConnectionGroup.FindIdleConnection
System::Net::WebConnectionGroup::ConnectionState* System::Net::WebConnectionGroup::FindIdleConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionGroup::FindIdleConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindIdleConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebConnectionGroup::ConnectionState*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionGroup.CreateOrReuseConnection
System::Net::WebConnection* System::Net::WebConnectionGroup::CreateOrReuseConnection(System::Net::HttpWebRequest* request, bool& created) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionGroup::CreateOrReuseConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOrReuseConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebConnection*, false>(this, ___internal__method, request, created);
}
// Autogenerated method: System.Net.WebConnectionGroup.get_Name
::Il2CppString* System::Net::WebConnectionGroup::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionGroup::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionGroup.get_Queue
System::Collections::Queue* System::Net::WebConnectionGroup::get_Queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionGroup::get_Queue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Queue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Queue*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionGroup.TryRecycle
bool System::Net::WebConnectionGroup::TryRecycle(System::TimeSpan maxIdleTime, System::DateTime& idleSince) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionGroup::TryRecycle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryRecycle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxIdleTime), ::il2cpp_utils::ExtractType(idleSince)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, maxIdleTime, idleSince);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.WebConnectionGroup/ConnectionState
#include "System/Net/WebConnectionGroup_ConnectionState.hpp"
// Including type: System.Net.WebConnection
#include "System/Net/WebConnection.hpp"
// Including type: System.Net.ServicePoint
#include "System/Net/ServicePoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.WebConnectionGroup/ConnectionState.get_Connection
System::Net::WebConnection* System::Net::WebConnectionGroup::ConnectionState::get_Connection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionGroup::ConnectionState::get_Connection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Connection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebConnection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionGroup/ConnectionState.set_Connection
void System::Net::WebConnectionGroup::ConnectionState::set_Connection(System::Net::WebConnection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionGroup::ConnectionState::set_Connection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Connection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebConnectionGroup/ConnectionState.get_Group
System::Net::WebConnectionGroup* System::Net::WebConnectionGroup::ConnectionState::get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionGroup::ConnectionState::get_Group");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebConnectionGroup*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionGroup/ConnectionState.set_Group
void System::Net::WebConnectionGroup::ConnectionState::set_Group(System::Net::WebConnectionGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionGroup::ConnectionState::set_Group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebConnectionGroup/ConnectionState.get_ServicePoint
System::Net::ServicePoint* System::Net::WebConnectionGroup::ConnectionState::get_ServicePoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionGroup::ConnectionState::get_ServicePoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServicePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::ServicePoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionGroup/ConnectionState.get_Busy
bool System::Net::WebConnectionGroup::ConnectionState::get_Busy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionGroup::ConnectionState::get_Busy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Busy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionGroup/ConnectionState.get_IdleSince
System::DateTime System::Net::WebConnectionGroup::ConnectionState::get_IdleSince() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionGroup::ConnectionState::get_IdleSince");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IdleSince", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionGroup/ConnectionState.TrySetBusy
bool System::Net::WebConnectionGroup::ConnectionState::TrySetBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionGroup::ConnectionState::TrySetBusy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySetBusy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionGroup/ConnectionState.SetIdle
void System::Net::WebConnectionGroup::ConnectionState::SetIdle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionGroup::ConnectionState::SetIdle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIdle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.WebConnectionStream
#include "System/Net/WebConnectionStream.hpp"
// Including type: System.Net.WebConnectionStream/<>c__DisplayClass75_0
#include "System/Net/WebConnectionStream_--c__DisplayClass75_0.hpp"
// Including type: System.Net.WebConnectionStream/<>c__DisplayClass76_0
#include "System/Net/WebConnectionStream_--c__DisplayClass76_0.hpp"
// Including type: System.Net.WebConnectionStream/<>c__DisplayClass80_0
#include "System/Net/WebConnectionStream_--c__DisplayClass80_0.hpp"
// Including type: System.Net.WebConnection
#include "System/Net/WebConnection.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Net.WebConnectionData
#include "System/Net/WebConnectionData.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Net.SimpleAsyncCallback
#include "System/Net/SimpleAsyncCallback.hpp"
// Including type: System.Net.SimpleAsyncResult
#include "System/Net/SimpleAsyncResult.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] crlf
::Array<uint8_t>* System::Net::WebConnectionStream::_get_crlf() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::_get_crlf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.Net", "WebConnectionStream", "crlf"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] crlf
void System::Net::WebConnectionStream::_set_crlf(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::_set_crlf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebConnectionStream", "crlf", value));
}
// Autogenerated method: System.Net.WebConnectionStream.CheckAuthHeader
bool System::Net::WebConnectionStream::CheckAuthHeader(::Il2CppString* headerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::CheckAuthHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAuthHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headerName)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, headerName);
}
// Autogenerated method: System.Net.WebConnectionStream.IsNtlmAuth
bool System::Net::WebConnectionStream::IsNtlmAuth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::IsNtlmAuth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsNtlmAuth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.CheckResponseInBuffer
void System::Net::WebConnectionStream::CheckResponseInBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::CheckResponseInBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckResponseInBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.get_Connection
System::Net::WebConnection* System::Net::WebConnectionStream::get_Connection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::get_Connection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Connection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebConnection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.get_CompleteRequestWritten
bool System::Net::WebConnectionStream::get_CompleteRequestWritten() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::get_CompleteRequestWritten");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompleteRequestWritten", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.set_SendChunked
void System::Net::WebConnectionStream::set_SendChunked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::set_SendChunked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendChunked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebConnectionStream.set_ReadBuffer
void System::Net::WebConnectionStream::set_ReadBuffer(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::set_ReadBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReadBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebConnectionStream.set_ReadBufferOffset
void System::Net::WebConnectionStream::set_ReadBufferOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::set_ReadBufferOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReadBufferOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebConnectionStream.set_ReadBufferSize
void System::Net::WebConnectionStream::set_ReadBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::set_ReadBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReadBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebConnectionStream.get_WriteBuffer
::Array<uint8_t>* System::Net::WebConnectionStream::get_WriteBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::get_WriteBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.get_WriteBufferLength
int System::Net::WebConnectionStream::get_WriteBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::get_WriteBufferLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteBufferLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.ForceCompletion
void System::Net::WebConnectionStream::ForceCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::ForceCompletion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.CheckComplete
void System::Net::WebConnectionStream::CheckComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::CheckComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.ReadAll
void System::Net::WebConnectionStream::ReadAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::ReadAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.WriteCallbackWrapper
void System::Net::WebConnectionStream::WriteCallbackWrapper(System::IAsyncResult* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::WriteCallbackWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCallbackWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, r);
}
// Autogenerated method: System.Net.WebConnectionStream.ReadCallbackWrapper
void System::Net::WebConnectionStream::ReadCallbackWrapper(System::IAsyncResult* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::ReadCallbackWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCallbackWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, r);
}
// Autogenerated method: System.Net.WebConnectionStream.WriteAsyncCB
void System::Net::WebConnectionStream::WriteAsyncCB(System::IAsyncResult* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::WriteAsyncCB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsyncCB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, r);
}
// Autogenerated method: System.Net.WebConnectionStream.CheckWriteOverflow
void System::Net::WebConnectionStream::CheckWriteOverflow(int64_t contentLength, int64_t totalWritten, int64_t size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::CheckWriteOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckWriteOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentLength), ::il2cpp_utils::ExtractType(totalWritten), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, contentLength, totalWritten, size);
}
// Autogenerated method: System.Net.WebConnectionStream.SetHeadersAsync
void System::Net::WebConnectionStream::SetHeadersAsync(bool setInternalLength, System::Net::SimpleAsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::SetHeadersAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHeadersAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(setInternalLength), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, setInternalLength, callback);
}
// Autogenerated method: System.Net.WebConnectionStream.SetHeadersAsync
bool System::Net::WebConnectionStream::SetHeadersAsync(System::Net::SimpleAsyncResult* result, bool setInternalLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::SetHeadersAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHeadersAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(setInternalLength)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result, setInternalLength);
}
// Autogenerated method: System.Net.WebConnectionStream.get_RequestWritten
bool System::Net::WebConnectionStream::get_RequestWritten() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::get_RequestWritten");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestWritten", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.WriteRequestAsync
bool System::Net::WebConnectionStream::WriteRequestAsync(System::Net::SimpleAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::WriteRequestAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRequestAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated method: System.Net.WebConnectionStream.InternalClose
void System::Net::WebConnectionStream::InternalClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::InternalClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.get_GetResponseOnClose
bool System::Net::WebConnectionStream::get_GetResponseOnClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::get_GetResponseOnClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GetResponseOnClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.KillBuffer
void System::Net::WebConnectionStream::KillBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::KillBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KillBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.get_ReadTimeout
int System::Net::WebConnectionStream::get_ReadTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::get_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.get_WriteTimeout
int System::Net::WebConnectionStream::get_WriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::get_WriteTimeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.Read
int System::Net::WebConnectionStream::Read(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.WebConnectionStream.BeginRead
System::IAsyncResult* System::Net::WebConnectionStream::BeginRead(::Array<uint8_t>* buffer, int offset, int size, System::AsyncCallback* cb, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, cb, state);
}
// Autogenerated method: System.Net.WebConnectionStream.EndRead
int System::Net::WebConnectionStream::EndRead(System::IAsyncResult* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, r);
}
// Autogenerated method: System.Net.WebConnectionStream.BeginWrite
System::IAsyncResult* System::Net::WebConnectionStream::BeginWrite(::Array<uint8_t>* buffer, int offset, int size, System::AsyncCallback* cb, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, cb, state);
}
// Autogenerated method: System.Net.WebConnectionStream.EndWrite
void System::Net::WebConnectionStream::EndWrite(System::IAsyncResult* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, r);
}
// Autogenerated method: System.Net.WebConnectionStream.Write
void System::Net::WebConnectionStream::Write(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.WebConnectionStream.Flush
void System::Net::WebConnectionStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.Close
void System::Net::WebConnectionStream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.Seek
int64_t System::Net::WebConnectionStream::Seek(int64_t a, System::IO::SeekOrigin b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Net.WebConnectionStream.SetLength
void System::Net::WebConnectionStream::SetLength(int64_t a) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a);
}
// Autogenerated method: System.Net.WebConnectionStream.get_CanSeek
bool System::Net::WebConnectionStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.get_CanRead
bool System::Net::WebConnectionStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.get_CanWrite
bool System::Net::WebConnectionStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.get_Length
int64_t System::Net::WebConnectionStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.get_Position
int64_t System::Net::WebConnectionStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebConnectionStream.set_Position
void System::Net::WebConnectionStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebConnectionStream..cctor
void System::Net::WebConnectionStream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebConnectionStream", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.WebConnectionStream/<>c__DisplayClass75_0
#include "System/Net/WebConnectionStream_--c__DisplayClass75_0.hpp"
// Including type: System.Net.SimpleAsyncResult
#include "System/Net/SimpleAsyncResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.WebConnectionStream/<>c__DisplayClass75_0.<SetHeadersAsync>b__0
bool System::Net::WebConnectionStream::$$c__DisplayClass75_0::$SetHeadersAsync$b__0(System::Net::SimpleAsyncResult* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::$$c__DisplayClass75_0::<SetHeadersAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetHeadersAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, r);
}
