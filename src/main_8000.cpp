// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.VREvent_t_Packed
#include "Valve/VR/VREvent_t_Packed.hpp"
// Including type: Valve.VR.VREvent_t
#include "Valve/VR/VREvent_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 eventType
uint& Valve::VR::VREvent_t_Packed::dyn_eventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VREvent_t_Packed::dyn_eventType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventType"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 trackedDeviceIndex
uint& Valve::VR::VREvent_t_Packed::dyn_trackedDeviceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VREvent_t_Packed::dyn_trackedDeviceIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedDeviceIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single eventAgeSeconds
float& Valve::VR::VREvent_t_Packed::dyn_eventAgeSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VREvent_t_Packed::dyn_eventAgeSeconds");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventAgeSeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Valve.VR.VREvent_Data_t data
Valve::VR::VREvent_Data_t& Valve::VR::VREvent_t_Packed::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VREvent_t_Packed::dyn_data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<Valve::VR::VREvent_Data_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.VREvent_t_Packed..ctor
Valve::VR::VREvent_t_Packed::VREvent_t_Packed(Valve::VR::VREvent_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VREvent_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: Valve.VR.VREvent_t_Packed.Unpack
void Valve::VR::VREvent_t_Packed::Unpack(ByRef<Valve::VR::VREvent_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VREvent_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.VRControllerState_t_Packed
#include "Valve/VR/VRControllerState_t_Packed.hpp"
// Including type: Valve.VR.VRControllerState_t
#include "Valve/VR/VRControllerState_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 unPacketNum
uint& Valve::VR::VRControllerState_t_Packed::dyn_unPacketNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRControllerState_t_Packed::dyn_unPacketNum");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unPacketNum"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 ulButtonPressed
uint64_t& Valve::VR::VRControllerState_t_Packed::dyn_ulButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRControllerState_t_Packed::dyn_ulButtonPressed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ulButtonPressed"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 ulButtonTouched
uint64_t& Valve::VR::VRControllerState_t_Packed::dyn_ulButtonTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRControllerState_t_Packed::dyn_ulButtonTouched");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ulButtonTouched"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Valve.VR.VRControllerAxis_t rAxis0
Valve::VR::VRControllerAxis_t& Valve::VR::VRControllerState_t_Packed::dyn_rAxis0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRControllerState_t_Packed::dyn_rAxis0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis0"))->offset;
  return *reinterpret_cast<Valve::VR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Valve.VR.VRControllerAxis_t rAxis1
Valve::VR::VRControllerAxis_t& Valve::VR::VRControllerState_t_Packed::dyn_rAxis1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRControllerState_t_Packed::dyn_rAxis1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis1"))->offset;
  return *reinterpret_cast<Valve::VR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Valve.VR.VRControllerAxis_t rAxis2
Valve::VR::VRControllerAxis_t& Valve::VR::VRControllerState_t_Packed::dyn_rAxis2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRControllerState_t_Packed::dyn_rAxis2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis2"))->offset;
  return *reinterpret_cast<Valve::VR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Valve.VR.VRControllerAxis_t rAxis3
Valve::VR::VRControllerAxis_t& Valve::VR::VRControllerState_t_Packed::dyn_rAxis3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRControllerState_t_Packed::dyn_rAxis3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis3"))->offset;
  return *reinterpret_cast<Valve::VR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Valve.VR.VRControllerAxis_t rAxis4
Valve::VR::VRControllerAxis_t& Valve::VR::VRControllerState_t_Packed::dyn_rAxis4() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRControllerState_t_Packed::dyn_rAxis4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis4"))->offset;
  return *reinterpret_cast<Valve::VR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.VRControllerState_t_Packed..ctor
Valve::VR::VRControllerState_t_Packed::VRControllerState_t_Packed(Valve::VR::VRControllerState_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRControllerState_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: Valve.VR.VRControllerState_t_Packed.Unpack
void Valve::VR::VRControllerState_t_Packed::Unpack(ByRef<Valve::VR::VRControllerState_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRControllerState_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.RenderModel_TextureMap_t_Packed
#include "Valve/VR/RenderModel_TextureMap_t_Packed.hpp"
// Including type: Valve.VR.RenderModel_TextureMap_t
#include "Valve/VR/RenderModel_TextureMap_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Char unWidth
::Il2CppChar& Valve::VR::RenderModel_TextureMap_t_Packed::dyn_unWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_TextureMap_t_Packed::dyn_unWidth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unWidth"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Char unHeight
::Il2CppChar& Valve::VR::RenderModel_TextureMap_t_Packed::dyn_unHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_TextureMap_t_Packed::dyn_unHeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unHeight"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr rubTextureMapData
System::IntPtr& Valve::VR::RenderModel_TextureMap_t_Packed::dyn_rubTextureMapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_TextureMap_t_Packed::dyn_rubTextureMapData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rubTextureMapData"))->offset;
  return *reinterpret_cast<System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.RenderModel_TextureMap_t_Packed..ctor
Valve::VR::RenderModel_TextureMap_t_Packed::RenderModel_TextureMap_t_Packed(Valve::VR::RenderModel_TextureMap_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_TextureMap_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: Valve.VR.RenderModel_TextureMap_t_Packed.Unpack
void Valve::VR::RenderModel_TextureMap_t_Packed::Unpack(ByRef<Valve::VR::RenderModel_TextureMap_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_TextureMap_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.RenderModel_t_Packed
#include "Valve/VR/RenderModel_t_Packed.hpp"
// Including type: Valve.VR.RenderModel_t
#include "Valve/VR/RenderModel_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr rVertexData
System::IntPtr& Valve::VR::RenderModel_t_Packed::dyn_rVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_t_Packed::dyn_rVertexData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rVertexData"))->offset;
  return *reinterpret_cast<System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 unVertexCount
uint& Valve::VR::RenderModel_t_Packed::dyn_unVertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_t_Packed::dyn_unVertexCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unVertexCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr rIndexData
System::IntPtr& Valve::VR::RenderModel_t_Packed::dyn_rIndexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_t_Packed::dyn_rIndexData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rIndexData"))->offset;
  return *reinterpret_cast<System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 unTriangleCount
uint& Valve::VR::RenderModel_t_Packed::dyn_unTriangleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_t_Packed::dyn_unTriangleCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unTriangleCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 diffuseTextureId
int& Valve::VR::RenderModel_t_Packed::dyn_diffuseTextureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_t_Packed::dyn_diffuseTextureId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "diffuseTextureId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.RenderModel_t_Packed..ctor
Valve::VR::RenderModel_t_Packed::RenderModel_t_Packed(Valve::VR::RenderModel_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: Valve.VR.RenderModel_t_Packed.Unpack
void Valve::VR::RenderModel_t_Packed::Unpack(ByRef<Valve::VR::RenderModel_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.OpenVR
#include "Valve/VR/OpenVR.hpp"
// Including type: Valve.VR.OpenVR/Valve.VR.COpenVRContext
#include "Valve/VR/OpenVR_COpenVRContext.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Valve.VR.CVRSystem
#include "Valve/VR/CVRSystem.hpp"
// Including type: Valve.VR.CVRChaperone
#include "Valve/VR/CVRChaperone.hpp"
// Including type: Valve.VR.CVRChaperoneSetup
#include "Valve/VR/CVRChaperoneSetup.hpp"
// Including type: Valve.VR.CVRCompositor
#include "Valve/VR/CVRCompositor.hpp"
// Including type: Valve.VR.CVROverlay
#include "Valve/VR/CVROverlay.hpp"
// Including type: Valve.VR.CVRRenderModels
#include "Valve/VR/CVRRenderModels.hpp"
// Including type: Valve.VR.CVRExtendedDisplay
#include "Valve/VR/CVRExtendedDisplay.hpp"
// Including type: Valve.VR.CVRSettings
#include "Valve/VR/CVRSettings.hpp"
// Including type: Valve.VR.CVRApplications
#include "Valve/VR/CVRApplications.hpp"
// Including type: Valve.VR.CVRScreenshots
#include "Valve/VR/CVRScreenshots.hpp"
// Including type: Valve.VR.CVRTrackedCamera
#include "Valve/VR/CVRTrackedCamera.hpp"
// Including type: Valve.VR.EVRInitError
#include "Valve/VR/EVRInitError.hpp"
// Including type: Valve.VR.EVRApplicationType
#include "Valve/VR/EVRApplicationType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_nDriverNone
uint Valve::VR::OpenVR::_get_k_nDriverNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_nDriverNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_nDriverNone"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_nDriverNone
void Valve::VR::OpenVR::_set_k_nDriverNone(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_nDriverNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_nDriverNone", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxDriverDebugResponseSize
uint Valve::VR::OpenVR::_get_k_unMaxDriverDebugResponseSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unMaxDriverDebugResponseSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unMaxDriverDebugResponseSize"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxDriverDebugResponseSize
void Valve::VR::OpenVR::_set_k_unMaxDriverDebugResponseSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unMaxDriverDebugResponseSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unMaxDriverDebugResponseSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unTrackedDeviceIndex_Hmd
uint Valve::VR::OpenVR::_get_k_unTrackedDeviceIndex_Hmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unTrackedDeviceIndex_Hmd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unTrackedDeviceIndex_Hmd"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unTrackedDeviceIndex_Hmd
void Valve::VR::OpenVR::_set_k_unTrackedDeviceIndex_Hmd(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unTrackedDeviceIndex_Hmd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unTrackedDeviceIndex_Hmd", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxTrackedDeviceCount
uint Valve::VR::OpenVR::_get_k_unMaxTrackedDeviceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unMaxTrackedDeviceCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unMaxTrackedDeviceCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxTrackedDeviceCount
void Valve::VR::OpenVR::_set_k_unMaxTrackedDeviceCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unMaxTrackedDeviceCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unMaxTrackedDeviceCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unTrackedDeviceIndexOther
uint Valve::VR::OpenVR::_get_k_unTrackedDeviceIndexOther() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unTrackedDeviceIndexOther");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unTrackedDeviceIndexOther"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unTrackedDeviceIndexOther
void Valve::VR::OpenVR::_set_k_unTrackedDeviceIndexOther(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unTrackedDeviceIndexOther");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unTrackedDeviceIndexOther", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unTrackedDeviceIndexInvalid
uint Valve::VR::OpenVR::_get_k_unTrackedDeviceIndexInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unTrackedDeviceIndexInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unTrackedDeviceIndexInvalid"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unTrackedDeviceIndexInvalid
void Valve::VR::OpenVR::_set_k_unTrackedDeviceIndexInvalid(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unTrackedDeviceIndexInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unTrackedDeviceIndexInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidPropertyContainer
uint64_t Valve::VR::OpenVR::_get_k_ulInvalidPropertyContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_ulInvalidPropertyContainer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("Valve.VR", "OpenVR", "k_ulInvalidPropertyContainer"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidPropertyContainer
void Valve::VR::OpenVR::_set_k_ulInvalidPropertyContainer(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_ulInvalidPropertyContainer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_ulInvalidPropertyContainer", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unInvalidPropertyTag
uint Valve::VR::OpenVR::_get_k_unInvalidPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unInvalidPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unInvalidPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unInvalidPropertyTag
void Valve::VR::OpenVR::_set_k_unInvalidPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unInvalidPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unInvalidPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unFloatPropertyTag
uint Valve::VR::OpenVR::_get_k_unFloatPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unFloatPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unFloatPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unFloatPropertyTag
void Valve::VR::OpenVR::_set_k_unFloatPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unFloatPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unFloatPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unInt32PropertyTag
uint Valve::VR::OpenVR::_get_k_unInt32PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unInt32PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unInt32PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unInt32PropertyTag
void Valve::VR::OpenVR::_set_k_unInt32PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unInt32PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unInt32PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unUint64PropertyTag
uint Valve::VR::OpenVR::_get_k_unUint64PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unUint64PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unUint64PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unUint64PropertyTag
void Valve::VR::OpenVR::_set_k_unUint64PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unUint64PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unUint64PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unBoolPropertyTag
uint Valve::VR::OpenVR::_get_k_unBoolPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unBoolPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unBoolPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unBoolPropertyTag
void Valve::VR::OpenVR::_set_k_unBoolPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unBoolPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unBoolPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unStringPropertyTag
uint Valve::VR::OpenVR::_get_k_unStringPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unStringPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unStringPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unStringPropertyTag
void Valve::VR::OpenVR::_set_k_unStringPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unStringPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unStringPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdMatrix34PropertyTag
uint Valve::VR::OpenVR::_get_k_unHmdMatrix34PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unHmdMatrix34PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unHmdMatrix34PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdMatrix34PropertyTag
void Valve::VR::OpenVR::_set_k_unHmdMatrix34PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unHmdMatrix34PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unHmdMatrix34PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdMatrix44PropertyTag
uint Valve::VR::OpenVR::_get_k_unHmdMatrix44PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unHmdMatrix44PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unHmdMatrix44PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdMatrix44PropertyTag
void Valve::VR::OpenVR::_set_k_unHmdMatrix44PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unHmdMatrix44PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unHmdMatrix44PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdVector3PropertyTag
uint Valve::VR::OpenVR::_get_k_unHmdVector3PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unHmdVector3PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unHmdVector3PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdVector3PropertyTag
void Valve::VR::OpenVR::_set_k_unHmdVector3PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unHmdVector3PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unHmdVector3PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdVector4PropertyTag
uint Valve::VR::OpenVR::_get_k_unHmdVector4PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unHmdVector4PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unHmdVector4PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdVector4PropertyTag
void Valve::VR::OpenVR::_set_k_unHmdVector4PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unHmdVector4PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unHmdVector4PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHiddenAreaPropertyTag
uint Valve::VR::OpenVR::_get_k_unHiddenAreaPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unHiddenAreaPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unHiddenAreaPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHiddenAreaPropertyTag
void Valve::VR::OpenVR::_set_k_unHiddenAreaPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unHiddenAreaPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unHiddenAreaPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unPathHandleInfoTag
uint Valve::VR::OpenVR::_get_k_unPathHandleInfoTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unPathHandleInfoTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unPathHandleInfoTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unPathHandleInfoTag
void Valve::VR::OpenVR::_set_k_unPathHandleInfoTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unPathHandleInfoTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unPathHandleInfoTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unActionPropertyTag
uint Valve::VR::OpenVR::_get_k_unActionPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unActionPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unActionPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unActionPropertyTag
void Valve::VR::OpenVR::_set_k_unActionPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unActionPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unActionPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unInputValuePropertyTag
uint Valve::VR::OpenVR::_get_k_unInputValuePropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unInputValuePropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unInputValuePropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unInputValuePropertyTag
void Valve::VR::OpenVR::_set_k_unInputValuePropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unInputValuePropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unInputValuePropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unWildcardPropertyTag
uint Valve::VR::OpenVR::_get_k_unWildcardPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unWildcardPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unWildcardPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unWildcardPropertyTag
void Valve::VR::OpenVR::_set_k_unWildcardPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unWildcardPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unWildcardPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHapticVibrationPropertyTag
uint Valve::VR::OpenVR::_get_k_unHapticVibrationPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unHapticVibrationPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unHapticVibrationPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHapticVibrationPropertyTag
void Valve::VR::OpenVR::_set_k_unHapticVibrationPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unHapticVibrationPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unHapticVibrationPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unOpenVRInternalReserved_Start
uint Valve::VR::OpenVR::_get_k_unOpenVRInternalReserved_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unOpenVRInternalReserved_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unOpenVRInternalReserved_Start"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unOpenVRInternalReserved_Start
void Valve::VR::OpenVR::_set_k_unOpenVRInternalReserved_Start(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unOpenVRInternalReserved_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unOpenVRInternalReserved_Start", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unOpenVRInternalReserved_End
uint Valve::VR::OpenVR::_get_k_unOpenVRInternalReserved_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unOpenVRInternalReserved_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unOpenVRInternalReserved_End"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unOpenVRInternalReserved_End
void Valve::VR::OpenVR::_set_k_unOpenVRInternalReserved_End(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unOpenVRInternalReserved_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unOpenVRInternalReserved_End", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxPropertyStringSize
uint Valve::VR::OpenVR::_get_k_unMaxPropertyStringSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unMaxPropertyStringSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unMaxPropertyStringSize"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxPropertyStringSize
void Valve::VR::OpenVR::_set_k_unMaxPropertyStringSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unMaxPropertyStringSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unMaxPropertyStringSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unControllerStateAxisCount
uint Valve::VR::OpenVR::_get_k_unControllerStateAxisCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unControllerStateAxisCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unControllerStateAxisCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unControllerStateAxisCount
void Valve::VR::OpenVR::_set_k_unControllerStateAxisCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unControllerStateAxisCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unControllerStateAxisCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulOverlayHandleInvalid
uint64_t Valve::VR::OpenVR::_get_k_ulOverlayHandleInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_ulOverlayHandleInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("Valve.VR", "OpenVR", "k_ulOverlayHandleInvalid"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulOverlayHandleInvalid
void Valve::VR::OpenVR::_set_k_ulOverlayHandleInvalid(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_ulOverlayHandleInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_ulOverlayHandleInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unScreenshotHandleInvalid
uint Valve::VR::OpenVR::_get_k_unScreenshotHandleInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unScreenshotHandleInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unScreenshotHandleInvalid"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unScreenshotHandleInvalid
void Valve::VR::OpenVR::_set_k_unScreenshotHandleInvalid(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unScreenshotHandleInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unScreenshotHandleInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRSystem_Version
::StringW Valve::VR::OpenVR::_get_IVRSystem_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRSystem_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRSystem_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRSystem_Version
void Valve::VR::OpenVR::_set_IVRSystem_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRSystem_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRSystem_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRExtendedDisplay_Version
::StringW Valve::VR::OpenVR::_get_IVRExtendedDisplay_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRExtendedDisplay_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRExtendedDisplay_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRExtendedDisplay_Version
void Valve::VR::OpenVR::_set_IVRExtendedDisplay_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRExtendedDisplay_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRExtendedDisplay_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRTrackedCamera_Version
::StringW Valve::VR::OpenVR::_get_IVRTrackedCamera_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRTrackedCamera_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRTrackedCamera_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRTrackedCamera_Version
void Valve::VR::OpenVR::_set_IVRTrackedCamera_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRTrackedCamera_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRTrackedCamera_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxApplicationKeyLength
uint Valve::VR::OpenVR::_get_k_unMaxApplicationKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unMaxApplicationKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unMaxApplicationKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxApplicationKeyLength
void Valve::VR::OpenVR::_set_k_unMaxApplicationKeyLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unMaxApplicationKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unMaxApplicationKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_MimeType_HomeApp
::StringW Valve::VR::OpenVR::_get_k_pch_MimeType_HomeApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_MimeType_HomeApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_MimeType_HomeApp"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_MimeType_HomeApp
void Valve::VR::OpenVR::_set_k_pch_MimeType_HomeApp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_MimeType_HomeApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_MimeType_HomeApp", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_MimeType_GameTheater
::StringW Valve::VR::OpenVR::_get_k_pch_MimeType_GameTheater() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_MimeType_GameTheater");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_MimeType_GameTheater"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_MimeType_GameTheater
void Valve::VR::OpenVR::_set_k_pch_MimeType_GameTheater(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_MimeType_GameTheater");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_MimeType_GameTheater", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRApplications_Version
::StringW Valve::VR::OpenVR::_get_IVRApplications_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRApplications_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRApplications_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRApplications_Version
void Valve::VR::OpenVR::_set_IVRApplications_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRApplications_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRApplications_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRChaperone_Version
::StringW Valve::VR::OpenVR::_get_IVRChaperone_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRChaperone_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRChaperone_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRChaperone_Version
void Valve::VR::OpenVR::_set_IVRChaperone_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRChaperone_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRChaperone_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRChaperoneSetup_Version
::StringW Valve::VR::OpenVR::_get_IVRChaperoneSetup_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRChaperoneSetup_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRChaperoneSetup_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRChaperoneSetup_Version
void Valve::VR::OpenVR::_set_IVRChaperoneSetup_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRChaperoneSetup_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRChaperoneSetup_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRCompositor_Version
::StringW Valve::VR::OpenVR::_get_IVRCompositor_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRCompositor_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRCompositor_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRCompositor_Version
void Valve::VR::OpenVR::_set_IVRCompositor_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRCompositor_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRCompositor_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unVROverlayMaxKeyLength
uint Valve::VR::OpenVR::_get_k_unVROverlayMaxKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unVROverlayMaxKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unVROverlayMaxKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unVROverlayMaxKeyLength
void Valve::VR::OpenVR::_set_k_unVROverlayMaxKeyLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unVROverlayMaxKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unVROverlayMaxKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unVROverlayMaxNameLength
uint Valve::VR::OpenVR::_get_k_unVROverlayMaxNameLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unVROverlayMaxNameLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unVROverlayMaxNameLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unVROverlayMaxNameLength
void Valve::VR::OpenVR::_set_k_unVROverlayMaxNameLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unVROverlayMaxNameLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unVROverlayMaxNameLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxOverlayCount
uint Valve::VR::OpenVR::_get_k_unMaxOverlayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unMaxOverlayCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unMaxOverlayCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxOverlayCount
void Valve::VR::OpenVR::_set_k_unMaxOverlayCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unMaxOverlayCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unMaxOverlayCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxOverlayIntersectionMaskPrimitivesCount
uint Valve::VR::OpenVR::_get_k_unMaxOverlayIntersectionMaskPrimitivesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unMaxOverlayIntersectionMaskPrimitivesCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unMaxOverlayIntersectionMaskPrimitivesCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxOverlayIntersectionMaskPrimitivesCount
void Valve::VR::OpenVR::_set_k_unMaxOverlayIntersectionMaskPrimitivesCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unMaxOverlayIntersectionMaskPrimitivesCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unMaxOverlayIntersectionMaskPrimitivesCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVROverlay_Version
::StringW Valve::VR::OpenVR::_get_IVROverlay_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVROverlay_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVROverlay_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVROverlay_Version
void Valve::VR::OpenVR::_set_IVROverlay_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVROverlay_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVROverlay_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_GDC2015
::StringW Valve::VR::OpenVR::_get_k_pch_Controller_Component_GDC2015() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Controller_Component_GDC2015");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Controller_Component_GDC2015"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_GDC2015
void Valve::VR::OpenVR::_set_k_pch_Controller_Component_GDC2015(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Controller_Component_GDC2015");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Controller_Component_GDC2015", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_Base
::StringW Valve::VR::OpenVR::_get_k_pch_Controller_Component_Base() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Controller_Component_Base");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Controller_Component_Base"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_Base
void Valve::VR::OpenVR::_set_k_pch_Controller_Component_Base(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Controller_Component_Base");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Controller_Component_Base", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_Tip
::StringW Valve::VR::OpenVR::_get_k_pch_Controller_Component_Tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Controller_Component_Tip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Controller_Component_Tip"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_Tip
void Valve::VR::OpenVR::_set_k_pch_Controller_Component_Tip(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Controller_Component_Tip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Controller_Component_Tip", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_HandGrip
::StringW Valve::VR::OpenVR::_get_k_pch_Controller_Component_HandGrip() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Controller_Component_HandGrip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Controller_Component_HandGrip"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_HandGrip
void Valve::VR::OpenVR::_set_k_pch_Controller_Component_HandGrip(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Controller_Component_HandGrip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Controller_Component_HandGrip", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_Status
::StringW Valve::VR::OpenVR::_get_k_pch_Controller_Component_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Controller_Component_Status");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Controller_Component_Status"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_Status
void Valve::VR::OpenVR::_set_k_pch_Controller_Component_Status(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Controller_Component_Status");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Controller_Component_Status", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRRenderModels_Version
::StringW Valve::VR::OpenVR::_get_IVRRenderModels_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRRenderModels_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRRenderModels_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRRenderModels_Version
void Valve::VR::OpenVR::_set_IVRRenderModels_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRRenderModels_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRRenderModels_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unNotificationTextMaxSize
uint Valve::VR::OpenVR::_get_k_unNotificationTextMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unNotificationTextMaxSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unNotificationTextMaxSize"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unNotificationTextMaxSize
void Valve::VR::OpenVR::_set_k_unNotificationTextMaxSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unNotificationTextMaxSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unNotificationTextMaxSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRNotifications_Version
::StringW Valve::VR::OpenVR::_get_IVRNotifications_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRNotifications_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRNotifications_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRNotifications_Version
void Valve::VR::OpenVR::_set_IVRNotifications_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRNotifications_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRNotifications_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxSettingsKeyLength
uint Valve::VR::OpenVR::_get_k_unMaxSettingsKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unMaxSettingsKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unMaxSettingsKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxSettingsKeyLength
void Valve::VR::OpenVR::_set_k_unMaxSettingsKeyLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unMaxSettingsKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unMaxSettingsKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRSettings_Version
::StringW Valve::VR::OpenVR::_get_IVRSettings_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRSettings_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRSettings_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRSettings_Version
void Valve::VR::OpenVR::_set_IVRSettings_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRSettings_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRSettings_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_Section
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_Section
void Valve::VR::OpenVR::_set_k_pch_SteamVR_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_RequireHmd_String
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_RequireHmd_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_RequireHmd_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_RequireHmd_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_RequireHmd_String
void Valve::VR::OpenVR::_set_k_pch_SteamVR_RequireHmd_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_RequireHmd_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_RequireHmd_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForcedDriverKey_String
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_ForcedDriverKey_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_ForcedDriverKey_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_ForcedDriverKey_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForcedDriverKey_String
void Valve::VR::OpenVR::_set_k_pch_SteamVR_ForcedDriverKey_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_ForcedDriverKey_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_ForcedDriverKey_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForcedHmdKey_String
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_ForcedHmdKey_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_ForcedHmdKey_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_ForcedHmdKey_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForcedHmdKey_String
void Valve::VR::OpenVR::_set_k_pch_SteamVR_ForcedHmdKey_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_ForcedHmdKey_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_ForcedHmdKey_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DisplayDebug_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_DisplayDebug_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_DisplayDebug_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_DisplayDebug_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DisplayDebug_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_DisplayDebug_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_DisplayDebug_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_DisplayDebug_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DebugProcessPipe_String
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_DebugProcessPipe_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_DebugProcessPipe_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_DebugProcessPipe_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DebugProcessPipe_String
void Valve::VR::OpenVR::_set_k_pch_SteamVR_DebugProcessPipe_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_DebugProcessPipe_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_DebugProcessPipe_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DisplayDebugX_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_DisplayDebugX_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_DisplayDebugX_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_DisplayDebugX_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DisplayDebugX_Int32
void Valve::VR::OpenVR::_set_k_pch_SteamVR_DisplayDebugX_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_DisplayDebugX_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_DisplayDebugX_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DisplayDebugY_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_DisplayDebugY_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_DisplayDebugY_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_DisplayDebugY_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DisplayDebugY_Int32
void Valve::VR::OpenVR::_set_k_pch_SteamVR_DisplayDebugY_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_DisplayDebugY_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_DisplayDebugY_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SendSystemButtonToAllApps_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_SendSystemButtonToAllApps_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_SendSystemButtonToAllApps_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_SendSystemButtonToAllApps_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SendSystemButtonToAllApps_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_SendSystemButtonToAllApps_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_SendSystemButtonToAllApps_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_SendSystemButtonToAllApps_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_LogLevel_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_LogLevel_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_LogLevel_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_LogLevel_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_LogLevel_Int32
void Valve::VR::OpenVR::_set_k_pch_SteamVR_LogLevel_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_LogLevel_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_LogLevel_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_IPD_Float
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_IPD_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_IPD_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_IPD_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_IPD_Float
void Valve::VR::OpenVR::_set_k_pch_SteamVR_IPD_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_IPD_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_IPD_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_Background_String
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_Background_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_Background_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_Background_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_Background_String
void Valve::VR::OpenVR::_set_k_pch_SteamVR_Background_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_Background_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_Background_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BackgroundUseDomeProjection_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_BackgroundUseDomeProjection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_BackgroundUseDomeProjection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_BackgroundUseDomeProjection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BackgroundUseDomeProjection_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_BackgroundUseDomeProjection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_BackgroundUseDomeProjection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_BackgroundUseDomeProjection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BackgroundCameraHeight_Float
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_BackgroundCameraHeight_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_BackgroundCameraHeight_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_BackgroundCameraHeight_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BackgroundCameraHeight_Float
void Valve::VR::OpenVR::_set_k_pch_SteamVR_BackgroundCameraHeight_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_BackgroundCameraHeight_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_BackgroundCameraHeight_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BackgroundDomeRadius_Float
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_BackgroundDomeRadius_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_BackgroundDomeRadius_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_BackgroundDomeRadius_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BackgroundDomeRadius_Float
void Valve::VR::OpenVR::_set_k_pch_SteamVR_BackgroundDomeRadius_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_BackgroundDomeRadius_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_BackgroundDomeRadius_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_GridColor_String
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_GridColor_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_GridColor_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_GridColor_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_GridColor_String
void Valve::VR::OpenVR::_set_k_pch_SteamVR_GridColor_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_GridColor_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_GridColor_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_PlayAreaColor_String
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_PlayAreaColor_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_PlayAreaColor_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_PlayAreaColor_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_PlayAreaColor_String
void Valve::VR::OpenVR::_set_k_pch_SteamVR_PlayAreaColor_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_PlayAreaColor_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_PlayAreaColor_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ShowStage_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_ShowStage_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_ShowStage_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_ShowStage_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ShowStage_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_ShowStage_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_ShowStage_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_ShowStage_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ActivateMultipleDrivers_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_ActivateMultipleDrivers_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_ActivateMultipleDrivers_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_ActivateMultipleDrivers_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ActivateMultipleDrivers_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_ActivateMultipleDrivers_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_ActivateMultipleDrivers_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_ActivateMultipleDrivers_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DirectMode_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_DirectMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_DirectMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_DirectMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DirectMode_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_DirectMode_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_DirectMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_DirectMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DirectModeEdidVid_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidVid_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidVid_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_DirectModeEdidVid_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DirectModeEdidVid_Int32
void Valve::VR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidVid_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidVid_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_DirectModeEdidVid_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DirectModeEdidPid_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidPid_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidPid_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_DirectModeEdidPid_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DirectModeEdidPid_Int32
void Valve::VR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidPid_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidPid_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_DirectModeEdidPid_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_UsingSpeakers_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_UsingSpeakers_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_UsingSpeakers_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_UsingSpeakers_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_UsingSpeakers_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_UsingSpeakers_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_UsingSpeakers_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_UsingSpeakers_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float
void Valve::VR::OpenVR::_set_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BaseStationPowerManagement_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_BaseStationPowerManagement_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_BaseStationPowerManagement_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_BaseStationPowerManagement_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BaseStationPowerManagement_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_BaseStationPowerManagement_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_BaseStationPowerManagement_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_BaseStationPowerManagement_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_NeverKillProcesses_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_NeverKillProcesses_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_NeverKillProcesses_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_NeverKillProcesses_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_NeverKillProcesses_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_NeverKillProcesses_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_NeverKillProcesses_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_NeverKillProcesses_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SupersampleScale_Float
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_SupersampleScale_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_SupersampleScale_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_SupersampleScale_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SupersampleScale_Float
void Valve::VR::OpenVR::_set_k_pch_SteamVR_SupersampleScale_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_SupersampleScale_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_SupersampleScale_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowAsyncReprojection_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_AllowAsyncReprojection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_AllowAsyncReprojection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_AllowAsyncReprojection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowAsyncReprojection_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_AllowAsyncReprojection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_AllowAsyncReprojection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_AllowAsyncReprojection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowReprojection_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_AllowReprojection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_AllowReprojection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_AllowReprojection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowReprojection_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_AllowReprojection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_AllowReprojection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_AllowReprojection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForceReprojection_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_ForceReprojection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_ForceReprojection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_ForceReprojection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForceReprojection_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_ForceReprojection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_ForceReprojection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_ForceReprojection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForceFadeOnBadTracking_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_ForceFadeOnBadTracking_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_ForceFadeOnBadTracking_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_ForceFadeOnBadTracking_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForceFadeOnBadTracking_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_ForceFadeOnBadTracking_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_ForceFadeOnBadTracking_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_ForceFadeOnBadTracking_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DefaultMirrorView_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_DefaultMirrorView_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_DefaultMirrorView_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_DefaultMirrorView_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DefaultMirrorView_Int32
void Valve::VR::OpenVR::_set_k_pch_SteamVR_DefaultMirrorView_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_DefaultMirrorView_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_DefaultMirrorView_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ShowMirrorView_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_ShowMirrorView_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_ShowMirrorView_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_ShowMirrorView_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ShowMirrorView_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_ShowMirrorView_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_ShowMirrorView_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_ShowMirrorView_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_MirrorViewGeometry_String
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_MirrorViewGeometry_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_MirrorViewGeometry_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_MirrorViewGeometry_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_MirrorViewGeometry_String
void Valve::VR::OpenVR::_set_k_pch_SteamVR_MirrorViewGeometry_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_MirrorViewGeometry_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_MirrorViewGeometry_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartMonitorFromAppLaunch
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_StartMonitorFromAppLaunch() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_StartMonitorFromAppLaunch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_StartMonitorFromAppLaunch"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartMonitorFromAppLaunch
void Valve::VR::OpenVR::_set_k_pch_SteamVR_StartMonitorFromAppLaunch(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_StartMonitorFromAppLaunch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_StartMonitorFromAppLaunch", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartCompositorFromAppLaunch_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_StartCompositorFromAppLaunch_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartCompositorFromAppLaunch_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_StartCompositorFromAppLaunch_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartDashboardFromAppLaunch_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_StartDashboardFromAppLaunch_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartDashboardFromAppLaunch_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_StartDashboardFromAppLaunch_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_EnableHomeApp
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_EnableHomeApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_EnableHomeApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_EnableHomeApp"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_EnableHomeApp
void Valve::VR::OpenVR::_set_k_pch_SteamVR_EnableHomeApp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_EnableHomeApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_EnableHomeApp", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32
void Valve::VR::OpenVR::_set_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_RetailDemo_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_RetailDemo_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_RetailDemo_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_RetailDemo_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_RetailDemo_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_RetailDemo_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_RetailDemo_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_RetailDemo_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_IpdOffset_Float
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_IpdOffset_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_IpdOffset_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_IpdOffset_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_IpdOffset_Float
void Valve::VR::OpenVR::_set_k_pch_SteamVR_IpdOffset_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_IpdOffset_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_IpdOffset_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowSupersampleFiltering_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_AllowSupersampleFiltering_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_AllowSupersampleFiltering_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_AllowSupersampleFiltering_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowSupersampleFiltering_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_AllowSupersampleFiltering_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_AllowSupersampleFiltering_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_AllowSupersampleFiltering_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_EnableLinuxVulkanAsync_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_EnableLinuxVulkanAsync_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_EnableLinuxVulkanAsync_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_EnableLinuxVulkanAsync_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowDisplayLockedMode_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_AllowDisplayLockedMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_AllowDisplayLockedMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_AllowDisplayLockedMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowDisplayLockedMode_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_AllowDisplayLockedMode_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_AllowDisplayLockedMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_AllowDisplayLockedMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForceWindows32bitVRMonitor
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_ForceWindows32bitVRMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_ForceWindows32bitVRMonitor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_ForceWindows32bitVRMonitor"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForceWindows32bitVRMonitor
void Valve::VR::OpenVR::_set_k_pch_SteamVR_ForceWindows32bitVRMonitor(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_ForceWindows32bitVRMonitor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_ForceWindows32bitVRMonitor", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_Section
::StringW Valve::VR::OpenVR::_get_k_pch_Lighthouse_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Lighthouse_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Lighthouse_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_Section
void Valve::VR::OpenVR::_set_k_pch_Lighthouse_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Lighthouse_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Lighthouse_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DisableIMU_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Lighthouse_DisableIMU_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Lighthouse_DisableIMU_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Lighthouse_DisableIMU_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DisableIMU_Bool
void Valve::VR::OpenVR::_set_k_pch_Lighthouse_DisableIMU_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Lighthouse_DisableIMU_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Lighthouse_DisableIMU_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DisableIMUExceptHMD_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Lighthouse_DisableIMUExceptHMD_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Lighthouse_DisableIMUExceptHMD_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Lighthouse_DisableIMUExceptHMD_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DisableIMUExceptHMD_Bool
void Valve::VR::OpenVR::_set_k_pch_Lighthouse_DisableIMUExceptHMD_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Lighthouse_DisableIMUExceptHMD_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Lighthouse_DisableIMUExceptHMD_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_UseDisambiguation_String
::StringW Valve::VR::OpenVR::_get_k_pch_Lighthouse_UseDisambiguation_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Lighthouse_UseDisambiguation_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Lighthouse_UseDisambiguation_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_UseDisambiguation_String
void Valve::VR::OpenVR::_set_k_pch_Lighthouse_UseDisambiguation_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Lighthouse_UseDisambiguation_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Lighthouse_UseDisambiguation_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DisambiguationDebug_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Lighthouse_DisambiguationDebug_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Lighthouse_DisambiguationDebug_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Lighthouse_DisambiguationDebug_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DisambiguationDebug_Int32
void Valve::VR::OpenVR::_set_k_pch_Lighthouse_DisambiguationDebug_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Lighthouse_DisambiguationDebug_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Lighthouse_DisambiguationDebug_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_PrimaryBasestation_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Lighthouse_PrimaryBasestation_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Lighthouse_PrimaryBasestation_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Lighthouse_PrimaryBasestation_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_PrimaryBasestation_Int32
void Valve::VR::OpenVR::_set_k_pch_Lighthouse_PrimaryBasestation_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Lighthouse_PrimaryBasestation_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Lighthouse_PrimaryBasestation_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DBHistory_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Lighthouse_DBHistory_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Lighthouse_DBHistory_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Lighthouse_DBHistory_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DBHistory_Bool
void Valve::VR::OpenVR::_set_k_pch_Lighthouse_DBHistory_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Lighthouse_DBHistory_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Lighthouse_DBHistory_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_EnableBluetooth_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Lighthouse_EnableBluetooth_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Lighthouse_EnableBluetooth_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Lighthouse_EnableBluetooth_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_EnableBluetooth_Bool
void Valve::VR::OpenVR::_set_k_pch_Lighthouse_EnableBluetooth_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Lighthouse_EnableBluetooth_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Lighthouse_EnableBluetooth_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_Section
::StringW Valve::VR::OpenVR::_get_k_pch_Null_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_Section
void Valve::VR::OpenVR::_set_k_pch_Null_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_SerialNumber_String
::StringW Valve::VR::OpenVR::_get_k_pch_Null_SerialNumber_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_SerialNumber_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_SerialNumber_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_SerialNumber_String
void Valve::VR::OpenVR::_set_k_pch_Null_SerialNumber_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_SerialNumber_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_SerialNumber_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_ModelNumber_String
::StringW Valve::VR::OpenVR::_get_k_pch_Null_ModelNumber_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_ModelNumber_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_ModelNumber_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_ModelNumber_String
void Valve::VR::OpenVR::_set_k_pch_Null_ModelNumber_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_ModelNumber_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_ModelNumber_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowX_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Null_WindowX_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_WindowX_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_WindowX_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowX_Int32
void Valve::VR::OpenVR::_set_k_pch_Null_WindowX_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_WindowX_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_WindowX_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowY_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Null_WindowY_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_WindowY_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_WindowY_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowY_Int32
void Valve::VR::OpenVR::_set_k_pch_Null_WindowY_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_WindowY_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_WindowY_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowWidth_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Null_WindowWidth_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_WindowWidth_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_WindowWidth_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowWidth_Int32
void Valve::VR::OpenVR::_set_k_pch_Null_WindowWidth_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_WindowWidth_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_WindowWidth_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowHeight_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Null_WindowHeight_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_WindowHeight_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_WindowHeight_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowHeight_Int32
void Valve::VR::OpenVR::_set_k_pch_Null_WindowHeight_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_WindowHeight_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_WindowHeight_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_RenderWidth_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Null_RenderWidth_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_RenderWidth_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_RenderWidth_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_RenderWidth_Int32
void Valve::VR::OpenVR::_set_k_pch_Null_RenderWidth_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_RenderWidth_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_RenderWidth_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_RenderHeight_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Null_RenderHeight_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_RenderHeight_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_RenderHeight_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_RenderHeight_Int32
void Valve::VR::OpenVR::_set_k_pch_Null_RenderHeight_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_RenderHeight_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_RenderHeight_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_SecondsFromVsyncToPhotons_Float
::StringW Valve::VR::OpenVR::_get_k_pch_Null_SecondsFromVsyncToPhotons_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_SecondsFromVsyncToPhotons_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_SecondsFromVsyncToPhotons_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_SecondsFromVsyncToPhotons_Float
void Valve::VR::OpenVR::_set_k_pch_Null_SecondsFromVsyncToPhotons_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_SecondsFromVsyncToPhotons_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_SecondsFromVsyncToPhotons_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_DisplayFrequency_Float
::StringW Valve::VR::OpenVR::_get_k_pch_Null_DisplayFrequency_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_DisplayFrequency_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_DisplayFrequency_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_DisplayFrequency_Float
void Valve::VR::OpenVR::_set_k_pch_Null_DisplayFrequency_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_DisplayFrequency_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_DisplayFrequency_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_Section
::StringW Valve::VR::OpenVR::_get_k_pch_UserInterface_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_UserInterface_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_UserInterface_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_Section
void Valve::VR::OpenVR::_set_k_pch_UserInterface_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_UserInterface_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_UserInterface_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_StatusAlwaysOnTop_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_UserInterface_StatusAlwaysOnTop_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_UserInterface_StatusAlwaysOnTop_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_UserInterface_StatusAlwaysOnTop_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_StatusAlwaysOnTop_Bool
void Valve::VR::OpenVR::_set_k_pch_UserInterface_StatusAlwaysOnTop_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_UserInterface_StatusAlwaysOnTop_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_UserInterface_StatusAlwaysOnTop_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_MinimizeToTray_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_UserInterface_MinimizeToTray_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_UserInterface_MinimizeToTray_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_UserInterface_MinimizeToTray_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_MinimizeToTray_Bool
void Valve::VR::OpenVR::_set_k_pch_UserInterface_MinimizeToTray_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_UserInterface_MinimizeToTray_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_UserInterface_MinimizeToTray_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_Screenshots_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_UserInterface_Screenshots_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_UserInterface_Screenshots_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_UserInterface_Screenshots_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_Screenshots_Bool
void Valve::VR::OpenVR::_set_k_pch_UserInterface_Screenshots_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_UserInterface_Screenshots_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_UserInterface_Screenshots_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_ScreenshotType_Int
::StringW Valve::VR::OpenVR::_get_k_pch_UserInterface_ScreenshotType_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_UserInterface_ScreenshotType_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_UserInterface_ScreenshotType_Int"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_ScreenshotType_Int
void Valve::VR::OpenVR::_set_k_pch_UserInterface_ScreenshotType_Int(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_UserInterface_ScreenshotType_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_UserInterface_ScreenshotType_Int", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Notifications_Section
::StringW Valve::VR::OpenVR::_get_k_pch_Notifications_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Notifications_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Notifications_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Notifications_Section
void Valve::VR::OpenVR::_set_k_pch_Notifications_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Notifications_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Notifications_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Notifications_DoNotDisturb_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Notifications_DoNotDisturb_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Notifications_DoNotDisturb_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Notifications_DoNotDisturb_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Notifications_DoNotDisturb_Bool
void Valve::VR::OpenVR::_set_k_pch_Notifications_DoNotDisturb_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Notifications_DoNotDisturb_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Notifications_DoNotDisturb_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_Section
::StringW Valve::VR::OpenVR::_get_k_pch_Keyboard_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Keyboard_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Keyboard_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_Section
void Valve::VR::OpenVR::_set_k_pch_Keyboard_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Keyboard_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Keyboard_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_TutorialCompletions
::StringW Valve::VR::OpenVR::_get_k_pch_Keyboard_TutorialCompletions() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Keyboard_TutorialCompletions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Keyboard_TutorialCompletions"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_TutorialCompletions
void Valve::VR::OpenVR::_set_k_pch_Keyboard_TutorialCompletions(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Keyboard_TutorialCompletions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Keyboard_TutorialCompletions", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_ScaleX
::StringW Valve::VR::OpenVR::_get_k_pch_Keyboard_ScaleX() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Keyboard_ScaleX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Keyboard_ScaleX"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_ScaleX
void Valve::VR::OpenVR::_set_k_pch_Keyboard_ScaleX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Keyboard_ScaleX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Keyboard_ScaleX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_ScaleY
::StringW Valve::VR::OpenVR::_get_k_pch_Keyboard_ScaleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Keyboard_ScaleY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Keyboard_ScaleY"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_ScaleY
void Valve::VR::OpenVR::_set_k_pch_Keyboard_ScaleY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Keyboard_ScaleY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Keyboard_ScaleY", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_OffsetLeftX
::StringW Valve::VR::OpenVR::_get_k_pch_Keyboard_OffsetLeftX() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Keyboard_OffsetLeftX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Keyboard_OffsetLeftX"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_OffsetLeftX
void Valve::VR::OpenVR::_set_k_pch_Keyboard_OffsetLeftX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Keyboard_OffsetLeftX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Keyboard_OffsetLeftX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_OffsetRightX
::StringW Valve::VR::OpenVR::_get_k_pch_Keyboard_OffsetRightX() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Keyboard_OffsetRightX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Keyboard_OffsetRightX"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_OffsetRightX
void Valve::VR::OpenVR::_set_k_pch_Keyboard_OffsetRightX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Keyboard_OffsetRightX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Keyboard_OffsetRightX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_OffsetY
::StringW Valve::VR::OpenVR::_get_k_pch_Keyboard_OffsetY() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Keyboard_OffsetY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Keyboard_OffsetY"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_OffsetY
void Valve::VR::OpenVR::_set_k_pch_Keyboard_OffsetY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Keyboard_OffsetY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Keyboard_OffsetY", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_Smoothing
::StringW Valve::VR::OpenVR::_get_k_pch_Keyboard_Smoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Keyboard_Smoothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Keyboard_Smoothing"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_Smoothing
void Valve::VR::OpenVR::_set_k_pch_Keyboard_Smoothing(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Keyboard_Smoothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Keyboard_Smoothing", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_Section
::StringW Valve::VR::OpenVR::_get_k_pch_Perf_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Perf_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Perf_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_Section
void Valve::VR::OpenVR::_set_k_pch_Perf_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Perf_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Perf_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_HeuristicActive_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Perf_HeuristicActive_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Perf_HeuristicActive_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Perf_HeuristicActive_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_HeuristicActive_Bool
void Valve::VR::OpenVR::_set_k_pch_Perf_HeuristicActive_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Perf_HeuristicActive_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Perf_HeuristicActive_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_NotifyInHMD_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Perf_NotifyInHMD_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Perf_NotifyInHMD_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Perf_NotifyInHMD_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_NotifyInHMD_Bool
void Valve::VR::OpenVR::_set_k_pch_Perf_NotifyInHMD_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Perf_NotifyInHMD_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Perf_NotifyInHMD_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_NotifyOnlyOnce_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Perf_NotifyOnlyOnce_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Perf_NotifyOnlyOnce_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Perf_NotifyOnlyOnce_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_NotifyOnlyOnce_Bool
void Valve::VR::OpenVR::_set_k_pch_Perf_NotifyOnlyOnce_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Perf_NotifyOnlyOnce_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Perf_NotifyOnlyOnce_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_AllowTimingStore_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Perf_AllowTimingStore_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Perf_AllowTimingStore_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Perf_AllowTimingStore_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_AllowTimingStore_Bool
void Valve::VR::OpenVR::_set_k_pch_Perf_AllowTimingStore_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Perf_AllowTimingStore_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Perf_AllowTimingStore_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_SaveTimingsOnExit_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Perf_SaveTimingsOnExit_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Perf_SaveTimingsOnExit_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Perf_SaveTimingsOnExit_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_SaveTimingsOnExit_Bool
void Valve::VR::OpenVR::_set_k_pch_Perf_SaveTimingsOnExit_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Perf_SaveTimingsOnExit_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Perf_SaveTimingsOnExit_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_TestData_Float
::StringW Valve::VR::OpenVR::_get_k_pch_Perf_TestData_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Perf_TestData_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Perf_TestData_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_TestData_Float
void Valve::VR::OpenVR::_set_k_pch_Perf_TestData_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Perf_TestData_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Perf_TestData_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_LinuxGPUProfiling_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Perf_LinuxGPUProfiling_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Perf_LinuxGPUProfiling_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Perf_LinuxGPUProfiling_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_LinuxGPUProfiling_Bool
void Valve::VR::OpenVR::_set_k_pch_Perf_LinuxGPUProfiling_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Perf_LinuxGPUProfiling_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Perf_LinuxGPUProfiling_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_Section
::StringW Valve::VR::OpenVR::_get_k_pch_CollisionBounds_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_CollisionBounds_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_CollisionBounds_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_Section
void Valve::VR::OpenVR::_set_k_pch_CollisionBounds_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_CollisionBounds_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_CollisionBounds_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_Style_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_CollisionBounds_Style_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_CollisionBounds_Style_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_CollisionBounds_Style_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_Style_Int32
void Valve::VR::OpenVR::_set_k_pch_CollisionBounds_Style_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_CollisionBounds_Style_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_CollisionBounds_Style_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_GroundPerimeterOn_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_CollisionBounds_GroundPerimeterOn_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_CollisionBounds_GroundPerimeterOn_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_CollisionBounds_GroundPerimeterOn_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_GroundPerimeterOn_Bool
void Valve::VR::OpenVR::_set_k_pch_CollisionBounds_GroundPerimeterOn_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_CollisionBounds_GroundPerimeterOn_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_CollisionBounds_GroundPerimeterOn_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_CenterMarkerOn_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_CollisionBounds_CenterMarkerOn_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_CollisionBounds_CenterMarkerOn_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_CollisionBounds_CenterMarkerOn_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_CenterMarkerOn_Bool
void Valve::VR::OpenVR::_set_k_pch_CollisionBounds_CenterMarkerOn_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_CollisionBounds_CenterMarkerOn_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_CollisionBounds_CenterMarkerOn_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_PlaySpaceOn_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_CollisionBounds_PlaySpaceOn_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_CollisionBounds_PlaySpaceOn_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_CollisionBounds_PlaySpaceOn_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_PlaySpaceOn_Bool
void Valve::VR::OpenVR::_set_k_pch_CollisionBounds_PlaySpaceOn_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_CollisionBounds_PlaySpaceOn_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_CollisionBounds_PlaySpaceOn_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_FadeDistance_Float
::StringW Valve::VR::OpenVR::_get_k_pch_CollisionBounds_FadeDistance_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_CollisionBounds_FadeDistance_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_CollisionBounds_FadeDistance_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_FadeDistance_Float
void Valve::VR::OpenVR::_set_k_pch_CollisionBounds_FadeDistance_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_CollisionBounds_FadeDistance_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_CollisionBounds_FadeDistance_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaR_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaR_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaR_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_CollisionBounds_ColorGammaR_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaR_Int32
void Valve::VR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaR_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaR_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_CollisionBounds_ColorGammaR_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaG_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaG_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaG_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_CollisionBounds_ColorGammaG_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaG_Int32
void Valve::VR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaG_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaG_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_CollisionBounds_ColorGammaG_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaB_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaB_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaB_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_CollisionBounds_ColorGammaB_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaB_Int32
void Valve::VR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaB_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaB_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_CollisionBounds_ColorGammaB_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaA_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaA_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaA_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_CollisionBounds_ColorGammaA_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaA_Int32
void Valve::VR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaA_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaA_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_CollisionBounds_ColorGammaA_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_Section
::StringW Valve::VR::OpenVR::_get_k_pch_Camera_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Camera_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Camera_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_Section
void Valve::VR::OpenVR::_set_k_pch_Camera_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Camera_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Camera_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCamera_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Camera_EnableCamera_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Camera_EnableCamera_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Camera_EnableCamera_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCamera_Bool
void Valve::VR::OpenVR::_set_k_pch_Camera_EnableCamera_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Camera_EnableCamera_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Camera_EnableCamera_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCameraInDashboard_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Camera_EnableCameraInDashboard_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Camera_EnableCameraInDashboard_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Camera_EnableCameraInDashboard_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCameraInDashboard_Bool
void Valve::VR::OpenVR::_set_k_pch_Camera_EnableCameraInDashboard_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Camera_EnableCameraInDashboard_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Camera_EnableCameraInDashboard_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCameraForCollisionBounds_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Camera_EnableCameraForCollisionBounds_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Camera_EnableCameraForCollisionBounds_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Camera_EnableCameraForCollisionBounds_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCameraForCollisionBounds_Bool
void Valve::VR::OpenVR::_set_k_pch_Camera_EnableCameraForCollisionBounds_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Camera_EnableCameraForCollisionBounds_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Camera_EnableCameraForCollisionBounds_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCameraForRoomView_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Camera_EnableCameraForRoomView_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Camera_EnableCameraForRoomView_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Camera_EnableCameraForRoomView_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCameraForRoomView_Bool
void Valve::VR::OpenVR::_set_k_pch_Camera_EnableCameraForRoomView_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Camera_EnableCameraForRoomView_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Camera_EnableCameraForRoomView_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaR_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Camera_BoundsColorGammaR_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Camera_BoundsColorGammaR_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Camera_BoundsColorGammaR_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaR_Int32
void Valve::VR::OpenVR::_set_k_pch_Camera_BoundsColorGammaR_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Camera_BoundsColorGammaR_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Camera_BoundsColorGammaR_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaG_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Camera_BoundsColorGammaG_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Camera_BoundsColorGammaG_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Camera_BoundsColorGammaG_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaG_Int32
void Valve::VR::OpenVR::_set_k_pch_Camera_BoundsColorGammaG_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Camera_BoundsColorGammaG_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Camera_BoundsColorGammaG_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaB_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Camera_BoundsColorGammaB_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Camera_BoundsColorGammaB_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Camera_BoundsColorGammaB_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaB_Int32
void Valve::VR::OpenVR::_set_k_pch_Camera_BoundsColorGammaB_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Camera_BoundsColorGammaB_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Camera_BoundsColorGammaB_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaA_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Camera_BoundsColorGammaA_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Camera_BoundsColorGammaA_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Camera_BoundsColorGammaA_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaA_Int32
void Valve::VR::OpenVR::_set_k_pch_Camera_BoundsColorGammaA_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Camera_BoundsColorGammaA_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Camera_BoundsColorGammaA_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsStrength_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Camera_BoundsStrength_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Camera_BoundsStrength_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Camera_BoundsStrength_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsStrength_Int32
void Valve::VR::OpenVR::_set_k_pch_Camera_BoundsStrength_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Camera_BoundsStrength_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Camera_BoundsStrength_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_Section
::StringW Valve::VR::OpenVR::_get_k_pch_audio_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_audio_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_audio_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_Section
void Valve::VR::OpenVR::_set_k_pch_audio_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_audio_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_audio_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OnPlaybackDevice_String
::StringW Valve::VR::OpenVR::_get_k_pch_audio_OnPlaybackDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_audio_OnPlaybackDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_audio_OnPlaybackDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OnPlaybackDevice_String
void Valve::VR::OpenVR::_set_k_pch_audio_OnPlaybackDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_audio_OnPlaybackDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_audio_OnPlaybackDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OnRecordDevice_String
::StringW Valve::VR::OpenVR::_get_k_pch_audio_OnRecordDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_audio_OnRecordDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_audio_OnRecordDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OnRecordDevice_String
void Valve::VR::OpenVR::_set_k_pch_audio_OnRecordDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_audio_OnRecordDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_audio_OnRecordDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OnPlaybackMirrorDevice_String
::StringW Valve::VR::OpenVR::_get_k_pch_audio_OnPlaybackMirrorDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_audio_OnPlaybackMirrorDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_audio_OnPlaybackMirrorDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OnPlaybackMirrorDevice_String
void Valve::VR::OpenVR::_set_k_pch_audio_OnPlaybackMirrorDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_audio_OnPlaybackMirrorDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_audio_OnPlaybackMirrorDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OffPlaybackDevice_String
::StringW Valve::VR::OpenVR::_get_k_pch_audio_OffPlaybackDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_audio_OffPlaybackDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_audio_OffPlaybackDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OffPlaybackDevice_String
void Valve::VR::OpenVR::_set_k_pch_audio_OffPlaybackDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_audio_OffPlaybackDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_audio_OffPlaybackDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OffRecordDevice_String
::StringW Valve::VR::OpenVR::_get_k_pch_audio_OffRecordDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_audio_OffRecordDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_audio_OffRecordDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OffRecordDevice_String
void Valve::VR::OpenVR::_set_k_pch_audio_OffRecordDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_audio_OffRecordDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_audio_OffRecordDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_VIVEHDMIGain
::StringW Valve::VR::OpenVR::_get_k_pch_audio_VIVEHDMIGain() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_audio_VIVEHDMIGain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_audio_VIVEHDMIGain"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_VIVEHDMIGain
void Valve::VR::OpenVR::_set_k_pch_audio_VIVEHDMIGain(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_audio_VIVEHDMIGain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_audio_VIVEHDMIGain", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_Section
::StringW Valve::VR::OpenVR::_get_k_pch_Power_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Power_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Power_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_Section
void Valve::VR::OpenVR::_set_k_pch_Power_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Power_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Power_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_PowerOffOnExit_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Power_PowerOffOnExit_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Power_PowerOffOnExit_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Power_PowerOffOnExit_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_PowerOffOnExit_Bool
void Valve::VR::OpenVR::_set_k_pch_Power_PowerOffOnExit_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Power_PowerOffOnExit_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Power_PowerOffOnExit_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_TurnOffScreensTimeout_Float
::StringW Valve::VR::OpenVR::_get_k_pch_Power_TurnOffScreensTimeout_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Power_TurnOffScreensTimeout_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Power_TurnOffScreensTimeout_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_TurnOffScreensTimeout_Float
void Valve::VR::OpenVR::_set_k_pch_Power_TurnOffScreensTimeout_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Power_TurnOffScreensTimeout_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Power_TurnOffScreensTimeout_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_TurnOffControllersTimeout_Float
::StringW Valve::VR::OpenVR::_get_k_pch_Power_TurnOffControllersTimeout_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Power_TurnOffControllersTimeout_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Power_TurnOffControllersTimeout_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_TurnOffControllersTimeout_Float
void Valve::VR::OpenVR::_set_k_pch_Power_TurnOffControllersTimeout_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Power_TurnOffControllersTimeout_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Power_TurnOffControllersTimeout_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_ReturnToWatchdogTimeout_Float
::StringW Valve::VR::OpenVR::_get_k_pch_Power_ReturnToWatchdogTimeout_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Power_ReturnToWatchdogTimeout_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Power_ReturnToWatchdogTimeout_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_ReturnToWatchdogTimeout_Float
void Valve::VR::OpenVR::_set_k_pch_Power_ReturnToWatchdogTimeout_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Power_ReturnToWatchdogTimeout_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Power_ReturnToWatchdogTimeout_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_AutoLaunchSteamVROnButtonPress
::StringW Valve::VR::OpenVR::_get_k_pch_Power_AutoLaunchSteamVROnButtonPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Power_AutoLaunchSteamVROnButtonPress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Power_AutoLaunchSteamVROnButtonPress"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_AutoLaunchSteamVROnButtonPress
void Valve::VR::OpenVR::_set_k_pch_Power_AutoLaunchSteamVROnButtonPress(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Power_AutoLaunchSteamVROnButtonPress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Power_AutoLaunchSteamVROnButtonPress", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_PauseCompositorOnStandby_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Power_PauseCompositorOnStandby_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Power_PauseCompositorOnStandby_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Power_PauseCompositorOnStandby_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_PauseCompositorOnStandby_Bool
void Valve::VR::OpenVR::_set_k_pch_Power_PauseCompositorOnStandby_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Power_PauseCompositorOnStandby_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Power_PauseCompositorOnStandby_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_Section
::StringW Valve::VR::OpenVR::_get_k_pch_Dashboard_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Dashboard_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Dashboard_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_Section
void Valve::VR::OpenVR::_set_k_pch_Dashboard_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Dashboard_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Dashboard_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_EnableDashboard_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Dashboard_EnableDashboard_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Dashboard_EnableDashboard_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Dashboard_EnableDashboard_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_EnableDashboard_Bool
void Valve::VR::OpenVR::_set_k_pch_Dashboard_EnableDashboard_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Dashboard_EnableDashboard_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Dashboard_EnableDashboard_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_ArcadeMode_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Dashboard_ArcadeMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Dashboard_ArcadeMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Dashboard_ArcadeMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_ArcadeMode_Bool
void Valve::VR::OpenVR::_set_k_pch_Dashboard_ArcadeMode_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Dashboard_ArcadeMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Dashboard_ArcadeMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_modelskin_Section
::StringW Valve::VR::OpenVR::_get_k_pch_modelskin_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_modelskin_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_modelskin_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_modelskin_Section
void Valve::VR::OpenVR::_set_k_pch_modelskin_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_modelskin_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_modelskin_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Driver_Enable_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Driver_Enable_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Driver_Enable_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Driver_Enable_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Driver_Enable_Bool
void Valve::VR::OpenVR::_set_k_pch_Driver_Enable_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Driver_Enable_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Driver_Enable_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRScreenshots_Version
::StringW Valve::VR::OpenVR::_get_IVRScreenshots_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRScreenshots_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRScreenshots_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRScreenshots_Version
void Valve::VR::OpenVR::_set_IVRScreenshots_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRScreenshots_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRScreenshots_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRResources_Version
::StringW Valve::VR::OpenVR::_get_IVRResources_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRResources_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRResources_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRResources_Version
void Valve::VR::OpenVR::_set_IVRResources_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRResources_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRResources_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRDriverManager_Version
::StringW Valve::VR::OpenVR::_get_IVRDriverManager_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRDriverManager_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRDriverManager_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRDriverManager_Version
void Valve::VR::OpenVR::_set_IVRDriverManager_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRDriverManager_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRDriverManager_Version", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 <VRToken>k__BackingField
uint Valve::VR::OpenVR::_get_$VRToken$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_$VRToken$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "<VRToken>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 <VRToken>k__BackingField
void Valve::VR::OpenVR::_set_$VRToken$k__BackingField(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_$VRToken$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "<VRToken>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FnTable_Prefix
::StringW Valve::VR::OpenVR::_get_FnTable_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_FnTable_Prefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "FnTable_Prefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String FnTable_Prefix
void Valve::VR::OpenVR::_set_FnTable_Prefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_FnTable_Prefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "FnTable_Prefix", value));
}
// Autogenerated static field getter
// Get static field: static private Valve.VR.OpenVR/Valve.VR.COpenVRContext _OpenVRInternal_ModuleContext
Valve::VR::OpenVR::COpenVRContext* Valve::VR::OpenVR::_get__OpenVRInternal_ModuleContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get__OpenVRInternal_ModuleContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::OpenVR::COpenVRContext*>("Valve.VR", "OpenVR", "_OpenVRInternal_ModuleContext"));
}
// Autogenerated static field setter
// Set static field: static private Valve.VR.OpenVR/Valve.VR.COpenVRContext _OpenVRInternal_ModuleContext
void Valve::VR::OpenVR::_set__OpenVRInternal_ModuleContext(Valve::VR::OpenVR::COpenVRContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set__OpenVRInternal_ModuleContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "_OpenVRInternal_ModuleContext", value));
}
// Autogenerated method: Valve.VR.OpenVR.get_VRToken
uint Valve::VR::OpenVR::get_VRToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_VRToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_VRToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.set_VRToken
void Valve::VR::OpenVR::set_VRToken(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::set_VRToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "set_VRToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Valve.VR.OpenVR.get_OpenVRInternal_ModuleContext
Valve::VR::OpenVR::COpenVRContext* Valve::VR::OpenVR::get_OpenVRInternal_ModuleContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_OpenVRInternal_ModuleContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_OpenVRInternal_ModuleContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::OpenVR::COpenVRContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_System
Valve::VR::CVRSystem* Valve::VR::OpenVR::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_System");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_System", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRSystem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_Chaperone
Valve::VR::CVRChaperone* Valve::VR::OpenVR::get_Chaperone() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_Chaperone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_Chaperone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRChaperone*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_ChaperoneSetup
Valve::VR::CVRChaperoneSetup* Valve::VR::OpenVR::get_ChaperoneSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_ChaperoneSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_ChaperoneSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRChaperoneSetup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_Compositor
Valve::VR::CVRCompositor* Valve::VR::OpenVR::get_Compositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_Compositor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_Compositor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRCompositor*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_Overlay
Valve::VR::CVROverlay* Valve::VR::OpenVR::get_Overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_Overlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_Overlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVROverlay*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_RenderModels
Valve::VR::CVRRenderModels* Valve::VR::OpenVR::get_RenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_RenderModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_RenderModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRRenderModels*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_ExtendedDisplay
Valve::VR::CVRExtendedDisplay* Valve::VR::OpenVR::get_ExtendedDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_ExtendedDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_ExtendedDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRExtendedDisplay*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_Settings
Valve::VR::CVRSettings* Valve::VR::OpenVR::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_Settings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_Applications
Valve::VR::CVRApplications* Valve::VR::OpenVR::get_Applications() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_Applications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_Applications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRApplications*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_Screenshots
Valve::VR::CVRScreenshots* Valve::VR::OpenVR::get_Screenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_Screenshots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_Screenshots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRScreenshots*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_TrackedCamera
Valve::VR::CVRTrackedCamera* Valve::VR::OpenVR::get_TrackedCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_TrackedCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_TrackedCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRTrackedCamera*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR..cctor
void Valve::VR::OpenVR::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.InitInternal
uint Valve::VR::OpenVR::InitInternal(ByRef<Valve::VR::EVRInitError> peError, Valve::VR::EVRApplicationType eApplicationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::InitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "InitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType);
}
// Autogenerated method: Valve.VR.OpenVR.ShutdownInternal
void Valve::VR::OpenVR::ShutdownInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::ShutdownInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "ShutdownInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.IsHmdPresent
bool Valve::VR::OpenVR::IsHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::IsHmdPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "IsHmdPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.IsRuntimeInstalled
bool Valve::VR::OpenVR::IsRuntimeInstalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::IsRuntimeInstalled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "IsRuntimeInstalled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.GetStringForHmdError
::StringW Valve::VR::OpenVR::GetStringForHmdError(Valve::VR::EVRInitError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::GetStringForHmdError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "GetStringForHmdError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: Valve.VR.OpenVR.GetGenericInterface
System::IntPtr Valve::VR::OpenVR::GetGenericInterface(::StringW pchInterfaceVersion, ByRef<Valve::VR::EVRInitError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::GetGenericInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "GetGenericInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchInterfaceVersion), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchInterfaceVersion, byref(peError));
}
// Autogenerated method: Valve.VR.OpenVR.IsInterfaceVersionValid
bool Valve::VR::OpenVR::IsInterfaceVersionValid(::StringW pchInterfaceVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::IsInterfaceVersionValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "IsInterfaceVersionValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchInterfaceVersion)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchInterfaceVersion);
}
// Autogenerated method: Valve.VR.OpenVR.GetInitToken
uint Valve::VR::OpenVR::GetInitToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::GetInitToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "GetInitToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.Init
Valve::VR::CVRSystem* Valve::VR::OpenVR::Init(ByRef<Valve::VR::EVRInitError> peError, Valve::VR::EVRApplicationType eApplicationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRSystem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType);
}
// Autogenerated method: Valve.VR.OpenVR.Shutdown
void Valve::VR::OpenVR::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.OpenVR/Valve.VR.COpenVRContext
#include "Valve/VR/OpenVR_COpenVRContext.hpp"
// Including type: Valve.VR.CVRSystem
#include "Valve/VR/CVRSystem.hpp"
// Including type: Valve.VR.CVRChaperone
#include "Valve/VR/CVRChaperone.hpp"
// Including type: Valve.VR.CVRChaperoneSetup
#include "Valve/VR/CVRChaperoneSetup.hpp"
// Including type: Valve.VR.CVRCompositor
#include "Valve/VR/CVRCompositor.hpp"
// Including type: Valve.VR.CVROverlay
#include "Valve/VR/CVROverlay.hpp"
// Including type: Valve.VR.CVRRenderModels
#include "Valve/VR/CVRRenderModels.hpp"
// Including type: Valve.VR.CVRExtendedDisplay
#include "Valve/VR/CVRExtendedDisplay.hpp"
// Including type: Valve.VR.CVRSettings
#include "Valve/VR/CVRSettings.hpp"
// Including type: Valve.VR.CVRApplications
#include "Valve/VR/CVRApplications.hpp"
// Including type: Valve.VR.CVRScreenshots
#include "Valve/VR/CVRScreenshots.hpp"
// Including type: Valve.VR.CVRTrackedCamera
#include "Valve/VR/CVRTrackedCamera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRSystem m_pVRSystem
Valve::VR::CVRSystem*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRSystem"))->offset;
  return *reinterpret_cast<Valve::VR::CVRSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRChaperone m_pVRChaperone
Valve::VR::CVRChaperone*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRChaperone() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRChaperone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRChaperone"))->offset;
  return *reinterpret_cast<Valve::VR::CVRChaperone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRChaperoneSetup m_pVRChaperoneSetup
Valve::VR::CVRChaperoneSetup*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRChaperoneSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRChaperoneSetup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRChaperoneSetup"))->offset;
  return *reinterpret_cast<Valve::VR::CVRChaperoneSetup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRCompositor m_pVRCompositor
Valve::VR::CVRCompositor*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRCompositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRCompositor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRCompositor"))->offset;
  return *reinterpret_cast<Valve::VR::CVRCompositor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVROverlay m_pVROverlay
Valve::VR::CVROverlay*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVROverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVROverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVROverlay"))->offset;
  return *reinterpret_cast<Valve::VR::CVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRRenderModels m_pVRRenderModels
Valve::VR::CVRRenderModels*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRRenderModels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRRenderModels"))->offset;
  return *reinterpret_cast<Valve::VR::CVRRenderModels**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRExtendedDisplay m_pVRExtendedDisplay
Valve::VR::CVRExtendedDisplay*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRExtendedDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRExtendedDisplay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRExtendedDisplay"))->offset;
  return *reinterpret_cast<Valve::VR::CVRExtendedDisplay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRSettings m_pVRSettings
Valve::VR::CVRSettings*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRSettings"))->offset;
  return *reinterpret_cast<Valve::VR::CVRSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRApplications m_pVRApplications
Valve::VR::CVRApplications*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRApplications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRApplications"))->offset;
  return *reinterpret_cast<Valve::VR::CVRApplications**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRScreenshots m_pVRScreenshots
Valve::VR::CVRScreenshots*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRScreenshots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRScreenshots"))->offset;
  return *reinterpret_cast<Valve::VR::CVRScreenshots**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRTrackedCamera m_pVRTrackedCamera
Valve::VR::CVRTrackedCamera*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRTrackedCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRTrackedCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRTrackedCamera"))->offset;
  return *reinterpret_cast<Valve::VR::CVRTrackedCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.Clear
void Valve::VR::OpenVR::COpenVRContext::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.CheckClear
void Valve::VR::OpenVR::COpenVRContext::CheckClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::CheckClear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VRSystem
Valve::VR::CVRSystem* Valve::VR::OpenVR::COpenVRContext::VRSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VRSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRSystem*, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VRChaperone
Valve::VR::CVRChaperone* Valve::VR::OpenVR::COpenVRContext::VRChaperone() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VRChaperone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRChaperone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRChaperone*, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VRChaperoneSetup
Valve::VR::CVRChaperoneSetup* Valve::VR::OpenVR::COpenVRContext::VRChaperoneSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VRChaperoneSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRChaperoneSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRChaperoneSetup*, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VRCompositor
Valve::VR::CVRCompositor* Valve::VR::OpenVR::COpenVRContext::VRCompositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VRCompositor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRCompositor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRCompositor*, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VROverlay
Valve::VR::CVROverlay* Valve::VR::OpenVR::COpenVRContext::VROverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VROverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VROverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVROverlay*, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VRRenderModels
Valve::VR::CVRRenderModels* Valve::VR::OpenVR::COpenVRContext::VRRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VRRenderModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRRenderModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRRenderModels*, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VRExtendedDisplay
Valve::VR::CVRExtendedDisplay* Valve::VR::OpenVR::COpenVRContext::VRExtendedDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VRExtendedDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRExtendedDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRExtendedDisplay*, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VRSettings
Valve::VR::CVRSettings* Valve::VR::OpenVR::COpenVRContext::VRSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VRSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VRApplications
Valve::VR::CVRApplications* Valve::VR::OpenVR::COpenVRContext::VRApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VRApplications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRApplications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRApplications*, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VRScreenshots
Valve::VR::CVRScreenshots* Valve::VR::OpenVR::COpenVRContext::VRScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VRScreenshots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRScreenshots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRScreenshots*, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VRTrackedCamera
Valve::VR::CVRTrackedCamera* Valve::VR::OpenVR::COpenVRContext::VRTrackedCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VRTrackedCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRTrackedCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRTrackedCamera*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.ConfigurationSection
#include "System/Configuration/ConfigurationSection.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Configuration.ConfigurationSaveMode
#include "System/Configuration/ConfigurationSaveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Configuration.ConfigurationSection.DeserializeSection
void System::Configuration::ConfigurationSection::DeserializeSection(System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSection::DeserializeSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Configuration.ConfigurationSection.SerializeSection
::StringW System::Configuration::ConfigurationSection::SerializeSection(System::Configuration::ConfigurationElement* parentElement, ::StringW name, System::Configuration::ConfigurationSaveMode saveMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSection::SerializeSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentElement), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(saveMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, parentElement, name, saveMode);
}
// Autogenerated method: System.Configuration.ConfigurationSection.IsModified
bool System::Configuration::ConfigurationSection::IsModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSection::IsModified");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationSection.ResetModified
void System::Configuration::ConfigurationSection::ResetModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSection::ResetModified");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.ConfigurationElement
#include "System/Configuration/ConfigurationElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Configuration.ConfigurationElement.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Configuration::ConfigurationElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationElement.IsModified
bool System::Configuration::ConfigurationElement::IsModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationElement::IsModified");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationElement.Reset
void System::Configuration::ConfigurationElement::Reset(System::Configuration::ConfigurationElement* parentElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationElement::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentElement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentElement);
}
// Autogenerated method: System.Configuration.ConfigurationElement.ResetModified
void System::Configuration::ConfigurationElement::ResetModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationElement::ResetModified");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.ConfigurationSaveMode
#include "System/Configuration/ConfigurationSaveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Configuration.ConfigurationSaveMode Full
System::Configuration::ConfigurationSaveMode System::Configuration::ConfigurationSaveMode::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSaveMode::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Configuration::ConfigurationSaveMode>("System.Configuration", "ConfigurationSaveMode", "Full"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.ConfigurationSaveMode Full
void System::Configuration::ConfigurationSaveMode::_set_Full(System::Configuration::ConfigurationSaveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSaveMode::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration", "ConfigurationSaveMode", "Full", value));
}
// Autogenerated static field getter
// Get static field: static public System.Configuration.ConfigurationSaveMode Minimal
System::Configuration::ConfigurationSaveMode System::Configuration::ConfigurationSaveMode::_get_Minimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSaveMode::_get_Minimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Configuration::ConfigurationSaveMode>("System.Configuration", "ConfigurationSaveMode", "Minimal"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.ConfigurationSaveMode Minimal
void System::Configuration::ConfigurationSaveMode::_set_Minimal(System::Configuration::ConfigurationSaveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSaveMode::_set_Minimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration", "ConfigurationSaveMode", "Minimal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Configuration.ConfigurationSaveMode Modified
System::Configuration::ConfigurationSaveMode System::Configuration::ConfigurationSaveMode::_get_Modified() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSaveMode::_get_Modified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Configuration::ConfigurationSaveMode>("System.Configuration", "ConfigurationSaveMode", "Modified"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.ConfigurationSaveMode Modified
void System::Configuration::ConfigurationSaveMode::_set_Modified(System::Configuration::ConfigurationSaveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSaveMode::_set_Modified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration", "ConfigurationSaveMode", "Modified", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Configuration::ConfigurationSaveMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSaveMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.ConfigurationCollectionAttribute
#include "System/Configuration/ConfigurationCollectionAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.IgnoreSection
#include "System/Configuration/IgnoreSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Configuration.ConfigurationSaveMode
#include "System/Configuration/ConfigurationSaveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Configuration.IgnoreSection.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Configuration::IgnoreSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::IgnoreSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.IgnoreSection.DeserializeSection
void System::Configuration::IgnoreSection::DeserializeSection(System::Xml::XmlReader* xmlReader) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::IgnoreSection::DeserializeSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmlReader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmlReader);
}
// Autogenerated method: System.Configuration.IgnoreSection.IsModified
bool System::Configuration::IgnoreSection::IsModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::IgnoreSection::IsModified");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.IgnoreSection.Reset
void System::Configuration::IgnoreSection::Reset(System::Configuration::ConfigurationElement* parentSection) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::IgnoreSection::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentSection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentSection);
}
// Autogenerated method: System.Configuration.IgnoreSection.ResetModified
void System::Configuration::IgnoreSection::ResetModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::IgnoreSection::ResetModified");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.IgnoreSection.SerializeSection
::StringW System::Configuration::IgnoreSection::SerializeSection(System::Configuration::ConfigurationElement* parentSection, ::StringW name, System::Configuration::ConfigurationSaveMode saveMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::IgnoreSection::SerializeSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentSection), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(saveMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, parentSection, name, saveMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.LockRecursionPolicy
#include "System/Threading/LockRecursionPolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.LockRecursionPolicy NoRecursion
System::Threading::LockRecursionPolicy System::Threading::LockRecursionPolicy::_get_NoRecursion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::LockRecursionPolicy::_get_NoRecursion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::LockRecursionPolicy>("System.Threading", "LockRecursionPolicy", "NoRecursion"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.LockRecursionPolicy NoRecursion
void System::Threading::LockRecursionPolicy::_set_NoRecursion(System::Threading::LockRecursionPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::LockRecursionPolicy::_set_NoRecursion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "LockRecursionPolicy", "NoRecursion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.LockRecursionPolicy SupportsRecursion
System::Threading::LockRecursionPolicy System::Threading::LockRecursionPolicy::_get_SupportsRecursion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::LockRecursionPolicy::_get_SupportsRecursion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::LockRecursionPolicy>("System.Threading", "LockRecursionPolicy", "SupportsRecursion"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.LockRecursionPolicy SupportsRecursion
void System::Threading::LockRecursionPolicy::_set_SupportsRecursion(System::Threading::LockRecursionPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::LockRecursionPolicy::_set_SupportsRecursion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "LockRecursionPolicy", "SupportsRecursion", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Threading::LockRecursionPolicy::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::LockRecursionPolicy::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ReaderWriterCount
#include "System/Threading/ReaderWriterCount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int64 lockID
int64_t& System::Threading::ReaderWriterCount::dyn_lockID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterCount::dyn_lockID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lockID"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 readercount
int& System::Threading::ReaderWriterCount::dyn_readercount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterCount::dyn_readercount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readercount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 writercount
int& System::Threading::ReaderWriterCount::dyn_writercount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterCount::dyn_writercount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writercount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 upgradecount
int& System::Threading::ReaderWriterCount::dyn_upgradecount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterCount::dyn_upgradecount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upgradecount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.ReaderWriterCount next
System::Threading::ReaderWriterCount*& System::Threading::ReaderWriterCount::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterCount::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<System::Threading::ReaderWriterCount**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ReaderWriterLockSlim
#include "System/Threading/ReaderWriterLockSlim.hpp"
// Including type: System.Threading.ReaderWriterLockSlim/System.Threading.TimeoutTracker
#include "System/Threading/ReaderWriterLockSlim_TimeoutTracker.hpp"
// Including type: System.Threading.EventWaitHandle
#include "System/Threading/EventWaitHandle.hpp"
// Including type: System.Threading.ReaderWriterCount
#include "System/Threading/ReaderWriterCount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 LockSpinCycles
int System::Threading::ReaderWriterLockSlim::_get_LockSpinCycles() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_LockSpinCycles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ReaderWriterLockSlim", "LockSpinCycles"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LockSpinCycles
void System::Threading::ReaderWriterLockSlim::_set_LockSpinCycles(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_LockSpinCycles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "LockSpinCycles", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 LockSpinCount
int System::Threading::ReaderWriterLockSlim::_get_LockSpinCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_LockSpinCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ReaderWriterLockSlim", "LockSpinCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LockSpinCount
void System::Threading::ReaderWriterLockSlim::_set_LockSpinCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_LockSpinCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "LockSpinCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 LockSleep0Count
int System::Threading::ReaderWriterLockSlim::_get_LockSleep0Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_LockSleep0Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ReaderWriterLockSlim", "LockSleep0Count"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LockSleep0Count
void System::Threading::ReaderWriterLockSlim::_set_LockSleep0Count(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_LockSleep0Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "LockSleep0Count", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 s_nextLockID
int64_t System::Threading::ReaderWriterLockSlim::_get_s_nextLockID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_s_nextLockID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Threading", "ReaderWriterLockSlim", "s_nextLockID"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 s_nextLockID
void System::Threading::ReaderWriterLockSlim::_set_s_nextLockID(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_s_nextLockID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "s_nextLockID", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.ReaderWriterCount t_rwc
System::Threading::ReaderWriterCount* System::Threading::ReaderWriterLockSlim::_get_t_rwc() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_t_rwc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ReaderWriterCount*>("System.Threading", "ReaderWriterLockSlim", "t_rwc"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ReaderWriterCount t_rwc
void System::Threading::ReaderWriterLockSlim::_set_t_rwc(System::Threading::ReaderWriterCount* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_t_rwc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "t_rwc", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxSpinCount
int System::Threading::ReaderWriterLockSlim::_get_MaxSpinCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_MaxSpinCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ReaderWriterLockSlim", "MaxSpinCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxSpinCount
void System::Threading::ReaderWriterLockSlim::_set_MaxSpinCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_MaxSpinCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "MaxSpinCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 WRITER_HELD
uint System::Threading::ReaderWriterLockSlim::_get_WRITER_HELD() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_WRITER_HELD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Threading", "ReaderWriterLockSlim", "WRITER_HELD"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 WRITER_HELD
void System::Threading::ReaderWriterLockSlim::_set_WRITER_HELD(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_WRITER_HELD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "WRITER_HELD", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 WAITING_WRITERS
uint System::Threading::ReaderWriterLockSlim::_get_WAITING_WRITERS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_WAITING_WRITERS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Threading", "ReaderWriterLockSlim", "WAITING_WRITERS"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 WAITING_WRITERS
void System::Threading::ReaderWriterLockSlim::_set_WAITING_WRITERS(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_WAITING_WRITERS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "WAITING_WRITERS", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 WAITING_UPGRADER
uint System::Threading::ReaderWriterLockSlim::_get_WAITING_UPGRADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_WAITING_UPGRADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Threading", "ReaderWriterLockSlim", "WAITING_UPGRADER"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 WAITING_UPGRADER
void System::Threading::ReaderWriterLockSlim::_set_WAITING_UPGRADER(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_WAITING_UPGRADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "WAITING_UPGRADER", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 MAX_READER
uint System::Threading::ReaderWriterLockSlim::_get_MAX_READER() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_MAX_READER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Threading", "ReaderWriterLockSlim", "MAX_READER"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 MAX_READER
void System::Threading::ReaderWriterLockSlim::_set_MAX_READER(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_MAX_READER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "MAX_READER", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 READER_MASK
uint System::Threading::ReaderWriterLockSlim::_get_READER_MASK() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_READER_MASK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Threading", "ReaderWriterLockSlim", "READER_MASK"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 READER_MASK
void System::Threading::ReaderWriterLockSlim::_set_READER_MASK(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_READER_MASK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "READER_MASK", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fIsReentrant
bool& System::Threading::ReaderWriterLockSlim::dyn_fIsReentrant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_fIsReentrant");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fIsReentrant"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 myLock
int& System::Threading::ReaderWriterLockSlim::dyn_myLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_myLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myLock"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 numWriteWaiters
uint& System::Threading::ReaderWriterLockSlim::dyn_numWriteWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_numWriteWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numWriteWaiters"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 numReadWaiters
uint& System::Threading::ReaderWriterLockSlim::dyn_numReadWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_numReadWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numReadWaiters"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 numWriteUpgradeWaiters
uint& System::Threading::ReaderWriterLockSlim::dyn_numWriteUpgradeWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_numWriteUpgradeWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numWriteUpgradeWaiters"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 numUpgradeWaiters
uint& System::Threading::ReaderWriterLockSlim::dyn_numUpgradeWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_numUpgradeWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numUpgradeWaiters"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fNoWaiters
bool& System::Threading::ReaderWriterLockSlim::dyn_fNoWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_fNoWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fNoWaiters"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 upgradeLockOwnerId
int& System::Threading::ReaderWriterLockSlim::dyn_upgradeLockOwnerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_upgradeLockOwnerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upgradeLockOwnerId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 writeLockOwnerId
int& System::Threading::ReaderWriterLockSlim::dyn_writeLockOwnerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_writeLockOwnerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeLockOwnerId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.EventWaitHandle writeEvent
System::Threading::EventWaitHandle*& System::Threading::ReaderWriterLockSlim::dyn_writeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_writeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeEvent"))->offset;
  return *reinterpret_cast<System::Threading::EventWaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.EventWaitHandle readEvent
System::Threading::EventWaitHandle*& System::Threading::ReaderWriterLockSlim::dyn_readEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_readEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readEvent"))->offset;
  return *reinterpret_cast<System::Threading::EventWaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.EventWaitHandle upgradeEvent
System::Threading::EventWaitHandle*& System::Threading::ReaderWriterLockSlim::dyn_upgradeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_upgradeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upgradeEvent"))->offset;
  return *reinterpret_cast<System::Threading::EventWaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.EventWaitHandle waitUpgradeEvent
System::Threading::EventWaitHandle*& System::Threading::ReaderWriterLockSlim::dyn_waitUpgradeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_waitUpgradeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitUpgradeEvent"))->offset;
  return *reinterpret_cast<System::Threading::EventWaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 lockID
int64_t& System::Threading::ReaderWriterLockSlim::dyn_lockID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_lockID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lockID"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fUpgradeThreadHoldingRead
bool& System::Threading::ReaderWriterLockSlim::dyn_fUpgradeThreadHoldingRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_fUpgradeThreadHoldingRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fUpgradeThreadHoldingRead"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 owners
uint& System::Threading::ReaderWriterLockSlim::dyn_owners() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_owners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "owners"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fDisposed
bool& System::Threading::ReaderWriterLockSlim::dyn_fDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_fDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fDisposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_IsReadLockHeld
bool System::Threading::ReaderWriterLockSlim::get_IsReadLockHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::get_IsReadLockHeld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadLockHeld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_IsUpgradeableReadLockHeld
bool System::Threading::ReaderWriterLockSlim::get_IsUpgradeableReadLockHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::get_IsUpgradeableReadLockHeld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUpgradeableReadLockHeld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_IsWriteLockHeld
bool System::Threading::ReaderWriterLockSlim::get_IsWriteLockHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::get_IsWriteLockHeld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsWriteLockHeld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_RecursiveReadCount
int System::Threading::ReaderWriterLockSlim::get_RecursiveReadCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::get_RecursiveReadCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecursiveReadCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_RecursiveUpgradeCount
int System::Threading::ReaderWriterLockSlim::get_RecursiveUpgradeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::get_RecursiveUpgradeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecursiveUpgradeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_RecursiveWriteCount
int System::Threading::ReaderWriterLockSlim::get_RecursiveWriteCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::get_RecursiveWriteCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecursiveWriteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_WaitingReadCount
int System::Threading::ReaderWriterLockSlim::get_WaitingReadCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::get_WaitingReadCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WaitingReadCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_WaitingUpgradeCount
int System::Threading::ReaderWriterLockSlim::get_WaitingUpgradeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::get_WaitingUpgradeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WaitingUpgradeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_WaitingWriteCount
int System::Threading::ReaderWriterLockSlim::get_WaitingWriteCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::get_WaitingWriteCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WaitingWriteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.InitializeThreadCounts
void System::Threading::ReaderWriterLockSlim::InitializeThreadCounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::InitializeThreadCounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeThreadCounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.IsRWEntryEmpty
bool System::Threading::ReaderWriterLockSlim::IsRWEntryEmpty(System::Threading::ReaderWriterCount* rwc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::IsRWEntryEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ReaderWriterLockSlim", "IsRWEntryEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rwc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rwc);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.IsRwHashEntryChanged
bool System::Threading::ReaderWriterLockSlim::IsRwHashEntryChanged(System::Threading::ReaderWriterCount* lrwc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::IsRwHashEntryChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRwHashEntryChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lrwc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lrwc);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.GetThreadRWCount
System::Threading::ReaderWriterCount* System::Threading::ReaderWriterLockSlim::GetThreadRWCount(bool dontAllocate) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::GetThreadRWCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetThreadRWCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dontAllocate)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::ReaderWriterCount*, false>(this, ___internal__method, dontAllocate);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.EnterReadLock
void System::Threading::ReaderWriterLockSlim::EnterReadLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::EnterReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnterReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterReadLock
bool System::Threading::ReaderWriterLockSlim::TryEnterReadLock(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TryEnterReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterReadLock
bool System::Threading::ReaderWriterLockSlim::TryEnterReadLock(System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TryEnterReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterReadLockCore
bool System::Threading::ReaderWriterLockSlim::TryEnterReadLockCore(System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TryEnterReadLockCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterReadLockCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.EnterWriteLock
void System::Threading::ReaderWriterLockSlim::EnterWriteLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::EnterWriteLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnterWriteLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterWriteLock
bool System::Threading::ReaderWriterLockSlim::TryEnterWriteLock(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TryEnterWriteLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterWriteLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterWriteLock
bool System::Threading::ReaderWriterLockSlim::TryEnterWriteLock(System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TryEnterWriteLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterWriteLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterWriteLockCore
bool System::Threading::ReaderWriterLockSlim::TryEnterWriteLockCore(System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TryEnterWriteLockCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterWriteLockCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.EnterUpgradeableReadLock
void System::Threading::ReaderWriterLockSlim::EnterUpgradeableReadLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::EnterUpgradeableReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnterUpgradeableReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock
bool System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLock(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterUpgradeableReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock
bool System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLock(System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterUpgradeableReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLockCore
bool System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLockCore(System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLockCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterUpgradeableReadLockCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitReadLock
void System::Threading::ReaderWriterLockSlim::ExitReadLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::ExitReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitWriteLock
void System::Threading::ReaderWriterLockSlim::ExitWriteLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::ExitWriteLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitWriteLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitUpgradeableReadLock
void System::Threading::ReaderWriterLockSlim::ExitUpgradeableReadLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::ExitUpgradeableReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitUpgradeableReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.LazyCreateEvent
void System::Threading::ReaderWriterLockSlim::LazyCreateEvent(ByRef<System::Threading::EventWaitHandle*> waitEvent, bool makeAutoResetEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::LazyCreateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyCreateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waitEvent), ::il2cpp_utils::ExtractType(makeAutoResetEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(waitEvent), makeAutoResetEvent);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.WaitOnEvent
bool System::Threading::ReaderWriterLockSlim::WaitOnEvent(System::Threading::EventWaitHandle* waitEvent, ByRef<uint> numWaiters, System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout, bool isWriteWaiter) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::WaitOnEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitOnEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waitEvent), ::il2cpp_utils::ExtractType(numWaiters), ::il2cpp_utils::ExtractType(timeout), ::il2cpp_utils::ExtractType(isWriteWaiter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, waitEvent, byref(numWaiters), timeout, isWriteWaiter);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitAndWakeUpAppropriateWaiters
void System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateWaiters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitAndWakeUpAppropriateWaiters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitAndWakeUpAppropriateWaitersPreferringWriters
void System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateWaitersPreferringWriters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateWaitersPreferringWriters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitAndWakeUpAppropriateWaitersPreferringWriters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitAndWakeUpAppropriateReadWaiters
void System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateReadWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateReadWaiters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitAndWakeUpAppropriateReadWaiters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.IsWriterAcquired
bool System::Threading::ReaderWriterLockSlim::IsWriterAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::IsWriterAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsWriterAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.SetWriterAcquired
void System::Threading::ReaderWriterLockSlim::SetWriterAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::SetWriterAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWriterAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ClearWriterAcquired
void System::Threading::ReaderWriterLockSlim::ClearWriterAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::ClearWriterAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearWriterAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.SetWritersWaiting
void System::Threading::ReaderWriterLockSlim::SetWritersWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::SetWritersWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWritersWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ClearWritersWaiting
void System::Threading::ReaderWriterLockSlim::ClearWritersWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::ClearWritersWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearWritersWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.SetUpgraderWaiting
void System::Threading::ReaderWriterLockSlim::SetUpgraderWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::SetUpgraderWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUpgraderWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ClearUpgraderWaiting
void System::Threading::ReaderWriterLockSlim::ClearUpgraderWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::ClearUpgraderWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearUpgraderWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.GetNumReaders
uint System::Threading::ReaderWriterLockSlim::GetNumReaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::GetNumReaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNumReaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.EnterMyLock
void System::Threading::ReaderWriterLockSlim::EnterMyLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::EnterMyLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnterMyLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.EnterMyLockSpin
void System::Threading::ReaderWriterLockSlim::EnterMyLockSpin() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::EnterMyLockSpin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnterMyLockSpin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitMyLock
void System::Threading::ReaderWriterLockSlim::ExitMyLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::ExitMyLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitMyLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.SpinWait
void System::Threading::ReaderWriterLockSlim::SpinWait(int SpinCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::SpinWait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ReaderWriterLockSlim", "SpinWait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(SpinCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, SpinCount);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.Dispose
void System::Threading::ReaderWriterLockSlim::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.Dispose
void System::Threading::ReaderWriterLockSlim::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ReaderWriterLockSlim/System.Threading.TimeoutTracker
#include "System/Threading/ReaderWriterLockSlim_TimeoutTracker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_total
int& System::Threading::ReaderWriterLockSlim::TimeoutTracker::dyn_m_total() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TimeoutTracker::dyn_m_total");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_total"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_start
int& System::Threading::ReaderWriterLockSlim::TimeoutTracker::dyn_m_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TimeoutTracker::dyn_m_start");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim/System.Threading.TimeoutTracker.get_RemainingMilliseconds
int System::Threading::ReaderWriterLockSlim::TimeoutTracker::get_RemainingMilliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TimeoutTracker::get_RemainingMilliseconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_RemainingMilliseconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim/System.Threading.TimeoutTracker.get_IsExpired
bool System::Threading::ReaderWriterLockSlim::TimeoutTracker::get_IsExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TimeoutTracker::get_IsExpired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsExpired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim/System.Threading.TimeoutTracker..ctor
System::Threading::ReaderWriterLockSlim::TimeoutTracker::TimeoutTracker(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TimeoutTracker::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskExtensions
#include "System/Threading/Tasks/TaskExtensions.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AesManaged
#include "System/Security/Cryptography/AesManaged.hpp"
// Including type: System.Security.Cryptography.RijndaelManaged
#include "System/Security/Cryptography/RijndaelManaged.hpp"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RijndaelManaged m_rijndael
System::Security::Cryptography::RijndaelManaged*& System::Security::Cryptography::AesManaged::dyn_m_rijndael() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::dyn_m_rijndael");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rijndael"))->offset;
  return *reinterpret_cast<System::Security::Cryptography::RijndaelManaged**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_FeedbackSize
int System::Security::Cryptography::AesManaged::get_FeedbackSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::get_FeedbackSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FeedbackSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_IV
::ArrayW<uint8_t> System::Security::Cryptography::AesManaged::get_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::get_IV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.set_IV
void System::Security::Cryptography::AesManaged::set_IV(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::set_IV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_Key
::ArrayW<uint8_t> System::Security::Cryptography::AesManaged::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.set_Key
void System::Security::Cryptography::AesManaged::set_Key(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::set_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_KeySize
int System::Security::Cryptography::AesManaged::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::get_KeySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.set_KeySize
void System::Security::Cryptography::AesManaged::set_KeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::set_KeySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_KeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_Mode
System::Security::Cryptography::CipherMode System::Security::Cryptography::AesManaged::get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::get_Mode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::CipherMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.set_Mode
void System::Security::Cryptography::AesManaged::set_Mode(System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::set_Mode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_Padding
System::Security::Cryptography::PaddingMode System::Security::Cryptography::AesManaged::get_Padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::get_Padding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::PaddingMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.set_Padding
void System::Security::Cryptography::AesManaged::set_Padding(System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::set_Padding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.CreateDecryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesManaged::CreateDecryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDecryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.CreateDecryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesManaged::CreateDecryptor(::ArrayW<uint8_t> key, ::ArrayW<uint8_t> iv) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDecryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(iv)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, key, iv);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.CreateEncryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesManaged::CreateEncryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEncryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.CreateEncryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesManaged::CreateEncryptor(::ArrayW<uint8_t> key, ::ArrayW<uint8_t> iv) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEncryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(iv)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, key, iv);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.Dispose
void System::Security::Cryptography::AesManaged::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.GenerateIV
void System::Security::Cryptography::AesManaged::GenerateIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::GenerateIV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateIV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.GenerateKey
void System::Security::Cryptography::AesManaged::GenerateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::GenerateKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AesCryptoServiceProvider
#include "System/Security/Cryptography/AesCryptoServiceProvider.hpp"
// Including type: System.Security.Cryptography.CipherMode
#include "System/Security/Cryptography/CipherMode.hpp"
// Including type: System.Security.Cryptography.PaddingMode
#include "System/Security/Cryptography/PaddingMode.hpp"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_IV
::ArrayW<uint8_t> System::Security::Cryptography::AesCryptoServiceProvider::get_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::get_IV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.set_IV
void System::Security::Cryptography::AesCryptoServiceProvider::set_IV(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::set_IV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_Key
::ArrayW<uint8_t> System::Security::Cryptography::AesCryptoServiceProvider::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.set_Key
void System::Security::Cryptography::AesCryptoServiceProvider::set_Key(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::set_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_KeySize
int System::Security::Cryptography::AesCryptoServiceProvider::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::get_KeySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.set_KeySize
void System::Security::Cryptography::AesCryptoServiceProvider::set_KeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::set_KeySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_KeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_FeedbackSize
int System::Security::Cryptography::AesCryptoServiceProvider::get_FeedbackSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::get_FeedbackSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FeedbackSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_Mode
System::Security::Cryptography::CipherMode System::Security::Cryptography::AesCryptoServiceProvider::get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::get_Mode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::CipherMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.set_Mode
void System::Security::Cryptography::AesCryptoServiceProvider::set_Mode(System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::set_Mode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_Padding
System::Security::Cryptography::PaddingMode System::Security::Cryptography::AesCryptoServiceProvider::get_Padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::get_Padding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::PaddingMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.set_Padding
void System::Security::Cryptography::AesCryptoServiceProvider::set_Padding(System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::set_Padding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV
void System::Security::Cryptography::AesCryptoServiceProvider::GenerateIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::GenerateIV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateIV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey
void System::Security::Cryptography::AesCryptoServiceProvider::GenerateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::GenerateKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesCryptoServiceProvider::CreateDecryptor(::ArrayW<uint8_t> key, ::ArrayW<uint8_t> iv) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDecryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(iv)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, key, iv);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesCryptoServiceProvider::CreateEncryptor(::ArrayW<uint8_t> key, ::ArrayW<uint8_t> iv) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEncryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(iv)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, key, iv);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesCryptoServiceProvider::CreateDecryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDecryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesCryptoServiceProvider::CreateEncryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEncryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.Dispose
void System::Security::Cryptography::AesCryptoServiceProvider::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AesTransform
#include "System/Security/Cryptography/AesTransform.hpp"
// Including type: System.Security.Cryptography.Aes
#include "System/Security/Cryptography/Aes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] Rcon
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_Rcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_Rcon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "Rcon"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] Rcon
void System::Security::Cryptography::AesTransform::_set_Rcon(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_Rcon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "Rcon", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] SBox
::ArrayW<uint8_t> System::Security::Cryptography::AesTransform::_get_SBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_SBox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography", "AesTransform", "SBox"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] SBox
void System::Security::Cryptography::AesTransform::_set_SBox(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_SBox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "SBox", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] iSBox
::ArrayW<uint8_t> System::Security::Cryptography::AesTransform::_get_iSBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_iSBox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography", "AesTransform", "iSBox"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] iSBox
void System::Security::Cryptography::AesTransform::_set_iSBox(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_iSBox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "iSBox", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] T0
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_T0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_T0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "T0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] T0
void System::Security::Cryptography::AesTransform::_set_T0(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_T0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "T0", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] T1
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_T1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_T1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "T1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] T1
void System::Security::Cryptography::AesTransform::_set_T1(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_T1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "T1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] T2
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_T2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_T2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "T2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] T2
void System::Security::Cryptography::AesTransform::_set_T2(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_T2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "T2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] T3
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_T3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_T3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "T3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] T3
void System::Security::Cryptography::AesTransform::_set_T3(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_T3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "T3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] iT0
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_iT0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_iT0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "iT0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] iT0
void System::Security::Cryptography::AesTransform::_set_iT0(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_iT0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "iT0", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] iT1
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_iT1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_iT1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "iT1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] iT1
void System::Security::Cryptography::AesTransform::_set_iT1(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_iT1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "iT1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] iT2
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_iT2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_iT2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "iT2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] iT2
void System::Security::Cryptography::AesTransform::_set_iT2(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_iT2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "iT2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] iT3
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_iT3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_iT3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "iT3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] iT3
void System::Security::Cryptography::AesTransform::_set_iT3(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_iT3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "iT3", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] expandedKey
::ArrayW<uint>& System::Security::Cryptography::AesTransform::dyn_expandedKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::dyn_expandedKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expandedKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 Nk
int& System::Security::Cryptography::AesTransform::dyn_Nk() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::dyn_Nk");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Nk"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 Nr
int& System::Security::Cryptography::AesTransform::dyn_Nr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::dyn_Nr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Nr"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.AesTransform..cctor
void System::Security::Cryptography::AesTransform::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "AesTransform", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesTransform.SubByte
uint System::Security::Cryptography::AesTransform::SubByte(uint a) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::SubByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, a);
}
// Autogenerated method: System.Security.Cryptography.AesTransform.Encrypt128
void System::Security::Cryptography::AesTransform::Encrypt128(::ArrayW<uint8_t> indata, ::ArrayW<uint8_t> outdata, ::ArrayW<uint> ekey) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::Encrypt128");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encrypt128", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indata), ::il2cpp_utils::ExtractType(outdata), ::il2cpp_utils::ExtractType(ekey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, indata, outdata, ekey);
}
// Autogenerated method: System.Security.Cryptography.AesTransform.Decrypt128
void System::Security::Cryptography::AesTransform::Decrypt128(::ArrayW<uint8_t> indata, ::ArrayW<uint8_t> outdata, ::ArrayW<uint> ekey) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::Decrypt128");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decrypt128", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indata), ::il2cpp_utils::ExtractType(outdata), ::il2cpp_utils::ExtractType(ekey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, indata, outdata, ekey);
}
// Autogenerated method: System.Security.Cryptography.AesTransform.ECB
void System::Security::Cryptography::AesTransform::ECB(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::ECB");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ECB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.RSACertificateExtensions
#include "System/Security/Cryptography/X509Certificates/RSACertificateExtensions.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.X509Certificates.RSACertificateExtensions.GetRSAPublicKey
System::Security::Cryptography::RSA* System::Security::Cryptography::X509Certificates::RSACertificateExtensions::GetRSAPublicKey(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::RSACertificateExtensions::GetRSAPublicKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "RSACertificateExtensions", "GetRSAPublicKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::RSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, certificate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Error
#include "System/Linq/Error.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Error.ArgumentNull
System::Exception* System::Linq::Error::ArgumentNull(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Error::ArgumentNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "ArgumentNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Linq.Error.ArgumentOutOfRange
System::Exception* System::Linq::Error::ArgumentOutOfRange(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Error::ArgumentOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "ArgumentOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Linq.Error.MoreThanOneElement
System::Exception* System::Linq::Error::MoreThanOneElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Error::MoreThanOneElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "MoreThanOneElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Error.MoreThanOneMatch
System::Exception* System::Linq::Error::MoreThanOneMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Error::MoreThanOneMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "MoreThanOneMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Error.NoElements
System::Exception* System::Linq::Error::NoElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Error::NoElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "NoElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Error.NoMatch
System::Exception* System::Linq::Error::NoMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Error::NoMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "NoMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Error.NotSupported
System::Exception* System::Linq::Error::NotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Error::NotSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "NotSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Enumerable
#include "System/Linq/Enumerable.hpp"
// Including type: System.Linq.Enumerable/System.Linq.Iterator`1
#include "System/Linq/Enumerable_Iterator_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereEnumerableIterator`1
#include "System/Linq/Enumerable_WhereEnumerableIterator_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereArrayIterator`1
#include "System/Linq/Enumerable_WhereArrayIterator_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereListIterator`1
#include "System/Linq/Enumerable_WhereListIterator_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereSelectEnumerableIterator`2
#include "System/Linq/Enumerable_WhereSelectEnumerableIterator_2.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereSelectArrayIterator`2
#include "System/Linq/Enumerable_WhereSelectArrayIterator_2.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereSelectListIterator`2
#include "System/Linq/Enumerable_WhereSelectListIterator_2.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<>c__DisplayClass6_0`1
#include "System/Linq/Enumerable_--c__DisplayClass6_0_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<>c__DisplayClass7_0`3
#include "System/Linq/Enumerable_--c__DisplayClass7_0_3.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<SelectManyIterator>d__17`2
#include "System/Linq/Enumerable_-SelectManyIterator-d__17_2.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<TakeIterator>d__25`1
#include "System/Linq/Enumerable_-TakeIterator-d__25_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<SkipIterator>d__31`1
#include "System/Linq/Enumerable_-SkipIterator-d__31_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<ConcatIterator>d__59`1
#include "System/Linq/Enumerable_-ConcatIterator-d__59_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<AppendIterator>d__61`1
#include "System/Linq/Enumerable_-AppendIterator-d__61_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<DistinctIterator>d__68`1
#include "System/Linq/Enumerable_-DistinctIterator-d__68_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<ExceptIterator>d__77`1
#include "System/Linq/Enumerable_-ExceptIterator-d__77_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<ReverseIterator>d__79`1
#include "System/Linq/Enumerable_-ReverseIterator-d__79_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<DefaultIfEmptyIterator>d__95`1
#include "System/Linq/Enumerable_-DefaultIfEmptyIterator-d__95_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<OfTypeIterator>d__97`1
#include "System/Linq/Enumerable_-OfTypeIterator-d__97_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<CastIterator>d__99`1
#include "System/Linq/Enumerable_-CastIterator-d__99_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115
#include "System/Linq/Enumerable_-RangeIterator-d__115.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<RepeatIterator>d__117`1
#include "System/Linq/Enumerable_-RepeatIterator-d__117_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Linq.IOrderedEnumerable`1
#include "System/Linq/IOrderedEnumerable_1.hpp"
// Including type: System.Linq.IGrouping`2
#include "System/Linq/IGrouping_2.hpp"
// Including type: System.Collections.Generic.IEqualityComparer`1
#include "System/Collections/Generic/IEqualityComparer_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Enumerable.Range
System::Collections::Generic::IEnumerable_1<int>* System::Linq::Enumerable::Range(int start, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::Range");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "Range", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerable_1<int>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, count);
}
// Autogenerated method: System.Linq.Enumerable.RangeIterator
System::Collections::Generic::IEnumerable_1<int>* System::Linq::Enumerable::RangeIterator(int start, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::RangeIterator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "RangeIterator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerable_1<int>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, count);
}
// Autogenerated method: System.Linq.Enumerable.Sum
int System::Linq::Enumerable::Sum(System::Collections::Generic::IEnumerable_1<int>* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::Sum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "Sum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: System.Linq.Enumerable.Min
float System::Linq::Enumerable::Min(System::Collections::Generic::IEnumerable_1<float>* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: System.Linq.Enumerable.Max
int System::Linq::Enumerable::Max(System::Collections::Generic::IEnumerable_1<int>* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: System.Linq.Enumerable.Max
float System::Linq::Enumerable::Max(System::Collections::Generic::IEnumerable_1<float>* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115
#include "System/Linq/Enumerable_-RangeIterator-d__115.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>2__current
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 start
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::dyn_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>3__start
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$3__start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$3__start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__1
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$i$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::dyn_$i$5__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>3__count
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$3__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$3__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.Collections.Generic.IEnumerator<System.Int32>.get_Current
int System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_Generic_IEnumerator$System_Int32$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.Generic.IEnumerator<System.Int32>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Int32>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.IDisposable.Dispose
void System::Linq::Enumerable::$RangeIterator$d__115::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.MoveNext
bool System::Linq::Enumerable::$RangeIterator$d__115::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.Collections.IEnumerator.Reset
void System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator
System::Collections::Generic::IEnumerator_1<int>* System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_Generic_IEnumerable$System_Int32$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerator_1<int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.BitHelper
#include "System/Collections/Generic/BitHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _length
int& System::Collections::Generic::BitHelper::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::BitHelper::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32* _arrayPtr
int*& System::Collections::Generic::BitHelper::dyn__arrayPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::BitHelper::dyn__arrayPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arrayPtr"))->offset;
  return *reinterpret_cast<int**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32[] _array
::ArrayW<int>& System::Collections::Generic::BitHelper::dyn__array() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::BitHelper::dyn__array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_array"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _useStackAlloc
bool& System::Collections::Generic::BitHelper::dyn__useStackAlloc() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::BitHelper::dyn__useStackAlloc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useStackAlloc"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Generic.BitHelper.MarkBit
void System::Collections::Generic::BitHelper::MarkBit(int bitPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::BitHelper::MarkBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bitPosition);
}
// Autogenerated method: System.Collections.Generic.BitHelper.IsMarked
bool System::Collections::Generic::BitHelper::IsMarked(int bitPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::BitHelper::IsMarked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMarked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bitPosition);
}
// Autogenerated method: System.Collections.Generic.BitHelper.ToIntArrayLength
int System::Collections::Generic::BitHelper::ToIntArrayLength(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::BitHelper::ToIntArrayLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "BitHelper", "ToIntArrayLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Util.MonoPInvokeCallbackAttribute
#include "Mono/Util/MonoPInvokeCallbackAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.CertHelper
#include "Mono/Unity/CertHelper.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.CertHelper.AddCertificatesToNativeChain
void Mono::Unity::CertHelper::AddCertificatesToNativeChain(Mono::Unity::UnityTls::unitytls_x509list* nativeCertificateChain, System::Security::Cryptography::X509Certificates::X509CertificateCollection* certificates, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::CertHelper::AddCertificatesToNativeChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "CertHelper", "AddCertificatesToNativeChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeCertificateChain), ::il2cpp_utils::ExtractType(certificates), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nativeCertificateChain, certificates, errorState);
}
// Autogenerated method: Mono.Unity.CertHelper.AddCertificateToNativeChain
void Mono::Unity::CertHelper::AddCertificateToNativeChain(Mono::Unity::UnityTls::unitytls_x509list* nativeCertificateChain, System::Security::Cryptography::X509Certificates::X509Certificate* certificate, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::CertHelper::AddCertificateToNativeChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "CertHelper", "AddCertificateToNativeChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeCertificateChain), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nativeCertificateChain, certificate, errorState);
}
// Autogenerated method: Mono.Unity.CertHelper.NativeChainToManagedCollection
System::Security::Cryptography::X509Certificates::X509CertificateCollection* Mono::Unity::CertHelper::NativeChainToManagedCollection(Mono::Unity::UnityTls::unitytls_x509list_ref nativeCertificateChain, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::CertHelper::NativeChainToManagedCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "CertHelper", "NativeChainToManagedCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeCertificateChain), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::X509Certificates::X509CertificateCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nativeCertificateChain, errorState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.Debug
#include "Mono/Unity/Debug.hpp"
// Including type: Mono.Security.Interface.AlertDescription
#include "Mono/Security/Interface/AlertDescription.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.Debug.CheckAndThrow
void Mono::Unity::Debug::CheckAndThrow(Mono::Unity::UnityTls::unitytls_errorstate errorState, ::StringW context, Mono::Security::Interface::AlertDescription defaultAlert) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::Debug::CheckAndThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "Debug", "CheckAndThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(defaultAlert)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorState, context, defaultAlert);
}
// Autogenerated method: Mono.Unity.Debug.CheckAndThrow
void Mono::Unity::Debug::CheckAndThrow(Mono::Unity::UnityTls::unitytls_errorstate errorState, Mono::Unity::UnityTls::unitytls_x509verify_result verifyResult, ::StringW context, Mono::Security::Interface::AlertDescription defaultAlert) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::Debug::CheckAndThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "Debug", "CheckAndThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(verifyResult), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(defaultAlert)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorState, verifyResult, context, defaultAlert);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTls
#include "Mono/Unity/UnityTls.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code
#include "Mono/Unity/UnityTls_unitytls_error_code.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_key
#include "Mono/Unity/UnityTls_unitytls_key.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_key_ref
#include "Mono/Unity/UnityTls_unitytls_key_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509_ref
#include "Mono/Unity/UnityTls_unitytls_x509_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509name
#include "Mono/Unity/UnityTls_unitytls_x509name.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_ciphersuite
#include "Mono/Unity/UnityTls_unitytls_ciphersuite.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol
#include "Mono/Unity/UnityTls_unitytls_protocol.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_protocolrange
#include "Mono/Unity/UnityTls_unitytls_tlsctx_protocolrange.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_write_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_write_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_read_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_read_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_trace_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_trace_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_certificate_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_certificate_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_callbacks
#include "Mono/Unity/UnityTls_unitytls_tlsctx_callbacks.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct
#include "Mono/Unity/UnityTls_unitytls_interface_struct.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct marshalledInterface
Mono::Unity::UnityTls::unitytls_interface_struct* Mono::Unity::UnityTls::_get_marshalledInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::_get_marshalledInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_interface_struct*>("Mono.Unity", "UnityTls", "marshalledInterface"));
}
// Autogenerated static field setter
// Set static field: static private Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct marshalledInterface
void Mono::Unity::UnityTls::_set_marshalledInterface(Mono::Unity::UnityTls::unitytls_interface_struct* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::_set_marshalledInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls", "marshalledInterface", value));
}
// Autogenerated method: Mono.Unity.UnityTls.get_IsSupported
bool Mono::Unity::UnityTls::get_IsSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::get_IsSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTls", "get_IsSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTls.get_NativeInterface
Mono::Unity::UnityTls::unitytls_interface_struct* Mono::Unity::UnityTls::get_NativeInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::get_NativeInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTls", "get_NativeInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_interface_struct*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTls.GetUnityTlsInterface
System::IntPtr Mono::Unity::UnityTls::GetUnityTlsInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::GetUnityTlsInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTls", "GetUnityTlsInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code
#include "Mono/Unity/UnityTls_unitytls_error_code.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_SUCCESS
Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_SUCCESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_SUCCESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_SUCCESS"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_SUCCESS
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_SUCCESS(Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_SUCCESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_SUCCESS", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_INVALID_ARGUMENT
Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_ARGUMENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_ARGUMENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_ARGUMENT"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_INVALID_ARGUMENT
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_ARGUMENT(Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_ARGUMENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_ARGUMENT", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_INVALID_FORMAT
Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_FORMAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_FORMAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_FORMAT"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_INVALID_FORMAT
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_FORMAT(Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_FORMAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_FORMAT", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_INVALID_PASSWORD
Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_PASSWORD() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_PASSWORD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_PASSWORD"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_INVALID_PASSWORD
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_PASSWORD(Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_PASSWORD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_PASSWORD", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_INVALID_STATE
Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_STATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_STATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_STATE"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_INVALID_STATE
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_STATE(Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_STATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_STATE", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_BUFFER_OVERFLOW
Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_BUFFER_OVERFLOW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_BUFFER_OVERFLOW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_BUFFER_OVERFLOW"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_BUFFER_OVERFLOW
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_BUFFER_OVERFLOW(Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_BUFFER_OVERFLOW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_BUFFER_OVERFLOW", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_OUT_OF_MEMORY
Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_OUT_OF_MEMORY() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_OUT_OF_MEMORY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_OUT_OF_MEMORY"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_OUT_OF_MEMORY
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_OUT_OF_MEMORY(Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_OUT_OF_MEMORY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_OUT_OF_MEMORY", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_INTERNAL_ERROR
Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INTERNAL_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INTERNAL_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INTERNAL_ERROR"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_INTERNAL_ERROR
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INTERNAL_ERROR(Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INTERNAL_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INTERNAL_ERROR", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_NOT_SUPPORTED
Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_NOT_SUPPORTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_NOT_SUPPORTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_NOT_SUPPORTED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_NOT_SUPPORTED
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_NOT_SUPPORTED(Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_NOT_SUPPORTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_NOT_SUPPORTED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_ENTROPY_SOURCE_FAILED
Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_ENTROPY_SOURCE_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_ENTROPY_SOURCE_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_ENTROPY_SOURCE_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_ENTROPY_SOURCE_FAILED
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_ENTROPY_SOURCE_FAILED(Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_ENTROPY_SOURCE_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_ENTROPY_SOURCE_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_STREAM_CLOSED
Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_STREAM_CLOSED() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_STREAM_CLOSED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_STREAM_CLOSED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_STREAM_CLOSED
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_STREAM_CLOSED(Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_STREAM_CLOSED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_STREAM_CLOSED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_CUSTOM_ERROR_START
Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_CUSTOM_ERROR_START() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_CUSTOM_ERROR_START");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_CUSTOM_ERROR_START"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_CUSTOM_ERROR_START
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_CUSTOM_ERROR_START(Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_CUSTOM_ERROR_START");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_CUSTOM_ERROR_START", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_WOULD_BLOCK
Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_WOULD_BLOCK() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_WOULD_BLOCK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_WOULD_BLOCK"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_WOULD_BLOCK
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_WOULD_BLOCK(Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_WOULD_BLOCK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_WOULD_BLOCK", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_READ_FAILED
Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_READ_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_READ_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_READ_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_READ_FAILED
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_READ_FAILED(Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_READ_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_READ_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_WRITE_FAILED
Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_WRITE_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_WRITE_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_WRITE_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_WRITE_FAILED
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_WRITE_FAILED(Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_WRITE_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_WRITE_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_UNKNOWN_ERROR
Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_UNKNOWN_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_UNKNOWN_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_UNKNOWN_ERROR"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_UNKNOWN_ERROR
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_UNKNOWN_ERROR(Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_UNKNOWN_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_UNKNOWN_ERROR", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_CUSTOM_ERROR_END
Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_CUSTOM_ERROR_END() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_CUSTOM_ERROR_END");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_CUSTOM_ERROR_END"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_CUSTOM_ERROR_END
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_CUSTOM_ERROR_END(Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_CUSTOM_ERROR_END");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_CUSTOM_ERROR_END", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& Mono::Unity::UnityTls::unitytls_error_code::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_error_code::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_SUCCESS
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_SUCCESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_SUCCESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_SUCCESS"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_SUCCESS
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_SUCCESS(Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_SUCCESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_SUCCESS", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_NOT_DONE
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_NOT_DONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_NOT_DONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_NOT_DONE"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_NOT_DONE
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_NOT_DONE(Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_NOT_DONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_NOT_DONE", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FATAL_ERROR
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FATAL_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FATAL_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FATAL_ERROR"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FATAL_ERROR
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FATAL_ERROR(Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FATAL_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FATAL_ERROR", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_EXPIRED
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_EXPIRED() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_EXPIRED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_EXPIRED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_EXPIRED
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_EXPIRED(Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_EXPIRED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_EXPIRED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_REVOKED
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_REVOKED() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_REVOKED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_REVOKED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_REVOKED
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_REVOKED(Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_REVOKED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_REVOKED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH(Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED(Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR1
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR1
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR1(Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR2
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR2"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR2
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR2(Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR2", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR3
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR3"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR3
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR3(Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR3", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR4
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR4() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR4"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR4
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR4(Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR4", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR5
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR5() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR5"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR5
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR5(Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR5", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR6
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR6() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR6"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR6
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR6(Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR6", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR7
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR7() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR7"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR7
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR7(Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR7", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR8
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR8() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR8"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR8
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR8(Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR8", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR(Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& Mono::Unity::UnityTls::unitytls_x509verify_result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_x509verify_callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509_ref
#include "Mono/Unity/UnityTls_unitytls_x509_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_callback.Invoke
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_callback::Invoke(void* userData, Mono::Unity::UnityTls::unitytls_x509_ref cert, Mono::Unity::UnityTls::unitytls_x509verify_result result, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_callback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(cert), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, userData, cert, result, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_callback.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_x509verify_callback::BeginInvoke(void* userData, Mono::Unity::UnityTls::unitytls_x509_ref cert, Mono::Unity::UnityTls::unitytls_x509verify_result result, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(cert), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, userData, cert, result, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_callback.EndInvoke
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_callback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_x509verify_callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_ciphersuite
#include "Mono/Unity/UnityTls_unitytls_ciphersuite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_ciphersuite UNITYTLS_CIPHERSUITE_INVALID
Mono::Unity::UnityTls::unitytls_ciphersuite Mono::Unity::UnityTls::unitytls_ciphersuite::_get_UNITYTLS_CIPHERSUITE_INVALID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_ciphersuite::_get_UNITYTLS_CIPHERSUITE_INVALID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_ciphersuite>("Mono.Unity", "UnityTls/unitytls_ciphersuite", "UNITYTLS_CIPHERSUITE_INVALID"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_ciphersuite UNITYTLS_CIPHERSUITE_INVALID
void Mono::Unity::UnityTls::unitytls_ciphersuite::_set_UNITYTLS_CIPHERSUITE_INVALID(Mono::Unity::UnityTls::unitytls_ciphersuite value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_ciphersuite::_set_UNITYTLS_CIPHERSUITE_INVALID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_ciphersuite", "UNITYTLS_CIPHERSUITE_INVALID", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& Mono::Unity::UnityTls::unitytls_ciphersuite::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_ciphersuite::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol
#include "Mono/Unity/UnityTls_unitytls_protocol.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_0
Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_TLS_1_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_TLS_1_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_protocol>("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_TLS_1_0"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_0
void Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_TLS_1_0(Mono::Unity::UnityTls::unitytls_protocol value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_TLS_1_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_TLS_1_0", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_1
Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_TLS_1_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_TLS_1_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_protocol>("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_TLS_1_1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_1
void Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_TLS_1_1(Mono::Unity::UnityTls::unitytls_protocol value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_TLS_1_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_TLS_1_1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_2
Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_TLS_1_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_TLS_1_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_protocol>("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_TLS_1_2"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_2
void Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_TLS_1_2(Mono::Unity::UnityTls::unitytls_protocol value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_TLS_1_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_TLS_1_2", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol UNITYTLS_PROTOCOL_INVALID
Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_INVALID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_INVALID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Unity::UnityTls::unitytls_protocol>("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_INVALID"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol UNITYTLS_PROTOCOL_INVALID
void Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_INVALID(Mono::Unity::UnityTls::unitytls_protocol value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_INVALID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_INVALID", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& Mono::Unity::UnityTls::unitytls_protocol::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_protocol::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_write_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_write_callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_write_callback.Invoke
System::IntPtr Mono::Unity::UnityTls::unitytls_tlsctx_write_callback::Invoke(void* userData, uint8_t* data, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_tlsctx_write_callback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method, userData, data, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_write_callback.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_tlsctx_write_callback::BeginInvoke(void* userData, uint8_t* data, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_tlsctx_write_callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, userData, data, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_write_callback.EndInvoke
System::IntPtr Mono::Unity::UnityTls::unitytls_tlsctx_write_callback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_tlsctx_write_callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_read_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_read_callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_read_callback.Invoke
System::IntPtr Mono::Unity::UnityTls::unitytls_tlsctx_read_callback::Invoke(void* userData, uint8_t* buffer, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_tlsctx_read_callback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method, userData, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_read_callback.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_tlsctx_read_callback::BeginInvoke(void* userData, uint8_t* buffer, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_tlsctx_read_callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, userData, buffer, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_read_callback.EndInvoke
System::IntPtr Mono::Unity::UnityTls::unitytls_tlsctx_read_callback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_tlsctx_read_callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_trace_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_trace_callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_trace_callback.Invoke
void Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback::Invoke(void* userData, Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* traceMessage, System::IntPtr traceMessageLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(traceMessage), ::il2cpp_utils::ExtractType(traceMessageLen)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userData, ctx, traceMessage, traceMessageLen);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_trace_callback.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback::BeginInvoke(void* userData, Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* traceMessage, System::IntPtr traceMessageLen, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(traceMessage), ::il2cpp_utils::ExtractType(traceMessageLen), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, userData, ctx, traceMessage, traceMessageLen, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_trace_callback.EndInvoke
void Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_certificate_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_certificate_callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509name
#include "Mono/Unity/UnityTls_unitytls_x509name.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_key_ref
#include "Mono/Unity/UnityTls_unitytls_key_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_certificate_callback.Invoke
void Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback::Invoke(void* userData, Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* cn, System::IntPtr cnLen, Mono::Unity::UnityTls::unitytls_x509name* caList, System::IntPtr caListLen, Mono::Unity::UnityTls::unitytls_x509list_ref* chain, Mono::Unity::UnityTls::unitytls_key_ref* key, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(cn), ::il2cpp_utils::ExtractType(cnLen), ::il2cpp_utils::ExtractType(caList), ::il2cpp_utils::ExtractType(caListLen), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userData, ctx, cn, cnLen, caList, caListLen, chain, key, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_certificate_callback.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback::BeginInvoke(void* userData, Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* cn, System::IntPtr cnLen, Mono::Unity::UnityTls::unitytls_x509name* caList, System::IntPtr caListLen, Mono::Unity::UnityTls::unitytls_x509list_ref* chain, Mono::Unity::UnityTls::unitytls_key_ref* key, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(cn), ::il2cpp_utils::ExtractType(cnLen), ::il2cpp_utils::ExtractType(caList), ::il2cpp_utils::ExtractType(caListLen), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, userData, ctx, cn, cnLen, caList, caListLen, chain, key, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_certificate_callback.EndInvoke
void Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_x509verify_callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_x509verify_callback.Invoke
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback::Invoke(void* userData, Mono::Unity::UnityTls::unitytls_x509list_ref chain, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, userData, chain, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_x509verify_callback.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback::BeginInvoke(void* userData, Mono::Unity::UnityTls::unitytls_x509list_ref chain, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, userData, chain, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_x509verify_callback.EndInvoke
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct
#include "Mono/Unity/UnityTls_unitytls_interface_struct.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_create_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_errorstate_create_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_raise_error_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_errorstate_raise_error_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_get_ref_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_get_ref_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_der_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_parse_der_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_pem_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_parse_pem_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_free_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_free_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509_export_der_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509_export_der_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_ref_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_get_ref_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_x509_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_get_x509_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_create_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_create_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_append_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_der_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_append_der_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_free_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_free_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_default_ca_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509verify_default_ca_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_explicit_ca_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509verify_explicit_ca_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_server_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_server_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_client_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_client_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_server_require_client_authentication_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_server_require_client_authentication_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_certificate_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_certificate_callback_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_trace_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_trace_callback_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_x509verify_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_x509verify_callback_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_supported_ciphersuites_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_supported_ciphersuites_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_ciphersuite_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_ciphersuite_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_protocol_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_protocol_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_process_handshake_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_process_handshake_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_read_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_read_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_write_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_write_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_notify_close_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_notify_close_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_free_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_free_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_random_generate_bytes_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_random_generate_bytes_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 UNITYTLS_INVALID_HANDLE
uint64_t& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_UNITYTLS_INVALID_HANDLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_UNITYTLS_INVALID_HANDLE");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UNITYTLS_INVALID_HANDLE"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_protocolrange UNITYTLS_TLSCTX_PROTOCOLRANGE_DEFAULT
Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_UNITYTLS_TLSCTX_PROTOCOLRANGE_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_UNITYTLS_TLSCTX_PROTOCOLRANGE_DEFAULT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UNITYTLS_TLSCTX_PROTOCOLRANGE_DEFAULT"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_create_t unitytls_errorstate_create
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_errorstate_create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_errorstate_create");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_errorstate_create"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_raise_error_t unitytls_errorstate_raise_error
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_errorstate_raise_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_errorstate_raise_error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_errorstate_raise_error"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_get_ref_t unitytls_key_get_ref
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_get_ref() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_get_ref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_key_get_ref"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_der_t unitytls_key_parse_der
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_parse_der() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_parse_der");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_key_parse_der"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_pem_t unitytls_key_parse_pem
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_parse_pem() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_parse_pem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_key_parse_pem"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_free_t unitytls_key_free
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_free() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_free");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_key_free"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509_export_der_t unitytls_x509_export_der
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509_export_der() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509_export_der");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509_export_der"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_ref_t unitytls_x509list_get_ref
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_get_ref() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_get_ref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_get_ref"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_x509_t unitytls_x509list_get_x509
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_get_x509() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_get_x509");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_get_x509"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_create_t unitytls_x509list_create
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_create");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_create"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_t unitytls_x509list_append
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_append() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_append");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_append"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_der_t unitytls_x509list_append_der
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_append_der() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_append_der");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_append_der"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_der_t unitytls_x509list_append_pem
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_append_pem() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_append_pem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_append_pem"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_free_t unitytls_x509list_free
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_free() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_free");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_free"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_default_ca_t unitytls_x509verify_default_ca
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509verify_default_ca() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509verify_default_ca");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509verify_default_ca"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_explicit_ca_t unitytls_x509verify_explicit_ca
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509verify_explicit_ca() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509verify_explicit_ca");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509verify_explicit_ca"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_server_t unitytls_tlsctx_create_server
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_create_server() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_create_server");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_create_server"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_client_t unitytls_tlsctx_create_client
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_create_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_create_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_create_client"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_server_require_client_authentication_t unitytls_tlsctx_server_require_client_authentication
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_server_require_client_authentication() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_server_require_client_authentication");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_server_require_client_authentication"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_certificate_callback_t unitytls_tlsctx_set_certificate_callback
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_certificate_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_certificate_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_set_certificate_callback"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_trace_callback_t unitytls_tlsctx_set_trace_callback
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_trace_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_trace_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_set_trace_callback"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_x509verify_callback_t unitytls_tlsctx_set_x509verify_callback
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_x509verify_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_x509verify_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_set_x509verify_callback"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_supported_ciphersuites_t unitytls_tlsctx_set_supported_ciphersuites
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_supported_ciphersuites() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_supported_ciphersuites");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_set_supported_ciphersuites"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_ciphersuite_t unitytls_tlsctx_get_ciphersuite
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_get_ciphersuite() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_get_ciphersuite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_get_ciphersuite"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_protocol_t unitytls_tlsctx_get_protocol
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_get_protocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_get_protocol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_get_protocol"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_process_handshake_t unitytls_tlsctx_process_handshake
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_process_handshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_process_handshake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_process_handshake"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_read_t unitytls_tlsctx_read
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_read() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_read");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_read"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_write_t unitytls_tlsctx_write
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_write() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_write");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_write"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_notify_close_t unitytls_tlsctx_notify_close
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_notify_close() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_notify_close");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_notify_close"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_free_t unitytls_tlsctx_free
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_free() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_free");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_free"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_random_generate_bytes_t unitytls_random_generate_bytes
Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_random_generate_bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_random_generate_bytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_random_generate_bytes"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_create_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_errorstate_create_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_create_t.Invoke
Mono::Unity::UnityTls::unitytls_errorstate Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_errorstate, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_create_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_create_t.EndInvoke
Mono::Unity::UnityTls::unitytls_errorstate Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_errorstate, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_raise_error_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_errorstate_raise_error_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code
#include "Mono/Unity/UnityTls_unitytls_error_code.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_raise_error_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t::Invoke(Mono::Unity::UnityTls::unitytls_errorstate* errorState, Mono::Unity::UnityTls::unitytls_error_code errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(errorCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorState, errorCode);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_raise_error_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_errorstate* errorState, Mono::Unity::UnityTls::unitytls_error_code errorCode, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, errorState, errorCode, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_raise_error_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_get_ref_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_get_ref_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_key_ref
#include "Mono/Unity/UnityTls_unitytls_key_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_key
#include "Mono/Unity/UnityTls_unitytls_key.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_get_ref_t.Invoke
Mono::Unity::UnityTls::unitytls_key_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t::Invoke(Mono::Unity::UnityTls::unitytls_key* key, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_key_ref, false>(this, ___internal__method, key, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_get_ref_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_key* key, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, key, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_get_ref_t.EndInvoke
Mono::Unity::UnityTls::unitytls_key_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_key_ref, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_der_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_parse_der_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_key
#include "Mono/Unity/UnityTls_unitytls_key.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_der_t.Invoke
Mono::Unity::UnityTls::unitytls_key* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t::Invoke(uint8_t* buffer, System::IntPtr bufferLen, uint8_t* password, System::IntPtr passwordLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(passwordLen), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_key*, false>(this, ___internal__method, buffer, bufferLen, password, passwordLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_der_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t::BeginInvoke(uint8_t* buffer, System::IntPtr bufferLen, uint8_t* password, System::IntPtr passwordLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(passwordLen), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, bufferLen, password, passwordLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_der_t.EndInvoke
Mono::Unity::UnityTls::unitytls_key* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_key*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_pem_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_parse_pem_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_key
#include "Mono/Unity/UnityTls_unitytls_key.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_pem_t.Invoke
Mono::Unity::UnityTls::unitytls_key* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t::Invoke(uint8_t* buffer, System::IntPtr bufferLen, uint8_t* password, System::IntPtr passwordLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(passwordLen), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_key*, false>(this, ___internal__method, buffer, bufferLen, password, passwordLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_pem_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t::BeginInvoke(uint8_t* buffer, System::IntPtr bufferLen, uint8_t* password, System::IntPtr passwordLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(passwordLen), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, bufferLen, password, passwordLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_pem_t.EndInvoke
Mono::Unity::UnityTls::unitytls_key* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_key*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_free_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_free_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_key
#include "Mono/Unity/UnityTls_unitytls_key.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_free_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t::Invoke(Mono::Unity::UnityTls::unitytls_key* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_free_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_key* key, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, key, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_free_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509_export_der_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509_export_der_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509_ref
#include "Mono/Unity/UnityTls_unitytls_x509_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509_export_der_t.Invoke
System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t::Invoke(Mono::Unity::UnityTls::unitytls_x509_ref cert, uint8_t* buffer, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method, cert, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509_export_der_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_x509_ref cert, uint8_t* buffer, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, cert, buffer, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509_export_der_t.EndInvoke
System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_ref_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_get_ref_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_ref_t.Invoke
Mono::Unity::UnityTls::unitytls_x509list_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::Invoke(Mono::Unity::UnityTls::unitytls_x509list* list, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_x509list_ref, false>(this, ___internal__method, list, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_ref_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_x509list* list, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, list, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_ref_t.EndInvoke
Mono::Unity::UnityTls::unitytls_x509list_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_x509list_ref, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_x509_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_get_x509_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509_ref
#include "Mono/Unity/UnityTls_unitytls_x509_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_x509_t.Invoke
Mono::Unity::UnityTls::unitytls_x509_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::Invoke(Mono::Unity::UnityTls::unitytls_x509list_ref list, System::IntPtr index, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_x509_ref, false>(this, ___internal__method, list, index, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_x509_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_x509list_ref list, System::IntPtr index, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, list, index, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_x509_t.EndInvoke
Mono::Unity::UnityTls::unitytls_x509_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_x509_ref, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_create_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_create_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_create_t.Invoke
Mono::Unity::UnityTls::unitytls_x509list* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::Invoke(Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_x509list*, false>(this, ___internal__method, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_create_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_create_t.EndInvoke
Mono::Unity::UnityTls::unitytls_x509list* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_x509list*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_append_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509_ref
#include "Mono/Unity/UnityTls_unitytls_x509_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::Invoke(Mono::Unity::UnityTls::unitytls_x509list* list, Mono::Unity::UnityTls::unitytls_x509_ref cert, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(cert), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, list, cert, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_x509list* list, Mono::Unity::UnityTls::unitytls_x509_ref cert, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(cert), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, list, cert, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_der_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_append_der_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_der_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::Invoke(Mono::Unity::UnityTls::unitytls_x509list* list, uint8_t* buffer, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, list, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_der_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_x509list* list, uint8_t* buffer, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, list, buffer, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_der_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_free_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_free_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_free_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::Invoke(Mono::Unity::UnityTls::unitytls_x509list* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, list);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_free_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_x509list* list, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, list, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_free_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_default_ca_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509verify_default_ca_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_default_ca_t.Invoke
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::Invoke(Mono::Unity::UnityTls::unitytls_x509list_ref chain, uint8_t* cn, System::IntPtr cnLen, Mono::Unity::UnityTls::unitytls_x509verify_callback* cb, void* userData, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(cn), ::il2cpp_utils::ExtractType(cnLen), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, chain, cn, cnLen, cb, userData, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_default_ca_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_x509list_ref chain, uint8_t* cn, System::IntPtr cnLen, Mono::Unity::UnityTls::unitytls_x509verify_callback* cb, void* userData, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(cn), ::il2cpp_utils::ExtractType(cnLen), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, chain, cn, cnLen, cb, userData, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_default_ca_t.EndInvoke
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_explicit_ca_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509verify_explicit_ca_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_explicit_ca_t.Invoke
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::Invoke(Mono::Unity::UnityTls::unitytls_x509list_ref chain, Mono::Unity::UnityTls::unitytls_x509list_ref trustCA, uint8_t* cn, System::IntPtr cnLen, Mono::Unity::UnityTls::unitytls_x509verify_callback* cb, void* userData, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(trustCA), ::il2cpp_utils::ExtractType(cn), ::il2cpp_utils::ExtractType(cnLen), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, chain, trustCA, cn, cnLen, cb, userData, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_explicit_ca_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_x509list_ref chain, Mono::Unity::UnityTls::unitytls_x509list_ref trustCA, uint8_t* cn, System::IntPtr cnLen, Mono::Unity::UnityTls::unitytls_x509verify_callback* cb, void* userData, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(trustCA), ::il2cpp_utils::ExtractType(cn), ::il2cpp_utils::ExtractType(cnLen), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, chain, trustCA, cn, cnLen, cb, userData, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_explicit_ca_t.EndInvoke
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_server_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_server_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_protocolrange
#include "Mono/Unity/UnityTls_unitytls_tlsctx_protocolrange.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_callbacks
#include "Mono/Unity/UnityTls_unitytls_tlsctx_callbacks.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_server_t.Invoke
Mono::Unity::UnityTls::unitytls_tlsctx* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange supportedProtocols, Mono::Unity::UnityTls::unitytls_tlsctx_callbacks callbacks, uint64_t certChain, uint64_t leafCertificateKey, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(supportedProtocols), ::il2cpp_utils::ExtractType(callbacks), ::il2cpp_utils::ExtractType(certChain), ::il2cpp_utils::ExtractType(leafCertificateKey), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_tlsctx*, false>(this, ___internal__method, supportedProtocols, callbacks, certChain, leafCertificateKey, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_server_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange supportedProtocols, Mono::Unity::UnityTls::unitytls_tlsctx_callbacks callbacks, uint64_t certChain, uint64_t leafCertificateKey, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(supportedProtocols), ::il2cpp_utils::ExtractType(callbacks), ::il2cpp_utils::ExtractType(certChain), ::il2cpp_utils::ExtractType(leafCertificateKey), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, supportedProtocols, callbacks, certChain, leafCertificateKey, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_server_t.EndInvoke
Mono::Unity::UnityTls::unitytls_tlsctx* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_tlsctx*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_client_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_client_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_protocolrange
#include "Mono/Unity/UnityTls_unitytls_tlsctx_protocolrange.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_callbacks
#include "Mono/Unity/UnityTls_unitytls_tlsctx_callbacks.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_client_t.Invoke
Mono::Unity::UnityTls::unitytls_tlsctx* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange supportedProtocols, Mono::Unity::UnityTls::unitytls_tlsctx_callbacks callbacks, uint8_t* cn, System::IntPtr cnLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(supportedProtocols), ::il2cpp_utils::ExtractType(callbacks), ::il2cpp_utils::ExtractType(cn), ::il2cpp_utils::ExtractType(cnLen), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_tlsctx*, false>(this, ___internal__method, supportedProtocols, callbacks, cn, cnLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_client_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange supportedProtocols, Mono::Unity::UnityTls::unitytls_tlsctx_callbacks callbacks, uint8_t* cn, System::IntPtr cnLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(supportedProtocols), ::il2cpp_utils::ExtractType(callbacks), ::il2cpp_utils::ExtractType(cn), ::il2cpp_utils::ExtractType(cnLen), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, supportedProtocols, callbacks, cn, cnLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_client_t.EndInvoke
Mono::Unity::UnityTls::unitytls_tlsctx* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_tlsctx*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_server_require_client_authentication_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_server_require_client_authentication_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_server_require_client_authentication_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_x509list_ref clientAuthCAList, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(clientAuthCAList), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, clientAuthCAList, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_server_require_client_authentication_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_x509list_ref clientAuthCAList, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(clientAuthCAList), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, clientAuthCAList, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_server_require_client_authentication_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_certificate_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_certificate_callback_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_certificate_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_certificate_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_certificate_callback_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback* cb, void* userData, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, cb, userData, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_certificate_callback_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback* cb, void* userData, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, cb, userData, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_certificate_callback_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_trace_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_trace_callback_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_trace_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_trace_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_trace_callback_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback* cb, void* userData, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, cb, userData, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_trace_callback_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback* cb, void* userData, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, cb, userData, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_trace_callback_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_x509verify_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_x509verify_callback_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_x509verify_callback_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback* cb, void* userData, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, cb, userData, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_x509verify_callback_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback* cb, void* userData, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, cb, userData, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_x509verify_callback_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_supported_ciphersuites_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_supported_ciphersuites_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_ciphersuite
#include "Mono/Unity/UnityTls_unitytls_ciphersuite.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_supported_ciphersuites_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_ciphersuite* supportedCiphersuites, System::IntPtr supportedCiphersuitesLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(supportedCiphersuites), ::il2cpp_utils::ExtractType(supportedCiphersuitesLen), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, supportedCiphersuites, supportedCiphersuitesLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_supported_ciphersuites_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_ciphersuite* supportedCiphersuites, System::IntPtr supportedCiphersuitesLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(supportedCiphersuites), ::il2cpp_utils::ExtractType(supportedCiphersuitesLen), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, supportedCiphersuites, supportedCiphersuitesLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_supported_ciphersuites_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_ciphersuite_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_ciphersuite_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_ciphersuite
#include "Mono/Unity/UnityTls_unitytls_ciphersuite.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_ciphersuite_t.Invoke
Mono::Unity::UnityTls::unitytls_ciphersuite Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_ciphersuite, false>(this, ___internal__method, ctx, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_ciphersuite_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_ciphersuite_t.EndInvoke
Mono::Unity::UnityTls::unitytls_ciphersuite Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_ciphersuite, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_protocol_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_protocol_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol
#include "Mono/Unity/UnityTls_unitytls_protocol.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_protocol_t.Invoke
Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_protocol, false>(this, ___internal__method, ctx, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_protocol_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_protocol_t.EndInvoke
Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_protocol, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_process_handshake_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_process_handshake_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_process_handshake_t.Invoke
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, ctx, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_process_handshake_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_process_handshake_t.EndInvoke
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_read_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_read_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_read_t.Invoke
System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* buffer, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method, ctx, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_read_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* buffer, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, buffer, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_read_t.EndInvoke
System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_write_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_write_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_write_t.Invoke
System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* data, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method, ctx, data, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_write_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* data, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, data, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_write_t.EndInvoke
System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_notify_close_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_notify_close_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_notify_close_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_notify_close_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_notify_close_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_free_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_free_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_free_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_free_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_free_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_random_generate_bytes_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_random_generate_bytes_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_random_generate_bytes_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::Invoke(uint8_t* buffer, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_random_generate_bytes_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::BeginInvoke(uint8_t* buffer, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_random_generate_bytes_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTlsContext
#include "Mono/Unity/UnityTlsContext.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: Mono.Security.Interface.MonoTlsConnectionInfo
#include "Mono/Security/Interface/MonoTlsConnectionInfo.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_key
#include "Mono/Unity/UnityTls_unitytls_key.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_read_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_read_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_write_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_write_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_certificate_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_certificate_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509name
#include "Mono/Unity/UnityTls_unitytls_x509name.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_key_ref
#include "Mono/Unity/UnityTls_unitytls_key_ref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx* tlsContext
Mono::Unity::UnityTls::unitytls_tlsctx*& Mono::Unity::UnityTlsContext::dyn_tlsContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::dyn_tlsContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tlsContext"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_tlsctx**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list* requestedClientCertChain
Mono::Unity::UnityTls::unitytls_x509list*& Mono::Unity::UnityTlsContext::dyn_requestedClientCertChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::dyn_requestedClientCertChain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestedClientCertChain"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_x509list**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Unity.UnityTls/Mono.Unity.unitytls_key* requestedClientKey
Mono::Unity::UnityTls::unitytls_key*& Mono::Unity::UnityTlsContext::dyn_requestedClientKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::dyn_requestedClientKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestedClientKey"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_key**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_read_callback readCallback
Mono::Unity::UnityTls::unitytls_tlsctx_read_callback*& Mono::Unity::UnityTlsContext::dyn_readCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::dyn_readCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readCallback"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_tlsctx_read_callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_write_callback writeCallback
Mono::Unity::UnityTls::unitytls_tlsctx_write_callback*& Mono::Unity::UnityTlsContext::dyn_writeCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::dyn_writeCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeCallback"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_tlsctx_write_callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_certificate_callback certificateCallback
Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback*& Mono::Unity::UnityTlsContext::dyn_certificateCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::dyn_certificateCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificateCallback"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_x509verify_callback verifyCallback
Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback*& Mono::Unity::UnityTlsContext::dyn_verifyCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::dyn_verifyCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verifyCallback"))->offset;
  return *reinterpret_cast<Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate localClientCertificate
System::Security::Cryptography::X509Certificates::X509Certificate*& Mono::Unity::UnityTlsContext::dyn_localClientCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::dyn_localClientCertificate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localClientCertificate"))->offset;
  return *reinterpret_cast<System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate remoteCertificate
System::Security::Cryptography::X509Certificates::X509Certificate*& Mono::Unity::UnityTlsContext::dyn_remoteCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::dyn_remoteCertificate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteCertificate"))->offset;
  return *reinterpret_cast<System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.MonoTlsConnectionInfo connectioninfo
Mono::Security::Interface::MonoTlsConnectionInfo*& Mono::Unity::UnityTlsContext::dyn_connectioninfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::dyn_connectioninfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectioninfo"))->offset;
  return *reinterpret_cast<Mono::Security::Interface::MonoTlsConnectionInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isAuthenticated
bool& Mono::Unity::UnityTlsContext::dyn_isAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::dyn_isAuthenticated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isAuthenticated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasContext
bool& Mono::Unity::UnityTlsContext::dyn_hasContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::dyn_hasContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasContext"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean closedGraceful
bool& Mono::Unity::UnityTlsContext::dyn_closedGraceful() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::dyn_closedGraceful");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closedGraceful"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] writeBuffer
::ArrayW<uint8_t>& Mono::Unity::UnityTlsContext::dyn_writeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::dyn_writeBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] readBuffer
::ArrayW<uint8_t>& Mono::Unity::UnityTlsContext::dyn_readBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::dyn_readBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.GCHandle handle
System::Runtime::InteropServices::GCHandle& Mono::Unity::UnityTlsContext::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::dyn_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<System::Runtime::InteropServices::GCHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Exception lastException
System::Exception*& Mono::Unity::UnityTlsContext::dyn_lastException() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::dyn_lastException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastException"))->offset;
  return *reinterpret_cast<System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.ExtractNativeKeyAndChainFromManagedCertificate
void Mono::Unity::UnityTlsContext::ExtractNativeKeyAndChainFromManagedCertificate(System::Security::Cryptography::X509Certificates::X509Certificate* cert, Mono::Unity::UnityTls::unitytls_errorstate* errorState, ByRef<Mono::Unity::UnityTls::unitytls_x509list*> nativeCertChain, ByRef<Mono::Unity::UnityTls::unitytls_key*> nativeKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::ExtractNativeKeyAndChainFromManagedCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsContext", "ExtractNativeKeyAndChainFromManagedCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractIndependentType<Mono::Unity::UnityTls::unitytls_x509list*&>(), ::il2cpp_utils::ExtractIndependentType<Mono::Unity::UnityTls::unitytls_key*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cert, errorState, byref(nativeCertChain), byref(nativeKey));
}
// Autogenerated method: Mono.Unity.UnityTlsContext.WriteCallback
System::IntPtr Mono::Unity::UnityTlsContext::WriteCallback(void* userData, uint8_t* data, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::WriteCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsContext", "WriteCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userData, data, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.WriteCallback
System::IntPtr Mono::Unity::UnityTlsContext::WriteCallback(uint8_t* data, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::WriteCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method, data, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.ReadCallback
System::IntPtr Mono::Unity::UnityTlsContext::ReadCallback(void* userData, uint8_t* buffer, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::ReadCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsContext", "ReadCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userData, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.ReadCallback
System::IntPtr Mono::Unity::UnityTlsContext::ReadCallback(uint8_t* buffer, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::ReadCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.VerifyCallback
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTlsContext::VerifyCallback(void* userData, Mono::Unity::UnityTls::unitytls_x509list_ref chain, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::VerifyCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsContext", "VerifyCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_x509verify_result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userData, chain, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.VerifyCallback
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTlsContext::VerifyCallback(Mono::Unity::UnityTls::unitytls_x509list_ref chain, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::VerifyCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, chain, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.CertificateCallback
void Mono::Unity::UnityTlsContext::CertificateCallback(void* userData, Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* cn, System::IntPtr cnLen, Mono::Unity::UnityTls::unitytls_x509name* caList, System::IntPtr caListLen, Mono::Unity::UnityTls::unitytls_x509list_ref* chain, Mono::Unity::UnityTls::unitytls_key_ref* key, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::CertificateCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsContext", "CertificateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(cn), ::il2cpp_utils::ExtractType(cnLen), ::il2cpp_utils::ExtractType(caList), ::il2cpp_utils::ExtractType(caListLen), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userData, ctx, cn, cnLen, caList, caListLen, chain, key, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.CertificateCallback
void Mono::Unity::UnityTlsContext::CertificateCallback(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* cn, System::IntPtr cnLen, Mono::Unity::UnityTls::unitytls_x509name* caList, System::IntPtr caListLen, Mono::Unity::UnityTls::unitytls_x509list_ref* chain, Mono::Unity::UnityTls::unitytls_key_ref* key, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::CertificateCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CertificateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(cn), ::il2cpp_utils::ExtractType(cnLen), ::il2cpp_utils::ExtractType(caList), ::il2cpp_utils::ExtractType(caListLen), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, cn, cnLen, caList, caListLen, chain, key, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.get_IsAuthenticated
bool Mono::Unity::UnityTlsContext::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::get_IsAuthenticated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.get_LocalClientCertificate
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Unity::UnityTlsContext::get_LocalClientCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::get_LocalClientCertificate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalClientCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.Read
System::ValueTuple_2<int, bool> Mono::Unity::UnityTlsContext::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<System::ValueTuple_2<int, bool>, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.Write
System::ValueTuple_2<int, bool> Mono::Unity::UnityTlsContext::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<System::ValueTuple_2<int, bool>, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.Shutdown
void Mono::Unity::UnityTlsContext::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::Shutdown");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.Dispose
void Mono::Unity::UnityTlsContext::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.StartHandshake
void Mono::Unity::UnityTlsContext::StartHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::StartHandshake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartHandshake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.ProcessHandshake
bool Mono::Unity::UnityTlsContext::ProcessHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::ProcessHandshake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessHandshake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.FinishHandshake
void Mono::Unity::UnityTlsContext::FinishHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsContext::FinishHandshake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishHandshake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTlsConversions
#include "Mono/Unity/UnityTlsConversions.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: Mono.Security.Interface.TlsProtocols
#include "Mono/Security/Interface/TlsProtocols.hpp"
// Including type: Mono.Security.Interface.AlertDescription
#include "Mono/Security/Interface/AlertDescription.hpp"
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol
#include "Mono/Unity/UnityTls_unitytls_protocol.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTlsConversions.GetMinProtocol
Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTlsConversions::GetMinProtocol(System::Security::Authentication::SslProtocols protocols) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsConversions::GetMinProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "GetMinProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocols)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_protocol, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, protocols);
}
// Autogenerated method: Mono.Unity.UnityTlsConversions.GetMaxProtocol
Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTlsConversions::GetMaxProtocol(System::Security::Authentication::SslProtocols protocols) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsConversions::GetMaxProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "GetMaxProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocols)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Unity::UnityTls::unitytls_protocol, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, protocols);
}
// Autogenerated method: Mono.Unity.UnityTlsConversions.ConvertProtocolVersion
Mono::Security::Interface::TlsProtocols Mono::Unity::UnityTlsConversions::ConvertProtocolVersion(Mono::Unity::UnityTls::unitytls_protocol protocol) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsConversions::ConvertProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "ConvertProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocol)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Security::Interface::TlsProtocols, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, protocol);
}
// Autogenerated method: Mono.Unity.UnityTlsConversions.VerifyResultToAlertDescription
Mono::Security::Interface::AlertDescription Mono::Unity::UnityTlsConversions::VerifyResultToAlertDescription(Mono::Unity::UnityTls::unitytls_x509verify_result verifyResult, Mono::Security::Interface::AlertDescription defaultAlert) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsConversions::VerifyResultToAlertDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "VerifyResultToAlertDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verifyResult), ::il2cpp_utils::ExtractType(defaultAlert)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Security::Interface::AlertDescription, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verifyResult, defaultAlert);
}
// Autogenerated method: Mono.Unity.UnityTlsConversions.VerifyResultToPolicyErrror
Mono::Security::Interface::MonoSslPolicyErrors Mono::Unity::UnityTlsConversions::VerifyResultToPolicyErrror(Mono::Unity::UnityTls::unitytls_x509verify_result verifyResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsConversions::VerifyResultToPolicyErrror");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "VerifyResultToPolicyErrror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verifyResult)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Security::Interface::MonoSslPolicyErrors, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verifyResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTlsProvider
#include "Mono/Unity/UnityTlsProvider.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: Mono.Security.Interface.IMonoSslStream
#include "Mono/Security/Interface/IMonoSslStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: Mono.Security.Interface.ICertificateValidator2
#include "Mono/Security/Interface/ICertificateValidator2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_Name
::StringW Mono::Unity::UnityTlsProvider::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsProvider::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_ID
System::Guid Mono::Unity::UnityTlsProvider::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsProvider::get_ID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_SupportsSslStream
bool Mono::Unity::UnityTlsProvider::get_SupportsSslStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsProvider::get_SupportsSslStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsSslStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_SupportsMonoExtensions
bool Mono::Unity::UnityTlsProvider::get_SupportsMonoExtensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsProvider::get_SupportsMonoExtensions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsMonoExtensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_SupportsConnectionInfo
bool Mono::Unity::UnityTlsProvider::get_SupportsConnectionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsProvider::get_SupportsConnectionInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsConnectionInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_SupportsCleanShutdown
bool Mono::Unity::UnityTlsProvider::get_SupportsCleanShutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsProvider::get_SupportsCleanShutdown");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsCleanShutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_SupportedProtocols
System::Security::Authentication::SslProtocols Mono::Unity::UnityTlsProvider::get_SupportedProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsProvider::get_SupportedProtocols");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportedProtocols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Authentication::SslProtocols, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.CreateSslStream
Mono::Security::Interface::IMonoSslStream* Mono::Unity::UnityTlsProvider::CreateSslStream(System::IO::Stream* innerStream, bool leaveInnerStreamOpen, Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsProvider::CreateSslStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSslStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(innerStream), ::il2cpp_utils::ExtractType(leaveInnerStreamOpen), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Security::Interface::IMonoSslStream*, false>(this, ___internal__method, innerStream, leaveInnerStreamOpen, settings);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.CreateSslStreamInternal
Mono::Security::Interface::IMonoSslStream* Mono::Unity::UnityTlsProvider::CreateSslStreamInternal(System::Net::Security::SslStream* sslStream, System::IO::Stream* innerStream, bool leaveInnerStreamOpen, Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsProvider::CreateSslStreamInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSslStreamInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sslStream), ::il2cpp_utils::ExtractType(innerStream), ::il2cpp_utils::ExtractType(leaveInnerStreamOpen), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Security::Interface::IMonoSslStream*, false>(this, ___internal__method, sslStream, innerStream, leaveInnerStreamOpen, settings);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.ValidateCertificate
bool Mono::Unity::UnityTlsProvider::ValidateCertificate(Mono::Security::Interface::ICertificateValidator2* validator, ::StringW targetHost, bool serverMode, System::Security::Cryptography::X509Certificates::X509CertificateCollection* certificates, bool wantsChain, ByRef<System::Security::Cryptography::X509Certificates::X509Chain*> chain, ByRef<Mono::Security::Interface::MonoSslPolicyErrors> errors, ByRef<int> status11) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsProvider::ValidateCertificate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(validator), ::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(serverMode), ::il2cpp_utils::ExtractType(certificates), ::il2cpp_utils::ExtractType(wantsChain), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(errors), ::il2cpp_utils::ExtractType(status11)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, validator, targetHost, serverMode, certificates, wantsChain, byref(chain), byref(errors), byref(status11));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTlsStream
#include "Mono/Unity/UnityTlsStream.hpp"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: Mono.Net.Security.MobileTlsContext
#include "Mono/Net/Security/MobileTlsContext.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTlsStream.CreateContext
Mono::Net::Security::MobileTlsContext* Mono::Unity::UnityTlsStream::CreateContext(bool serverMode, ::StringW targetHost, System::Security::Authentication::SslProtocols enabledProtocols, System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, bool askForClientCert) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Unity::UnityTlsStream::CreateContext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverMode), ::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(enabledProtocols), ::il2cpp_utils::ExtractType(serverCertificate), ::il2cpp_utils::ExtractType(clientCertificates), ::il2cpp_utils::ExtractType(askForClientCert)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Net::Security::MobileTlsContext*, false>(this, ___internal__method, serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, askForClientCert);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFObject
#include "Mono/Net/CFObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr <Handle>k__BackingField
System::IntPtr& Mono::Net::CFObject::dyn_$Handle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFObject::dyn_$Handle$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handle>k__BackingField"))->offset;
  return *reinterpret_cast<System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFObject.get_Handle
System::IntPtr Mono::Net::CFObject::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFObject::get_Handle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFObject.set_Handle
void Mono::Net::CFObject::set_Handle(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFObject::set_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.CFObject.dlopen
System::IntPtr Mono::Net::CFObject::dlopen(::StringW path, int mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFObject::dlopen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "dlopen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, mode);
}
// Autogenerated method: Mono.Net.CFObject.dlsym
System::IntPtr Mono::Net::CFObject::dlsym(System::IntPtr handle, ::StringW symbol) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFObject::dlsym");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "dlsym", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(symbol)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, symbol);
}
// Autogenerated method: Mono.Net.CFObject.dlclose
void Mono::Net::CFObject::dlclose(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFObject::dlclose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "dlclose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFObject.GetIndirect
System::IntPtr Mono::Net::CFObject::GetIndirect(System::IntPtr handle, ::StringW symbol) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFObject::GetIndirect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "GetIndirect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(symbol)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, symbol);
}
// Autogenerated method: Mono.Net.CFObject.GetCFObjectHandle
System::IntPtr Mono::Net::CFObject::GetCFObjectHandle(System::IntPtr handle, ::StringW symbol) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFObject::GetCFObjectHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "GetCFObjectHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(symbol)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, symbol);
}
// Autogenerated method: Mono.Net.CFObject.CFRetain
System::IntPtr Mono::Net::CFObject::CFRetain(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFObject::CFRetain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "CFRetain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFObject.Retain
void Mono::Net::CFObject::Retain() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFObject::Retain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Retain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFObject.CFRelease
void Mono::Net::CFObject::CFRelease(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFObject::CFRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "CFRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFObject.Release
void Mono::Net::CFObject::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFObject::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFObject.Dispose
void Mono::Net::CFObject::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFObject::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Net.CFObject.Dispose
void Mono::Net::CFObject::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFObject::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFObject.Finalize
void Mono::Net::CFObject::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFObject::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFArray
#include "Mono/Net/CFArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr kCFTypeArrayCallbacks
System::IntPtr Mono::Net::CFArray::_get_kCFTypeArrayCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFArray::_get_kCFTypeArrayCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFArray", "kCFTypeArrayCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr kCFTypeArrayCallbacks
void Mono::Net::CFArray::_set_kCFTypeArrayCallbacks(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFArray::_set_kCFTypeArrayCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFArray", "kCFTypeArrayCallbacks", value));
}
// Autogenerated method: Mono.Net.CFArray.get_Count
int Mono::Net::CFArray::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFArray::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFArray.get_Item
System::IntPtr Mono::Net::CFArray::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFArray::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method, index);
}
// Autogenerated method: Mono.Net.CFArray..cctor
void Mono::Net::CFArray::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFArray::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFArray", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFArray.CFArrayGetCount
System::IntPtr Mono::Net::CFArray::CFArrayGetCount(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFArray::CFArrayGetCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFArray", "CFArrayGetCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFArray.CFArrayGetValueAtIndex
System::IntPtr Mono::Net::CFArray::CFArrayGetValueAtIndex(System::IntPtr handle, System::IntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFArray::CFArrayGetValueAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFArray", "CFArrayGetValueAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFNumber
#include "Mono/Net/CFNumber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFNumber.CFNumberGetValue
bool Mono::Net::CFNumber::CFNumberGetValue(System::IntPtr handle, System::IntPtr type, ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNumber::CFNumberGetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNumber", "CFNumberGetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, type, byref(value));
}
// Autogenerated method: Mono.Net.CFNumber.AsInt32
int Mono::Net::CFNumber::AsInt32(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNumber::AsInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNumber", "AsInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFRange
#include "Mono/Net/CFRange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr Location
System::IntPtr& Mono::Net::CFRange::dyn_Location() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFRange::dyn_Location");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Location"))->offset;
  return *reinterpret_cast<System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr Length
System::IntPtr& Mono::Net::CFRange::dyn_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFRange::dyn_Length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Length"))->offset;
  return *reinterpret_cast<System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFRange..ctor
Mono::Net::CFRange::CFRange(int loc, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFRange::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loc), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loc, len);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFString
#include "Mono/Net/CFString.hpp"
// Including type: Mono.Net.CFRange
#include "Mono/Net/CFRange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String str
::StringW& Mono::Net::CFString::dyn_str() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFString::dyn_str");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "str"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFString.CFStringCreateWithCharacters
System::IntPtr Mono::Net::CFString::CFStringCreateWithCharacters(System::IntPtr alloc, System::IntPtr chars, System::IntPtr length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFString::CFStringCreateWithCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFString", "CFStringCreateWithCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alloc), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, alloc, chars, length);
}
// Autogenerated method: Mono.Net.CFString.Create
Mono::Net::CFString* Mono::Net::CFString::Create(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFString::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFString", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Net::CFString*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.Net.CFString.CFStringGetLength
System::IntPtr Mono::Net::CFString::CFStringGetLength(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFString::CFStringGetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFString", "CFStringGetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFString.CFStringGetCharactersPtr
System::IntPtr Mono::Net::CFString::CFStringGetCharactersPtr(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFString::CFStringGetCharactersPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFString", "CFStringGetCharactersPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFString.CFStringGetCharacters
System::IntPtr Mono::Net::CFString::CFStringGetCharacters(System::IntPtr handle, Mono::Net::CFRange range, System::IntPtr buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFString::CFStringGetCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFString", "CFStringGetCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(range), ::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, range, buffer);
}
// Autogenerated method: Mono.Net.CFString.AsString
::StringW Mono::Net::CFString::AsString(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFString::AsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFString", "AsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFString.ToString
::StringW Mono::Net::CFString::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFString::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFDictionary
#include "Mono/Net/CFDictionary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr KeyCallbacks
System::IntPtr Mono::Net::CFDictionary::_get_KeyCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFDictionary::_get_KeyCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFDictionary", "KeyCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr KeyCallbacks
void Mono::Net::CFDictionary::_set_KeyCallbacks(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFDictionary::_set_KeyCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFDictionary", "KeyCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr ValueCallbacks
System::IntPtr Mono::Net::CFDictionary::_get_ValueCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFDictionary::_get_ValueCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFDictionary", "ValueCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr ValueCallbacks
void Mono::Net::CFDictionary::_set_ValueCallbacks(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFDictionary::_set_ValueCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFDictionary", "ValueCallbacks", value));
}
// Autogenerated method: Mono.Net.CFDictionary.get_Item
System::IntPtr Mono::Net::CFDictionary::get_Item(System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFDictionary::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method, key);
}
// Autogenerated method: Mono.Net.CFDictionary..cctor
void Mono::Net::CFDictionary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFDictionary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFDictionary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFDictionary.CFDictionaryGetValue
System::IntPtr Mono::Net::CFDictionary::CFDictionaryGetValue(System::IntPtr handle, System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFDictionary::CFDictionaryGetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFDictionary", "CFDictionaryGetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key);
}
// Autogenerated method: Mono.Net.CFDictionary.GetValue
System::IntPtr Mono::Net::CFDictionary::GetValue(System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFDictionary::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFUrl
#include "Mono/Net/CFUrl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFUrl.CFURLCreateWithString
System::IntPtr Mono::Net::CFUrl::CFURLCreateWithString(System::IntPtr allocator, System::IntPtr str, System::IntPtr baseURL) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFUrl::CFURLCreateWithString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFUrl", "CFURLCreateWithString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allocator), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(baseURL)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, allocator, str, baseURL);
}
// Autogenerated method: Mono.Net.CFUrl.Create
Mono::Net::CFUrl* Mono::Net::CFUrl::Create(::StringW absolute) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFUrl::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFUrl", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(absolute)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Net::CFUrl*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, absolute);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFRunLoop
#include "Mono/Net/CFRunLoop.hpp"
// Including type: Mono.Net.CFString
#include "Mono/Net/CFString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFRunLoop.get_CurrentRunLoop
Mono::Net::CFRunLoop* Mono::Net::CFRunLoop::get_CurrentRunLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFRunLoop::get_CurrentRunLoop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "get_CurrentRunLoop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Net::CFRunLoop*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopAddSource
void Mono::Net::CFRunLoop::CFRunLoopAddSource(System::IntPtr rl, System::IntPtr source, System::IntPtr mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFRunLoop::CFRunLoopAddSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "CFRunLoopAddSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rl), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rl, source, mode);
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopRemoveSource
void Mono::Net::CFRunLoop::CFRunLoopRemoveSource(System::IntPtr rl, System::IntPtr source, System::IntPtr mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFRunLoop::CFRunLoopRemoveSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "CFRunLoopRemoveSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rl), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rl, source, mode);
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopRunInMode
int Mono::Net::CFRunLoop::CFRunLoopRunInMode(System::IntPtr mode, double seconds, bool returnAfterSourceHandled) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFRunLoop::CFRunLoopRunInMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "CFRunLoopRunInMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(seconds), ::il2cpp_utils::ExtractType(returnAfterSourceHandled)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mode, seconds, returnAfterSourceHandled);
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopGetCurrent
System::IntPtr Mono::Net::CFRunLoop::CFRunLoopGetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFRunLoop::CFRunLoopGetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "CFRunLoopGetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopStop
void Mono::Net::CFRunLoop::CFRunLoopStop(System::IntPtr rl) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFRunLoop::CFRunLoopStop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "CFRunLoopStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rl);
}
// Autogenerated method: Mono.Net.CFRunLoop.AddSource
void Mono::Net::CFRunLoop::AddSource(System::IntPtr source, Mono::Net::CFString* mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFRunLoop::AddSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, mode);
}
// Autogenerated method: Mono.Net.CFRunLoop.RemoveSource
void Mono::Net::CFRunLoop::RemoveSource(System::IntPtr source, Mono::Net::CFString* mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFRunLoop::RemoveSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, mode);
}
// Autogenerated method: Mono.Net.CFRunLoop.RunInMode
int Mono::Net::CFRunLoop::RunInMode(Mono::Net::CFString* mode, double seconds, bool returnAfterSourceHandled) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFRunLoop::RunInMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunInMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(seconds), ::il2cpp_utils::ExtractType(returnAfterSourceHandled)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, mode, seconds, returnAfterSourceHandled);
}
// Autogenerated method: Mono.Net.CFRunLoop.Stop
void Mono::Net::CFRunLoop::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFRunLoop::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFProxyType
#include "Mono/Net/CFProxyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType None
Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxyType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType None
void Mono::Net::CFProxyType::_set_None(Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxyType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType AutoConfigurationUrl
Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_AutoConfigurationUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxyType::_get_AutoConfigurationUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "AutoConfigurationUrl"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType AutoConfigurationUrl
void Mono::Net::CFProxyType::_set_AutoConfigurationUrl(Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxyType::_set_AutoConfigurationUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "AutoConfigurationUrl", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType AutoConfigurationJavaScript
Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_AutoConfigurationJavaScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxyType::_get_AutoConfigurationJavaScript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "AutoConfigurationJavaScript"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType AutoConfigurationJavaScript
void Mono::Net::CFProxyType::_set_AutoConfigurationJavaScript(Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxyType::_set_AutoConfigurationJavaScript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "AutoConfigurationJavaScript", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType FTP
Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_FTP() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxyType::_get_FTP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "FTP"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType FTP
void Mono::Net::CFProxyType::_set_FTP(Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxyType::_set_FTP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "FTP", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType HTTP
Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_HTTP() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxyType::_get_HTTP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "HTTP"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType HTTP
void Mono::Net::CFProxyType::_set_HTTP(Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxyType::_set_HTTP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "HTTP", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType HTTPS
Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_HTTPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxyType::_get_HTTPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "HTTPS"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType HTTPS
void Mono::Net::CFProxyType::_set_HTTPS(Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxyType::_set_HTTPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "HTTPS", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType SOCKS
Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_SOCKS() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxyType::_get_SOCKS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "SOCKS"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType SOCKS
void Mono::Net::CFProxyType::_set_SOCKS(Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxyType::_set_SOCKS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "SOCKS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Mono::Net::CFProxyType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxyType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFProxy
#include "Mono/Net/CFProxy.hpp"
// Including type: Mono.Net.CFDictionary
#include "Mono/Net/CFDictionary.hpp"
// Including type: Mono.Net.CFProxyType
#include "Mono/Net/CFProxyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyAutoConfigurationJavaScriptKey
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyAutoConfigurationJavaScriptKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_get_kCFProxyAutoConfigurationJavaScriptKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyAutoConfigurationJavaScriptKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyAutoConfigurationJavaScriptKey
void Mono::Net::CFProxy::_set_kCFProxyAutoConfigurationJavaScriptKey(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_set_kCFProxyAutoConfigurationJavaScriptKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyAutoConfigurationJavaScriptKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyAutoConfigurationURLKey
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyAutoConfigurationURLKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_get_kCFProxyAutoConfigurationURLKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyAutoConfigurationURLKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyAutoConfigurationURLKey
void Mono::Net::CFProxy::_set_kCFProxyAutoConfigurationURLKey(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_set_kCFProxyAutoConfigurationURLKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyAutoConfigurationURLKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyHostNameKey
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyHostNameKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_get_kCFProxyHostNameKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyHostNameKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyHostNameKey
void Mono::Net::CFProxy::_set_kCFProxyHostNameKey(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_set_kCFProxyHostNameKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyHostNameKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyPasswordKey
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyPasswordKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_get_kCFProxyPasswordKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyPasswordKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyPasswordKey
void Mono::Net::CFProxy::_set_kCFProxyPasswordKey(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_set_kCFProxyPasswordKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyPasswordKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyPortNumberKey
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyPortNumberKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_get_kCFProxyPortNumberKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyPortNumberKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyPortNumberKey
void Mono::Net::CFProxy::_set_kCFProxyPortNumberKey(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_set_kCFProxyPortNumberKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyPortNumberKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeKey
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_get_kCFProxyTypeKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeKey
void Mono::Net::CFProxy::_set_kCFProxyTypeKey(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_set_kCFProxyTypeKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyUsernameKey
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyUsernameKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_get_kCFProxyUsernameKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyUsernameKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyUsernameKey
void Mono::Net::CFProxy::_set_kCFProxyUsernameKey(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_set_kCFProxyUsernameKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyUsernameKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeAutoConfigurationURL
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeAutoConfigurationURL() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_get_kCFProxyTypeAutoConfigurationURL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeAutoConfigurationURL"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeAutoConfigurationURL
void Mono::Net::CFProxy::_set_kCFProxyTypeAutoConfigurationURL(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_set_kCFProxyTypeAutoConfigurationURL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeAutoConfigurationURL", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeAutoConfigurationJavaScript
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeAutoConfigurationJavaScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_get_kCFProxyTypeAutoConfigurationJavaScript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeAutoConfigurationJavaScript"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeAutoConfigurationJavaScript
void Mono::Net::CFProxy::_set_kCFProxyTypeAutoConfigurationJavaScript(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_set_kCFProxyTypeAutoConfigurationJavaScript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeAutoConfigurationJavaScript", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeFTP
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeFTP() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_get_kCFProxyTypeFTP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeFTP"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeFTP
void Mono::Net::CFProxy::_set_kCFProxyTypeFTP(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_set_kCFProxyTypeFTP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeFTP", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeHTTP
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeHTTP() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_get_kCFProxyTypeHTTP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeHTTP"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeHTTP
void Mono::Net::CFProxy::_set_kCFProxyTypeHTTP(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_set_kCFProxyTypeHTTP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeHTTP", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeHTTPS
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeHTTPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_get_kCFProxyTypeHTTPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeHTTPS"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeHTTPS
void Mono::Net::CFProxy::_set_kCFProxyTypeHTTPS(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_set_kCFProxyTypeHTTPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeHTTPS", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeSOCKS
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeSOCKS() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_get_kCFProxyTypeSOCKS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeSOCKS"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeSOCKS
void Mono::Net::CFProxy::_set_kCFProxyTypeSOCKS(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::_set_kCFProxyTypeSOCKS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeSOCKS", value));
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.CFDictionary settings
Mono::Net::CFDictionary*& Mono::Net::CFProxy::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<Mono::Net::CFDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFProxy.get_AutoConfigurationJavaScript
System::IntPtr Mono::Net::CFProxy::get_AutoConfigurationJavaScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::get_AutoConfigurationJavaScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutoConfigurationJavaScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_AutoConfigurationUrl
System::IntPtr Mono::Net::CFProxy::get_AutoConfigurationUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::get_AutoConfigurationUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutoConfigurationUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_HostName
::StringW Mono::Net::CFProxy::get_HostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::get_HostName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HostName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_Password
::StringW Mono::Net::CFProxy::get_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::get_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_Port
int Mono::Net::CFProxy::get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::get_Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_ProxyType
Mono::Net::CFProxyType Mono::Net::CFProxy::get_ProxyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::get_ProxyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProxyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Net::CFProxyType, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_Username
::StringW Mono::Net::CFProxy::get_Username() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::get_Username");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Username", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy..cctor
void Mono::Net::CFProxy::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFProxy", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.CFProxyTypeToEnum
Mono::Net::CFProxyType Mono::Net::CFProxy::CFProxyTypeToEnum(System::IntPtr type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxy::CFProxyTypeToEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFProxy", "CFProxyTypeToEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Net::CFProxyType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFProxySettings
#include "Mono/Net/CFProxySettings.hpp"
// Including type: Mono.Net.CFDictionary
#include "Mono/Net/CFDictionary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesHTTPEnable
System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPEnable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPEnable"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesHTTPEnable
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPEnable(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPEnable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPEnable", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesHTTPPort
System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPPort"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesHTTPPort
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPPort(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPPort", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesHTTPProxy
System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPProxy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPProxy"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesHTTPProxy
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPProxy(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPProxy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPProxy", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigEnable
System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigEnable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigEnable"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigEnable
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigEnable(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigEnable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigEnable", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigJavaScript
System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigJavaScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigJavaScript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigJavaScript"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigJavaScript
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigJavaScript(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigJavaScript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigJavaScript", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigURLString
System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigURLString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigURLString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigURLString"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigURLString
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigURLString(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigURLString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigURLString", value));
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.CFDictionary settings
Mono::Net::CFDictionary*& Mono::Net::CFProxySettings::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxySettings::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<Mono::Net::CFDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFProxySettings.get_Dictionary
Mono::Net::CFDictionary* Mono::Net::CFProxySettings::get_Dictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxySettings::get_Dictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Dictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Net::CFDictionary*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxySettings..cctor
void Mono::Net::CFProxySettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFProxySettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFProxySettings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFNetwork
#include "Mono/Net/CFNetwork.hpp"
// Including type: Mono.Net.CFNetwork/Mono.Net.GetProxyData
#include "Mono/Net/CFNetwork_GetProxyData.hpp"
// Including type: Mono.Net.CFNetwork/Mono.Net.CFProxyAutoConfigurationResultCallback
#include "Mono/Net/CFNetwork_CFProxyAutoConfigurationResultCallback.hpp"
// Including type: Mono.Net.CFNetwork/Mono.Net.CFWebProxy
#include "Mono/Net/CFNetwork_CFWebProxy.hpp"
// Including type: Mono.Net.CFNetwork/Mono.Net.<>c__DisplayClass13_0
#include "Mono/Net/CFNetwork_--c__DisplayClass13_0.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Threading.AutoResetEvent
#include "System/Threading/AutoResetEvent.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Mono.Net.CFStreamClientContext
#include "Mono/Net/CFStreamClientContext.hpp"
// Including type: Mono.Net.CFArray
#include "Mono/Net/CFArray.hpp"
// Including type: Mono.Net.CFUrl
#include "Mono/Net/CFUrl.hpp"
// Including type: Mono.Net.CFProxy
#include "Mono/Net/CFProxy.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: Mono.Net.CFDictionary
#include "Mono/Net/CFDictionary.hpp"
// Including type: Mono.Net.CFProxySettings
#include "Mono/Net/CFProxySettings.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object lock_obj
::Il2CppObject* Mono::Net::CFNetwork::_get_lock_obj() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::_get_lock_obj");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Mono.Net", "CFNetwork", "lock_obj"));
}
// Autogenerated static field setter
// Set static field: static private System.Object lock_obj
void Mono::Net::CFNetwork::_set_lock_obj(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::_set_lock_obj");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFNetwork", "lock_obj", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Queue`1<Mono.Net.CFNetwork/Mono.Net.GetProxyData> get_proxy_queue
System::Collections::Generic::Queue_1<Mono::Net::CFNetwork::GetProxyData*>* Mono::Net::CFNetwork::_get_get_proxy_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::_get_get_proxy_queue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::Queue_1<Mono::Net::CFNetwork::GetProxyData*>*>("Mono.Net", "CFNetwork", "get_proxy_queue"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Queue`1<Mono.Net.CFNetwork/Mono.Net.GetProxyData> get_proxy_queue
void Mono::Net::CFNetwork::_set_get_proxy_queue(System::Collections::Generic::Queue_1<Mono::Net::CFNetwork::GetProxyData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::_set_get_proxy_queue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFNetwork", "get_proxy_queue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.AutoResetEvent proxy_event
System::Threading::AutoResetEvent* Mono::Net::CFNetwork::_get_proxy_event() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::_get_proxy_event");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::AutoResetEvent*>("Mono.Net", "CFNetwork", "proxy_event"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.AutoResetEvent proxy_event
void Mono::Net::CFNetwork::_set_proxy_event(System::Threading::AutoResetEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::_set_proxy_event");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFNetwork", "proxy_event", value));
}
// Autogenerated method: Mono.Net.CFNetwork..cctor
void Mono::Net::CFNetwork::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkCopyProxiesForAutoConfigurationScriptSequential
System::IntPtr Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScriptSequential(System::IntPtr proxyAutoConfigurationScript, System::IntPtr targetURL, ByRef<System::IntPtr> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScriptSequential");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkCopyProxiesForAutoConfigurationScriptSequential", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigurationScript), ::il2cpp_utils::ExtractType(targetURL), ::il2cpp_utils::ExtractIndependentType<System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigurationScript, targetURL, byref(error));
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkExecuteProxyAutoConfigurationURL
System::IntPtr Mono::Net::CFNetwork::CFNetworkExecuteProxyAutoConfigurationURL(System::IntPtr proxyAutoConfigURL, System::IntPtr targetURL, Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback* cb, ByRef<Mono::Net::CFStreamClientContext> clientContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::CFNetworkExecuteProxyAutoConfigurationURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkExecuteProxyAutoConfigurationURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigURL), ::il2cpp_utils::ExtractType(targetURL), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(clientContext)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigURL, targetURL, cb, byref(clientContext));
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkCopyProxiesForAutoConfigurationScriptThread
void Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScriptThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScriptThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkCopyProxiesForAutoConfigurationScriptThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkCopyProxiesForAutoConfigurationScript
System::IntPtr Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScript(System::IntPtr proxyAutoConfigurationScript, System::IntPtr targetURL, ByRef<System::IntPtr> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkCopyProxiesForAutoConfigurationScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigurationScript), ::il2cpp_utils::ExtractType(targetURL), ::il2cpp_utils::ExtractIndependentType<System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigurationScript, targetURL, byref(error));
}
// Autogenerated method: Mono.Net.CFNetwork.CopyProxiesForAutoConfigurationScript
Mono::Net::CFArray* Mono::Net::CFNetwork::CopyProxiesForAutoConfigurationScript(System::IntPtr proxyAutoConfigurationScript, Mono::Net::CFUrl* targetURL) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::CopyProxiesForAutoConfigurationScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CopyProxiesForAutoConfigurationScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigurationScript), ::il2cpp_utils::ExtractType(targetURL)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Net::CFArray*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigurationScript, targetURL);
}
// Autogenerated method: Mono.Net.CFNetwork.GetProxiesForAutoConfigurationScript
::ArrayW<Mono::Net::CFProxy*> Mono::Net::CFNetwork::GetProxiesForAutoConfigurationScript(System::IntPtr proxyAutoConfigurationScript, Mono::Net::CFUrl* targetURL) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::GetProxiesForAutoConfigurationScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetProxiesForAutoConfigurationScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigurationScript), ::il2cpp_utils::ExtractType(targetURL)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<Mono::Net::CFProxy*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigurationScript, targetURL);
}
// Autogenerated method: Mono.Net.CFNetwork.GetProxiesForAutoConfigurationScript
::ArrayW<Mono::Net::CFProxy*> Mono::Net::CFNetwork::GetProxiesForAutoConfigurationScript(System::IntPtr proxyAutoConfigurationScript, System::Uri* targetUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::GetProxiesForAutoConfigurationScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetProxiesForAutoConfigurationScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigurationScript), ::il2cpp_utils::ExtractType(targetUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<Mono::Net::CFProxy*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigurationScript, targetUri);
}
// Autogenerated method: Mono.Net.CFNetwork.ExecuteProxyAutoConfigurationURL
::ArrayW<Mono::Net::CFProxy*> Mono::Net::CFNetwork::ExecuteProxyAutoConfigurationURL(System::IntPtr proxyAutoConfigURL, System::Uri* targetURL) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::ExecuteProxyAutoConfigurationURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "ExecuteProxyAutoConfigurationURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigURL), ::il2cpp_utils::ExtractType(targetURL)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<Mono::Net::CFProxy*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigURL, targetURL);
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkCopyProxiesForURL
System::IntPtr Mono::Net::CFNetwork::CFNetworkCopyProxiesForURL(System::IntPtr url, System::IntPtr proxySettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::CFNetworkCopyProxiesForURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkCopyProxiesForURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(proxySettings)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, proxySettings);
}
// Autogenerated method: Mono.Net.CFNetwork.CopyProxiesForURL
Mono::Net::CFArray* Mono::Net::CFNetwork::CopyProxiesForURL(Mono::Net::CFUrl* url, Mono::Net::CFDictionary* proxySettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::CopyProxiesForURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CopyProxiesForURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(proxySettings)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Net::CFArray*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, proxySettings);
}
// Autogenerated method: Mono.Net.CFNetwork.GetProxiesForURL
::ArrayW<Mono::Net::CFProxy*> Mono::Net::CFNetwork::GetProxiesForURL(Mono::Net::CFUrl* url, Mono::Net::CFProxySettings* proxySettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::GetProxiesForURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetProxiesForURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(proxySettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<Mono::Net::CFProxy*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, proxySettings);
}
// Autogenerated method: Mono.Net.CFNetwork.GetProxiesForUri
::ArrayW<Mono::Net::CFProxy*> Mono::Net::CFNetwork::GetProxiesForUri(System::Uri* uri, Mono::Net::CFProxySettings* proxySettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::GetProxiesForUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetProxiesForUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(proxySettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<Mono::Net::CFProxy*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri, proxySettings);
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkCopySystemProxySettings
System::IntPtr Mono::Net::CFNetwork::CFNetworkCopySystemProxySettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::CFNetworkCopySystemProxySettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkCopySystemProxySettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFNetwork.GetSystemProxySettings
Mono::Net::CFProxySettings* Mono::Net::CFNetwork::GetSystemProxySettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::GetSystemProxySettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetSystemProxySettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Net::CFProxySettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFNetwork.GetDefaultProxy
System::Net::IWebProxy* Mono::Net::CFNetwork::GetDefaultProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::GetDefaultProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetDefaultProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::IWebProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFNetwork/Mono.Net.GetProxyData
#include "Mono/Net/CFNetwork_GetProxyData.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr script
System::IntPtr& Mono::Net::CFNetwork::GetProxyData::dyn_script() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::GetProxyData::dyn_script");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "script"))->offset;
  return *reinterpret_cast<System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr targetUri
System::IntPtr& Mono::Net::CFNetwork::GetProxyData::dyn_targetUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::GetProxyData::dyn_targetUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetUri"))->offset;
  return *reinterpret_cast<System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr error
System::IntPtr& Mono::Net::CFNetwork::GetProxyData::dyn_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::GetProxyData::dyn_error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "error"))->offset;
  return *reinterpret_cast<System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr result
System::IntPtr& Mono::Net::CFNetwork::GetProxyData::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::GetProxyData::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.ManualResetEvent evt
System::Threading::ManualResetEvent*& Mono::Net::CFNetwork::GetProxyData::dyn_evt() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::GetProxyData::dyn_evt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "evt"))->offset;
  return *reinterpret_cast<System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.GetProxyData.Dispose
void Mono::Net::CFNetwork::GetProxyData::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::GetProxyData::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFNetwork/Mono.Net.CFProxyAutoConfigurationResultCallback
#include "Mono/Net/CFNetwork_CFProxyAutoConfigurationResultCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.CFProxyAutoConfigurationResultCallback.Invoke
void Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::Invoke(System::IntPtr client, System::IntPtr proxyList, System::IntPtr error) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(proxyList), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client, proxyList, error);
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.CFProxyAutoConfigurationResultCallback.BeginInvoke
System::IAsyncResult* Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::BeginInvoke(System::IntPtr client, System::IntPtr proxyList, System::IntPtr error, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(proxyList), ::il2cpp_utils::ExtractType(error), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, client, proxyList, error, callback, object);
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.CFProxyAutoConfigurationResultCallback.EndInvoke
void Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFNetwork/Mono.Net.CFWebProxy
#include "Mono/Net/CFNetwork_CFWebProxy.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: Mono.Net.CFProxy
#include "Mono/Net/CFProxy.hpp"
// Including type: System.Net.NetworkCredential
#include "System/Net/NetworkCredential.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.ICredentials credentials
System::Net::ICredentials*& Mono::Net::CFNetwork::CFWebProxy::dyn_credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::CFWebProxy::dyn_credentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "credentials"))->offset;
  return *reinterpret_cast<System::Net::ICredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean userSpecified
bool& Mono::Net::CFNetwork::CFWebProxy::dyn_userSpecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::CFWebProxy::dyn_userSpecified");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userSpecified"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.CFWebProxy.get_Credentials
System::Net::ICredentials* Mono::Net::CFNetwork::CFWebProxy::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::CFWebProxy::get_Credentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Credentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.CFWebProxy.GetProxyUri
System::Uri* Mono::Net::CFNetwork::CFWebProxy::GetProxyUri(Mono::Net::CFProxy* proxy, ByRef<System::Net::NetworkCredential*> credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::CFWebProxy::GetProxyUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork/CFWebProxy", "GetProxyUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxy), ::il2cpp_utils::ExtractIndependentType<System::Net::NetworkCredential*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxy, byref(credentials));
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.CFWebProxy.GetProxyUriFromScript
System::Uri* Mono::Net::CFNetwork::CFWebProxy::GetProxyUriFromScript(System::IntPtr script, System::Uri* targetUri, ByRef<System::Net::NetworkCredential*> credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::CFWebProxy::GetProxyUriFromScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork/CFWebProxy", "GetProxyUriFromScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(script), ::il2cpp_utils::ExtractType(targetUri), ::il2cpp_utils::ExtractIndependentType<System::Net::NetworkCredential*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, script, targetUri, byref(credentials));
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.CFWebProxy.ExecuteProxyAutoConfigurationURL
System::Uri* Mono::Net::CFNetwork::CFWebProxy::ExecuteProxyAutoConfigurationURL(System::IntPtr proxyAutoConfigURL, System::Uri* targetUri, ByRef<System::Net::NetworkCredential*> credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::CFWebProxy::ExecuteProxyAutoConfigurationURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork/CFWebProxy", "ExecuteProxyAutoConfigurationURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigURL), ::il2cpp_utils::ExtractType(targetUri), ::il2cpp_utils::ExtractIndependentType<System::Net::NetworkCredential*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigURL, targetUri, byref(credentials));
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.CFWebProxy.SelectProxy
System::Uri* Mono::Net::CFNetwork::CFWebProxy::SelectProxy(::ArrayW<Mono::Net::CFProxy*> proxies, System::Uri* targetUri, ByRef<System::Net::NetworkCredential*> credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::CFWebProxy::SelectProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork/CFWebProxy", "SelectProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxies), ::il2cpp_utils::ExtractType(targetUri), ::il2cpp_utils::ExtractIndependentType<System::Net::NetworkCredential*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxies, targetUri, byref(credentials));
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.CFWebProxy.GetProxy
System::Uri* Mono::Net::CFNetwork::CFWebProxy::GetProxy(System::Uri* targetUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::CFWebProxy::GetProxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetUri)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Uri*, false>(this, ___internal__method, targetUri);
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.CFWebProxy.IsBypassed
bool Mono::Net::CFNetwork::CFWebProxy::IsBypassed(System::Uri* targetUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::CFWebProxy::IsBypassed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBypassed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetUri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, targetUri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFNetwork/Mono.Net.<>c__DisplayClass13_0
#include "Mono/Net/CFNetwork_--c__DisplayClass13_0.hpp"
// Including type: Mono.Net.CFProxy
#include "Mono/Net/CFProxy.hpp"
// Including type: Mono.Net.CFRunLoop
#include "Mono/Net/CFRunLoop.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Mono.Net.CFProxy[] proxies
::ArrayW<Mono::Net::CFProxy*>& Mono::Net::CFNetwork::$$c__DisplayClass13_0::dyn_proxies() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::$$c__DisplayClass13_0::dyn_proxies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "proxies"))->offset;
  return *reinterpret_cast<::ArrayW<Mono::Net::CFProxy*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.CFRunLoop runLoop
Mono::Net::CFRunLoop*& Mono::Net::CFNetwork::$$c__DisplayClass13_0::dyn_runLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::$$c__DisplayClass13_0::dyn_runLoop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runLoop"))->offset;
  return *reinterpret_cast<Mono::Net::CFRunLoop**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.<>c__DisplayClass13_0.<ExecuteProxyAutoConfigurationURL>b__0
void Mono::Net::CFNetwork::$$c__DisplayClass13_0::$ExecuteProxyAutoConfigurationURL$b__0(System::IntPtr client, System::IntPtr proxyList, System::IntPtr error) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFNetwork::$$c__DisplayClass13_0::<ExecuteProxyAutoConfigurationURL>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ExecuteProxyAutoConfigurationURL>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(proxyList), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client, proxyList, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.BufferOffsetSize
#include "Mono/Net/Security/BufferOffsetSize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte[] Buffer
::ArrayW<uint8_t>& Mono::Net::Security::BufferOffsetSize::dyn_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::BufferOffsetSize::dyn_Buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Offset
int& Mono::Net::Security::BufferOffsetSize::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::BufferOffsetSize::dyn_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Size
int& Mono::Net::Security::BufferOffsetSize::dyn_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::BufferOffsetSize::dyn_Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 TotalBytes
int& Mono::Net::Security::BufferOffsetSize::dyn_TotalBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::BufferOffsetSize::dyn_TotalBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalBytes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Complete
bool& Mono::Net::Security::BufferOffsetSize::dyn_Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::BufferOffsetSize::dyn_Complete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Complete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize.get_EndOffset
int Mono::Net::Security::BufferOffsetSize::get_EndOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::BufferOffsetSize::get_EndOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize.get_Remaining
int Mono::Net::Security::BufferOffsetSize::get_Remaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::BufferOffsetSize::get_Remaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Remaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize.ToString
::StringW Mono::Net::Security::BufferOffsetSize::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::BufferOffsetSize::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.BufferOffsetSize2
#include "Mono/Net/Security/BufferOffsetSize2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 InitialSize
int& Mono::Net::Security::BufferOffsetSize2::dyn_InitialSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::BufferOffsetSize2::dyn_InitialSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InitialSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize2.Reset
void Mono::Net::Security::BufferOffsetSize2::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::BufferOffsetSize2::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize2.MakeRoom
void Mono::Net::Security::BufferOffsetSize2::MakeRoom(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::BufferOffsetSize2::MakeRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize2.AppendData
void Mono::Net::Security::BufferOffsetSize2::AppendData(::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::BufferOffsetSize2::AppendData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.AsyncOperationStatus Initialize
Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncOperationStatus::_get_Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncOperationStatus::_get_Initialize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::Security::AsyncOperationStatus>("Mono.Net.Security", "AsyncOperationStatus", "Initialize"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.AsyncOperationStatus Initialize
void Mono::Net::Security::AsyncOperationStatus::_set_Initialize(Mono::Net::Security::AsyncOperationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncOperationStatus::_set_Initialize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "AsyncOperationStatus", "Initialize", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.AsyncOperationStatus Continue
Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncOperationStatus::_get_Continue() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncOperationStatus::_get_Continue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::Security::AsyncOperationStatus>("Mono.Net.Security", "AsyncOperationStatus", "Continue"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.AsyncOperationStatus Continue
void Mono::Net::Security::AsyncOperationStatus::_set_Continue(Mono::Net::Security::AsyncOperationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncOperationStatus::_set_Continue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "AsyncOperationStatus", "Continue", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.AsyncOperationStatus ReadDone
Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncOperationStatus::_get_ReadDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncOperationStatus::_get_ReadDone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::Security::AsyncOperationStatus>("Mono.Net.Security", "AsyncOperationStatus", "ReadDone"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.AsyncOperationStatus ReadDone
void Mono::Net::Security::AsyncOperationStatus::_set_ReadDone(Mono::Net::Security::AsyncOperationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncOperationStatus::_set_ReadDone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "AsyncOperationStatus", "ReadDone", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.AsyncOperationStatus Complete
Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncOperationStatus::_get_Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncOperationStatus::_get_Complete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::Security::AsyncOperationStatus>("Mono.Net.Security", "AsyncOperationStatus", "Complete"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.AsyncOperationStatus Complete
void Mono::Net::Security::AsyncOperationStatus::_set_Complete(Mono::Net::Security::AsyncOperationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncOperationStatus::_set_Complete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "AsyncOperationStatus", "Complete", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Mono::Net::Security::AsyncOperationStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncOperationStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncProtocolResult
#include "Mono/Net/Security/AsyncProtocolResult.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <UserResult>k__BackingField
int& Mono::Net::Security::AsyncProtocolResult::dyn_$UserResult$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolResult::dyn_$UserResult$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UserResult>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Runtime.ExceptionServices.ExceptionDispatchInfo <Error>k__BackingField
System::Runtime::ExceptionServices::ExceptionDispatchInfo*& Mono::Net::Security::AsyncProtocolResult::dyn_$Error$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolResult::dyn_$Error$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Error>k__BackingField"))->offset;
  return *reinterpret_cast<System::Runtime::ExceptionServices::ExceptionDispatchInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolResult.get_UserResult
int Mono::Net::Security::AsyncProtocolResult::get_UserResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolResult::get_UserResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolResult.get_Error
System::Runtime::ExceptionServices::ExceptionDispatchInfo* Mono::Net::Security::AsyncProtocolResult::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolResult::get_Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Runtime::ExceptionServices::ExceptionDispatchInfo*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.AsyncProtocolRequest
#include "Mono/Net/Security/AsyncProtocolRequest.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<StartOperation>d__23
#include "Mono/Net/Security/AsyncProtocolRequest_-StartOperation-d__23.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<ProcessOperation>d__24
#include "Mono/Net/Security/AsyncProtocolRequest_-ProcessOperation-d__24.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<InnerRead>d__25
#include "Mono/Net/Security/AsyncProtocolRequest_-InnerRead-d__25.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Mono.Net.Security.AsyncProtocolResult
#include "Mono/Net/Security/AsyncProtocolResult.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Net.Security.MobileAuthenticatedStream <Parent>k__BackingField
Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::AsyncProtocolRequest::dyn_$Parent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::dyn_$Parent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Parent>k__BackingField"))->offset;
  return *reinterpret_cast<Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <RunSynchronously>k__BackingField
bool& Mono::Net::Security::AsyncProtocolRequest::dyn_$RunSynchronously$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::dyn_$RunSynchronously$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RunSynchronously>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <UserResult>k__BackingField
int& Mono::Net::Security::AsyncProtocolRequest::dyn_$UserResult$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::dyn_$UserResult$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UserResult>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 Started
int& Mono::Net::Security::AsyncProtocolRequest::dyn_Started() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::dyn_Started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Started"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 RequestedSize
int& Mono::Net::Security::AsyncProtocolRequest::dyn_RequestedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::dyn_RequestedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RequestedSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 WriteRequested
int& Mono::Net::Security::AsyncProtocolRequest::dyn_WriteRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::dyn_WriteRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WriteRequested"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object locker
::Il2CppObject*& Mono::Net::Security::AsyncProtocolRequest::dyn_locker() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::dyn_locker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locker"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.get_Parent
Mono::Net::Security::MobileAuthenticatedStream* Mono::Net::Security::AsyncProtocolRequest::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::get_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Net::Security::MobileAuthenticatedStream*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.get_RunSynchronously
bool Mono::Net::Security::AsyncProtocolRequest::get_RunSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::get_RunSynchronously");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RunSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.get_Name
::StringW Mono::Net::Security::AsyncProtocolRequest::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.get_UserResult
int Mono::Net::Security::AsyncProtocolRequest::get_UserResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::get_UserResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.set_UserResult
void Mono::Net::Security::AsyncProtocolRequest::set_UserResult(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::set_UserResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UserResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.RequestRead
void Mono::Net::Security::AsyncProtocolRequest::RequestRead(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::RequestRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.RequestWrite
void Mono::Net::Security::AsyncProtocolRequest::RequestWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::RequestWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.StartOperation
System::Threading::Tasks::Task_1<Mono::Net::Security::AsyncProtocolResult*>* Mono::Net::Security::AsyncProtocolRequest::StartOperation(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::StartOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task_1<Mono::Net::Security::AsyncProtocolResult*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.ProcessOperation
System::Threading::Tasks::Task* Mono::Net::Security::AsyncProtocolRequest::ProcessOperation(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::ProcessOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.InnerRead
System::Threading::Tasks::Task_1<System::Nullable_1<int>>* Mono::Net::Security::AsyncProtocolRequest::InnerRead(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::InnerRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InnerRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task_1<System::Nullable_1<int>>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.Run
Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncProtocolRequest::Run(Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.ToString
::StringW Mono::Net::Security::AsyncProtocolRequest::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<StartOperation>d__23
#include "Mono/Net/Security/AsyncProtocolRequest_-StartOperation-d__23.hpp"
// Including type: Mono.Net.Security.AsyncProtocolResult
#include "Mono/Net/Security/AsyncProtocolResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<Mono.Net.Security.AsyncProtocolResult> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<Mono::Net::Security::AsyncProtocolResult*>& Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<Mono::Net::Security::AsyncProtocolResult*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.AsyncProtocolRequest <>4__this
Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<StartOperation>d__23.MoveNext
void Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<StartOperation>d__23.SetStateMachine
void Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<ProcessOperation>d__24
#include "Mono/Net/Security/AsyncProtocolRequest_-ProcessOperation-d__24.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.AsyncProtocolRequest <>4__this
Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.AsyncOperationStatus <status>5__1
Mono::Net::Security::AsyncOperationStatus& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$status$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$status$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<status>5__1"))->offset;
  return *reinterpret_cast<Mono::Net::Security::AsyncOperationStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.AsyncOperationStatus <newStatus>5__2
Mono::Net::Security::AsyncOperationStatus& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$newStatus$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$newStatus$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<newStatus>5__2"))->offset;
  return *reinterpret_cast<Mono::Net::Security::AsyncOperationStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Nullable`1<System.Int32>> <>u__1
typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<System::Nullable_1<int>>::ConfiguredTaskAwaiter& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<System::Nullable_1<int>>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__2
System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<ProcessOperation>d__24.MoveNext
void Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<ProcessOperation>d__24.SetStateMachine
void Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<InnerRead>d__25
#include "Mono/Net/Security/AsyncProtocolRequest_-InnerRead-d__25.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Nullable`1<System.Int32>> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<System::Nullable_1<int>>& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<System::Nullable_1<int>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.AsyncProtocolRequest <>4__this
Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <requestedSize>5__1
int& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$requestedSize$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$requestedSize$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<requestedSize>5__1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int32> <totalRead>5__2
System::Nullable_1<int>& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$totalRead$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$totalRead$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<totalRead>5__2"))->offset;
  return *reinterpret_cast<System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Int32> <>u__1
typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<InnerRead>d__25.MoveNext
void Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<InnerRead>d__25.SetStateMachine
void Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncHandshakeRequest
#include "Mono/Net/Security/AsyncHandshakeRequest.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.AsyncHandshakeRequest.Run
Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncHandshakeRequest::Run(Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncHandshakeRequest::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncReadOrWriteRequest
#include "Mono/Net/Security/AsyncReadOrWriteRequest.hpp"
// Including type: Mono.Net.Security.BufferOffsetSize
#include "Mono/Net/Security/BufferOffsetSize.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Net.Security.BufferOffsetSize <UserBuffer>k__BackingField
Mono::Net::Security::BufferOffsetSize*& Mono::Net::Security::AsyncReadOrWriteRequest::dyn_$UserBuffer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncReadOrWriteRequest::dyn_$UserBuffer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UserBuffer>k__BackingField"))->offset;
  return *reinterpret_cast<Mono::Net::Security::BufferOffsetSize**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <CurrentSize>k__BackingField
int& Mono::Net::Security::AsyncReadOrWriteRequest::dyn_$CurrentSize$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncReadOrWriteRequest::dyn_$CurrentSize$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentSize>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.AsyncReadOrWriteRequest.get_UserBuffer
Mono::Net::Security::BufferOffsetSize* Mono::Net::Security::AsyncReadOrWriteRequest::get_UserBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncReadOrWriteRequest::get_UserBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Net::Security::BufferOffsetSize*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncReadOrWriteRequest.get_CurrentSize
int Mono::Net::Security::AsyncReadOrWriteRequest::get_CurrentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncReadOrWriteRequest::get_CurrentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncReadOrWriteRequest.set_CurrentSize
void Mono::Net::Security::AsyncReadOrWriteRequest::set_CurrentSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncReadOrWriteRequest::set_CurrentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.AsyncReadOrWriteRequest.ToString
::StringW Mono::Net::Security::AsyncReadOrWriteRequest::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncReadOrWriteRequest::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncReadRequest
#include "Mono/Net/Security/AsyncReadRequest.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.AsyncReadRequest.Run
Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncReadRequest::Run(Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncReadRequest::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncWriteRequest
#include "Mono/Net/Security/AsyncWriteRequest.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.AsyncWriteRequest.Run
Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncWriteRequest::Run(Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::AsyncWriteRequest::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.ServerCertValidationCallbackWrapper
#include "Mono/Net/Security/ServerCertValidationCallbackWrapper.hpp"
// Including type: System.Net.ServerCertValidationCallback
#include "System/Net/ServerCertValidationCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.ServerCertValidationCallbackWrapper.Invoke
bool Mono::Net::Security::ServerCertValidationCallbackWrapper::Invoke(System::Net::ServerCertValidationCallback* callback, System::Security::Cryptography::X509Certificates::X509Certificate* certificate, System::Security::Cryptography::X509Certificates::X509Chain* chain, Mono::Security::Interface::MonoSslPolicyErrors sslPolicyErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::ServerCertValidationCallbackWrapper::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(sslPolicyErrors)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, callback, certificate, chain, sslPolicyErrors);
}
// Autogenerated method: Mono.Net.Security.ServerCertValidationCallbackWrapper.BeginInvoke
System::IAsyncResult* Mono::Net::Security::ServerCertValidationCallbackWrapper::BeginInvoke(System::Net::ServerCertValidationCallback* callback, System::Security::Cryptography::X509Certificates::X509Certificate* certificate, System::Security::Cryptography::X509Certificates::X509Chain* chain, Mono::Security::Interface::MonoSslPolicyErrors sslPolicyErrors, System::AsyncCallback* __callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::ServerCertValidationCallbackWrapper::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(sslPolicyErrors), ::il2cpp_utils::ExtractType(__callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, callback, certificate, chain, sslPolicyErrors, __callback, object);
}
// Autogenerated method: Mono.Net.Security.ServerCertValidationCallbackWrapper.EndInvoke
bool Mono::Net::Security::ServerCertValidationCallbackWrapper::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::ServerCertValidationCallbackWrapper::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.ChainValidationHelper
#include "Mono/Net/Security/ChainValidationHelper.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: System.Net.ServerCertValidationCallback
#include "System/Net/ServerCertValidationCallback.hpp"
// Including type: System.Net.Security.LocalCertSelectionCallback
#include "System/Net/Security/LocalCertSelectionCallback.hpp"
// Including type: Mono.Net.Security.ServerCertValidationCallbackWrapper
#include "Mono/Net/Security/ServerCertValidationCallbackWrapper.hpp"
// Including type: Mono.Net.Security.MonoTlsStream
#include "Mono/Net/Security/MonoTlsStream.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Security.Interface.ValidationResult
#include "Mono/Security/Interface/ValidationResult.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object sender
::Il2CppObject*& Mono::Net::Security::ChainValidationHelper::dyn_sender() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::ChainValidationHelper::dyn_sender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sender"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Security.Interface.MonoTlsSettings settings
Mono::Security::Interface::MonoTlsSettings*& Mono::Net::Security::ChainValidationHelper::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::ChainValidationHelper::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<Mono::Security::Interface::MonoTlsSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Security.Interface.MonoTlsProvider provider
Mono::Security::Interface::MonoTlsProvider*& Mono::Net::Security::ChainValidationHelper::dyn_provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::ChainValidationHelper::dyn_provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "provider"))->offset;
  return *reinterpret_cast<Mono::Security::Interface::MonoTlsProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.ServerCertValidationCallback certValidationCallback
System::Net::ServerCertValidationCallback*& Mono::Net::Security::ChainValidationHelper::dyn_certValidationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::ChainValidationHelper::dyn_certValidationCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certValidationCallback"))->offset;
  return *reinterpret_cast<System::Net::ServerCertValidationCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Security.LocalCertSelectionCallback certSelectionCallback
System::Net::Security::LocalCertSelectionCallback*& Mono::Net::Security::ChainValidationHelper::dyn_certSelectionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::ChainValidationHelper::dyn_certSelectionCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certSelectionCallback"))->offset;
  return *reinterpret_cast<System::Net::Security::LocalCertSelectionCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Net.Security.ServerCertValidationCallbackWrapper callbackWrapper
Mono::Net::Security::ServerCertValidationCallbackWrapper*& Mono::Net::Security::ChainValidationHelper::dyn_callbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::ChainValidationHelper::dyn_callbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callbackWrapper"))->offset;
  return *reinterpret_cast<Mono::Net::Security::ServerCertValidationCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Net.Security.MonoTlsStream tlsStream
Mono::Net::Security::MonoTlsStream*& Mono::Net::Security::ChainValidationHelper::dyn_tlsStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::ChainValidationHelper::dyn_tlsStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tlsStream"))->offset;
  return *reinterpret_cast<Mono::Net::Security::MonoTlsStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.HttpWebRequest request
System::Net::HttpWebRequest*& Mono::Net::Security::ChainValidationHelper::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::ChainValidationHelper::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<System::Net::HttpWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.get_Settings
Mono::Security::Interface::MonoTlsSettings* Mono::Net::Security::ChainValidationHelper::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::ChainValidationHelper::get_Settings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Security::Interface::MonoTlsSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.GetInternalValidator
Mono::Security::Interface::ICertificateValidator* Mono::Net::Security::ChainValidationHelper::GetInternalValidator(Mono::Security::Interface::MonoTlsProvider* provider, Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::ChainValidationHelper::GetInternalValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "ChainValidationHelper", "GetInternalValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Security::Interface::ICertificateValidator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, settings);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.Create
Mono::Net::Security::ChainValidationHelper* Mono::Net::Security::ChainValidationHelper::Create(Mono::Security::Interface::MonoTlsProvider* provider, ByRef<Mono::Security::Interface::MonoTlsSettings*> settings, Mono::Net::Security::MonoTlsStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::ChainValidationHelper::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "ChainValidationHelper", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(settings), ::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Net::Security::ChainValidationHelper*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, byref(settings), stream);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.DefaultSelectionCallback
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::ChainValidationHelper::DefaultSelectionCallback(::StringW targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::ArrayW<::StringW> acceptableIssuers) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::ChainValidationHelper::DefaultSelectionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "ChainValidationHelper", "DefaultSelectionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(localCertificates), ::il2cpp_utils::ExtractType(remoteCertificate), ::il2cpp_utils::ExtractType(acceptableIssuers)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetHost, localCertificates, remoteCertificate, acceptableIssuers);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.SelectClientCertificate
bool Mono::Net::Security::ChainValidationHelper::SelectClientCertificate(::StringW targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::ArrayW<::StringW> acceptableIssuers, ByRef<System::Security::Cryptography::X509Certificates::X509Certificate*> clientCertificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::ChainValidationHelper::SelectClientCertificate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectClientCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(localCertificates), ::il2cpp_utils::ExtractType(remoteCertificate), ::il2cpp_utils::ExtractType(acceptableIssuers), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Certificate*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, targetHost, localCertificates, remoteCertificate, acceptableIssuers, byref(clientCertificate));
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.ValidateCertificate
Mono::Security::Interface::ValidationResult* Mono::Net::Security::ChainValidationHelper::ValidateCertificate(::StringW host, bool serverMode, System::Security::Cryptography::X509Certificates::X509CertificateCollection* certs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::ChainValidationHelper::ValidateCertificate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(serverMode), ::il2cpp_utils::ExtractType(certs)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, host, serverMode, certs);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.ValidateCertificate
Mono::Security::Interface::ValidationResult* Mono::Net::Security::ChainValidationHelper::ValidateCertificate(::StringW host, bool serverMode, System::Security::Cryptography::X509Certificates::X509Certificate* leaf, System::Security::Cryptography::X509Certificates::X509Chain* chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::ChainValidationHelper::ValidateCertificate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(serverMode), ::il2cpp_utils::ExtractType(leaf), ::il2cpp_utils::ExtractType(chain)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, host, serverMode, leaf, chain);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.ValidateChain
Mono::Security::Interface::ValidationResult* Mono::Net::Security::ChainValidationHelper::ValidateChain(::StringW host, bool server, System::Security::Cryptography::X509Certificates::X509Certificate* leaf, System::Security::Cryptography::X509Certificates::X509Chain* chain, System::Security::Cryptography::X509Certificates::X509CertificateCollection* certs, System::Net::Security::SslPolicyErrors errors) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::ChainValidationHelper::ValidateChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(server), ::il2cpp_utils::ExtractType(leaf), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(certs), ::il2cpp_utils::ExtractType(errors)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, host, server, leaf, chain, certs, errors);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.ValidateChain
Mono::Security::Interface::ValidationResult* Mono::Net::Security::ChainValidationHelper::ValidateChain_(::StringW host, bool server, System::Security::Cryptography::X509Certificates::X509Certificate* leaf, ByRef<System::Security::Cryptography::X509Certificates::X509Chain*> chain, System::Security::Cryptography::X509Certificates::X509CertificateCollection* certs, System::Net::Security::SslPolicyErrors errors) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::ChainValidationHelper::ValidateChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(server), ::il2cpp_utils::ExtractType(leaf), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(certs), ::il2cpp_utils::ExtractType(errors)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, host, server, leaf, byref(chain), certs, errors);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.OperationType
#include "Mono/Net/Security/MobileAuthenticatedStream_OperationType.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<ProcessAuthentication>d__47
#include "Mono/Net/Security/MobileAuthenticatedStream_-ProcessAuthentication-d__47.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<StartOperation>d__58
#include "Mono/Net/Security/MobileAuthenticatedStream_-StartOperation-d__58.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<>c__DisplayClass66_0
#include "Mono/Net/Security/MobileAuthenticatedStream_--c__DisplayClass66_0.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<InnerRead>d__66
#include "Mono/Net/Security/MobileAuthenticatedStream_-InnerRead-d__66.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<InnerWrite>d__67
#include "Mono/Net/Security/MobileAuthenticatedStream_-InnerWrite-d__67.hpp"
// Including type: Mono.Net.Security.MobileTlsContext
#include "Mono/Net/Security/MobileTlsContext.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest
#include "Mono/Net/Security/AsyncProtocolRequest.hpp"
// Including type: Mono.Net.Security.BufferOffsetSize2
#include "Mono/Net/Security/BufferOffsetSize2.hpp"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: Mono.Net.Security.BufferOffsetSize
#include "Mono/Net/Security/BufferOffsetSize.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 uniqueNameInteger
int Mono::Net::Security::MobileAuthenticatedStream::_get_uniqueNameInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::_get_uniqueNameInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Net.Security", "MobileAuthenticatedStream", "uniqueNameInteger"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 uniqueNameInteger
void Mono::Net::Security::MobileAuthenticatedStream::_set_uniqueNameInteger(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::_set_uniqueNameInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream", "uniqueNameInteger", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 nextId
int Mono::Net::Security::MobileAuthenticatedStream::_get_nextId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::_get_nextId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Net.Security", "MobileAuthenticatedStream", "nextId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 nextId
void Mono::Net::Security::MobileAuthenticatedStream::_set_nextId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::_set_nextId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream", "nextId", value));
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.MobileTlsContext xobileTlsContext
Mono::Net::Security::MobileTlsContext*& Mono::Net::Security::MobileAuthenticatedStream::dyn_xobileTlsContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::dyn_xobileTlsContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xobileTlsContext"))->offset;
  return *reinterpret_cast<Mono::Net::Security::MobileTlsContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.ExceptionServices.ExceptionDispatchInfo lastException
System::Runtime::ExceptionServices::ExceptionDispatchInfo*& Mono::Net::Security::MobileAuthenticatedStream::dyn_lastException() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::dyn_lastException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastException"))->offset;
  return *reinterpret_cast<System::Runtime::ExceptionServices::ExceptionDispatchInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.AsyncProtocolRequest asyncHandshakeRequest
Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::MobileAuthenticatedStream::dyn_asyncHandshakeRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::dyn_asyncHandshakeRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncHandshakeRequest"))->offset;
  return *reinterpret_cast<Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.AsyncProtocolRequest asyncReadRequest
Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::MobileAuthenticatedStream::dyn_asyncReadRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::dyn_asyncReadRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncReadRequest"))->offset;
  return *reinterpret_cast<Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.AsyncProtocolRequest asyncWriteRequest
Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::MobileAuthenticatedStream::dyn_asyncWriteRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::dyn_asyncWriteRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncWriteRequest"))->offset;
  return *reinterpret_cast<Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.BufferOffsetSize2 readBuffer
Mono::Net::Security::BufferOffsetSize2*& Mono::Net::Security::MobileAuthenticatedStream::dyn_readBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::dyn_readBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readBuffer"))->offset;
  return *reinterpret_cast<Mono::Net::Security::BufferOffsetSize2**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.BufferOffsetSize2 writeBuffer
Mono::Net::Security::BufferOffsetSize2*& Mono::Net::Security::MobileAuthenticatedStream::dyn_writeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::dyn_writeBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeBuffer"))->offset;
  return *reinterpret_cast<Mono::Net::Security::BufferOffsetSize2**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object ioLock
::Il2CppObject*& Mono::Net::Security::MobileAuthenticatedStream::dyn_ioLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::dyn_ioLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ioLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 closeRequested
int& Mono::Net::Security::MobileAuthenticatedStream::dyn_closeRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::dyn_closeRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closeRequested"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean shutdown
bool& Mono::Net::Security::MobileAuthenticatedStream::dyn_shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::dyn_shutdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shutdown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Security.SslStream <SslStream>k__BackingField
System::Net::Security::SslStream*& Mono::Net::Security::MobileAuthenticatedStream::dyn_$SslStream$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::dyn_$SslStream$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SslStream>k__BackingField"))->offset;
  return *reinterpret_cast<System::Net::Security::SslStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Security.Interface.MonoTlsSettings <Settings>k__BackingField
Mono::Security::Interface::MonoTlsSettings*& Mono::Net::Security::MobileAuthenticatedStream::dyn_$Settings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::dyn_$Settings$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Settings>k__BackingField"))->offset;
  return *reinterpret_cast<Mono::Security::Interface::MonoTlsSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Security.Interface.MonoTlsProvider <Provider>k__BackingField
Mono::Security::Interface::MonoTlsProvider*& Mono::Net::Security::MobileAuthenticatedStream::dyn_$Provider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::dyn_$Provider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Provider>k__BackingField"))->offset;
  return *reinterpret_cast<Mono::Security::Interface::MonoTlsProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 ID
int& Mono::Net::Security::MobileAuthenticatedStream::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_Settings
Mono::Security::Interface::MonoTlsSettings* Mono::Net::Security::MobileAuthenticatedStream::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::get_Settings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Security::Interface::MonoTlsSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_Provider
Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MobileAuthenticatedStream::get_Provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::get_Provider");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Provider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Security::Interface::MonoTlsProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_AuthenticatedStream
System::Net::Security::AuthenticatedStream* Mono::Net::Security::MobileAuthenticatedStream::get_AuthenticatedStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::get_AuthenticatedStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthenticatedStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Security::AuthenticatedStream*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_InternalLocalCertificate
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::MobileAuthenticatedStream::get_InternalLocalCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::get_InternalLocalCertificate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalLocalCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.CheckThrow
void Mono::Net::Security::MobileAuthenticatedStream::CheckThrow(bool authSuccessCheck, bool shutdownCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::CheckThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(authSuccessCheck), ::il2cpp_utils::ExtractType(shutdownCheck)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, authSuccessCheck, shutdownCheck);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.GetSSPIException
System::Exception* Mono::Net::Security::MobileAuthenticatedStream::GetSSPIException(System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::GetSSPIException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MobileAuthenticatedStream", "GetSSPIException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.GetIOException
System::Exception* Mono::Net::Security::MobileAuthenticatedStream::GetIOException(System::Exception* e, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::GetIOException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MobileAuthenticatedStream", "GetIOException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e, message);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.SetException
System::Runtime::ExceptionServices::ExceptionDispatchInfo* Mono::Net::Security::MobileAuthenticatedStream::SetException(System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::SetException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Runtime::ExceptionServices::ExceptionDispatchInfo*, false>(this, ___internal__method, e);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.AuthenticateAsClient
void Mono::Net::Security::MobileAuthenticatedStream::AuthenticateAsClient(::StringW targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::AuthenticateAsClient");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateAsClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(clientCertificates), ::il2cpp_utils::ExtractType(enabledSslProtocols), ::il2cpp_utils::ExtractType(checkCertificateRevocation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.AuthenticateAsServer
void Mono::Net::Security::MobileAuthenticatedStream::AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::AuthenticateAsServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateAsServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverCertificate), ::il2cpp_utils::ExtractType(clientCertificateRequired), ::il2cpp_utils::ExtractType(enabledSslProtocols), ::il2cpp_utils::ExtractType(checkCertificateRevocation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ProcessAuthentication
System::Threading::Tasks::Task* Mono::Net::Security::MobileAuthenticatedStream::ProcessAuthentication(bool runSynchronously, bool serverMode, ::StringW targetHost, System::Security::Authentication::SslProtocols enabledProtocols, System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, bool clientCertRequired) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::ProcessAuthentication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAuthentication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runSynchronously), ::il2cpp_utils::ExtractType(serverMode), ::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(enabledProtocols), ::il2cpp_utils::ExtractType(serverCertificate), ::il2cpp_utils::ExtractType(clientCertificates), ::il2cpp_utils::ExtractType(clientCertRequired)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, runSynchronously, serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, clientCertRequired);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.CreateContext
Mono::Net::Security::MobileTlsContext* Mono::Net::Security::MobileAuthenticatedStream::CreateContext(bool serverMode, ::StringW targetHost, System::Security::Authentication::SslProtocols enabledProtocols, System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, bool askForClientCert) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::CreateContext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverMode), ::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(enabledProtocols), ::il2cpp_utils::ExtractType(serverCertificate), ::il2cpp_utils::ExtractType(clientCertificates), ::il2cpp_utils::ExtractType(askForClientCert)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Net::Security::MobileTlsContext*, false>(this, ___internal__method, serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, askForClientCert);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.StartOperation
System::Threading::Tasks::Task_1<int>* Mono::Net::Security::MobileAuthenticatedStream::StartOperation(Mono::Net::Security::MobileAuthenticatedStream::OperationType type, Mono::Net::Security::AsyncProtocolRequest* asyncRequest, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::StartOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(asyncRequest), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, type, asyncRequest, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InternalRead
int Mono::Net::Security::MobileAuthenticatedStream::InternalRead(::ArrayW<uint8_t> buffer, int offset, int size, ByRef<bool> outWantMore) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::InternalRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, size, byref(outWantMore));
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InternalRead
System::ValueTuple_2<int, bool> Mono::Net::Security::MobileAuthenticatedStream::InternalRead(Mono::Net::Security::AsyncProtocolRequest* asyncRequest, Mono::Net::Security::BufferOffsetSize* internalBuffer, ::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::InternalRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncRequest), ::il2cpp_utils::ExtractType(internalBuffer), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<System::ValueTuple_2<int, bool>, false>(this, ___internal__method, asyncRequest, internalBuffer, buffer, offset, size);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InternalWrite
bool Mono::Net::Security::MobileAuthenticatedStream::InternalWrite(::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::InternalWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InternalWrite
bool Mono::Net::Security::MobileAuthenticatedStream::InternalWrite(Mono::Net::Security::AsyncProtocolRequest* asyncRequest, Mono::Net::Security::BufferOffsetSize2* internalBuffer, ::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::InternalWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncRequest), ::il2cpp_utils::ExtractType(internalBuffer), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, asyncRequest, internalBuffer, buffer, offset, size);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InnerRead
System::Threading::Tasks::Task_1<int>* Mono::Net::Security::MobileAuthenticatedStream::InnerRead(bool sync, int requestedSize, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::InnerRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InnerRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sync), ::il2cpp_utils::ExtractType(requestedSize), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, sync, requestedSize, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InnerWrite
System::Threading::Tasks::Task* Mono::Net::Security::MobileAuthenticatedStream::InnerWrite(bool sync, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::InnerWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InnerWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sync), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, sync, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ProcessHandshake
Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::MobileAuthenticatedStream::ProcessHandshake(Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::ProcessHandshake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessHandshake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ProcessRead
System::ValueTuple_2<int, bool> Mono::Net::Security::MobileAuthenticatedStream::ProcessRead(Mono::Net::Security::BufferOffsetSize* userBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::ProcessRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<System::ValueTuple_2<int, bool>, false>(this, ___internal__method, userBuffer);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ProcessWrite
System::ValueTuple_2<int, bool> Mono::Net::Security::MobileAuthenticatedStream::ProcessWrite(Mono::Net::Security::BufferOffsetSize* userBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::ProcessWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<System::ValueTuple_2<int, bool>, false>(this, ___internal__method, userBuffer);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.<InnerWrite>b__67_0
void Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$b__67_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::<InnerWrite>b__67_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InnerWrite>b__67_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_IsAuthenticated
bool Mono::Net::Security::MobileAuthenticatedStream::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::get_IsAuthenticated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_CanRead
bool Mono::Net::Security::MobileAuthenticatedStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_CanWrite
bool Mono::Net::Security::MobileAuthenticatedStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_CanSeek
bool Mono::Net::Security::MobileAuthenticatedStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_Length
int64_t Mono::Net::Security::MobileAuthenticatedStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_Position
int64_t Mono::Net::Security::MobileAuthenticatedStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.set_Position
void Mono::Net::Security::MobileAuthenticatedStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_ReadTimeout
int Mono::Net::Security::MobileAuthenticatedStream::get_ReadTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::get_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_WriteTimeout
int Mono::Net::Security::MobileAuthenticatedStream::get_WriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::get_WriteTimeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream..cctor
void Mono::Net::Security::MobileAuthenticatedStream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MobileAuthenticatedStream", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.BeginRead
System::IAsyncResult* Mono::Net::Security::MobileAuthenticatedStream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(asyncCallback), ::il2cpp_utils::ExtractType(asyncState)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.EndRead
int Mono::Net::Security::MobileAuthenticatedStream::EndRead(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.BeginWrite
System::IAsyncResult* Mono::Net::Security::MobileAuthenticatedStream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(asyncCallback), ::il2cpp_utils::ExtractType(asyncState)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.EndWrite
void Mono::Net::Security::MobileAuthenticatedStream::EndWrite(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Read
int Mono::Net::Security::MobileAuthenticatedStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Write
void Mono::Net::Security::MobileAuthenticatedStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ReadAsync
System::Threading::Tasks::Task_1<int>* Mono::Net::Security::MobileAuthenticatedStream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.WriteAsync
System::Threading::Tasks::Task* Mono::Net::Security::MobileAuthenticatedStream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Dispose
void Mono::Net::Security::MobileAuthenticatedStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Flush
void Mono::Net::Security::MobileAuthenticatedStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Seek
int64_t Mono::Net::Security::MobileAuthenticatedStream::Seek(int64_t offset, System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.SetLength
void Mono::Net::Security::MobileAuthenticatedStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.OperationType
#include "Mono/Net/Security/MobileAuthenticatedStream_OperationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.OperationType Read
Mono::Net::Security::MobileAuthenticatedStream::OperationType Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::Security::MobileAuthenticatedStream::OperationType>("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Read"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.OperationType Read
void Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Read(Mono::Net::Security::MobileAuthenticatedStream::OperationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.OperationType Write
Mono::Net::Security::MobileAuthenticatedStream::OperationType Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::Security::MobileAuthenticatedStream::OperationType>("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Write"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.OperationType Write
void Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Write(Mono::Net::Security::MobileAuthenticatedStream::OperationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.OperationType Shutdown
Mono::Net::Security::MobileAuthenticatedStream::OperationType Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Shutdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::Security::MobileAuthenticatedStream::OperationType>("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Shutdown"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.OperationType Shutdown
void Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Shutdown(Mono::Net::Security::MobileAuthenticatedStream::OperationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Shutdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Shutdown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Mono::Net::Security::MobileAuthenticatedStream::OperationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::OperationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<ProcessAuthentication>d__47
#include "Mono/Net/Security/MobileAuthenticatedStream_-ProcessAuthentication-d__47.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Net.Security.AsyncProtocolResult
#include "Mono/Net/Security/AsyncProtocolResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean serverMode
bool& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_serverMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_serverMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate
System::Security::Cryptography::X509Certificates::X509Certificate*& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_serverCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_serverCertificate");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverCertificate"))->offset;
  return *reinterpret_cast<System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String targetHost
::StringW& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_targetHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_targetHost");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetHost"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.MobileAuthenticatedStream <>4__this
Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean runSynchronously
bool& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_runSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_runSynchronously");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runSynchronously"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Security.Authentication.SslProtocols enabledProtocols
System::Security::Authentication::SslProtocols& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_enabledProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_enabledProtocols");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enabledProtocols"))->offset;
  return *reinterpret_cast<System::Security::Authentication::SslProtocols*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates
System::Security::Cryptography::X509Certificates::X509CertificateCollection*& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_clientCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_clientCertificates");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientCertificates"))->offset;
  return *reinterpret_cast<System::Security::Cryptography::X509Certificates::X509CertificateCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean clientCertRequired
bool& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_clientCertRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_clientCertRequired");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientCertRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<Mono.Net.Security.AsyncProtocolResult> <>u__1
typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<Mono::Net::Security::AsyncProtocolResult*>::ConfiguredTaskAwaiter& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<Mono::Net::Security::AsyncProtocolResult*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<ProcessAuthentication>d__47.MoveNext
void Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<ProcessAuthentication>d__47.SetStateMachine
void Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<StartOperation>d__58
#include "Mono/Net/Security/MobileAuthenticatedStream_-StartOperation-d__58.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest
#include "Mono/Net/Security/AsyncProtocolRequest.hpp"
// Including type: Mono.Net.Security.AsyncProtocolResult
#include "Mono/Net/Security/AsyncProtocolResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Int32> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.MobileAuthenticatedStream <>4__this
Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.OperationType type
Mono::Net::Security::MobileAuthenticatedStream::OperationType& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<Mono::Net::Security::MobileAuthenticatedStream::OperationType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.AsyncProtocolRequest asyncRequest
Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_asyncRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_asyncRequest");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncRequest"))->offset;
  return *reinterpret_cast<Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<Mono.Net.Security.AsyncProtocolResult> <>u__1
typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<Mono::Net::Security::AsyncProtocolResult*>::ConfiguredTaskAwaiter& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<Mono::Net::Security::AsyncProtocolResult*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<StartOperation>d__58.MoveNext
void Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<StartOperation>d__58.SetStateMachine
void Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<>c__DisplayClass66_0
#include "Mono/Net/Security/MobileAuthenticatedStream_--c__DisplayClass66_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.MobileAuthenticatedStream <>4__this
Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::MobileAuthenticatedStream::$$c__DisplayClass66_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$$c__DisplayClass66_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 len
int& Mono::Net::Security::MobileAuthenticatedStream::$$c__DisplayClass66_0::dyn_len() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$$c__DisplayClass66_0::dyn_len");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "len"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<>c__DisplayClass66_0.<InnerRead>b__0
int Mono::Net::Security::MobileAuthenticatedStream::$$c__DisplayClass66_0::$InnerRead$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$$c__DisplayClass66_0::<InnerRead>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InnerRead>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<InnerRead>d__66
#include "Mono/Net/Security/MobileAuthenticatedStream_-InnerRead-d__66.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Int32> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.MobileAuthenticatedStream <>4__this
Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 requestedSize
int& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_requestedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_requestedSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestedSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean sync
bool& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_sync");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sync"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Int32> <>u__1
typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<InnerRead>d__66.MoveNext
void Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<InnerRead>d__66.SetStateMachine
void Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<InnerWrite>d__67
#include "Mono/Net/Security/MobileAuthenticatedStream_-InnerWrite-d__67.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder& Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.MobileAuthenticatedStream <>4__this
Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean sync
bool& Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_sync");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sync"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<InnerWrite>d__67.MoveNext
void Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<InnerWrite>d__67.SetStateMachine
void Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileTlsContext
#include "Mono/Net/Security/MobileTlsContext.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Security.Interface.ICertificateValidator2
#include "Mono/Security/Interface/ICertificateValidator2.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.MobileAuthenticatedStream parent
Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::MobileTlsContext::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean serverMode
bool& Mono::Net::Security::MobileTlsContext::dyn_serverMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::dyn_serverMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String targetHost
::StringW& Mono::Net::Security::MobileTlsContext::dyn_targetHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::dyn_targetHost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetHost"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String serverName
::StringW& Mono::Net::Security::MobileTlsContext::dyn_serverName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::dyn_serverName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Authentication.SslProtocols enabledProtocols
System::Security::Authentication::SslProtocols& Mono::Net::Security::MobileTlsContext::dyn_enabledProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::dyn_enabledProtocols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enabledProtocols"))->offset;
  return *reinterpret_cast<System::Security::Authentication::SslProtocols*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate
System::Security::Cryptography::X509Certificates::X509Certificate*& Mono::Net::Security::MobileTlsContext::dyn_serverCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::dyn_serverCertificate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverCertificate"))->offset;
  return *reinterpret_cast<System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates
System::Security::Cryptography::X509Certificates::X509CertificateCollection*& Mono::Net::Security::MobileTlsContext::dyn_clientCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::dyn_clientCertificates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientCertificates"))->offset;
  return *reinterpret_cast<System::Security::Cryptography::X509Certificates::X509CertificateCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean askForClientCert
bool& Mono::Net::Security::MobileTlsContext::dyn_askForClientCert() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::dyn_askForClientCert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "askForClientCert"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.ICertificateValidator2 certificateValidator
Mono::Security::Interface::ICertificateValidator2*& Mono::Net::Security::MobileTlsContext::dyn_certificateValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::dyn_certificateValidator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificateValidator"))->offset;
  return *reinterpret_cast<Mono::Security::Interface::ICertificateValidator2**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_Parent
Mono::Net::Security::MobileAuthenticatedStream* Mono::Net::Security::MobileTlsContext::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::get_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Net::Security::MobileAuthenticatedStream*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_Settings
Mono::Security::Interface::MonoTlsSettings* Mono::Net::Security::MobileTlsContext::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::get_Settings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Security::Interface::MonoTlsSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_IsAuthenticated
bool Mono::Net::Security::MobileTlsContext::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::get_IsAuthenticated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_IsServer
bool Mono::Net::Security::MobileTlsContext::get_IsServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::get_IsServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_TargetHost
::StringW Mono::Net::Security::MobileTlsContext::get_TargetHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::get_TargetHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_ServerName
::StringW Mono::Net::Security::MobileTlsContext::get_ServerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::get_ServerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_ClientCertificates
System::Security::Cryptography::X509Certificates::X509CertificateCollection* Mono::Net::Security::MobileTlsContext::get_ClientCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::get_ClientCertificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::X509Certificates::X509CertificateCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_LocalServerCertificate
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::MobileTlsContext::get_LocalServerCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::get_LocalServerCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalServerCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_LocalClientCertificate
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::MobileTlsContext::get_LocalClientCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::get_LocalClientCertificate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalClientCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.StartHandshake
void Mono::Net::Security::MobileTlsContext::StartHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::StartHandshake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartHandshake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.ProcessHandshake
bool Mono::Net::Security::MobileTlsContext::ProcessHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::ProcessHandshake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessHandshake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.FinishHandshake
void Mono::Net::Security::MobileTlsContext::FinishHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::FinishHandshake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishHandshake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Read
System::ValueTuple_2<int, bool> Mono::Net::Security::MobileTlsContext::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<System::ValueTuple_2<int, bool>, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Write
System::ValueTuple_2<int, bool> Mono::Net::Security::MobileTlsContext::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<System::ValueTuple_2<int, bool>, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Shutdown
void Mono::Net::Security::MobileTlsContext::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::Shutdown");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.ValidateCertificate
bool Mono::Net::Security::MobileTlsContext::ValidateCertificate(System::Security::Cryptography::X509Certificates::X509Certificate* leaf, System::Security::Cryptography::X509Certificates::X509Chain* chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::ValidateCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaf), ::il2cpp_utils::ExtractType(chain)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, leaf, chain);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.ValidateCertificate
bool Mono::Net::Security::MobileTlsContext::ValidateCertificate(System::Security::Cryptography::X509Certificates::X509CertificateCollection* certificates) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::ValidateCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificates)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificates);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.SelectClientCertificate
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::MobileTlsContext::SelectClientCertificate(System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, ::ArrayW<::StringW> acceptableIssuers) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::SelectClientCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectClientCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverCertificate), ::il2cpp_utils::ExtractType(acceptableIssuers)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, serverCertificate, acceptableIssuers);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Dispose
void Mono::Net::Security::MobileTlsContext::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Dispose
void Mono::Net::Security::MobileTlsContext::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Finalize
void Mono::Net::Security::MobileTlsContext::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MobileTlsContext::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.MonoTlsProviderFactory
#include "Mono/Net/Security/MonoTlsProviderFactory.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object locker
::Il2CppObject* Mono::Net::Security::MonoTlsProviderFactory::_get_locker() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::_get_locker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Mono.Net.Security", "MonoTlsProviderFactory", "locker"));
}
// Autogenerated static field setter
// Set static field: static private System.Object locker
void Mono::Net::Security::MonoTlsProviderFactory::_set_locker(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::_set_locker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "locker", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean initialized
bool Mono::Net::Security::MonoTlsProviderFactory::_get_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::_get_initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Net.Security", "MonoTlsProviderFactory", "initialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean initialized
void Mono::Net::Security::MonoTlsProviderFactory::_set_initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::_set_initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "initialized", value));
}
// Autogenerated static field getter
// Get static field: static private Mono.Security.Interface.MonoTlsProvider defaultProvider
Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MonoTlsProviderFactory::_get_defaultProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::_get_defaultProvider");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::MonoTlsProvider*>("Mono.Net.Security", "MonoTlsProviderFactory", "defaultProvider"));
}
// Autogenerated static field setter
// Set static field: static private Mono.Security.Interface.MonoTlsProvider defaultProvider
void Mono::Net::Security::MonoTlsProviderFactory::_set_defaultProvider(Mono::Security::Interface::MonoTlsProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::_set_defaultProvider");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "defaultProvider", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Tuple`2<System.Guid,System.String>> providerRegistration
System::Collections::Generic::Dictionary_2<::StringW, System::Tuple_2<System::Guid, ::StringW>*>* Mono::Net::Security::MonoTlsProviderFactory::_get_providerRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::_get_providerRegistration");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::StringW, System::Tuple_2<System::Guid, ::StringW>*>*>("Mono.Net.Security", "MonoTlsProviderFactory", "providerRegistration")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Tuple`2<System.Guid,System.String>> providerRegistration
void Mono::Net::Security::MonoTlsProviderFactory::_set_providerRegistration(System::Collections::Generic::Dictionary_2<::StringW, System::Tuple_2<System::Guid, ::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::_set_providerRegistration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "providerRegistration", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Guid,Mono.Security.Interface.MonoTlsProvider> providerCache
System::Collections::Generic::Dictionary_2<System::Guid, Mono::Security::Interface::MonoTlsProvider*>* Mono::Net::Security::MonoTlsProviderFactory::_get_providerCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::_get_providerCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<System::Guid, Mono::Security::Interface::MonoTlsProvider*>*>("Mono.Net.Security", "MonoTlsProviderFactory", "providerCache")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Guid,Mono.Security.Interface.MonoTlsProvider> providerCache
void Mono::Net::Security::MonoTlsProviderFactory::_set_providerCache(System::Collections::Generic::Dictionary_2<System::Guid, Mono::Security::Interface::MonoTlsProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::_set_providerCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "providerCache", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Guid UnityTlsId
System::Guid Mono::Net::Security::MonoTlsProviderFactory::_get_UnityTlsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::_get_UnityTlsId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid>("Mono.Net.Security", "MonoTlsProviderFactory", "UnityTlsId"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Guid UnityTlsId
void Mono::Net::Security::MonoTlsProviderFactory::_set_UnityTlsId(System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::_set_UnityTlsId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "UnityTlsId", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Guid AppleTlsId
System::Guid Mono::Net::Security::MonoTlsProviderFactory::_get_AppleTlsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::_get_AppleTlsId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid>("Mono.Net.Security", "MonoTlsProviderFactory", "AppleTlsId"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Guid AppleTlsId
void Mono::Net::Security::MonoTlsProviderFactory::_set_AppleTlsId(System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::_set_AppleTlsId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "AppleTlsId", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Guid BtlsId
System::Guid Mono::Net::Security::MonoTlsProviderFactory::_get_BtlsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::_get_BtlsId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid>("Mono.Net.Security", "MonoTlsProviderFactory", "BtlsId"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Guid BtlsId
void Mono::Net::Security::MonoTlsProviderFactory::_set_BtlsId(System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::_set_BtlsId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "BtlsId", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Guid LegacyId
System::Guid Mono::Net::Security::MonoTlsProviderFactory::_get_LegacyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::_get_LegacyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid>("Mono.Net.Security", "MonoTlsProviderFactory", "LegacyId"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Guid LegacyId
void Mono::Net::Security::MonoTlsProviderFactory::_set_LegacyId(System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::_set_LegacyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "LegacyId", value));
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory..cctor
void Mono::Net::Security::MonoTlsProviderFactory::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.GetProviderInternal
Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MonoTlsProviderFactory::GetProviderInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::GetProviderInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "GetProviderInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Security::Interface::MonoTlsProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.InitializeInternal
void Mono::Net::Security::MonoTlsProviderFactory::InitializeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::InitializeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "InitializeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.LookupProvider
Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MonoTlsProviderFactory::LookupProvider(::StringW name, bool throwOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::LookupProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "LookupProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(throwOnError)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Security::Interface::MonoTlsProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, throwOnError);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.InitializeProviderRegistration
void Mono::Net::Security::MonoTlsProviderFactory::InitializeProviderRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::InitializeProviderRegistration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "InitializeProviderRegistration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.CreateDefaultProviderImpl
Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MonoTlsProviderFactory::CreateDefaultProviderImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::CreateDefaultProviderImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "CreateDefaultProviderImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Security::Interface::MonoTlsProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.GetProvider
Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MonoTlsProviderFactory::GetProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsProviderFactory::GetProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "GetProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Security::Interface::MonoTlsProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MonoTlsStream
#include "Mono/Net/Security/MonoTlsStream.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: System.Net.Sockets.NetworkStream
#include "System/Net/Sockets/NetworkStream.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.IMonoSslStream
#include "Mono/Security/Interface/IMonoSslStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Security.Interface.MonoTlsProvider provider
Mono::Security::Interface::MonoTlsProvider*& Mono::Net::Security::MonoTlsStream::dyn_provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsStream::dyn_provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "provider"))->offset;
  return *reinterpret_cast<Mono::Security::Interface::MonoTlsProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Sockets.NetworkStream networkStream
System::Net::Sockets::NetworkStream*& Mono::Net::Security::MonoTlsStream::dyn_networkStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsStream::dyn_networkStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "networkStream"))->offset;
  return *reinterpret_cast<System::Net::Sockets::NetworkStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.HttpWebRequest request
System::Net::HttpWebRequest*& Mono::Net::Security::MonoTlsStream::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsStream::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<System::Net::HttpWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Security.Interface.MonoTlsSettings settings
Mono::Security::Interface::MonoTlsSettings*& Mono::Net::Security::MonoTlsStream::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsStream::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<Mono::Security::Interface::MonoTlsSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.IMonoSslStream sslStream
Mono::Security::Interface::IMonoSslStream*& Mono::Net::Security::MonoTlsStream::dyn_sslStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsStream::dyn_sslStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sslStream"))->offset;
  return *reinterpret_cast<Mono::Security::Interface::IMonoSslStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebExceptionStatus status
System::Net::WebExceptionStatus& Mono::Net::Security::MonoTlsStream::dyn_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsStream::dyn_status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status"))->offset;
  return *reinterpret_cast<System::Net::WebExceptionStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <CertificateValidationFailed>k__BackingField
bool& Mono::Net::Security::MonoTlsStream::dyn_$CertificateValidationFailed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsStream::dyn_$CertificateValidationFailed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CertificateValidationFailed>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream.get_Request
System::Net::HttpWebRequest* Mono::Net::Security::MonoTlsStream::get_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsStream::get_Request");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Request", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::HttpWebRequest*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream.get_ExceptionStatus
System::Net::WebExceptionStatus Mono::Net::Security::MonoTlsStream::get_ExceptionStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsStream::get_ExceptionStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExceptionStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::WebExceptionStatus, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream.get_CertificateValidationFailed
bool Mono::Net::Security::MonoTlsStream::get_CertificateValidationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsStream::get_CertificateValidationFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateValidationFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream.set_CertificateValidationFailed
void Mono::Net::Security::MonoTlsStream::set_CertificateValidationFailed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsStream::set_CertificateValidationFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CertificateValidationFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream.CreateStream
System::IO::Stream* Mono::Net::Security::MonoTlsStream::CreateStream(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::MonoTlsStream::CreateStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IO::Stream*, false>(this, ___internal__method, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.NoReflectionHelper
#include "Mono/Net/Security/NoReflectionHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.NoReflectionHelper.GetInternalValidator
::Il2CppObject* Mono::Net::Security::NoReflectionHelper::GetInternalValidator(::Il2CppObject* provider, ::Il2CppObject* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::NoReflectionHelper::GetInternalValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "NoReflectionHelper", "GetInternalValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, settings);
}
// Autogenerated method: Mono.Net.Security.NoReflectionHelper.GetProvider
::Il2CppObject* Mono::Net::Security::NoReflectionHelper::GetProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::NoReflectionHelper::GetProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "NoReflectionHelper", "GetProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.SystemCertificateValidator
#include "Mono/Net/Security/SystemCertificateValidator.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean is_macosx
bool Mono::Net::Security::SystemCertificateValidator::_get_is_macosx() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::SystemCertificateValidator::_get_is_macosx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Net.Security", "SystemCertificateValidator", "is_macosx"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean is_macosx
void Mono::Net::Security::SystemCertificateValidator::_set_is_macosx(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::SystemCertificateValidator::_set_is_macosx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "SystemCertificateValidator", "is_macosx", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.X509Certificates.X509KeyUsageFlags s_flags
System::Security::Cryptography::X509Certificates::X509KeyUsageFlags Mono::Net::Security::SystemCertificateValidator::_get_s_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::SystemCertificateValidator::_get_s_flags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("Mono.Net.Security", "SystemCertificateValidator", "s_flags"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.X509Certificates.X509KeyUsageFlags s_flags
void Mono::Net::Security::SystemCertificateValidator::_set_s_flags(System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::SystemCertificateValidator::_set_s_flags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "SystemCertificateValidator", "s_flags", value));
}
// Autogenerated method: Mono.Net.Security.SystemCertificateValidator..cctor
void Mono::Net::Security::SystemCertificateValidator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::SystemCertificateValidator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "SystemCertificateValidator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.SystemCertificateValidator.CreateX509Chain
System::Security::Cryptography::X509Certificates::X509Chain* Mono::Net::Security::SystemCertificateValidator::CreateX509Chain(System::Security::Cryptography::X509Certificates::X509CertificateCollection* certs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::SystemCertificateValidator::CreateX509Chain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "SystemCertificateValidator", "CreateX509Chain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certs)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::X509Certificates::X509Chain*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, certs);
}
// Autogenerated method: Mono.Net.Security.SystemCertificateValidator.NeedsChain
bool Mono::Net::Security::SystemCertificateValidator::NeedsChain(Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::SystemCertificateValidator::NeedsChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "SystemCertificateValidator", "NeedsChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, settings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.Private.CallbackHelpers
#include "Mono/Net/Security/Private/CallbackHelpers.hpp"
// Including type: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass0_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass0_0.hpp"
// Including type: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass5_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass5_0.hpp"
// Including type: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass8_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass8_0.hpp"
// Including type: Mono.Security.Interface.MonoRemoteCertificateValidationCallback
#include "Mono/Security/Interface/MonoRemoteCertificateValidationCallback.hpp"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
// Including type: System.Net.Security.LocalCertSelectionCallback
#include "System/Net/Security/LocalCertSelectionCallback.hpp"
// Including type: Mono.Security.Interface.MonoLocalCertificateSelectionCallback
#include "Mono/Security/Interface/MonoLocalCertificateSelectionCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers.PublicToMono
Mono::Security::Interface::MonoRemoteCertificateValidationCallback* Mono::Net::Security::Private::CallbackHelpers::PublicToMono(System::Net::Security::RemoteCertificateValidationCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::Private::CallbackHelpers::PublicToMono");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security.Private", "CallbackHelpers", "PublicToMono", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<Mono::Security::Interface::MonoRemoteCertificateValidationCallback*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers.MonoToPublic
System::Net::Security::RemoteCertificateValidationCallback* Mono::Net::Security::Private::CallbackHelpers::MonoToPublic(Mono::Security::Interface::MonoRemoteCertificateValidationCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::Private::CallbackHelpers::MonoToPublic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security.Private", "CallbackHelpers", "MonoToPublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Security::RemoteCertificateValidationCallback*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers.MonoToInternal
System::Net::Security::LocalCertSelectionCallback* Mono::Net::Security::Private::CallbackHelpers::MonoToInternal(Mono::Security::Interface::MonoLocalCertificateSelectionCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::Private::CallbackHelpers::MonoToInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security.Private", "CallbackHelpers", "MonoToInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Security::LocalCertSelectionCallback*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass0_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass0_0.hpp"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Net.Security.RemoteCertificateValidationCallback callback
System::Net::Security::RemoteCertificateValidationCallback*& Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass0_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass0_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<System::Net::Security::RemoteCertificateValidationCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass0_0.<PublicToMono>b__0
bool Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass0_0::$PublicToMono$b__0(::StringW h, System::Security::Cryptography::X509Certificates::X509Certificate* c, System::Security::Cryptography::X509Certificates::X509Chain* ch, Mono::Security::Interface::MonoSslPolicyErrors e) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass0_0::<PublicToMono>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PublicToMono>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, h, c, ch, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass5_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass5_0.hpp"
// Including type: Mono.Security.Interface.MonoRemoteCertificateValidationCallback
#include "Mono/Security/Interface/MonoRemoteCertificateValidationCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Mono.Security.Interface.MonoRemoteCertificateValidationCallback callback
Mono::Security::Interface::MonoRemoteCertificateValidationCallback*& Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass5_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass5_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<Mono::Security::Interface::MonoRemoteCertificateValidationCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass5_0.<MonoToPublic>b__0
bool Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass5_0::$MonoToPublic$b__0(::Il2CppObject* t, System::Security::Cryptography::X509Certificates::X509Certificate* c, System::Security::Cryptography::X509Certificates::X509Chain* ch, System::Net::Security::SslPolicyErrors e) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass5_0::<MonoToPublic>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<MonoToPublic>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t, c, ch, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass8_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass8_0.hpp"
// Including type: Mono.Security.Interface.MonoLocalCertificateSelectionCallback
#include "Mono/Security/Interface/MonoLocalCertificateSelectionCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Mono.Security.Interface.MonoLocalCertificateSelectionCallback callback
Mono::Security::Interface::MonoLocalCertificateSelectionCallback*& Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass8_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass8_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<Mono::Security::Interface::MonoLocalCertificateSelectionCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass8_0.<MonoToInternal>b__0
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass8_0::$MonoToInternal$b__0(::StringW t, System::Security::Cryptography::X509Certificates::X509CertificateCollection* lc, System::Security::Cryptography::X509Certificates::X509Certificate* rc, ::ArrayW<::StringW> ai) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass8_0::<MonoToInternal>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<MonoToInternal>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(lc), ::il2cpp_utils::ExtractType(rc), ::il2cpp_utils::ExtractType(ai)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, t, lc, rc, ai);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Http.NtlmSession
#include "Mono/Http/NtlmSession.hpp"
// Including type: Mono.Security.Protocol.Ntlm.MessageBase
#include "Mono/Security/Protocol/Ntlm/MessageBase.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Ntlm.MessageBase message
Mono::Security::Protocol::Ntlm::MessageBase*& Mono::Http::NtlmSession::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Http::NtlmSession::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<Mono::Security::Protocol::Ntlm::MessageBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Http.NtlmSession.Authenticate
System::Net::Authorization* Mono::Http::NtlmSession::Authenticate(::StringW challenge, System::Net::WebRequest* webRequest, System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Http::NtlmSession::Authenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Authenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge), ::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Authorization*, false>(this, ___internal__method, challenge, webRequest, credentials);
}
