// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.VRIK/References
#include "RootMotion/FinalIK/VRIK_References.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.VRIK/References.GetTransforms
::Array<UnityEngine::Transform*>* RootMotion::FinalIK::VRIK::References::GetTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::VRIK::References::GetTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Transform*>*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIK/References.get_isFilled
bool RootMotion::FinalIK::VRIK::References::get_isFilled() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::VRIK::References::get_isFilled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isFilled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIK/References.get_isEmpty
bool RootMotion::FinalIK::VRIK::References::get_isEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::VRIK::References::get_isEmpty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isEmpty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIK/References.AutoDetectReferences
bool RootMotion::FinalIK::VRIK::References::AutoDetectReferences(UnityEngine::Transform* root, RootMotion::FinalIK::VRIK::References*& references) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::VRIK::References::AutoDetectReferences");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "VRIK/References", "AutoDetectReferences", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(root, references)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, root, references);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.FABRIKChain
#include "RootMotion/FinalIK/FABRIKChain.hpp"
// Including type: RootMotion.FinalIK.FABRIK
#include "RootMotion/FinalIK/FABRIK.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.FABRIKChain.IsValid
bool RootMotion::FinalIK::FABRIKChain::IsValid(::Il2CppString*& message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FABRIKChain::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: RootMotion.FinalIK.FABRIKChain.Initiate
void RootMotion::FinalIK::FABRIKChain::Initiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FABRIKChain::Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FABRIKChain.Stage1
void RootMotion::FinalIK::FABRIKChain::Stage1(::Array<RootMotion::FinalIK::FABRIKChain*>* chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FABRIKChain::Stage1");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Stage1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chain)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, chain);
}
// Autogenerated method: RootMotion.FinalIK.FABRIKChain.Stage2
void RootMotion::FinalIK::FABRIKChain::Stage2(UnityEngine::Vector3 rootPosition, ::Array<RootMotion::FinalIK::FABRIKChain*>* chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FABRIKChain::Stage2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Stage2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rootPosition, chain)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rootPosition, chain);
}
// Autogenerated method: RootMotion.FinalIK.FABRIKChain.GetCentroid
UnityEngine::Vector3 RootMotion::FinalIK::FABRIKChain::GetCentroid(::Array<RootMotion::FinalIK::FABRIKChain*>* chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FABRIKChain::GetCentroid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCentroid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chain)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, chain);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.FBBIKArmBending
#include "RootMotion/FinalIK/FBBIKArmBending.hpp"
// Including type: RootMotion.FinalIK.FullBodyBipedIK
#include "RootMotion/FinalIK/FullBodyBipedIK.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.FBBIKArmBending.LateUpdate
void RootMotion::FinalIK::FBBIKArmBending::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBBIKArmBending::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKArmBending.OnPostFBBIK
void RootMotion::FinalIK::FBBIKArmBending::OnPostFBBIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBBIKArmBending::OnPostFBBIK");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPostFBBIK", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKArmBending.OnDestroy
void RootMotion::FinalIK::FBBIKArmBending::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBBIKArmBending::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.FBBIKHeadEffector
#include "RootMotion/FinalIK/FBBIKHeadEffector.hpp"
// Including type: RootMotion.FinalIK.FBBIKHeadEffector/BendBone
#include "RootMotion/FinalIK/FBBIKHeadEffector_BendBone.hpp"
// Including type: RootMotion.FinalIK.FullBodyBipedIK
#include "RootMotion/FinalIK/FullBodyBipedIK.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKEffector
#include "RootMotion/FinalIK/IKEffector.hpp"
// Including type: RootMotion.FinalIK.IKSolver/UpdateDelegate
#include "RootMotion/FinalIK/IKSolver_UpdateDelegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.Start
void RootMotion::FinalIK::FBBIKHeadEffector::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBBIKHeadEffector::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.OnStoreDefaultLocalState
void RootMotion::FinalIK::FBBIKHeadEffector::OnStoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBBIKHeadEffector::OnStoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.OnFixTransforms
void RootMotion::FinalIK::FBBIKHeadEffector::OnFixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBBIKHeadEffector::OnFixTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnFixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.OnPreRead
void RootMotion::FinalIK::FBBIKHeadEffector::OnPreRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBBIKHeadEffector::OnPreRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPreRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.SpineBend
void RootMotion::FinalIK::FBBIKHeadEffector::SpineBend() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBBIKHeadEffector::SpineBend");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpineBend", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.CCDPass
void RootMotion::FinalIK::FBBIKHeadEffector::CCDPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBBIKHeadEffector::CCDPass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CCDPass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.Iterate
void RootMotion::FinalIK::FBBIKHeadEffector::Iterate(int iteration) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBBIKHeadEffector::Iterate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Iterate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(iteration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, iteration);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.OnPostUpdate
void RootMotion::FinalIK::FBBIKHeadEffector::OnPostUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBBIKHeadEffector::OnPostUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPostUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.ChestDirection
void RootMotion::FinalIK::FBBIKHeadEffector::ChestDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBBIKHeadEffector::ChestDirection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ChestDirection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.PostStretching
void RootMotion::FinalIK::FBBIKHeadEffector::PostStretching() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBBIKHeadEffector::PostStretching");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PostStretching", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.LerpSolverPosition
void RootMotion::FinalIK::FBBIKHeadEffector::LerpSolverPosition(RootMotion::FinalIK::IKEffector* effector, UnityEngine::Vector3 position, float weight, UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBBIKHeadEffector::LerpSolverPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LerpSolverPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effector, position, weight, offset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, effector, position, weight, offset);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.Solve
void RootMotion::FinalIK::FBBIKHeadEffector::Solve(UnityEngine::Vector3& pos1, UnityEngine::Vector3& pos2, float nominalDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBBIKHeadEffector::Solve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pos1, pos2, nominalDistance)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos1, pos2, nominalDistance);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.OnDestroy
void RootMotion::FinalIK::FBBIKHeadEffector::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBBIKHeadEffector::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.FBBIKHeadEffector/BendBone
#include "RootMotion/FinalIK/FBBIKHeadEffector_BendBone.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector/BendBone.StoreDefaultLocalState
void RootMotion::FinalIK::FBBIKHeadEffector::BendBone::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBBIKHeadEffector::BendBone::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector/BendBone.FixTransforms
void RootMotion::FinalIK::FBBIKHeadEffector::BendBone::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBBIKHeadEffector::BendBone::FixTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.FBIKChain
#include "RootMotion/FinalIK/FBIKChain.hpp"
// Including type: RootMotion.FinalIK.FBIKChain/ChildConstraint
#include "RootMotion/FinalIK/FBIKChain_ChildConstraint.hpp"
// Including type: RootMotion.FinalIK.IKConstraintBend
#include "RootMotion/FinalIK/IKConstraintBend.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Node
#include "RootMotion/FinalIK/IKSolver_Node.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single maxLimbLength
float RootMotion::FinalIK::FBIKChain::_get_maxLimbLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::_get_maxLimbLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("RootMotion.FinalIK", "FBIKChain", "maxLimbLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Single maxLimbLength
void RootMotion::FinalIK::FBIKChain::_set_maxLimbLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::_set_maxLimbLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FBIKChain", "maxLimbLength", value));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.SetNodes
void RootMotion::FinalIK::FBIKChain::SetNodes(::Array<UnityEngine::Transform*>* boneTransforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::SetNodes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetNodes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneTransforms)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, boneTransforms);
}
// Creating initializer_list -> params proxy for: System.Void SetNodes(params UnityEngine.Transform[] boneTransforms)
void RootMotion::FinalIK::FBIKChain::SetNodes(std::initializer_list<UnityEngine::Transform*> boneTransforms) {
  RootMotion::FinalIK::FBIKChain::SetNodes(::Array<UnityEngine::Transform*>::New(boneTransforms));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.GetNodeIndex
int RootMotion::FinalIK::FBIKChain::GetNodeIndex(UnityEngine::Transform* boneTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::GetNodeIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNodeIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneTransform)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, boneTransform);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.IsValid
bool RootMotion::FinalIK::FBIKChain::IsValid(::Il2CppString*& message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.Initiate
void RootMotion::FinalIK::FBIKChain::Initiate(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.ReadPose
void RootMotion::FinalIK::FBIKChain::ReadPose(RootMotion::FinalIK::IKSolverFullBody* solver, bool fullBody) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::ReadPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, fullBody)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, fullBody);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.CalculateBoneLengths
void RootMotion::FinalIK::FBIKChain::CalculateBoneLengths(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::CalculateBoneLengths");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CalculateBoneLengths", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.Reach
void RootMotion::FinalIK::FBIKChain::Reach(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::Reach");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reach", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.Push
UnityEngine::Vector3 RootMotion::FinalIK::FBIKChain::Push(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::Push");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.SolveTrigonometric
void RootMotion::FinalIK::FBIKChain::SolveTrigonometric(RootMotion::FinalIK::IKSolverFullBody* solver, bool calculateBendDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::SolveTrigonometric");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SolveTrigonometric", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, calculateBendDirection)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, calculateBendDirection);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.Stage1
void RootMotion::FinalIK::FBIKChain::Stage1(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::Stage1");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Stage1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.Stage2
void RootMotion::FinalIK::FBIKChain::Stage2(RootMotion::FinalIK::IKSolverFullBody* solver, UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::Stage2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Stage2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, position);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.SolveConstraintSystems
void RootMotion::FinalIK::FBIKChain::SolveConstraintSystems(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::SolveConstraintSystems");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SolveConstraintSystems", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.SolveFABRIKJoint
UnityEngine::Vector3 RootMotion::FinalIK::FBIKChain::SolveFABRIKJoint(UnityEngine::Vector3 pos1, UnityEngine::Vector3 pos2, float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::SolveFABRIKJoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SolveFABRIKJoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pos1, pos2, length)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, pos1, pos2, length);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.GetDirToBendPoint
UnityEngine::Vector3 RootMotion::FinalIK::FBIKChain::GetDirToBendPoint(UnityEngine::Vector3 direction, UnityEngine::Vector3 bendDirection, float directionMagnitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::GetDirToBendPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDirToBendPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(direction, bendDirection, directionMagnitude)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, direction, bendDirection, directionMagnitude);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.SolveChildConstraints
void RootMotion::FinalIK::FBIKChain::SolveChildConstraints(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::SolveChildConstraints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SolveChildConstraints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.SolveLinearConstraint
void RootMotion::FinalIK::FBIKChain::SolveLinearConstraint(RootMotion::FinalIK::IKSolver::Node* node1, RootMotion::FinalIK::IKSolver::Node* node2, float crossFade, float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::SolveLinearConstraint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SolveLinearConstraint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(node1, node2, crossFade, distance)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, node1, node2, crossFade, distance);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.ForwardReach
void RootMotion::FinalIK::FBIKChain::ForwardReach(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::ForwardReach");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ForwardReach", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.BackwardReach
void RootMotion::FinalIK::FBIKChain::BackwardReach(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::BackwardReach");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BackwardReach", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.FBIKChain/ChildConstraint
#include "RootMotion/FinalIK/FBIKChain_ChildConstraint.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.FBIKChain/ChildConstraint.get_nominalDistance
float RootMotion::FinalIK::FBIKChain::ChildConstraint::get_nominalDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::ChildConstraint::get_nominalDistance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_nominalDistance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain/ChildConstraint.set_nominalDistance
void RootMotion::FinalIK::FBIKChain::ChildConstraint::set_nominalDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::ChildConstraint::set_nominalDistance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_nominalDistance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain/ChildConstraint.get_isRigid
bool RootMotion::FinalIK::FBIKChain::ChildConstraint::get_isRigid() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::ChildConstraint::get_isRigid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isRigid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain/ChildConstraint.set_isRigid
void RootMotion::FinalIK::FBIKChain::ChildConstraint::set_isRigid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::ChildConstraint::set_isRigid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isRigid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain/ChildConstraint.Initiate
void RootMotion::FinalIK::FBIKChain::ChildConstraint::Initiate(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::ChildConstraint::Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain/ChildConstraint.OnPreSolve
void RootMotion::FinalIK::FBIKChain::ChildConstraint::OnPreSolve(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::ChildConstraint::OnPreSolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPreSolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain/ChildConstraint.Solve
void RootMotion::FinalIK::FBIKChain::ChildConstraint::Solve(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::ChildConstraint::Solve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.FBIKChain/Smoothing
#include "RootMotion/FinalIK/FBIKChain.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FBIKChain/Smoothing None
RootMotion::FinalIK::FBIKChain::Smoothing RootMotion::FinalIK::FBIKChain::Smoothing::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::Smoothing::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::FBIKChain::Smoothing>("RootMotion.FinalIK", "FBIKChain/Smoothing", "None"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FBIKChain/Smoothing None
void RootMotion::FinalIK::FBIKChain::Smoothing::_set_None(RootMotion::FinalIK::FBIKChain::Smoothing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::Smoothing::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FBIKChain/Smoothing", "None", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FBIKChain/Smoothing Exponential
RootMotion::FinalIK::FBIKChain::Smoothing RootMotion::FinalIK::FBIKChain::Smoothing::_get_Exponential() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::Smoothing::_get_Exponential");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::FBIKChain::Smoothing>("RootMotion.FinalIK", "FBIKChain/Smoothing", "Exponential"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FBIKChain/Smoothing Exponential
void RootMotion::FinalIK::FBIKChain::Smoothing::_set_Exponential(RootMotion::FinalIK::FBIKChain::Smoothing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::Smoothing::_set_Exponential");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FBIKChain/Smoothing", "Exponential", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FBIKChain/Smoothing Cubic
RootMotion::FinalIK::FBIKChain::Smoothing RootMotion::FinalIK::FBIKChain::Smoothing::_get_Cubic() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::Smoothing::_get_Cubic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::FBIKChain::Smoothing>("RootMotion.FinalIK", "FBIKChain/Smoothing", "Cubic"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FBIKChain/Smoothing Cubic
void RootMotion::FinalIK::FBIKChain::Smoothing::_set_Cubic(RootMotion::FinalIK::FBIKChain::Smoothing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FBIKChain::Smoothing::_set_Cubic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FBIKChain/Smoothing", "Cubic", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKConstraintBend
#include "RootMotion/FinalIK/IKConstraintBend.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: RootMotion.Warning/Logger
#include "RootMotion/Warning_Logger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKConstraintBend.IsValid
bool RootMotion::FinalIK::IKConstraintBend::IsValid(RootMotion::FinalIK::IKSolverFullBody* solver, RootMotion::Warning::Logger* logger) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKConstraintBend::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, logger)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, solver, logger);
}
// Autogenerated method: RootMotion.FinalIK.IKConstraintBend.get_initiated
bool RootMotion::FinalIK::IKConstraintBend::get_initiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKConstraintBend::get_initiated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_initiated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKConstraintBend.set_initiated
void RootMotion::FinalIK::IKConstraintBend::set_initiated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKConstraintBend::set_initiated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_initiated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKConstraintBend.SetBones
void RootMotion::FinalIK::IKConstraintBend::SetBones(UnityEngine::Transform* bone1, UnityEngine::Transform* bone2, UnityEngine::Transform* bone3) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKConstraintBend::SetBones");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetBones", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bone1, bone2, bone3)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bone1, bone2, bone3);
}
// Autogenerated method: RootMotion.FinalIK.IKConstraintBend.Initiate
void RootMotion::FinalIK::IKConstraintBend::Initiate(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKConstraintBend::Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKConstraintBend.SetLimbOrientation
void RootMotion::FinalIK::IKConstraintBend::SetLimbOrientation(UnityEngine::Vector3 upper, UnityEngine::Vector3 lower, UnityEngine::Vector3 last) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKConstraintBend::SetLimbOrientation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLimbOrientation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(upper, lower, last)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, upper, lower, last);
}
// Autogenerated method: RootMotion.FinalIK.IKConstraintBend.LimitBend
void RootMotion::FinalIK::IKConstraintBend::LimitBend(float solverWeight, float positionWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKConstraintBend::LimitBend");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LimitBend", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solverWeight, positionWeight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solverWeight, positionWeight);
}
// Autogenerated method: RootMotion.FinalIK.IKConstraintBend.GetDir
UnityEngine::Vector3 RootMotion::FinalIK::IKConstraintBend::GetDir(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKConstraintBend::GetDir");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDir", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKConstraintBend.OrthoToLimb
UnityEngine::Vector3 RootMotion::FinalIK::IKConstraintBend::OrthoToLimb(RootMotion::FinalIK::IKSolverFullBody* solver, UnityEngine::Vector3 tangent) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKConstraintBend::OrthoToLimb");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OrthoToLimb", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, tangent)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, solver, tangent);
}
// Autogenerated method: RootMotion.FinalIK.IKConstraintBend.OrthoToBone1
UnityEngine::Vector3 RootMotion::FinalIK::IKConstraintBend::OrthoToBone1(RootMotion::FinalIK::IKSolverFullBody* solver, UnityEngine::Vector3 tangent) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKConstraintBend::OrthoToBone1");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OrthoToBone1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, tangent)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, solver, tangent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKEffector
#include "RootMotion/FinalIK/IKEffector.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Node
#include "RootMotion/FinalIK/IKSolver_Node.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKEffector.GetNode
RootMotion::FinalIK::IKSolver::Node* RootMotion::FinalIK::IKEffector::GetNode(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKEffector::GetNode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolver::Node*, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.get_isEndEffector
bool RootMotion::FinalIK::IKEffector::get_isEndEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKEffector::get_isEndEffector");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isEndEffector", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.set_isEndEffector
void RootMotion::FinalIK::IKEffector::set_isEndEffector(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKEffector::set_isEndEffector");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isEndEffector", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.PinToBone
void RootMotion::FinalIK::IKEffector::PinToBone(float positionWeight, float rotationWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKEffector::PinToBone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PinToBone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(positionWeight, rotationWeight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, positionWeight, rotationWeight);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.IsValid
bool RootMotion::FinalIK::IKEffector::IsValid(RootMotion::FinalIK::IKSolver* solver, ::Il2CppString*& message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKEffector::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, message)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, solver, message);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.Initiate
void RootMotion::FinalIK::IKEffector::Initiate(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKEffector::Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.ResetOffset
void RootMotion::FinalIK::IKEffector::ResetOffset(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKEffector::ResetOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.SetToTarget
void RootMotion::FinalIK::IKEffector::SetToTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKEffector::SetToTarget");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetToTarget", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.OnPreSolve
void RootMotion::FinalIK::IKEffector::OnPreSolve(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKEffector::OnPreSolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPreSolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.OnPostWrite
void RootMotion::FinalIK::IKEffector::OnPostWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKEffector::OnPostWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPostWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.GetPlaneRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKEffector::GetPlaneRotation(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKEffector::GetPlaneRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlaneRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.Update
void RootMotion::FinalIK::IKEffector::Update(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKEffector::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.GetPosition
UnityEngine::Vector3 RootMotion::FinalIK::IKEffector::GetPosition(RootMotion::FinalIK::IKSolverFullBody* solver, UnityEngine::Quaternion& planeRotationOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKEffector::GetPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, planeRotationOffset)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, solver, planeRotationOffset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKMapping
#include "RootMotion/FinalIK/IKMapping.hpp"
// Including type: RootMotion.FinalIK.IKMapping/BoneMap
#include "RootMotion/FinalIK/IKMapping_BoneMap.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: RootMotion.Warning/Logger
#include "RootMotion/Warning_Logger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKMapping.IsValid
bool RootMotion::FinalIK::IKMapping::IsValid(RootMotion::FinalIK::IKSolver* solver, ::Il2CppString*& message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::IsValid_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, message)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, solver, message);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping.Initiate
void RootMotion::FinalIK::IKMapping::Initiate(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::Initiate_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping.BoneIsValid
bool RootMotion::FinalIK::IKMapping::BoneIsValid(UnityEngine::Transform* bone, RootMotion::FinalIK::IKSolver* solver, ::Il2CppString*& message, RootMotion::Warning::Logger* logger) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneIsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BoneIsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bone, solver, message, logger)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, bone, solver, message, logger);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping.SolveFABRIKJoint
UnityEngine::Vector3 RootMotion::FinalIK::IKMapping::SolveFABRIKJoint(UnityEngine::Vector3 pos1, UnityEngine::Vector3 pos2, float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::SolveFABRIKJoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SolveFABRIKJoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pos1, pos2, length)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, pos1, pos2, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKMapping/BoneMap
#include "RootMotion/FinalIK/IKMapping_BoneMap.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Node
#include "RootMotion/FinalIK/IKSolver_Node.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.Initiate
void RootMotion::FinalIK::IKMapping::BoneMap::Initiate(UnityEngine::Transform* transform, RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform, solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transform, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.get_swingDirection
UnityEngine::Vector3 RootMotion::FinalIK::IKMapping::BoneMap::get_swingDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::get_swingDirection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_swingDirection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.StoreDefaultLocalState
void RootMotion::FinalIK::IKMapping::BoneMap::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.FixTransform
void RootMotion::FinalIK::IKMapping::BoneMap::FixTransform(bool position) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::FixTransform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.get_isNodeBone
bool RootMotion::FinalIK::IKMapping::BoneMap::get_isNodeBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::get_isNodeBone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isNodeBone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.SetLength
void RootMotion::FinalIK::IKMapping::BoneMap::SetLength(RootMotion::FinalIK::IKMapping::BoneMap* nextBone) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::SetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nextBone)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nextBone);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.SetLocalSwingAxis
void RootMotion::FinalIK::IKMapping::BoneMap::SetLocalSwingAxis(RootMotion::FinalIK::IKMapping::BoneMap* swingTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::SetLocalSwingAxis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalSwingAxis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(swingTarget)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, swingTarget);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.SetLocalSwingAxis
void RootMotion::FinalIK::IKMapping::BoneMap::SetLocalSwingAxis(RootMotion::FinalIK::IKMapping::BoneMap* bone1, RootMotion::FinalIK::IKMapping::BoneMap* bone2) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::SetLocalSwingAxis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalSwingAxis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bone1, bone2)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bone1, bone2);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.SetLocalTwistAxis
void RootMotion::FinalIK::IKMapping::BoneMap::SetLocalTwistAxis(UnityEngine::Vector3 twistDirection, UnityEngine::Vector3 normalDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::SetLocalTwistAxis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalTwistAxis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(twistDirection, normalDirection)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, twistDirection, normalDirection);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.SetPlane
void RootMotion::FinalIK::IKMapping::BoneMap::SetPlane(RootMotion::FinalIK::IKSolverFullBody* solver, UnityEngine::Transform* planeBone1, UnityEngine::Transform* planeBone2, UnityEngine::Transform* planeBone3) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::SetPlane");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPlane", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, planeBone1, planeBone2, planeBone3)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, planeBone1, planeBone2, planeBone3);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.UpdatePlane
void RootMotion::FinalIK::IKMapping::BoneMap::UpdatePlane(bool rotation, bool position) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::UpdatePlane");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdatePlane", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation, position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rotation, position);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.SetIKPosition
void RootMotion::FinalIK::IKMapping::BoneMap::SetIKPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::SetIKPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetIKPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.MaintainRotation
void RootMotion::FinalIK::IKMapping::BoneMap::MaintainRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::MaintainRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MaintainRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.SetToIKPosition
void RootMotion::FinalIK::IKMapping::BoneMap::SetToIKPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::SetToIKPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetToIKPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.FixToNode
void RootMotion::FinalIK::IKMapping::BoneMap::FixToNode(RootMotion::FinalIK::IKSolverFullBody* solver, float weight, RootMotion::FinalIK::IKSolver::Node* fixNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::FixToNode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixToNode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, weight, fixNode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, weight, fixNode);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.GetPlanePosition
UnityEngine::Vector3 RootMotion::FinalIK::IKMapping::BoneMap::GetPlanePosition(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::GetPlanePosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlanePosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.PositionToPlane
void RootMotion::FinalIK::IKMapping::BoneMap::PositionToPlane(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::PositionToPlane");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PositionToPlane", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.RotateToPlane
void RootMotion::FinalIK::IKMapping::BoneMap::RotateToPlane(RootMotion::FinalIK::IKSolverFullBody* solver, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::RotateToPlane");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RotateToPlane", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.Swing
void RootMotion::FinalIK::IKMapping::BoneMap::Swing(UnityEngine::Vector3 swingTarget, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::Swing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Swing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(swingTarget, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, swingTarget, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.Swing
void RootMotion::FinalIK::IKMapping::BoneMap::Swing(UnityEngine::Vector3 pos1, UnityEngine::Vector3 pos2, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::Swing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Swing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pos1, pos2, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos1, pos2, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.Twist
void RootMotion::FinalIK::IKMapping::BoneMap::Twist(UnityEngine::Vector3 twistDirection, UnityEngine::Vector3 normalDirection, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::Twist");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Twist", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(twistDirection, normalDirection, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, twistDirection, normalDirection, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.RotateToMaintain
void RootMotion::FinalIK::IKMapping::BoneMap::RotateToMaintain(float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::RotateToMaintain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RotateToMaintain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.RotateToEffector
void RootMotion::FinalIK::IKMapping::BoneMap::RotateToEffector(RootMotion::FinalIK::IKSolverFullBody* solver, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::RotateToEffector");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RotateToEffector", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.GetTargetRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKMapping::BoneMap::GetTargetRotation(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::GetTargetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTargetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.get_lastAnimatedTargetRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKMapping::BoneMap::get_lastAnimatedTargetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMapping::BoneMap::get_lastAnimatedTargetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_lastAnimatedTargetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKMappingBone
#include "RootMotion/FinalIK/IKMappingBone.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: RootMotion.FinalIK.IKMapping/BoneMap
#include "RootMotion/FinalIK/IKMapping_BoneMap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKMappingBone.StoreDefaultLocalState
void RootMotion::FinalIK::IKMappingBone::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingBone::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingBone.FixTransforms
void RootMotion::FinalIK::IKMappingBone::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingBone::FixTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingBone.ReadPose
void RootMotion::FinalIK::IKMappingBone::ReadPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingBone::ReadPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingBone.WritePose
void RootMotion::FinalIK::IKMappingBone::WritePose(float solverWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingBone::WritePose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WritePose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solverWeight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solverWeight);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingBone.IsValid
bool RootMotion::FinalIK::IKMappingBone::IsValid(RootMotion::FinalIK::IKSolver* solver, ::Il2CppString*& message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingBone::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, message)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, solver, message);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingBone.Initiate
void RootMotion::FinalIK::IKMappingBone::Initiate(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingBone::Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKMappingLimb
#include "RootMotion/FinalIK/IKMappingLimb.hpp"
// Including type: RootMotion.FinalIK.IKMappingLimb/BoneMapType
#include "RootMotion/FinalIK/IKMappingLimb_BoneMapType.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
// Including type: RootMotion.FinalIK.IKMapping/BoneMap
#include "RootMotion/FinalIK/IKMapping_BoneMap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.GetBoneMap
RootMotion::FinalIK::IKMapping::BoneMap* RootMotion::FinalIK::IKMappingLimb::GetBoneMap(RootMotion::FinalIK::IKMappingLimb::BoneMapType boneMap) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingLimb::GetBoneMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBoneMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneMap)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKMapping::BoneMap*, false>(this, ___internal__method, boneMap);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.SetLimbOrientation
void RootMotion::FinalIK::IKMappingLimb::SetLimbOrientation(UnityEngine::Vector3 upper, UnityEngine::Vector3 lower) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingLimb::SetLimbOrientation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLimbOrientation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(upper, lower)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, upper, lower);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.SetBones
void RootMotion::FinalIK::IKMappingLimb::SetBones(UnityEngine::Transform* bone1, UnityEngine::Transform* bone2, UnityEngine::Transform* bone3, UnityEngine::Transform* parentBone) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingLimb::SetBones");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetBones", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bone1, bone2, bone3, parentBone)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bone1, bone2, bone3, parentBone);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.StoreDefaultLocalState
void RootMotion::FinalIK::IKMappingLimb::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingLimb::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.FixTransforms
void RootMotion::FinalIK::IKMappingLimb::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingLimb::FixTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.ReadPose
void RootMotion::FinalIK::IKMappingLimb::ReadPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingLimb::ReadPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.WritePose
void RootMotion::FinalIK::IKMappingLimb::WritePose(RootMotion::FinalIK::IKSolverFullBody* solver, bool fullBody) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingLimb::WritePose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WritePose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, fullBody)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, fullBody);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.IsValid
bool RootMotion::FinalIK::IKMappingLimb::IsValid(RootMotion::FinalIK::IKSolver* solver, ::Il2CppString*& message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingLimb::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, message)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, solver, message);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.Initiate
void RootMotion::FinalIK::IKMappingLimb::Initiate(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingLimb::Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKMappingLimb/BoneMapType
#include "RootMotion/FinalIK/IKMappingLimb_BoneMapType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKMappingLimb/BoneMapType Parent
RootMotion::FinalIK::IKMappingLimb::BoneMapType RootMotion::FinalIK::IKMappingLimb::BoneMapType::_get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingLimb::BoneMapType::_get_Parent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKMappingLimb::BoneMapType>("RootMotion.FinalIK", "IKMappingLimb/BoneMapType", "Parent"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKMappingLimb/BoneMapType Parent
void RootMotion::FinalIK::IKMappingLimb::BoneMapType::_set_Parent(RootMotion::FinalIK::IKMappingLimb::BoneMapType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingLimb::BoneMapType::_set_Parent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKMappingLimb/BoneMapType", "Parent", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKMappingLimb/BoneMapType Bone1
RootMotion::FinalIK::IKMappingLimb::BoneMapType RootMotion::FinalIK::IKMappingLimb::BoneMapType::_get_Bone1() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingLimb::BoneMapType::_get_Bone1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKMappingLimb::BoneMapType>("RootMotion.FinalIK", "IKMappingLimb/BoneMapType", "Bone1"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKMappingLimb/BoneMapType Bone1
void RootMotion::FinalIK::IKMappingLimb::BoneMapType::_set_Bone1(RootMotion::FinalIK::IKMappingLimb::BoneMapType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingLimb::BoneMapType::_set_Bone1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKMappingLimb/BoneMapType", "Bone1", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKMappingLimb/BoneMapType Bone2
RootMotion::FinalIK::IKMappingLimb::BoneMapType RootMotion::FinalIK::IKMappingLimb::BoneMapType::_get_Bone2() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingLimb::BoneMapType::_get_Bone2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKMappingLimb::BoneMapType>("RootMotion.FinalIK", "IKMappingLimb/BoneMapType", "Bone2"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKMappingLimb/BoneMapType Bone2
void RootMotion::FinalIK::IKMappingLimb::BoneMapType::_set_Bone2(RootMotion::FinalIK::IKMappingLimb::BoneMapType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingLimb::BoneMapType::_set_Bone2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKMappingLimb/BoneMapType", "Bone2", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKMappingLimb/BoneMapType Bone3
RootMotion::FinalIK::IKMappingLimb::BoneMapType RootMotion::FinalIK::IKMappingLimb::BoneMapType::_get_Bone3() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingLimb::BoneMapType::_get_Bone3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKMappingLimb::BoneMapType>("RootMotion.FinalIK", "IKMappingLimb/BoneMapType", "Bone3"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKMappingLimb/BoneMapType Bone3
void RootMotion::FinalIK::IKMappingLimb::BoneMapType::_set_Bone3(RootMotion::FinalIK::IKMappingLimb::BoneMapType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingLimb::BoneMapType::_set_Bone3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKMappingLimb/BoneMapType", "Bone3", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKMappingSpine
#include "RootMotion/FinalIK/IKMappingSpine.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
// Including type: RootMotion.FinalIK.IKMapping/BoneMap
#include "RootMotion/FinalIK/IKMapping_BoneMap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.SetBones
void RootMotion::FinalIK::IKMappingSpine::SetBones(::Array<UnityEngine::Transform*>* spineBones, UnityEngine::Transform* leftUpperArmBone, UnityEngine::Transform* rightUpperArmBone, UnityEngine::Transform* leftThighBone, UnityEngine::Transform* rightThighBone) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingSpine::SetBones");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetBones", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(spineBones, leftUpperArmBone, rightUpperArmBone, leftThighBone, rightThighBone)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, spineBones, leftUpperArmBone, rightUpperArmBone, leftThighBone, rightThighBone);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.StoreDefaultLocalState
void RootMotion::FinalIK::IKMappingSpine::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingSpine::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.FixTransforms
void RootMotion::FinalIK::IKMappingSpine::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingSpine::FixTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.UseFABRIK
bool RootMotion::FinalIK::IKMappingSpine::UseFABRIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingSpine::UseFABRIK");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UseFABRIK", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.ReadPose
void RootMotion::FinalIK::IKMappingSpine::ReadPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingSpine::ReadPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.WritePose
void RootMotion::FinalIK::IKMappingSpine::WritePose(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingSpine::WritePose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WritePose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.ForwardReach
void RootMotion::FinalIK::IKMappingSpine::ForwardReach(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingSpine::ForwardReach");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ForwardReach", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.BackwardReach
void RootMotion::FinalIK::IKMappingSpine::BackwardReach(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingSpine::BackwardReach");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BackwardReach", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.MapToSolverPositions
void RootMotion::FinalIK::IKMappingSpine::MapToSolverPositions(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingSpine::MapToSolverPositions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MapToSolverPositions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.IsValid
bool RootMotion::FinalIK::IKMappingSpine::IsValid(RootMotion::FinalIK::IKSolver* solver, ::Il2CppString*& message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingSpine::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, message)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, solver, message);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.Initiate
void RootMotion::FinalIK::IKMappingSpine::Initiate(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKMappingSpine::Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Bone
#include "RootMotion/FinalIK/IKSolver_Bone.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Node
#include "RootMotion/FinalIK/IKSolver_Node.hpp"
// Including type: RootMotion.FinalIK.IKSolver/UpdateDelegate
#include "RootMotion/FinalIK/IKSolver_UpdateDelegate.hpp"
// Including type: RootMotion.FinalIK.IKSolver/IterationDelegate
#include "RootMotion/FinalIK/IKSolver_IterationDelegate.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolver.IsValid
bool RootMotion::FinalIK::IKSolver::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.IsValid
bool RootMotion::FinalIK::IKSolver::IsValid(::Il2CppString*& message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::IsValid_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.Initiate
void RootMotion::FinalIK::IKSolver::Initiate(UnityEngine::Transform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(root)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, root);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.Update
void RootMotion::FinalIK::IKSolver::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.GetIKPosition
UnityEngine::Vector3 RootMotion::FinalIK::IKSolver::GetIKPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::GetIKPosition_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetIKPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.SetIKPosition
void RootMotion::FinalIK::IKSolver::SetIKPosition(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::SetIKPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetIKPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.GetIKPositionWeight
float RootMotion::FinalIK::IKSolver::GetIKPositionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::GetIKPositionWeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetIKPositionWeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.SetIKPositionWeight
void RootMotion::FinalIK::IKSolver::SetIKPositionWeight(float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::SetIKPositionWeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetIKPositionWeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.GetRoot
UnityEngine::Transform* RootMotion::FinalIK::IKSolver::GetRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::GetRoot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRoot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.get_initiated
bool RootMotion::FinalIK::IKSolver::get_initiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::get_initiated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_initiated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.set_initiated
void RootMotion::FinalIK::IKSolver::set_initiated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::set_initiated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_initiated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.GetPoints
::Array<RootMotion::FinalIK::IKSolver::Point*>* RootMotion::FinalIK::IKSolver::GetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::GetPoints_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<RootMotion::FinalIK::IKSolver::Point*>*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.GetPoint
RootMotion::FinalIK::IKSolver::Point* RootMotion::FinalIK::IKSolver::GetPoint(UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::GetPoint_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolver::Point*, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.FixTransforms
void RootMotion::FinalIK::IKSolver::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::FixTransforms_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolver::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::StoreDefaultLocalState_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.OnInitiate
void RootMotion::FinalIK::IKSolver::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::OnInitiate_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.OnUpdate
void RootMotion::FinalIK::IKSolver::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::OnUpdate_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.LogWarning
void RootMotion::FinalIK::IKSolver::LogWarning(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::LogWarning");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.ContainsDuplicateBone
UnityEngine::Transform* RootMotion::FinalIK::IKSolver::ContainsDuplicateBone(::Array<RootMotion::FinalIK::IKSolver::Bone*>* bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::ContainsDuplicateBone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolver", "ContainsDuplicateBone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bones)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bones);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.HierarchyIsValid
bool RootMotion::FinalIK::IKSolver::HierarchyIsValid(::Array<RootMotion::FinalIK::IKSolver::Bone*>* bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::HierarchyIsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolver", "HierarchyIsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bones)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bones);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.PreSolveBones
float RootMotion::FinalIK::IKSolver::PreSolveBones(::Array<RootMotion::FinalIK::IKSolver::Bone*>*& bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::PreSolveBones");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolver", "PreSolveBones", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bones)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bones);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolver/Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolver/Point.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolver::Point::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::Point::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/Point.FixTransform
void RootMotion::FinalIK::IKSolver::Point::FixTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::Point::FixTransform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/Point.UpdateSolverPosition
void RootMotion::FinalIK::IKSolver::Point::UpdateSolverPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::Point::UpdateSolverPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateSolverPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/Point.UpdateSolverLocalPosition
void RootMotion::FinalIK::IKSolver::Point::UpdateSolverLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::Point::UpdateSolverLocalPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateSolverLocalPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/Point.UpdateSolverState
void RootMotion::FinalIK::IKSolver::Point::UpdateSolverState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::Point::UpdateSolverState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateSolverState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/Point.UpdateSolverLocalState
void RootMotion::FinalIK::IKSolver::Point::UpdateSolverLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::Point::UpdateSolverLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateSolverLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolver/Bone
#include "RootMotion/FinalIK/IKSolver_Bone.hpp"
// Including type: RootMotion.FinalIK.RotationLimit
#include "RootMotion/FinalIK/RotationLimit.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolver/Bone.get_rotationLimit
RootMotion::FinalIK::RotationLimit* RootMotion::FinalIK::IKSolver::Bone::get_rotationLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::Bone::get_rotationLimit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rotationLimit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::RotationLimit*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/Bone.set_rotationLimit
void RootMotion::FinalIK::IKSolver::Bone::set_rotationLimit(RootMotion::FinalIK::RotationLimit* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::Bone::set_rotationLimit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_rotationLimit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/Bone.Swing
void RootMotion::FinalIK::IKSolver::Bone::Swing(UnityEngine::Vector3 swingTarget, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::Bone::Swing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Swing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(swingTarget, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, swingTarget, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/Bone.SolverSwing
void RootMotion::FinalIK::IKSolver::Bone::SolverSwing(::Array<RootMotion::FinalIK::IKSolver::Bone*>* bones, int index, UnityEngine::Vector3 swingTarget, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::Bone::SolverSwing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolver/Bone", "SolverSwing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bones, index, swingTarget, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bones, index, swingTarget, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/Bone.Swing2D
void RootMotion::FinalIK::IKSolver::Bone::Swing2D(UnityEngine::Vector3 swingTarget, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::Bone::Swing2D");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Swing2D", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(swingTarget, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, swingTarget, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/Bone.SetToSolverPosition
void RootMotion::FinalIK::IKSolver::Bone::SetToSolverPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::Bone::SetToSolverPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetToSolverPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolver/Node
#include "RootMotion/FinalIK/IKSolver_Node.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolver/UpdateDelegate
#include "RootMotion/FinalIK/IKSolver_UpdateDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolver/UpdateDelegate.Invoke
void RootMotion::FinalIK::IKSolver::UpdateDelegate::Invoke_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::UpdateDelegate::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/UpdateDelegate.BeginInvoke
System::IAsyncResult* RootMotion::FinalIK::IKSolver::UpdateDelegate::BeginInvoke_NEW(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::UpdateDelegate::BeginInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/UpdateDelegate.EndInvoke
void RootMotion::FinalIK::IKSolver::UpdateDelegate::EndInvoke_NEW(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::UpdateDelegate::EndInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolver/IterationDelegate
#include "RootMotion/FinalIK/IKSolver_IterationDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolver/IterationDelegate.Invoke
void RootMotion::FinalIK::IKSolver::IterationDelegate::Invoke_NEW(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::IterationDelegate::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/IterationDelegate.BeginInvoke
System::IAsyncResult* RootMotion::FinalIK::IKSolver::IterationDelegate::BeginInvoke_NEW(int i, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::IterationDelegate::BeginInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, i, callback, object);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/IterationDelegate.EndInvoke
void RootMotion::FinalIK::IKSolver::IterationDelegate::EndInvoke_NEW(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolver::IterationDelegate::EndInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverAim
#include "RootMotion/FinalIK/IKSolverAim.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.RotationLimit
#include "RootMotion/FinalIK/RotationLimit.hpp"
// Including type: RootMotion.FinalIK.IKSolver/IterationDelegate
#include "RootMotion/FinalIK/IKSolver_IterationDelegate.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Bone
#include "RootMotion/FinalIK/IKSolver_Bone.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverAim.GetAngle
float RootMotion::FinalIK::IKSolverAim::GetAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverAim::GetAngle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAngle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverAim.get_transformAxis
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverAim::get_transformAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverAim::get_transformAxis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_transformAxis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverAim.get_transformPoleAxis
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverAim::get_transformPoleAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverAim::get_transformPoleAxis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_transformPoleAxis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverAim.Solve
void RootMotion::FinalIK::IKSolverAim::Solve() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverAim::Solve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverAim.GetClampedIKPosition
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverAim::GetClampedIKPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverAim::GetClampedIKPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetClampedIKPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverAim.RotateToTarget
void RootMotion::FinalIK::IKSolverAim::RotateToTarget(UnityEngine::Vector3 targetPosition, RootMotion::FinalIK::IKSolver::Bone* bone, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverAim::RotateToTarget");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RotateToTarget", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(targetPosition, bone, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, targetPosition, bone, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverAim.OnInitiate
void RootMotion::FinalIK::IKSolverAim::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverAim::OnInitiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverAim.OnUpdate
void RootMotion::FinalIK::IKSolverAim::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverAim::OnUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverAim.get_minBones
int RootMotion::FinalIK::IKSolverAim::get_minBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverAim::get_minBones");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_minBones", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverAim.get_localDirection
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverAim::get_localDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverAim::get_localDirection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localDirection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverArm
#include "RootMotion/FinalIK/IKSolverArm.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Arm
#include "RootMotion/FinalIK/IKSolverVR_Arm.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.SetChain
bool RootMotion::FinalIK::IKSolverArm::SetChain(UnityEngine::Transform* chest, UnityEngine::Transform* shoulder, UnityEngine::Transform* upperArm, UnityEngine::Transform* forearm, UnityEngine::Transform* hand, UnityEngine::Transform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverArm::SetChain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetChain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chest, shoulder, upperArm, forearm, hand, root)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, chest, shoulder, upperArm, forearm, hand, root);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.Solve
void RootMotion::FinalIK::IKSolverArm::Solve() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverArm::Solve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.Read
void RootMotion::FinalIK::IKSolverArm::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverArm::Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.Write
void RootMotion::FinalIK::IKSolverArm::Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverArm::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.IsValid
bool RootMotion::FinalIK::IKSolverArm::IsValid(::Il2CppString*& message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverArm::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.GetPoints
::Array<RootMotion::FinalIK::IKSolver::Point*>* RootMotion::FinalIK::IKSolverArm::GetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverArm::GetPoints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<RootMotion::FinalIK::IKSolver::Point*>*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.GetPoint
RootMotion::FinalIK::IKSolver::Point* RootMotion::FinalIK::IKSolverArm::GetPoint(UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverArm::GetPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolver::Point*, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolverArm::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverArm::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.FixTransforms
void RootMotion::FinalIK::IKSolverArm::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverArm::FixTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.OnInitiate
void RootMotion::FinalIK::IKSolverArm::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverArm::OnInitiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.OnUpdate
void RootMotion::FinalIK::IKSolverArm::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverArm::OnUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverCCD
#include "RootMotion/FinalIK/IKSolverCCD.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: RootMotion.FinalIK.IKSolver/IterationDelegate
#include "RootMotion/FinalIK/IKSolver_IterationDelegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverCCD.FadeOutBoneWeights
void RootMotion::FinalIK::IKSolverCCD::FadeOutBoneWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverCCD::FadeOutBoneWeights");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FadeOutBoneWeights", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverCCD.Solve
void RootMotion::FinalIK::IKSolverCCD::Solve(UnityEngine::Vector3 targetPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverCCD::Solve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(targetPosition)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, targetPosition);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverCCD.OnInitiate
void RootMotion::FinalIK::IKSolverCCD::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverCCD::OnInitiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverCCD.OnUpdate
void RootMotion::FinalIK::IKSolverCCD::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverCCD::OnUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverFABRIK
#include "RootMotion/FinalIK/IKSolverFABRIK.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: RootMotion.FinalIK.IKSolver/IterationDelegate
#include "RootMotion/FinalIK/IKSolver_IterationDelegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolveForward
void RootMotion::FinalIK::IKSolverFABRIK::SolveForward(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::SolveForward");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SolveForward", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolveBackward
void RootMotion::FinalIK::IKSolverFABRIK::SolveBackward(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::SolveBackward");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SolveBackward", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolveJoint
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFABRIK::SolveJoint(UnityEngine::Vector3 pos1, UnityEngine::Vector3 pos2, float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::SolveJoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SolveJoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pos1, pos2, length)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, pos1, pos2, length);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.OnPreSolve
void RootMotion::FinalIK::IKSolverFABRIK::OnPreSolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::OnPreSolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPreSolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.OnPostSolve
void RootMotion::FinalIK::IKSolverFABRIK::OnPostSolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::OnPostSolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPostSolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.Solve
void RootMotion::FinalIK::IKSolverFABRIK::Solve(UnityEngine::Vector3 targetPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::Solve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(targetPosition)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, targetPosition);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.ForwardReach
void RootMotion::FinalIK::IKSolverFABRIK::ForwardReach(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::ForwardReach");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ForwardReach", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolverMove
void RootMotion::FinalIK::IKSolverFABRIK::SolverMove(int index, UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::SolverMove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SolverMove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, offset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolverRotate
void RootMotion::FinalIK::IKSolverFABRIK::SolverRotate(int index, UnityEngine::Quaternion rotation, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::SolverRotate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SolverRotate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, rotation, recursive)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, rotation, recursive);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolverRotateChildren
void RootMotion::FinalIK::IKSolverFABRIK::SolverRotateChildren(int index, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::SolverRotateChildren");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SolverRotateChildren", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, rotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolverMoveChildrenAroundPoint
void RootMotion::FinalIK::IKSolverFABRIK::SolverMoveChildrenAroundPoint(int index, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::SolverMoveChildrenAroundPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SolverMoveChildrenAroundPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, rotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.GetParentSolverRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverFABRIK::GetParentSolverRotation(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::GetParentSolverRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetParentSolverRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.GetParentSolverPosition
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFABRIK::GetParentSolverPosition(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::GetParentSolverPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetParentSolverPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.GetLimitedRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverFABRIK::GetLimitedRotation(int index, UnityEngine::Quaternion q, bool& changed) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::GetLimitedRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLimitedRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, q, changed)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, index, q, changed);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.LimitForward
void RootMotion::FinalIK::IKSolverFABRIK::LimitForward(int rotateBone, int limitBone) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::LimitForward");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LimitForward", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotateBone, limitBone)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rotateBone, limitBone);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.BackwardReach
void RootMotion::FinalIK::IKSolverFABRIK::BackwardReach(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::BackwardReach");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BackwardReach", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.BackwardReachUnlimited
void RootMotion::FinalIK::IKSolverFABRIK::BackwardReachUnlimited(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::BackwardReachUnlimited");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BackwardReachUnlimited", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.BackwardReachLimited
void RootMotion::FinalIK::IKSolverFABRIK::BackwardReachLimited(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::BackwardReachLimited");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BackwardReachLimited", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.MapToSolverPositions
void RootMotion::FinalIK::IKSolverFABRIK::MapToSolverPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::MapToSolverPositions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MapToSolverPositions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.MapToSolverPositionsLimited
void RootMotion::FinalIK::IKSolverFABRIK::MapToSolverPositionsLimited() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::MapToSolverPositionsLimited");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MapToSolverPositionsLimited", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.GetIKPosition
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFABRIK::GetIKPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::GetIKPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetIKPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.OnInitiate
void RootMotion::FinalIK::IKSolverFABRIK::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::OnInitiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.OnUpdate
void RootMotion::FinalIK::IKSolverFABRIK::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::OnUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.get_boneLengthCanBeZero
bool RootMotion::FinalIK::IKSolverFABRIK::get_boneLengthCanBeZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIK::get_boneLengthCanBeZero");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_boneLengthCanBeZero", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverFABRIKRoot
#include "RootMotion/FinalIK/IKSolverFABRIKRoot.hpp"
// Including type: RootMotion.FinalIK.FABRIKChain
#include "RootMotion/FinalIK/FABRIKChain.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.IsRoot
bool RootMotion::FinalIK::IKSolverFABRIKRoot::IsRoot(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIKRoot::IsRoot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsRoot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.AddPointsToArray
void RootMotion::FinalIK::IKSolverFABRIKRoot::AddPointsToArray(::Array<RootMotion::FinalIK::IKSolver::Point*>*& array, RootMotion::FinalIK::FABRIKChain* chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIKRoot::AddPointsToArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddPointsToArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, chain)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, chain);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.GetCentroid
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFABRIKRoot::GetCentroid() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIKRoot::GetCentroid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCentroid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.IsValid
bool RootMotion::FinalIK::IKSolverFABRIKRoot::IsValid(::Il2CppString*& message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIKRoot::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolverFABRIKRoot::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIKRoot::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.FixTransforms
void RootMotion::FinalIK::IKSolverFABRIKRoot::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIKRoot::FixTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.OnInitiate
void RootMotion::FinalIK::IKSolverFABRIKRoot::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIKRoot::OnInitiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.OnUpdate
void RootMotion::FinalIK::IKSolverFABRIKRoot::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIKRoot::OnUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.GetPoints
::Array<RootMotion::FinalIK::IKSolver::Point*>* RootMotion::FinalIK::IKSolverFABRIKRoot::GetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIKRoot::GetPoints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<RootMotion::FinalIK::IKSolver::Point*>*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.GetPoint
RootMotion::FinalIK::IKSolver::Point* RootMotion::FinalIK::IKSolverFABRIKRoot::GetPoint(UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFABRIKRoot::GetPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolver::Point*, false>(this, ___internal__method, transform);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: RootMotion.FinalIK.FBIKChain
#include "RootMotion/FinalIK/FBIKChain.hpp"
// Including type: RootMotion.FinalIK.IKEffector
#include "RootMotion/FinalIK/IKEffector.hpp"
// Including type: RootMotion.FinalIK.IKMappingSpine
#include "RootMotion/FinalIK/IKMappingSpine.hpp"
// Including type: RootMotion.FinalIK.IKMappingBone
#include "RootMotion/FinalIK/IKMappingBone.hpp"
// Including type: RootMotion.FinalIK.IKMappingLimb
#include "RootMotion/FinalIK/IKMappingLimb.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolver/UpdateDelegate
#include "RootMotion/FinalIK/IKSolver_UpdateDelegate.hpp"
// Including type: RootMotion.FinalIK.IKSolver/IterationDelegate
#include "RootMotion/FinalIK/IKSolver_IterationDelegate.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Node
#include "RootMotion/FinalIK/IKSolver_Node.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.GetEffector
RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBody::GetEffector(UnityEngine::Transform* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBody::GetEffector");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEffector", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method, t);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.GetChain
RootMotion::FinalIK::FBIKChain* RootMotion::FinalIK::IKSolverFullBody::GetChain(UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBody::GetChain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetChain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::FBIKChain*, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.GetChainIndex
int RootMotion::FinalIK::IKSolverFullBody::GetChainIndex(UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBody::GetChainIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetChainIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.GetNode
RootMotion::FinalIK::IKSolver::Node* RootMotion::FinalIK::IKSolverFullBody::GetNode(int chainIndex, int nodeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBody::GetNode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chainIndex, nodeIndex)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolver::Node*, false>(this, ___internal__method, chainIndex, nodeIndex);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.GetChainAndNodeIndexes
void RootMotion::FinalIK::IKSolverFullBody::GetChainAndNodeIndexes(UnityEngine::Transform* transform, int& chainIndex, int& nodeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBody::GetChainAndNodeIndexes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetChainAndNodeIndexes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform, chainIndex, nodeIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transform, chainIndex, nodeIndex);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.ReadPose
void RootMotion::FinalIK::IKSolverFullBody::ReadPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBody::ReadPose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.Solve
void RootMotion::FinalIK::IKSolverFullBody::Solve_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBody::Solve_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.ApplyBendConstraints
void RootMotion::FinalIK::IKSolverFullBody::ApplyBendConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBody::ApplyBendConstraints_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyBendConstraints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.WritePose
void RootMotion::FinalIK::IKSolverFullBody::WritePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBody::WritePose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WritePose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.GetPoints
::Array<RootMotion::FinalIK::IKSolver::Point*>* RootMotion::FinalIK::IKSolverFullBody::GetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBody::GetPoints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<RootMotion::FinalIK::IKSolver::Point*>*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.GetPoint
RootMotion::FinalIK::IKSolver::Point* RootMotion::FinalIK::IKSolverFullBody::GetPoint(UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBody::GetPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolver::Point*, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.IsValid
bool RootMotion::FinalIK::IKSolverFullBody::IsValid(::Il2CppString*& message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBody::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolverFullBody::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBody::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.FixTransforms
void RootMotion::FinalIK::IKSolverFullBody::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBody::FixTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.OnInitiate
void RootMotion::FinalIK::IKSolverFullBody::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBody::OnInitiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.OnUpdate
void RootMotion::FinalIK::IKSolverFullBody::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBody::OnUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.FullBodyBipedEffector
#include "RootMotion/FinalIK/FullBodyBipedEffector.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedEffector Body
RootMotion::FinalIK::FullBodyBipedEffector RootMotion::FinalIK::FullBodyBipedEffector::_get_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedEffector::_get_Body");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::FullBodyBipedEffector>("RootMotion.FinalIK", "FullBodyBipedEffector", "Body"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedEffector Body
void RootMotion::FinalIK::FullBodyBipedEffector::_set_Body(RootMotion::FinalIK::FullBodyBipedEffector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedEffector::_set_Body");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedEffector", "Body", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedEffector LeftShoulder
RootMotion::FinalIK::FullBodyBipedEffector RootMotion::FinalIK::FullBodyBipedEffector::_get_LeftShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedEffector::_get_LeftShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::FullBodyBipedEffector>("RootMotion.FinalIK", "FullBodyBipedEffector", "LeftShoulder"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedEffector LeftShoulder
void RootMotion::FinalIK::FullBodyBipedEffector::_set_LeftShoulder(RootMotion::FinalIK::FullBodyBipedEffector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedEffector::_set_LeftShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedEffector", "LeftShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedEffector RightShoulder
RootMotion::FinalIK::FullBodyBipedEffector RootMotion::FinalIK::FullBodyBipedEffector::_get_RightShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedEffector::_get_RightShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::FullBodyBipedEffector>("RootMotion.FinalIK", "FullBodyBipedEffector", "RightShoulder"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedEffector RightShoulder
void RootMotion::FinalIK::FullBodyBipedEffector::_set_RightShoulder(RootMotion::FinalIK::FullBodyBipedEffector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedEffector::_set_RightShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedEffector", "RightShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedEffector LeftThigh
RootMotion::FinalIK::FullBodyBipedEffector RootMotion::FinalIK::FullBodyBipedEffector::_get_LeftThigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedEffector::_get_LeftThigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::FullBodyBipedEffector>("RootMotion.FinalIK", "FullBodyBipedEffector", "LeftThigh"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedEffector LeftThigh
void RootMotion::FinalIK::FullBodyBipedEffector::_set_LeftThigh(RootMotion::FinalIK::FullBodyBipedEffector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedEffector::_set_LeftThigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedEffector", "LeftThigh", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedEffector RightThigh
RootMotion::FinalIK::FullBodyBipedEffector RootMotion::FinalIK::FullBodyBipedEffector::_get_RightThigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedEffector::_get_RightThigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::FullBodyBipedEffector>("RootMotion.FinalIK", "FullBodyBipedEffector", "RightThigh"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedEffector RightThigh
void RootMotion::FinalIK::FullBodyBipedEffector::_set_RightThigh(RootMotion::FinalIK::FullBodyBipedEffector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedEffector::_set_RightThigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedEffector", "RightThigh", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedEffector LeftHand
RootMotion::FinalIK::FullBodyBipedEffector RootMotion::FinalIK::FullBodyBipedEffector::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedEffector::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::FullBodyBipedEffector>("RootMotion.FinalIK", "FullBodyBipedEffector", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedEffector LeftHand
void RootMotion::FinalIK::FullBodyBipedEffector::_set_LeftHand(RootMotion::FinalIK::FullBodyBipedEffector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedEffector::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedEffector", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedEffector RightHand
RootMotion::FinalIK::FullBodyBipedEffector RootMotion::FinalIK::FullBodyBipedEffector::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedEffector::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::FullBodyBipedEffector>("RootMotion.FinalIK", "FullBodyBipedEffector", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedEffector RightHand
void RootMotion::FinalIK::FullBodyBipedEffector::_set_RightHand(RootMotion::FinalIK::FullBodyBipedEffector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedEffector::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedEffector", "RightHand", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedEffector LeftFoot
RootMotion::FinalIK::FullBodyBipedEffector RootMotion::FinalIK::FullBodyBipedEffector::_get_LeftFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedEffector::_get_LeftFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::FullBodyBipedEffector>("RootMotion.FinalIK", "FullBodyBipedEffector", "LeftFoot"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedEffector LeftFoot
void RootMotion::FinalIK::FullBodyBipedEffector::_set_LeftFoot(RootMotion::FinalIK::FullBodyBipedEffector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedEffector::_set_LeftFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedEffector", "LeftFoot", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedEffector RightFoot
RootMotion::FinalIK::FullBodyBipedEffector RootMotion::FinalIK::FullBodyBipedEffector::_get_RightFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedEffector::_get_RightFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::FullBodyBipedEffector>("RootMotion.FinalIK", "FullBodyBipedEffector", "RightFoot"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedEffector RightFoot
void RootMotion::FinalIK::FullBodyBipedEffector::_set_RightFoot(RootMotion::FinalIK::FullBodyBipedEffector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedEffector::_set_RightFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedEffector", "RightFoot", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.FullBodyBipedChain
#include "RootMotion/FinalIK/FullBodyBipedChain.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedChain LeftArm
RootMotion::FinalIK::FullBodyBipedChain RootMotion::FinalIK::FullBodyBipedChain::_get_LeftArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedChain::_get_LeftArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::FullBodyBipedChain>("RootMotion.FinalIK", "FullBodyBipedChain", "LeftArm"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedChain LeftArm
void RootMotion::FinalIK::FullBodyBipedChain::_set_LeftArm(RootMotion::FinalIK::FullBodyBipedChain value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedChain::_set_LeftArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedChain", "LeftArm", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedChain RightArm
RootMotion::FinalIK::FullBodyBipedChain RootMotion::FinalIK::FullBodyBipedChain::_get_RightArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedChain::_get_RightArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::FullBodyBipedChain>("RootMotion.FinalIK", "FullBodyBipedChain", "RightArm"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedChain RightArm
void RootMotion::FinalIK::FullBodyBipedChain::_set_RightArm(RootMotion::FinalIK::FullBodyBipedChain value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedChain::_set_RightArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedChain", "RightArm", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedChain LeftLeg
RootMotion::FinalIK::FullBodyBipedChain RootMotion::FinalIK::FullBodyBipedChain::_get_LeftLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedChain::_get_LeftLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::FullBodyBipedChain>("RootMotion.FinalIK", "FullBodyBipedChain", "LeftLeg"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedChain LeftLeg
void RootMotion::FinalIK::FullBodyBipedChain::_set_LeftLeg(RootMotion::FinalIK::FullBodyBipedChain value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedChain::_set_LeftLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedChain", "LeftLeg", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedChain RightLeg
RootMotion::FinalIK::FullBodyBipedChain RootMotion::FinalIK::FullBodyBipedChain::_get_RightLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedChain::_get_RightLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::FullBodyBipedChain>("RootMotion.FinalIK", "FullBodyBipedChain", "RightLeg"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedChain RightLeg
void RootMotion::FinalIK::FullBodyBipedChain::_set_RightLeg(RootMotion::FinalIK::FullBodyBipedChain value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::FullBodyBipedChain::_set_RightLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedChain", "RightLeg", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverFullBodyBiped
#include "RootMotion/FinalIK/IKSolverFullBodyBiped.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKEffector
#include "RootMotion/FinalIK/IKEffector.hpp"
// Including type: RootMotion.FinalIK.FBIKChain
#include "RootMotion/FinalIK/FBIKChain.hpp"
// Including type: RootMotion.FinalIK.IKMappingLimb
#include "RootMotion/FinalIK/IKMappingLimb.hpp"
// Including type: RootMotion.FinalIK.IKMappingBone
#include "RootMotion/FinalIK/IKMappingBone.hpp"
// Including type: RootMotion.FinalIK.FullBodyBipedChain
#include "RootMotion/FinalIK/FullBodyBipedChain.hpp"
// Including type: RootMotion.FinalIK.FullBodyBipedEffector
#include "RootMotion/FinalIK/FullBodyBipedEffector.hpp"
// Including type: RootMotion.FinalIK.IKMappingSpine
#include "RootMotion/FinalIK/IKMappingSpine.hpp"
// Including type: RootMotion.FinalIK.IKConstraintBend
#include "RootMotion/FinalIK/IKConstraintBend.hpp"
// Including type: RootMotion.BipedReferences
#include "RootMotion/BipedReferences.hpp"
// Including type: RootMotion.BipedLimbOrientations/LimbOrientation
#include "RootMotion/BipedLimbOrientations_LimbOrientation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_bodyEffector
RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::get_bodyEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::get_bodyEffector");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_bodyEffector", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_leftShoulderEffector
RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftShoulderEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftShoulderEffector");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftShoulderEffector", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_rightShoulderEffector
RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightShoulderEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightShoulderEffector");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightShoulderEffector", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_leftThighEffector
RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftThighEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftThighEffector");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftThighEffector", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_rightThighEffector
RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightThighEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightThighEffector");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightThighEffector", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_leftHandEffector
RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftHandEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftHandEffector");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftHandEffector", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_rightHandEffector
RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightHandEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightHandEffector");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightHandEffector", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_leftFootEffector
RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftFootEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftFootEffector");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftFootEffector", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_rightFootEffector
RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightFootEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightFootEffector");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightFootEffector", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_leftArmChain
RootMotion::FinalIK::FBIKChain* RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftArmChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftArmChain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftArmChain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::FBIKChain*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_rightArmChain
RootMotion::FinalIK::FBIKChain* RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightArmChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightArmChain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightArmChain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::FBIKChain*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_leftLegChain
RootMotion::FinalIK::FBIKChain* RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftLegChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftLegChain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftLegChain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::FBIKChain*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_rightLegChain
RootMotion::FinalIK::FBIKChain* RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightLegChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightLegChain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightLegChain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::FBIKChain*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_leftArmMapping
RootMotion::FinalIK::IKMappingLimb* RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftArmMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftArmMapping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftArmMapping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKMappingLimb*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_rightArmMapping
RootMotion::FinalIK::IKMappingLimb* RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightArmMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightArmMapping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightArmMapping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKMappingLimb*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_leftLegMapping
RootMotion::FinalIK::IKMappingLimb* RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftLegMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftLegMapping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftLegMapping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKMappingLimb*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_rightLegMapping
RootMotion::FinalIK::IKMappingLimb* RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightLegMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightLegMapping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightLegMapping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKMappingLimb*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_headMapping
RootMotion::FinalIK::IKMappingBone* RootMotion::FinalIK::IKSolverFullBodyBiped::get_headMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::get_headMapping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_headMapping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKMappingBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.SetChainWeights
void RootMotion::FinalIK::IKSolverFullBodyBiped::SetChainWeights(RootMotion::FinalIK::FullBodyBipedChain c, float pull, float reach) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::SetChainWeights");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetChainWeights", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c, pull, reach)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, c, pull, reach);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.SetEffectorWeights
void RootMotion::FinalIK::IKSolverFullBodyBiped::SetEffectorWeights(RootMotion::FinalIK::FullBodyBipedEffector effector, float positionWeight, float rotationWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::SetEffectorWeights");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetEffectorWeights", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effector, positionWeight, rotationWeight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, effector, positionWeight, rotationWeight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetChain
RootMotion::FinalIK::FBIKChain* RootMotion::FinalIK::IKSolverFullBodyBiped::GetChain(RootMotion::FinalIK::FullBodyBipedChain c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::GetChain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetChain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::FBIKChain*, false>(this, ___internal__method, c);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetChain
RootMotion::FinalIK::FBIKChain* RootMotion::FinalIK::IKSolverFullBodyBiped::GetChain(RootMotion::FinalIK::FullBodyBipedEffector effector) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::GetChain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetChain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effector)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::FBIKChain*, false>(this, ___internal__method, effector);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetEffector
RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::GetEffector(RootMotion::FinalIK::FullBodyBipedEffector effector) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::GetEffector");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEffector", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effector)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method, effector);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetEndEffector
RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::GetEndEffector(RootMotion::FinalIK::FullBodyBipedChain c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::GetEndEffector");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEndEffector", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method, c);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetLimbMapping
RootMotion::FinalIK::IKMappingLimb* RootMotion::FinalIK::IKSolverFullBodyBiped::GetLimbMapping(RootMotion::FinalIK::FullBodyBipedChain chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::GetLimbMapping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLimbMapping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chain)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKMappingLimb*, false>(this, ___internal__method, chain);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetLimbMapping
RootMotion::FinalIK::IKMappingLimb* RootMotion::FinalIK::IKSolverFullBodyBiped::GetLimbMapping(RootMotion::FinalIK::FullBodyBipedEffector effector) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::GetLimbMapping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLimbMapping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effector)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKMappingLimb*, false>(this, ___internal__method, effector);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetSpineMapping
RootMotion::FinalIK::IKMappingSpine* RootMotion::FinalIK::IKSolverFullBodyBiped::GetSpineMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::GetSpineMapping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSpineMapping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKMappingSpine*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetHeadMapping
RootMotion::FinalIK::IKMappingBone* RootMotion::FinalIK::IKSolverFullBodyBiped::GetHeadMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::GetHeadMapping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHeadMapping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKMappingBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetBendConstraint
RootMotion::FinalIK::IKConstraintBend* RootMotion::FinalIK::IKSolverFullBodyBiped::GetBendConstraint(RootMotion::FinalIK::FullBodyBipedChain limb) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::GetBendConstraint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBendConstraint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(limb)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKConstraintBend*, false>(this, ___internal__method, limb);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.SetToReferences
void RootMotion::FinalIK::IKSolverFullBodyBiped::SetToReferences(RootMotion::BipedReferences* references, UnityEngine::Transform* rootNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::SetToReferences");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetToReferences", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(references, rootNode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, references, rootNode);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.DetectRootNodeBone
UnityEngine::Transform* RootMotion::FinalIK::IKSolverFullBodyBiped::DetectRootNodeBone(RootMotion::BipedReferences* references) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::DetectRootNodeBone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverFullBodyBiped", "DetectRootNodeBone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(references)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, references);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.SetLimbOrientations
void RootMotion::FinalIK::IKSolverFullBodyBiped::SetLimbOrientations(RootMotion::BipedLimbOrientations* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::SetLimbOrientations");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLimbOrientations", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(o)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_pullBodyOffset
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFullBodyBiped::get_pullBodyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::get_pullBodyOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_pullBodyOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.set_pullBodyOffset
void RootMotion::FinalIK::IKSolverFullBodyBiped::set_pullBodyOffset(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::set_pullBodyOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_pullBodyOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.SetLimbOrientation
void RootMotion::FinalIK::IKSolverFullBodyBiped::SetLimbOrientation(RootMotion::FinalIK::FullBodyBipedChain chain, RootMotion::BipedLimbOrientations::LimbOrientation* limbOrientation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::SetLimbOrientation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLimbOrientation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chain, limbOrientation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, chain, limbOrientation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetLeftClavicle
UnityEngine::Transform* RootMotion::FinalIK::IKSolverFullBodyBiped::GetLeftClavicle(RootMotion::BipedReferences* references) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::GetLeftClavicle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverFullBodyBiped", "GetLeftClavicle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(references)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, references);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetRightClavicle
UnityEngine::Transform* RootMotion::FinalIK::IKSolverFullBodyBiped::GetRightClavicle(RootMotion::BipedReferences* references) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::GetRightClavicle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverFullBodyBiped", "GetRightClavicle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(references)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, references);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.Contains
bool RootMotion::FinalIK::IKSolverFullBodyBiped::Contains(::Array<UnityEngine::Transform*>* array, UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverFullBodyBiped", "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, transform)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.PullBody
void RootMotion::FinalIK::IKSolverFullBodyBiped::PullBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::PullBody");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PullBody", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetBodyOffset
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFullBodyBiped::GetBodyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::GetBodyOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBodyOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetHandBodyPull
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFullBodyBiped::GetHandBodyPull(RootMotion::FinalIK::IKEffector* effector, RootMotion::FinalIK::FBIKChain* arm, UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::GetHandBodyPull");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHandBodyPull", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effector, arm, offset)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, effector, arm, offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.IsValid
bool RootMotion::FinalIK::IKSolverFullBodyBiped::IsValid(::Il2CppString*& message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.ReadPose
void RootMotion::FinalIK::IKSolverFullBodyBiped::ReadPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::ReadPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.ApplyBendConstraints
void RootMotion::FinalIK::IKSolverFullBodyBiped::ApplyBendConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::ApplyBendConstraints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyBendConstraints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.WritePose
void RootMotion::FinalIK::IKSolverFullBodyBiped::WritePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverFullBodyBiped::WritePose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WritePose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverHeuristic
#include "RootMotion/FinalIK/IKSolverHeuristic.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Bone
#include "RootMotion/FinalIK/IKSolver_Bone.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.SetChain
bool RootMotion::FinalIK::IKSolverHeuristic::SetChain(::Array<UnityEngine::Transform*>* hierarchy, UnityEngine::Transform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverHeuristic::SetChain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetChain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hierarchy, root)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, hierarchy, root);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.AddBone
void RootMotion::FinalIK::IKSolverHeuristic::AddBone(UnityEngine::Transform* bone) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverHeuristic::AddBone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddBone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bone)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bone);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.get_minBones
int RootMotion::FinalIK::IKSolverHeuristic::get_minBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverHeuristic::get_minBones_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_minBones", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.get_boneLengthCanBeZero
bool RootMotion::FinalIK::IKSolverHeuristic::get_boneLengthCanBeZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverHeuristic::get_boneLengthCanBeZero_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_boneLengthCanBeZero", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.get_allowCommonParent
bool RootMotion::FinalIK::IKSolverHeuristic::get_allowCommonParent_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverHeuristic::get_allowCommonParent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_allowCommonParent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.InitiateBones
void RootMotion::FinalIK::IKSolverHeuristic::InitiateBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverHeuristic::InitiateBones");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitiateBones", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.get_localDirection
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverHeuristic::get_localDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverHeuristic::get_localDirection_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localDirection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.get_positionOffset
float RootMotion::FinalIK::IKSolverHeuristic::get_positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverHeuristic::get_positionOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_positionOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.GetSingularityOffset
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverHeuristic::GetSingularityOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverHeuristic::GetSingularityOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSingularityOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.SingularityDetected
bool RootMotion::FinalIK::IKSolverHeuristic::SingularityDetected() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverHeuristic::SingularityDetected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SingularityDetected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolverHeuristic::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverHeuristic::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.FixTransforms
void RootMotion::FinalIK::IKSolverHeuristic::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverHeuristic::FixTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.IsValid
bool RootMotion::FinalIK::IKSolverHeuristic::IsValid(::Il2CppString*& message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverHeuristic::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.GetPoints
::Array<RootMotion::FinalIK::IKSolver::Point*>* RootMotion::FinalIK::IKSolverHeuristic::GetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverHeuristic::GetPoints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<RootMotion::FinalIK::IKSolver::Point*>*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.GetPoint
RootMotion::FinalIK::IKSolver::Point* RootMotion::FinalIK::IKSolverHeuristic::GetPoint(UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverHeuristic::GetPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolver::Point*, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.OnInitiate
void RootMotion::FinalIK::IKSolverHeuristic::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverHeuristic::OnInitiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.OnUpdate
void RootMotion::FinalIK::IKSolverHeuristic::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverHeuristic::OnUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverLeg
#include "RootMotion/FinalIK/IKSolverLeg.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Leg
#include "RootMotion/FinalIK/IKSolverVR_Leg.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.SetChain
bool RootMotion::FinalIK::IKSolverLeg::SetChain(UnityEngine::Transform* pelvis, UnityEngine::Transform* thigh, UnityEngine::Transform* calf, UnityEngine::Transform* foot, UnityEngine::Transform* toe, UnityEngine::Transform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLeg::SetChain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetChain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pelvis, thigh, calf, foot, toe, root)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pelvis, thigh, calf, foot, toe, root);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.Solve
void RootMotion::FinalIK::IKSolverLeg::Solve() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLeg::Solve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.Read
void RootMotion::FinalIK::IKSolverLeg::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLeg::Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.Write
void RootMotion::FinalIK::IKSolverLeg::Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLeg::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.IsValid
bool RootMotion::FinalIK::IKSolverLeg::IsValid(::Il2CppString*& message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLeg::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.GetPoints
::Array<RootMotion::FinalIK::IKSolver::Point*>* RootMotion::FinalIK::IKSolverLeg::GetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLeg::GetPoints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<RootMotion::FinalIK::IKSolver::Point*>*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.GetPoint
RootMotion::FinalIK::IKSolver::Point* RootMotion::FinalIK::IKSolverLeg::GetPoint(UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLeg::GetPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolver::Point*, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolverLeg::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLeg::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.FixTransforms
void RootMotion::FinalIK::IKSolverLeg::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLeg::FixTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.OnInitiate
void RootMotion::FinalIK::IKSolverLeg::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLeg::OnInitiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.OnUpdate
void RootMotion::FinalIK::IKSolverLeg::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLeg::OnUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverLimb
#include "RootMotion/FinalIK/IKSolverLimb.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverLimb.MaintainRotation
void RootMotion::FinalIK::IKSolverLimb::MaintainRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLimb::MaintainRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MaintainRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLimb.MaintainBend
void RootMotion::FinalIK::IKSolverLimb::MaintainBend() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLimb::MaintainBend");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MaintainBend", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLimb.get_axisDirections
::Array<RootMotion::FinalIK::IKSolverLimb::AxisDirection>* RootMotion::FinalIK::IKSolverLimb::get_axisDirections() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLimb::get_axisDirections");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_axisDirections", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<RootMotion::FinalIK::IKSolverLimb::AxisDirection>*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLimb.StoreAxisDirections
void RootMotion::FinalIK::IKSolverLimb::StoreAxisDirections(::Array<RootMotion::FinalIK::IKSolverLimb::AxisDirection>*& axisDirections) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLimb::StoreAxisDirections");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreAxisDirections", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(axisDirections)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, axisDirections);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLimb.GetModifiedBendNormal
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverLimb::GetModifiedBendNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLimb::GetModifiedBendNormal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetModifiedBendNormal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLimb.OnInitiateVirtual
void RootMotion::FinalIK::IKSolverLimb::OnInitiateVirtual() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLimb::OnInitiateVirtual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnInitiateVirtual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLimb.OnUpdateVirtual
void RootMotion::FinalIK::IKSolverLimb::OnUpdateVirtual() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLimb::OnUpdateVirtual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnUpdateVirtual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLimb.OnPostSolveVirtual
void RootMotion::FinalIK::IKSolverLimb::OnPostSolveVirtual() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLimb::OnPostSolveVirtual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPostSolveVirtual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverLimb/BendModifier
#include "RootMotion/FinalIK/IKSolverLimb.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Animation
RootMotion::FinalIK::IKSolverLimb::BendModifier RootMotion::FinalIK::IKSolverLimb::BendModifier::_get_Animation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLimb::BendModifier::_get_Animation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKSolverLimb::BendModifier>("RootMotion.FinalIK", "IKSolverLimb/BendModifier", "Animation"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Animation
void RootMotion::FinalIK::IKSolverLimb::BendModifier::_set_Animation(RootMotion::FinalIK::IKSolverLimb::BendModifier value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLimb::BendModifier::_set_Animation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverLimb/BendModifier", "Animation", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Target
RootMotion::FinalIK::IKSolverLimb::BendModifier RootMotion::FinalIK::IKSolverLimb::BendModifier::_get_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLimb::BendModifier::_get_Target");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKSolverLimb::BendModifier>("RootMotion.FinalIK", "IKSolverLimb/BendModifier", "Target"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Target
void RootMotion::FinalIK::IKSolverLimb::BendModifier::_set_Target(RootMotion::FinalIK::IKSolverLimb::BendModifier value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLimb::BendModifier::_set_Target");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverLimb/BendModifier", "Target", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Parent
RootMotion::FinalIK::IKSolverLimb::BendModifier RootMotion::FinalIK::IKSolverLimb::BendModifier::_get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLimb::BendModifier::_get_Parent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKSolverLimb::BendModifier>("RootMotion.FinalIK", "IKSolverLimb/BendModifier", "Parent"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Parent
void RootMotion::FinalIK::IKSolverLimb::BendModifier::_set_Parent(RootMotion::FinalIK::IKSolverLimb::BendModifier value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLimb::BendModifier::_set_Parent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverLimb/BendModifier", "Parent", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Arm
RootMotion::FinalIK::IKSolverLimb::BendModifier RootMotion::FinalIK::IKSolverLimb::BendModifier::_get_Arm() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLimb::BendModifier::_get_Arm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKSolverLimb::BendModifier>("RootMotion.FinalIK", "IKSolverLimb/BendModifier", "Arm"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Arm
void RootMotion::FinalIK::IKSolverLimb::BendModifier::_set_Arm(RootMotion::FinalIK::IKSolverLimb::BendModifier value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLimb::BendModifier::_set_Arm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverLimb/BendModifier", "Arm", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Goal
RootMotion::FinalIK::IKSolverLimb::BendModifier RootMotion::FinalIK::IKSolverLimb::BendModifier::_get_Goal() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLimb::BendModifier::_get_Goal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKSolverLimb::BendModifier>("RootMotion.FinalIK", "IKSolverLimb/BendModifier", "Goal"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Goal
void RootMotion::FinalIK::IKSolverLimb::BendModifier::_set_Goal(RootMotion::FinalIK::IKSolverLimb::BendModifier value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLimb::BendModifier::_set_Goal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverLimb/BendModifier", "Goal", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverLimb/AxisDirection
#include "RootMotion/FinalIK/IKSolverLimb.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverLookAt
#include "RootMotion/FinalIK/IKSolverLookAt.hpp"
// Including type: RootMotion.FinalIK.IKSolverLookAt/LookAtBone
#include "RootMotion/FinalIK/IKSolverLookAt_LookAtBone.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SetLookAtWeight
void RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight(float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLookAtWeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SetLookAtWeight
void RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight(float weight, float bodyWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLookAtWeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(weight, bodyWeight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, weight, bodyWeight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SetLookAtWeight
void RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight(float weight, float bodyWeight, float headWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLookAtWeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(weight, bodyWeight, headWeight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, weight, bodyWeight, headWeight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SetLookAtWeight
void RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLookAtWeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(weight, bodyWeight, headWeight, eyesWeight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, weight, bodyWeight, headWeight, eyesWeight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SetLookAtWeight
void RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLookAtWeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(weight, bodyWeight, headWeight, eyesWeight, clampWeight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, weight, bodyWeight, headWeight, eyesWeight, clampWeight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SetLookAtWeight
void RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight, float clampWeightHead, float clampWeightEyes) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLookAtWeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(weight, bodyWeight, headWeight, eyesWeight, clampWeight, clampWeightHead, clampWeightEyes)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, weight, bodyWeight, headWeight, eyesWeight, clampWeight, clampWeightHead, clampWeightEyes);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SetChain
bool RootMotion::FinalIK::IKSolverLookAt::SetChain(::Array<UnityEngine::Transform*>* spine, UnityEngine::Transform* head, ::Array<UnityEngine::Transform*>* eyes, UnityEngine::Transform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::SetChain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetChain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(spine, head, eyes, root)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, spine, head, eyes, root);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.get_spineIsValid
bool RootMotion::FinalIK::IKSolverLookAt::get_spineIsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::get_spineIsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_spineIsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.get_spineIsEmpty
bool RootMotion::FinalIK::IKSolverLookAt::get_spineIsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::get_spineIsEmpty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_spineIsEmpty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SolveSpine
void RootMotion::FinalIK::IKSolverLookAt::SolveSpine() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::SolveSpine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SolveSpine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.get_headIsValid
bool RootMotion::FinalIK::IKSolverLookAt::get_headIsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::get_headIsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_headIsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.get_headIsEmpty
bool RootMotion::FinalIK::IKSolverLookAt::get_headIsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::get_headIsEmpty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_headIsEmpty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SolveHead
void RootMotion::FinalIK::IKSolverLookAt::SolveHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::SolveHead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SolveHead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.get_eyesIsValid
bool RootMotion::FinalIK::IKSolverLookAt::get_eyesIsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::get_eyesIsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_eyesIsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.get_eyesIsEmpty
bool RootMotion::FinalIK::IKSolverLookAt::get_eyesIsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::get_eyesIsEmpty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_eyesIsEmpty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SolveEyes
void RootMotion::FinalIK::IKSolverLookAt::SolveEyes() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::SolveEyes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SolveEyes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.GetForwards
::Array<UnityEngine::Vector3>* RootMotion::FinalIK::IKSolverLookAt::GetForwards(::Array<UnityEngine::Vector3>*& forwards, UnityEngine::Vector3 baseForward, UnityEngine::Vector3 targetForward, int bones, float clamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::GetForwards");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetForwards", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(forwards, baseForward, targetForward, bones, clamp)));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method, forwards, baseForward, targetForward, bones, clamp);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SetBones
void RootMotion::FinalIK::IKSolverLookAt::SetBones(::Array<UnityEngine::Transform*>* array, ::Array<RootMotion::FinalIK::IKSolverLookAt::LookAtBone*>*& bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::SetBones");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetBones", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, bones)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, bones);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolverLookAt::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.FixTransforms
void RootMotion::FinalIK::IKSolverLookAt::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::FixTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.IsValid
bool RootMotion::FinalIK::IKSolverLookAt::IsValid(::Il2CppString*& message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.GetPoints
::Array<RootMotion::FinalIK::IKSolver::Point*>* RootMotion::FinalIK::IKSolverLookAt::GetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::GetPoints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<RootMotion::FinalIK::IKSolver::Point*>*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.GetPoint
RootMotion::FinalIK::IKSolver::Point* RootMotion::FinalIK::IKSolverLookAt::GetPoint(UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::GetPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolver::Point*, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.OnInitiate
void RootMotion::FinalIK::IKSolverLookAt::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::OnInitiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.OnUpdate
void RootMotion::FinalIK::IKSolverLookAt::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::OnUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverLookAt/LookAtBone
#include "RootMotion/FinalIK/IKSolverLookAt_LookAtBone.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt/LookAtBone.Initiate
void RootMotion::FinalIK::IKSolverLookAt::LookAtBone::Initiate(UnityEngine::Transform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::LookAtBone::Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(root)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, root);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt/LookAtBone.LookAt
void RootMotion::FinalIK::IKSolverLookAt::LookAtBone::LookAt(UnityEngine::Vector3 direction, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::LookAtBone::LookAt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LookAt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(direction, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, direction, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt/LookAtBone.get_forward
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverLookAt::LookAtBone::get_forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverLookAt::LookAtBone::get_forward");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_forward", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverTrigonometric
#include "RootMotion/FinalIK/IKSolverTrigonometric.hpp"
// Including type: RootMotion.FinalIK.IKSolverTrigonometric/TrigonometricBone
#include "RootMotion/FinalIK/IKSolverTrigonometric_TrigonometricBone.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.SetBendGoalPosition
void RootMotion::FinalIK::IKSolverTrigonometric::SetBendGoalPosition(UnityEngine::Vector3 goalPosition, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::SetBendGoalPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetBendGoalPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(goalPosition, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, goalPosition, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.SetBendPlaneToCurrent
void RootMotion::FinalIK::IKSolverTrigonometric::SetBendPlaneToCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::SetBendPlaneToCurrent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetBendPlaneToCurrent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.SetIKRotation
void RootMotion::FinalIK::IKSolverTrigonometric::SetIKRotation(UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::SetIKRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetIKRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.SetIKRotationWeight
void RootMotion::FinalIK::IKSolverTrigonometric::SetIKRotationWeight(float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::SetIKRotationWeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetIKRotationWeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.GetIKRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverTrigonometric::GetIKRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::GetIKRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetIKRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.GetIKRotationWeight
float RootMotion::FinalIK::IKSolverTrigonometric::GetIKRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::GetIKRotationWeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetIKRotationWeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.SetChain
bool RootMotion::FinalIK::IKSolverTrigonometric::SetChain(UnityEngine::Transform* bone1, UnityEngine::Transform* bone2, UnityEngine::Transform* bone3, UnityEngine::Transform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::SetChain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetChain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bone1, bone2, bone3, root)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, bone1, bone2, bone3, root);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.Solve
void RootMotion::FinalIK::IKSolverTrigonometric::Solve(UnityEngine::Transform* bone1, UnityEngine::Transform* bone2, UnityEngine::Transform* bone3, UnityEngine::Vector3 targetPosition, UnityEngine::Vector3 bendNormal, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::Solve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverTrigonometric", "Solve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bone1, bone2, bone3, targetPosition, bendNormal, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bone1, bone2, bone3, targetPosition, bendNormal, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.GetDirectionToBendPoint
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverTrigonometric::GetDirectionToBendPoint(UnityEngine::Vector3 direction, float directionMag, UnityEngine::Vector3 bendDirection, float sqrMag1, float sqrMag2) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::GetDirectionToBendPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverTrigonometric", "GetDirectionToBendPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(direction, directionMag, bendDirection, sqrMag1, sqrMag2)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, direction, directionMag, bendDirection, sqrMag1, sqrMag2);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.IsDirectHierarchy
bool RootMotion::FinalIK::IKSolverTrigonometric::IsDirectHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::IsDirectHierarchy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsDirectHierarchy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.InitiateBones
void RootMotion::FinalIK::IKSolverTrigonometric::InitiateBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::InitiateBones");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitiateBones", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.OnInitiateVirtual
void RootMotion::FinalIK::IKSolverTrigonometric::OnInitiateVirtual() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::OnInitiateVirtual_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnInitiateVirtual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.OnUpdateVirtual
void RootMotion::FinalIK::IKSolverTrigonometric::OnUpdateVirtual() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::OnUpdateVirtual_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnUpdateVirtual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.OnPostSolveVirtual
void RootMotion::FinalIK::IKSolverTrigonometric::OnPostSolveVirtual() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::OnPostSolveVirtual_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPostSolveVirtual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.GetBendDirection
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverTrigonometric::GetBendDirection(UnityEngine::Vector3 IKPosition, UnityEngine::Vector3 bendNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::GetBendDirection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBendDirection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(IKPosition, bendNormal)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, IKPosition, bendNormal);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.GetPoints
::Array<RootMotion::FinalIK::IKSolver::Point*>* RootMotion::FinalIK::IKSolverTrigonometric::GetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::GetPoints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<RootMotion::FinalIK::IKSolver::Point*>*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.GetPoint
RootMotion::FinalIK::IKSolver::Point* RootMotion::FinalIK::IKSolverTrigonometric::GetPoint(UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::GetPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolver::Point*, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolverTrigonometric::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.FixTransforms
void RootMotion::FinalIK::IKSolverTrigonometric::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::FixTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.IsValid
bool RootMotion::FinalIK::IKSolverTrigonometric::IsValid(::Il2CppString*& message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.OnInitiate
void RootMotion::FinalIK::IKSolverTrigonometric::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::OnInitiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.OnUpdate
void RootMotion::FinalIK::IKSolverTrigonometric::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::OnUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverTrigonometric/TrigonometricBone
#include "RootMotion/FinalIK/IKSolverTrigonometric_TrigonometricBone.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric/TrigonometricBone.Initiate
void RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone::Initiate(UnityEngine::Vector3 childPosition, UnityEngine::Vector3 bendNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone::Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(childPosition, bendNormal)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, childPosition, bendNormal);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric/TrigonometricBone.GetRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone::GetRotation(UnityEngine::Vector3 direction, UnityEngine::Vector3 bendNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone::GetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(direction, bendNormal)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, direction, bendNormal);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric/TrigonometricBone.GetBendNormalFromCurrentRotation
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone::GetBendNormalFromCurrentRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone::GetBendNormalFromCurrentRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBendNormalFromCurrentRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverVR
#include "RootMotion/FinalIK/IKSolverVR.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Arm
#include "RootMotion/FinalIK/IKSolverVR_Arm.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/BodyPart
#include "RootMotion/FinalIK/IKSolverVR_BodyPart.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Footstep
#include "RootMotion/FinalIK/IKSolverVR_Footstep.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Leg
#include "RootMotion/FinalIK/IKSolverVR_Leg.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Locomotion
#include "RootMotion/FinalIK/IKSolverVR_Locomotion.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Spine
#include "RootMotion/FinalIK/IKSolverVR_Spine.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/PositionOffset
#include "RootMotion/FinalIK/IKSolverVR_PositionOffset.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RotationOffset
#include "RootMotion/FinalIK/IKSolverVR_RotationOffset.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/VirtualBone
#include "RootMotion/FinalIK/IKSolverVR_VirtualBone.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.VRIK/References
#include "RootMotion/FinalIK/VRIK_References.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.SetToReferences
void RootMotion::FinalIK::IKSolverVR::SetToReferences(RootMotion::FinalIK::VRIK::References* references) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::SetToReferences");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetToReferences", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(references)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, references);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.GuessHandOrientations
void RootMotion::FinalIK::IKSolverVR::GuessHandOrientations(RootMotion::FinalIK::VRIK::References* references, bool onlyIfZero) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::GuessHandOrientations");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GuessHandOrientations", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(references, onlyIfZero)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, references, onlyIfZero);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.DefaultAnimationCurves
void RootMotion::FinalIK::IKSolverVR::DefaultAnimationCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::DefaultAnimationCurves");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DefaultAnimationCurves", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.AddPositionOffset
void RootMotion::FinalIK::IKSolverVR::AddPositionOffset(RootMotion::FinalIK::IKSolverVR::PositionOffset positionOffset, UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::AddPositionOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddPositionOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(positionOffset, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, positionOffset, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.AddRotationOffset
void RootMotion::FinalIK::IKSolverVR::AddRotationOffset(RootMotion::FinalIK::IKSolverVR::RotationOffset rotationOffset, UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::AddRotationOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddRotationOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotationOffset, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rotationOffset, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.AddRotationOffset
void RootMotion::FinalIK::IKSolverVR::AddRotationOffset(RootMotion::FinalIK::IKSolverVR::RotationOffset rotationOffset, UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::AddRotationOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddRotationOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotationOffset, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rotationOffset, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.AddPlatformMotion
void RootMotion::FinalIK::IKSolverVR::AddPlatformMotion(UnityEngine::Vector3 deltaPosition, UnityEngine::Quaternion deltaRotation, UnityEngine::Vector3 platformPivot) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::AddPlatformMotion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddPlatformMotion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(deltaPosition, deltaRotation, platformPivot)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, deltaPosition, deltaRotation, platformPivot);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.Reset
void RootMotion::FinalIK::IKSolverVR::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.GetNormal
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::GetNormal(::Array<UnityEngine::Transform*>* transforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::GetNormal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNormal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transforms)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, transforms);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.GuessWristToPalmAxis
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::GuessWristToPalmAxis(UnityEngine::Transform* hand, UnityEngine::Transform* forearm) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::GuessWristToPalmAxis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GuessWristToPalmAxis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hand, forearm)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, hand, forearm);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.GuessPalmToThumbAxis
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::GuessPalmToThumbAxis(UnityEngine::Transform* hand, UnityEngine::Transform* forearm) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::GuessPalmToThumbAxis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GuessPalmToThumbAxis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hand, forearm)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, hand, forearm);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.GetSineKeyframes
::Array<UnityEngine::Keyframe>* RootMotion::FinalIK::IKSolverVR::GetSineKeyframes(float mag) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::GetSineKeyframes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR", "GetSineKeyframes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mag)));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Keyframe>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mag);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.UpdateSolverTransforms
void RootMotion::FinalIK::IKSolverVR::UpdateSolverTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::UpdateSolverTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateSolverTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.WriteTransforms
void RootMotion::FinalIK::IKSolverVR::WriteTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::WriteTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.Read
void RootMotion::FinalIK::IKSolverVR::Read(::Array<UnityEngine::Vector3>* positions, ::Array<UnityEngine::Quaternion>* rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.Solve
void RootMotion::FinalIK::IKSolverVR::Solve() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Solve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.GetPosition
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::GetPosition(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::GetPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.GetRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::GetRotation(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::GetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.get_rootBone
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::get_rootBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::get_rootBone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rootBone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.set_rootBone
void RootMotion::FinalIK::IKSolverVR::set_rootBone(RootMotion::FinalIK::IKSolverVR::VirtualBone* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::set_rootBone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_rootBone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.Write
void RootMotion::FinalIK::IKSolverVR::Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.GetPelvisOffset
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::GetPelvisOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::GetPelvisOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPelvisOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolverVR::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.FixTransforms
void RootMotion::FinalIK::IKSolverVR::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::FixTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.GetPoints
::Array<RootMotion::FinalIK::IKSolver::Point*>* RootMotion::FinalIK::IKSolverVR::GetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::GetPoints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<RootMotion::FinalIK::IKSolver::Point*>*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.GetPoint
RootMotion::FinalIK::IKSolver::Point* RootMotion::FinalIK::IKSolverVR::GetPoint(UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::GetPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolver::Point*, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.IsValid
bool RootMotion::FinalIK::IKSolverVR::IsValid(::Il2CppString*& message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.OnInitiate
void RootMotion::FinalIK::IKSolverVR::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::OnInitiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.OnUpdate
void RootMotion::FinalIK::IKSolverVR::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::OnUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverVR/Arm
#include "RootMotion/FinalIK/IKSolverVR_Arm.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/VirtualBone
#include "RootMotion/FinalIK/IKSolverVR_VirtualBone.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single yawOffsetAngle
float RootMotion::FinalIK::IKSolverVR::Arm::_get_yawOffsetAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::_get_yawOffsetAngle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("RootMotion.FinalIK", "IKSolverVR/Arm", "yawOffsetAngle"));
}
// Autogenerated static field setter
// Set static field: static private System.Single yawOffsetAngle
void RootMotion::FinalIK::IKSolverVR::Arm::_set_yawOffsetAngle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::_set_yawOffsetAngle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/Arm", "yawOffsetAngle", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single pitchOffsetAngle
float RootMotion::FinalIK::IKSolverVR::Arm::_get_pitchOffsetAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::_get_pitchOffsetAngle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("RootMotion.FinalIK", "IKSolverVR/Arm", "pitchOffsetAngle"));
}
// Autogenerated static field setter
// Set static field: static private System.Single pitchOffsetAngle
void RootMotion::FinalIK::IKSolverVR::Arm::_set_pitchOffsetAngle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::_set_pitchOffsetAngle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/Arm", "pitchOffsetAngle", value));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.get_position
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Arm::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::get_position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.set_position
void RootMotion::FinalIK::IKSolverVR::Arm::set_position(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::set_position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.get_rotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::Arm::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::get_rotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.set_rotation
void RootMotion::FinalIK::IKSolverVR::Arm::set_rotation(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::set_rotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.get_shoulder
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Arm::get_shoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::get_shoulder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shoulder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.get_upperArm
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Arm::get_upperArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::get_upperArm");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_upperArm", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.get_forearm
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Arm::get_forearm() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::get_forearm");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_forearm", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.get_hand
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Arm::get_hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::get_hand");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hand", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.Stretching
void RootMotion::FinalIK::IKSolverVR::Arm::Stretching() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::Stretching");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Stretching", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.Solve
void RootMotion::FinalIK::IKSolverVR::Arm::Solve(bool isLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::Solve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isLeft)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isLeft);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.DamperValue
float RootMotion::FinalIK::IKSolverVR::Arm::DamperValue(float value, float min, float max, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::DamperValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DamperValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, min, max, weight)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, value, min, max, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.GetBendNormal
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Arm::GetBendNormal(UnityEngine::Vector3 dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::GetBendNormal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBendNormal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dir)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, dir);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.Visualize
void RootMotion::FinalIK::IKSolverVR::Arm::Visualize(RootMotion::FinalIK::IKSolverVR::VirtualBone* bone1, RootMotion::FinalIK::IKSolverVR::VirtualBone* bone2, RootMotion::FinalIK::IKSolverVR::VirtualBone* bone3, UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::Visualize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Visualize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bone1, bone2, bone3, color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bone1, bone2, bone3, color);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.OnRead
void RootMotion::FinalIK::IKSolverVR::Arm::OnRead(::Array<UnityEngine::Vector3>* positions, ::Array<UnityEngine::Quaternion>* rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::OnRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.PreSolve
void RootMotion::FinalIK::IKSolverVR::Arm::PreSolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::PreSolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PreSolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.ApplyOffsets
void RootMotion::FinalIK::IKSolverVR::Arm::ApplyOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::ApplyOffsets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyOffsets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.ResetOffsets
void RootMotion::FinalIK::IKSolverVR::Arm::ResetOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::ResetOffsets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetOffsets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.Write
void RootMotion::FinalIK::IKSolverVR::Arm::Write(::Array<UnityEngine::Vector3>*& solvedPositions, ::Array<UnityEngine::Quaternion>*& solvedRotations) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solvedPositions, solvedRotations)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solvedPositions, solvedRotations);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverVR/Arm/ShoulderRotationMode
#include "RootMotion/FinalIK/IKSolverVR_Arm.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/Arm/ShoulderRotationMode YawPitch
RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode::_get_YawPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode::_get_YawPitch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode>("RootMotion.FinalIK", "IKSolverVR/Arm/ShoulderRotationMode", "YawPitch"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/Arm/ShoulderRotationMode YawPitch
void RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode::_set_YawPitch(RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode::_set_YawPitch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/Arm/ShoulderRotationMode", "YawPitch", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/Arm/ShoulderRotationMode FromTo
RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode::_get_FromTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode::_get_FromTo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode>("RootMotion.FinalIK", "IKSolverVR/Arm/ShoulderRotationMode", "FromTo"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/Arm/ShoulderRotationMode FromTo
void RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode::_set_FromTo(RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode::_set_FromTo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/Arm/ShoulderRotationMode", "FromTo", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverVR/BodyPart
#include "RootMotion/FinalIK/IKSolverVR_BodyPart.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/VirtualBone
#include "RootMotion/FinalIK/IKSolverVR_VirtualBone.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.OnRead
void RootMotion::FinalIK::IKSolverVR::BodyPart::OnRead(::Array<UnityEngine::Vector3>* positions, ::Array<UnityEngine::Quaternion>* rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::BodyPart::OnRead_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.PreSolve
void RootMotion::FinalIK::IKSolverVR::BodyPart::PreSolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::BodyPart::PreSolve_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PreSolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.Write
void RootMotion::FinalIK::IKSolverVR::BodyPart::Write(::Array<UnityEngine::Vector3>*& solvedPositions, ::Array<UnityEngine::Quaternion>*& solvedRotations) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::BodyPart::Write_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solvedPositions, solvedRotations)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solvedPositions, solvedRotations);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.ApplyOffsets
void RootMotion::FinalIK::IKSolverVR::BodyPart::ApplyOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::BodyPart::ApplyOffsets_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyOffsets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.ResetOffsets
void RootMotion::FinalIK::IKSolverVR::BodyPart::ResetOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::BodyPart::ResetOffsets_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetOffsets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.get_sqrMag
float RootMotion::FinalIK::IKSolverVR::BodyPart::get_sqrMag() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::BodyPart::get_sqrMag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_sqrMag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.set_sqrMag
void RootMotion::FinalIK::IKSolverVR::BodyPart::set_sqrMag(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::BodyPart::set_sqrMag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_sqrMag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.get_mag
float RootMotion::FinalIK::IKSolverVR::BodyPart::get_mag() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::BodyPart::get_mag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.set_mag
void RootMotion::FinalIK::IKSolverVR::BodyPart::set_mag(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::BodyPart::set_mag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_mag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.SetLOD
void RootMotion::FinalIK::IKSolverVR::BodyPart::SetLOD(int LOD) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::BodyPart::SetLOD");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLOD", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(LOD)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, LOD);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.Read
void RootMotion::FinalIK::IKSolverVR::BodyPart::Read(::Array<UnityEngine::Vector3>* positions, ::Array<UnityEngine::Quaternion>* rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::BodyPart::Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.MovePosition
void RootMotion::FinalIK::IKSolverVR::BodyPart::MovePosition(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::BodyPart::MovePosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MovePosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.MoveRotation
void RootMotion::FinalIK::IKSolverVR::BodyPart::MoveRotation(UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::BodyPart::MoveRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.Translate
void RootMotion::FinalIK::IKSolverVR::BodyPart::Translate(UnityEngine::Vector3 position, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::BodyPart::Translate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Translate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position, rotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.TranslateRoot
void RootMotion::FinalIK::IKSolverVR::BodyPart::TranslateRoot(UnityEngine::Vector3 newRootPos, UnityEngine::Quaternion newRootRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::BodyPart::TranslateRoot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TranslateRoot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newRootPos, newRootRot)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newRootPos, newRootRot);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.RotateTo
void RootMotion::FinalIK::IKSolverVR::BodyPart::RotateTo(RootMotion::FinalIK::IKSolverVR::VirtualBone* bone, UnityEngine::Quaternion rotation, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::BodyPart::RotateTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RotateTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bone, rotation, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bone, rotation, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.Visualize
void RootMotion::FinalIK::IKSolverVR::BodyPart::Visualize(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::BodyPart::Visualize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Visualize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.Visualize
void RootMotion::FinalIK::IKSolverVR::BodyPart::Visualize() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::BodyPart::Visualize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Visualize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverVR/Footstep
#include "RootMotion/FinalIK/IKSolverVR_Footstep.hpp"
// Including type: RootMotion.InterpolationMode
#include "RootMotion/InterpolationMode.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Footstep.get_isStepping
bool RootMotion::FinalIK::IKSolverVR::Footstep::get_isStepping() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Footstep::get_isStepping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isStepping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Footstep.get_stepProgress
float RootMotion::FinalIK::IKSolverVR::Footstep::get_stepProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Footstep::get_stepProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_stepProgress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Footstep.set_stepProgress
void RootMotion::FinalIK::IKSolverVR::Footstep::set_stepProgress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Footstep::set_stepProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_stepProgress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Footstep.Reset
void RootMotion::FinalIK::IKSolverVR::Footstep::Reset(UnityEngine::Quaternion rootRotation, UnityEngine::Vector3 footPosition, UnityEngine::Quaternion footRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Footstep::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rootRotation, footPosition, footRotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rootRotation, footPosition, footRotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Footstep.StepTo
void RootMotion::FinalIK::IKSolverVR::Footstep::StepTo(UnityEngine::Vector3 p, UnityEngine::Quaternion rootRotation, float stepThreshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Footstep::StepTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StepTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(p, rootRotation, stepThreshold)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, p, rootRotation, stepThreshold);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Footstep.UpdateStepping
void RootMotion::FinalIK::IKSolverVR::Footstep::UpdateStepping(UnityEngine::Vector3 p, UnityEngine::Quaternion rootRotation, float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Footstep::UpdateStepping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateStepping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(p, rootRotation, speed)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, p, rootRotation, speed);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Footstep.UpdateStanding
void RootMotion::FinalIK::IKSolverVR::Footstep::UpdateStanding(UnityEngine::Quaternion rootRotation, float minAngle, float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Footstep::UpdateStanding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateStanding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rootRotation, minAngle, speed)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rootRotation, minAngle, speed);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Footstep.Update
void RootMotion::FinalIK::IKSolverVR::Footstep::Update(RootMotion::InterpolationMode interpolation, UnityEngine::Events::UnityEvent* onStep) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Footstep::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(interpolation, onStep)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, interpolation, onStep);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverVR/Leg
#include "RootMotion/FinalIK/IKSolverVR_Leg.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/VirtualBone
#include "RootMotion/FinalIK/IKSolverVR_VirtualBone.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.get_position
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Leg::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::get_position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.set_position
void RootMotion::FinalIK::IKSolverVR::Leg::set_position(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::set_position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.get_rotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::Leg::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::get_rotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.set_rotation
void RootMotion::FinalIK::IKSolverVR::Leg::set_rotation(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::set_rotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.get_hasToes
bool RootMotion::FinalIK::IKSolverVR::Leg::get_hasToes() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::get_hasToes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasToes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.set_hasToes
void RootMotion::FinalIK::IKSolverVR::Leg::set_hasToes(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::set_hasToes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_hasToes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.get_thigh
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Leg::get_thigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::get_thigh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_thigh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.get_calf
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Leg::get_calf() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::get_calf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_calf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.get_foot
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Leg::get_foot() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::get_foot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_foot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.get_toes
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Leg::get_toes() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::get_toes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_toes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.get_lastBone
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Leg::get_lastBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::get_lastBone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_lastBone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.get_thighRelativeToPelvis
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Leg::get_thighRelativeToPelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::get_thighRelativeToPelvis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_thighRelativeToPelvis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.set_thighRelativeToPelvis
void RootMotion::FinalIK::IKSolverVR::Leg::set_thighRelativeToPelvis(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::set_thighRelativeToPelvis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_thighRelativeToPelvis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.ApplyPositionOffset
void RootMotion::FinalIK::IKSolverVR::Leg::ApplyPositionOffset(UnityEngine::Vector3 offset, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::ApplyPositionOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyPositionOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(offset, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, offset, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.ApplyRotationOffset
void RootMotion::FinalIK::IKSolverVR::Leg::ApplyRotationOffset(UnityEngine::Quaternion offset, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::ApplyRotationOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyRotationOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(offset, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, offset, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.Solve
void RootMotion::FinalIK::IKSolverVR::Leg::Solve(bool stretch) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::Solve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stretch)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stretch);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.FixTwistRotations
void RootMotion::FinalIK::IKSolverVR::Leg::FixTwistRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::FixTwistRotations");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTwistRotations", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.Stretching
void RootMotion::FinalIK::IKSolverVR::Leg::Stretching() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::Stretching");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Stretching", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.OnRead
void RootMotion::FinalIK::IKSolverVR::Leg::OnRead(::Array<UnityEngine::Vector3>* positions, ::Array<UnityEngine::Quaternion>* rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::OnRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.PreSolve
void RootMotion::FinalIK::IKSolverVR::Leg::PreSolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::PreSolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PreSolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.ApplyOffsets
void RootMotion::FinalIK::IKSolverVR::Leg::ApplyOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::ApplyOffsets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyOffsets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.Write
void RootMotion::FinalIK::IKSolverVR::Leg::Write(::Array<UnityEngine::Vector3>*& solvedPositions, ::Array<UnityEngine::Quaternion>*& solvedRotations) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solvedPositions, solvedRotations)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solvedPositions, solvedRotations);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.ResetOffsets
void RootMotion::FinalIK::IKSolverVR::Leg::ResetOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Leg::ResetOffsets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetOffsets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverVR/Locomotion
#include "RootMotion/FinalIK/IKSolverVR_Locomotion.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Footstep
#include "RootMotion/FinalIK/IKSolverVR_Footstep.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/VirtualBone
#include "RootMotion/FinalIK/IKSolverVR_VirtualBone.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Spine
#include "RootMotion/FinalIK/IKSolverVR_Spine.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Leg
#include "RootMotion/FinalIK/IKSolverVR_Leg.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Arm
#include "RootMotion/FinalIK/IKSolverVR_Arm.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.get_centerOfMass
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Locomotion::get_centerOfMass() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Locomotion::get_centerOfMass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_centerOfMass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.set_centerOfMass
void RootMotion::FinalIK::IKSolverVR::Locomotion::set_centerOfMass(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Locomotion::set_centerOfMass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_centerOfMass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.Initiate
void RootMotion::FinalIK::IKSolverVR::Locomotion::Initiate(::Array<UnityEngine::Vector3>* positions, ::Array<UnityEngine::Quaternion>* rotations, bool hasToes) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Locomotion::Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(positions, rotations, hasToes)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, positions, rotations, hasToes);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.Reset
void RootMotion::FinalIK::IKSolverVR::Locomotion::Reset(::Array<UnityEngine::Vector3>* positions, ::Array<UnityEngine::Quaternion>* rotations) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Locomotion::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(positions, rotations)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, positions, rotations);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.AddDeltaRotation
void RootMotion::FinalIK::IKSolverVR::Locomotion::AddDeltaRotation(UnityEngine::Quaternion delta, UnityEngine::Vector3 pivot) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Locomotion::AddDeltaRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddDeltaRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(delta, pivot)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, delta, pivot);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.AddDeltaPosition
void RootMotion::FinalIK::IKSolverVR::Locomotion::AddDeltaPosition(UnityEngine::Vector3 delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Locomotion::AddDeltaPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddDeltaPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(delta)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, delta);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.Solve
void RootMotion::FinalIK::IKSolverVR::Locomotion::Solve(RootMotion::FinalIK::IKSolverVR::VirtualBone* rootBone, RootMotion::FinalIK::IKSolverVR::Spine* spine, RootMotion::FinalIK::IKSolverVR::Leg* leftLeg, RootMotion::FinalIK::IKSolverVR::Leg* rightLeg, RootMotion::FinalIK::IKSolverVR::Arm* leftArm, RootMotion::FinalIK::IKSolverVR::Arm* rightArm, int supportLegIndex, UnityEngine::Vector3& leftFootPosition, UnityEngine::Vector3& rightFootPosition, UnityEngine::Quaternion& leftFootRotation, UnityEngine::Quaternion& rightFootRotation, float& leftFootOffset, float& rightFootOffset, float& leftHeelOffset, float& rightHeelOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Locomotion::Solve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rootBone, spine, leftLeg, rightLeg, leftArm, rightArm, supportLegIndex, leftFootPosition, rightFootPosition, leftFootRotation, rightFootRotation, leftFootOffset, rightFootOffset, leftHeelOffset, rightHeelOffset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rootBone, spine, leftLeg, rightLeg, leftArm, rightArm, supportLegIndex, leftFootPosition, rightFootPosition, leftFootRotation, rightFootRotation, leftFootOffset, rightFootOffset, leftHeelOffset, rightHeelOffset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.get_leftFootstepPosition
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Locomotion::get_leftFootstepPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Locomotion::get_leftFootstepPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftFootstepPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.get_rightFootstepPosition
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Locomotion::get_rightFootstepPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Locomotion::get_rightFootstepPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightFootstepPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.get_leftFootstepRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::Locomotion::get_leftFootstepRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Locomotion::get_leftFootstepRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftFootstepRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.get_rightFootstepRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::Locomotion::get_rightFootstepRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Locomotion::get_rightFootstepRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightFootstepRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.StepBlocked
bool RootMotion::FinalIK::IKSolverVR::Locomotion::StepBlocked(UnityEngine::Vector3 fromPosition, UnityEngine::Vector3 toPosition, UnityEngine::Vector3 rootPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Locomotion::StepBlocked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StepBlocked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fromPosition, toPosition, rootPosition)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, fromPosition, toPosition, rootPosition);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.CanStep
bool RootMotion::FinalIK::IKSolverVR::Locomotion::CanStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Locomotion::CanStep");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CanStep", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.GetLineSphereCollision
bool RootMotion::FinalIK::IKSolverVR::Locomotion::GetLineSphereCollision(UnityEngine::Vector3 lineStart, UnityEngine::Vector3 lineEnd, UnityEngine::Vector3 sphereCenter, float sphereRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Locomotion::GetLineSphereCollision");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/Locomotion", "GetLineSphereCollision", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lineStart, lineEnd, sphereCenter, sphereRadius)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lineStart, lineEnd, sphereCenter, sphereRadius);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverVR/Spine
#include "RootMotion/FinalIK/IKSolverVR_Spine.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/VirtualBone
#include "RootMotion/FinalIK/IKSolverVR_VirtualBone.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Arm
#include "RootMotion/FinalIK/IKSolverVR_Arm.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Leg
#include "RootMotion/FinalIK/IKSolverVR_Leg.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.get_pelvis
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Spine::get_pelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::get_pelvis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_pelvis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.get_firstSpineBone
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Spine::get_firstSpineBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::get_firstSpineBone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_firstSpineBone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.get_chest
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Spine::get_chest() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::get_chest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_chest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.get_neck
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Spine::get_neck() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::get_neck");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_neck", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.get_head
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Spine::get_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::get_head");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_head", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.get_anchorRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::Spine::get_anchorRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::get_anchorRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_anchorRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.set_anchorRotation
void RootMotion::FinalIK::IKSolverVR::Spine::set_anchorRotation(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::set_anchorRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_anchorRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.get_anchorRelativeToHead
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::Spine::get_anchorRelativeToHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::get_anchorRelativeToHead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_anchorRelativeToHead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.set_anchorRelativeToHead
void RootMotion::FinalIK::IKSolverVR::Spine::set_anchorRelativeToHead(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::set_anchorRelativeToHead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_anchorRelativeToHead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.CalculateChestTargetRotation
void RootMotion::FinalIK::IKSolverVR::Spine::CalculateChestTargetRotation(RootMotion::FinalIK::IKSolverVR::VirtualBone* rootBone, ::Array<RootMotion::FinalIK::IKSolverVR::Arm*>* arms) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::CalculateChestTargetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CalculateChestTargetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rootBone, arms)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rootBone, arms);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.Solve
void RootMotion::FinalIK::IKSolverVR::Spine::Solve(RootMotion::FinalIK::IKSolverVR::VirtualBone* rootBone, ::Array<RootMotion::FinalIK::IKSolverVR::Leg*>* legs, ::Array<RootMotion::FinalIK::IKSolverVR::Arm*>* arms) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::Solve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rootBone, legs, arms)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rootBone, legs, arms);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.FABRIKPass
void RootMotion::FinalIK::IKSolverVR::Spine::FABRIKPass(UnityEngine::Vector3 animatedPelvisPos, UnityEngine::Vector3 rootUp, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::FABRIKPass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FABRIKPass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animatedPelvisPos, rootUp, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animatedPelvisPos, rootUp, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.SolvePelvis
void RootMotion::FinalIK::IKSolverVR::Spine::SolvePelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::SolvePelvis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SolvePelvis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.AdjustChestByHands
void RootMotion::FinalIK::IKSolverVR::Spine::AdjustChestByHands(UnityEngine::Quaternion& chestTargetRotation, ::Array<RootMotion::FinalIK::IKSolverVR::Arm*>* arms) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::AdjustChestByHands");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AdjustChestByHands", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chestTargetRotation, arms)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, chestTargetRotation, arms);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.InverseTranslateToHead
void RootMotion::FinalIK::IKSolverVR::Spine::InverseTranslateToHead(::Array<RootMotion::FinalIK::IKSolverVR::Leg*>* legs, bool limited, bool useCurrentLegMag, UnityEngine::Vector3 offset, float w) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::InverseTranslateToHead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InverseTranslateToHead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(legs, limited, useCurrentLegMag, offset, w)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, legs, limited, useCurrentLegMag, offset, w);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.TranslatePelvis
void RootMotion::FinalIK::IKSolverVR::Spine::TranslatePelvis(::Array<RootMotion::FinalIK::IKSolverVR::Leg*>* legs, UnityEngine::Vector3 deltaPosition, UnityEngine::Quaternion deltaRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::TranslatePelvis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TranslatePelvis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(legs, deltaPosition, deltaRotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, legs, deltaPosition, deltaRotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.LimitPelvisPosition
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Spine::LimitPelvisPosition(::Array<RootMotion::FinalIK::IKSolverVR::Leg*>* legs, UnityEngine::Vector3 pelvisPosition, bool useCurrentLegMag, int it) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::LimitPelvisPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LimitPelvisPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(legs, pelvisPosition, useCurrentLegMag, it)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, legs, pelvisPosition, useCurrentLegMag, it);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.Bend
void RootMotion::FinalIK::IKSolverVR::Spine::Bend(::Array<RootMotion::FinalIK::IKSolverVR::VirtualBone*>* bones, int firstIndex, int lastIndex, UnityEngine::Quaternion targetRotation, float clampWeight, bool uniformWeight, float w) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::Bend");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Bend", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bones, firstIndex, lastIndex, targetRotation, clampWeight, uniformWeight, w)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bones, firstIndex, lastIndex, targetRotation, clampWeight, uniformWeight, w);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.Bend
void RootMotion::FinalIK::IKSolverVR::Spine::Bend(::Array<RootMotion::FinalIK::IKSolverVR::VirtualBone*>* bones, int firstIndex, int lastIndex, UnityEngine::Quaternion targetRotation, UnityEngine::Quaternion rotationOffset, float clampWeight, bool uniformWeight, float w) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::Bend");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Bend", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bones, firstIndex, lastIndex, targetRotation, rotationOffset, clampWeight, uniformWeight, w)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bones, firstIndex, lastIndex, targetRotation, rotationOffset, clampWeight, uniformWeight, w);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.OnRead
void RootMotion::FinalIK::IKSolverVR::Spine::OnRead(::Array<UnityEngine::Vector3>* positions, ::Array<UnityEngine::Quaternion>* rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::OnRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.PreSolve
void RootMotion::FinalIK::IKSolverVR::Spine::PreSolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::PreSolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PreSolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.ApplyOffsets
void RootMotion::FinalIK::IKSolverVR::Spine::ApplyOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::ApplyOffsets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyOffsets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.Write
void RootMotion::FinalIK::IKSolverVR::Spine::Write(::Array<UnityEngine::Vector3>*& solvedPositions, ::Array<UnityEngine::Quaternion>*& solvedRotations) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solvedPositions, solvedRotations)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solvedPositions, solvedRotations);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.ResetOffsets
void RootMotion::FinalIK::IKSolverVR::Spine::ResetOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::Spine::ResetOffsets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetOffsets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverVR/PositionOffset
#include "RootMotion/FinalIK/IKSolverVR_PositionOffset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/PositionOffset Pelvis
RootMotion::FinalIK::IKSolverVR::PositionOffset RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_Pelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_Pelvis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKSolverVR::PositionOffset>("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "Pelvis"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/PositionOffset Pelvis
void RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_Pelvis(RootMotion::FinalIK::IKSolverVR::PositionOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_Pelvis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "Pelvis", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/PositionOffset Chest
RootMotion::FinalIK::IKSolverVR::PositionOffset RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_Chest() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_Chest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKSolverVR::PositionOffset>("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "Chest"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/PositionOffset Chest
void RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_Chest(RootMotion::FinalIK::IKSolverVR::PositionOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_Chest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "Chest", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/PositionOffset Head
RootMotion::FinalIK::IKSolverVR::PositionOffset RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKSolverVR::PositionOffset>("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "Head"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/PositionOffset Head
void RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_Head(RootMotion::FinalIK::IKSolverVR::PositionOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/PositionOffset LeftHand
RootMotion::FinalIK::IKSolverVR::PositionOffset RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKSolverVR::PositionOffset>("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/PositionOffset LeftHand
void RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_LeftHand(RootMotion::FinalIK::IKSolverVR::PositionOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/PositionOffset RightHand
RootMotion::FinalIK::IKSolverVR::PositionOffset RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKSolverVR::PositionOffset>("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/PositionOffset RightHand
void RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_RightHand(RootMotion::FinalIK::IKSolverVR::PositionOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "RightHand", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/PositionOffset LeftFoot
RootMotion::FinalIK::IKSolverVR::PositionOffset RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_LeftFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_LeftFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKSolverVR::PositionOffset>("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "LeftFoot"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/PositionOffset LeftFoot
void RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_LeftFoot(RootMotion::FinalIK::IKSolverVR::PositionOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_LeftFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "LeftFoot", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/PositionOffset RightFoot
RootMotion::FinalIK::IKSolverVR::PositionOffset RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_RightFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_RightFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKSolverVR::PositionOffset>("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "RightFoot"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/PositionOffset RightFoot
void RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_RightFoot(RootMotion::FinalIK::IKSolverVR::PositionOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_RightFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "RightFoot", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/PositionOffset LeftHeel
RootMotion::FinalIK::IKSolverVR::PositionOffset RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_LeftHeel() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_LeftHeel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKSolverVR::PositionOffset>("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "LeftHeel"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/PositionOffset LeftHeel
void RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_LeftHeel(RootMotion::FinalIK::IKSolverVR::PositionOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_LeftHeel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "LeftHeel", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/PositionOffset RightHeel
RootMotion::FinalIK::IKSolverVR::PositionOffset RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_RightHeel() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_RightHeel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKSolverVR::PositionOffset>("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "RightHeel"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/PositionOffset RightHeel
void RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_RightHeel(RootMotion::FinalIK::IKSolverVR::PositionOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_RightHeel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "RightHeel", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverVR/RotationOffset
#include "RootMotion/FinalIK/IKSolverVR_RotationOffset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/RotationOffset Pelvis
RootMotion::FinalIK::IKSolverVR::RotationOffset RootMotion::FinalIK::IKSolverVR::RotationOffset::_get_Pelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::RotationOffset::_get_Pelvis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKSolverVR::RotationOffset>("RootMotion.FinalIK", "IKSolverVR/RotationOffset", "Pelvis"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/RotationOffset Pelvis
void RootMotion::FinalIK::IKSolverVR::RotationOffset::_set_Pelvis(RootMotion::FinalIK::IKSolverVR::RotationOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::RotationOffset::_set_Pelvis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/RotationOffset", "Pelvis", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/RotationOffset Chest
RootMotion::FinalIK::IKSolverVR::RotationOffset RootMotion::FinalIK::IKSolverVR::RotationOffset::_get_Chest() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::RotationOffset::_get_Chest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKSolverVR::RotationOffset>("RootMotion.FinalIK", "IKSolverVR/RotationOffset", "Chest"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/RotationOffset Chest
void RootMotion::FinalIK::IKSolverVR::RotationOffset::_set_Chest(RootMotion::FinalIK::IKSolverVR::RotationOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::RotationOffset::_set_Chest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/RotationOffset", "Chest", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/RotationOffset Head
RootMotion::FinalIK::IKSolverVR::RotationOffset RootMotion::FinalIK::IKSolverVR::RotationOffset::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::RotationOffset::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::IKSolverVR::RotationOffset>("RootMotion.FinalIK", "IKSolverVR/RotationOffset", "Head"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/RotationOffset Head
void RootMotion::FinalIK::IKSolverVR::RotationOffset::_set_Head(RootMotion::FinalIK::IKSolverVR::RotationOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::RotationOffset::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/RotationOffset", "Head", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverVR/VirtualBone
#include "RootMotion/FinalIK/IKSolverVR_VirtualBone.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/VirtualBone.Read
void RootMotion::FinalIK::IKSolverVR::VirtualBone::Read(UnityEngine::Vector3 position, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::VirtualBone::Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position, rotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/VirtualBone.SwingRotation
void RootMotion::FinalIK::IKSolverVR::VirtualBone::SwingRotation(::Array<RootMotion::FinalIK::IKSolverVR::VirtualBone*>* bones, int index, UnityEngine::Vector3 swingTarget, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::VirtualBone::SwingRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "SwingRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bones, index, swingTarget, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bones, index, swingTarget, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/VirtualBone.PreSolve
float RootMotion::FinalIK::IKSolverVR::VirtualBone::PreSolve(::Array<RootMotion::FinalIK::IKSolverVR::VirtualBone*>*& bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::VirtualBone::PreSolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "PreSolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bones)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bones);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/VirtualBone.RotateAroundPoint
void RootMotion::FinalIK::IKSolverVR::VirtualBone::RotateAroundPoint(::Array<RootMotion::FinalIK::IKSolverVR::VirtualBone*>* bones, int index, UnityEngine::Vector3 point, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::VirtualBone::RotateAroundPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "RotateAroundPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bones, index, point, rotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bones, index, point, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/VirtualBone.RotateBy
void RootMotion::FinalIK::IKSolverVR::VirtualBone::RotateBy(::Array<RootMotion::FinalIK::IKSolverVR::VirtualBone*>* bones, int index, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::VirtualBone::RotateBy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "RotateBy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bones, index, rotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bones, index, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/VirtualBone.RotateBy
void RootMotion::FinalIK::IKSolverVR::VirtualBone::RotateBy(::Array<RootMotion::FinalIK::IKSolverVR::VirtualBone*>* bones, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::VirtualBone::RotateBy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "RotateBy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bones, rotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bones, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/VirtualBone.RotateTo
void RootMotion::FinalIK::IKSolverVR::VirtualBone::RotateTo(::Array<RootMotion::FinalIK::IKSolverVR::VirtualBone*>* bones, int index, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::VirtualBone::RotateTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "RotateTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bones, index, rotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bones, index, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/VirtualBone.SolveTrigonometric
void RootMotion::FinalIK::IKSolverVR::VirtualBone::SolveTrigonometric(::Array<RootMotion::FinalIK::IKSolverVR::VirtualBone*>* bones, int first, int second, int third, UnityEngine::Vector3 targetPosition, UnityEngine::Vector3 bendNormal, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::VirtualBone::SolveTrigonometric");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "SolveTrigonometric", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bones, first, second, third, targetPosition, bendNormal, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bones, first, second, third, targetPosition, bendNormal, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/VirtualBone.GetDirectionToBendPoint
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::VirtualBone::GetDirectionToBendPoint(UnityEngine::Vector3 direction, float directionMag, UnityEngine::Vector3 bendDirection, float sqrMag1, float sqrMag2) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::VirtualBone::GetDirectionToBendPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "GetDirectionToBendPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(direction, directionMag, bendDirection, sqrMag1, sqrMag2)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, direction, directionMag, bendDirection, sqrMag1, sqrMag2);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/VirtualBone.SolveFABRIK
void RootMotion::FinalIK::IKSolverVR::VirtualBone::SolveFABRIK(::Array<RootMotion::FinalIK::IKSolverVR::VirtualBone*>* bones, UnityEngine::Vector3 startPosition, UnityEngine::Vector3 targetPosition, float weight, float minNormalizedTargetDistance, int iterations, float length, UnityEngine::Vector3 startOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::VirtualBone::SolveFABRIK");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "SolveFABRIK", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bones, startPosition, targetPosition, weight, minNormalizedTargetDistance, iterations, length, startOffset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bones, startPosition, targetPosition, weight, minNormalizedTargetDistance, iterations, length, startOffset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/VirtualBone.SolveFABRIKJoint
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::VirtualBone::SolveFABRIKJoint(UnityEngine::Vector3 pos1, UnityEngine::Vector3 pos2, float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::VirtualBone::SolveFABRIKJoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "SolveFABRIKJoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pos1, pos2, length)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pos1, pos2, length);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/VirtualBone.SolveCCD
void RootMotion::FinalIK::IKSolverVR::VirtualBone::SolveCCD(::Array<RootMotion::FinalIK::IKSolverVR::VirtualBone*>* bones, UnityEngine::Vector3 targetPosition, float weight, int iterations) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::IKSolverVR::VirtualBone::SolveCCD");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "SolveCCD", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bones, targetPosition, weight, iterations)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bones, targetPosition, weight, iterations);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.TwistRelaxer
#include "RootMotion/FinalIK/TwistRelaxer.hpp"
// Including type: RootMotion.FinalIK.IK
#include "RootMotion/FinalIK/IK.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.TwistRelaxer.Relax
void RootMotion::FinalIK::TwistRelaxer::Relax() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::TwistRelaxer::Relax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Relax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.TwistRelaxer.Start
void RootMotion::FinalIK::TwistRelaxer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::TwistRelaxer::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.TwistRelaxer.OnPostUpdate
void RootMotion::FinalIK::TwistRelaxer::OnPostUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::TwistRelaxer::OnPostUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPostUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.TwistRelaxer.LateUpdate
void RootMotion::FinalIK::TwistRelaxer::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::TwistRelaxer::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.TwistRelaxer.OnDestroy
void RootMotion::FinalIK::TwistRelaxer::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::TwistRelaxer::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.InteractionEffector
#include "RootMotion/FinalIK/InteractionEffector.hpp"
// Including type: RootMotion.FinalIK.InteractionObject
#include "RootMotion/FinalIK/InteractionObject.hpp"
// Including type: RootMotion.FinalIK.Poser
#include "RootMotion/FinalIK/Poser.hpp"
// Including type: RootMotion.FinalIK.IKEffector
#include "RootMotion/FinalIK/IKEffector.hpp"
// Including type: RootMotion.FinalIK.InteractionTarget
#include "RootMotion/FinalIK/InteractionTarget.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: RootMotion.FinalIK.InteractionSystem
#include "RootMotion/FinalIK/InteractionSystem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.get_effectorType
RootMotion::FinalIK::FullBodyBipedEffector RootMotion::FinalIK::InteractionEffector::get_effectorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionEffector::get_effectorType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_effectorType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::FullBodyBipedEffector, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.set_effectorType
void RootMotion::FinalIK::InteractionEffector::set_effectorType(RootMotion::FinalIK::FullBodyBipedEffector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionEffector::set_effectorType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_effectorType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.get_isPaused
bool RootMotion::FinalIK::InteractionEffector::get_isPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionEffector::get_isPaused");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isPaused", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.set_isPaused
void RootMotion::FinalIK::InteractionEffector::set_isPaused(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionEffector::set_isPaused");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isPaused", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.get_interactionObject
RootMotion::FinalIK::InteractionObject* RootMotion::FinalIK::InteractionEffector::get_interactionObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionEffector::get_interactionObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_interactionObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::InteractionObject*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.set_interactionObject
void RootMotion::FinalIK::InteractionEffector::set_interactionObject(RootMotion::FinalIK::InteractionObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionEffector::set_interactionObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_interactionObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.get_inInteraction
bool RootMotion::FinalIK::InteractionEffector::get_inInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionEffector::get_inInteraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_inInteraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.Initiate
void RootMotion::FinalIK::InteractionEffector::Initiate(RootMotion::FinalIK::InteractionSystem* interactionSystem) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionEffector::Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(interactionSystem)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, interactionSystem);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.StoreDefaults
void RootMotion::FinalIK::InteractionEffector::StoreDefaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionEffector::StoreDefaults");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaults", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.ResetToDefaults
bool RootMotion::FinalIK::InteractionEffector::ResetToDefaults(float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionEffector::ResetToDefaults");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetToDefaults", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(speed)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, speed);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.Pause
bool RootMotion::FinalIK::InteractionEffector::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionEffector::Pause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.Resume
bool RootMotion::FinalIK::InteractionEffector::Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionEffector::Resume");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Resume", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.Start
bool RootMotion::FinalIK::InteractionEffector::Start(RootMotion::FinalIK::InteractionObject* interactionObject, ::Il2CppString* tag, float fadeInTime, bool interrupt) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionEffector::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(interactionObject, tag, fadeInTime, interrupt)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, interactionObject, tag, fadeInTime, interrupt);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.Update
void RootMotion::FinalIK::InteractionEffector::Update(UnityEngine::Transform* root, float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionEffector::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(root, speed)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, root, speed);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.get_progress
float RootMotion::FinalIK::InteractionEffector::get_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionEffector::get_progress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_progress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.TriggerUntriggeredEvents
void RootMotion::FinalIK::InteractionEffector::TriggerUntriggeredEvents(bool checkTime, bool& pickUp, bool& pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionEffector::TriggerUntriggeredEvents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TriggerUntriggeredEvents", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(checkTime, pickUp, pause)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, checkTime, pickUp, pause);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.PickUp
void RootMotion::FinalIK::InteractionEffector::PickUp(UnityEngine::Transform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionEffector::PickUp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PickUp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(root)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, root);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.Stop
bool RootMotion::FinalIK::InteractionEffector::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionEffector::Stop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.OnPostFBBIK
void RootMotion::FinalIK::InteractionEffector::OnPostFBBIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionEffector::OnPostFBBIK");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPostFBBIK", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.InteractionLookAt
#include "RootMotion/FinalIK/InteractionLookAt.hpp"
// Including type: RootMotion.FinalIK.LookAtIK
#include "RootMotion/FinalIK/LookAtIK.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.InteractionLookAt.Look
void RootMotion::FinalIK::InteractionLookAt::Look(UnityEngine::Transform* target, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionLookAt::Look");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Look", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(target, time)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, target, time);
}
// Autogenerated method: RootMotion.FinalIK.InteractionLookAt.OnFixTransforms
void RootMotion::FinalIK::InteractionLookAt::OnFixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionLookAt::OnFixTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnFixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionLookAt.Update
void RootMotion::FinalIK::InteractionLookAt::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionLookAt::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionLookAt.SolveSpine
void RootMotion::FinalIK::InteractionLookAt::SolveSpine() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionLookAt::SolveSpine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SolveSpine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionLookAt.SolveHead
void RootMotion::FinalIK::InteractionLookAt::SolveHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionLookAt::SolveHead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SolveHead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.InteractionObject
#include "RootMotion/FinalIK/InteractionObject.hpp"
// Including type: RootMotion.FinalIK.InteractionObject/InteractionEvent
#include "RootMotion/FinalIK/InteractionObject_InteractionEvent.hpp"
// Including type: RootMotion.FinalIK.InteractionObject/Message
#include "RootMotion/FinalIK/InteractionObject_Message.hpp"
// Including type: RootMotion.FinalIK.InteractionObject/AnimatorEvent
#include "RootMotion/FinalIK/InteractionObject_AnimatorEvent.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBodyBiped
#include "RootMotion/FinalIK/IKSolverFullBodyBiped.hpp"
// Including type: RootMotion.FinalIK.InteractionObject/Multiplier
#include "RootMotion/FinalIK/InteractionObject_Multiplier.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.InteractionSystem
#include "RootMotion/FinalIK/InteractionSystem.hpp"
// Including type: RootMotion.FinalIK.InteractionTarget
#include "RootMotion/FinalIK/InteractionTarget.hpp"
// Including type: RootMotion.FinalIK.FullBodyBipedEffector
#include "RootMotion/FinalIK/FullBodyBipedEffector.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.InteractionObject.OpenUserManual
void RootMotion::FinalIK::InteractionObject::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::OpenUserManual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.OpenScriptReference
void RootMotion::FinalIK::InteractionObject::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::OpenScriptReference");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.OpenTutorial1
void RootMotion::FinalIK::InteractionObject::OpenTutorial1() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::OpenTutorial1");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenTutorial1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.OpenTutorial2
void RootMotion::FinalIK::InteractionObject::OpenTutorial2() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::OpenTutorial2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenTutorial2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.OpenTutorial3
void RootMotion::FinalIK::InteractionObject::OpenTutorial3() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::OpenTutorial3");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenTutorial3", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.OpenTutorial4
void RootMotion::FinalIK::InteractionObject::OpenTutorial4() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::OpenTutorial4");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenTutorial4", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.SupportGroup
void RootMotion::FinalIK::InteractionObject::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.ASThread
void RootMotion::FinalIK::InteractionObject::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::ASThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.get_length
float RootMotion::FinalIK::InteractionObject::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::get_length");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.set_length
void RootMotion::FinalIK::InteractionObject::set_length(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::set_length");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_length", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.get_lastUsedInteractionSystem
RootMotion::FinalIK::InteractionSystem* RootMotion::FinalIK::InteractionObject::get_lastUsedInteractionSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::get_lastUsedInteractionSystem");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_lastUsedInteractionSystem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::InteractionSystem*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.set_lastUsedInteractionSystem
void RootMotion::FinalIK::InteractionObject::set_lastUsedInteractionSystem(RootMotion::FinalIK::InteractionSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::set_lastUsedInteractionSystem");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_lastUsedInteractionSystem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.Initiate
void RootMotion::FinalIK::InteractionObject::Initiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.get_lookAtTarget
UnityEngine::Transform* RootMotion::FinalIK::InteractionObject::get_lookAtTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::get_lookAtTarget");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_lookAtTarget", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.GetTarget
RootMotion::FinalIK::InteractionTarget* RootMotion::FinalIK::InteractionObject::GetTarget(RootMotion::FinalIK::FullBodyBipedEffector effectorType, RootMotion::FinalIK::InteractionSystem* interactionSystem) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::GetTarget");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTarget", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effectorType, interactionSystem)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::InteractionTarget*, false>(this, ___internal__method, effectorType, interactionSystem);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.CurveUsed
bool RootMotion::FinalIK::InteractionObject::CurveUsed(RootMotion::FinalIK::InteractionObject::WeightCurve::Type type) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::CurveUsed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CurveUsed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.GetTargets
::Array<RootMotion::FinalIK::InteractionTarget*>* RootMotion::FinalIK::InteractionObject::GetTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::GetTargets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTargets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<RootMotion::FinalIK::InteractionTarget*>*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.GetTarget
UnityEngine::Transform* RootMotion::FinalIK::InteractionObject::GetTarget(RootMotion::FinalIK::FullBodyBipedEffector effectorType, ::Il2CppString* tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::GetTarget");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTarget", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effectorType, tag)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method, effectorType, tag);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.OnStartInteraction
void RootMotion::FinalIK::InteractionObject::OnStartInteraction(RootMotion::FinalIK::InteractionSystem* interactionSystem) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::OnStartInteraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStartInteraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(interactionSystem)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, interactionSystem);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.Apply
void RootMotion::FinalIK::InteractionObject::Apply(RootMotion::FinalIK::IKSolverFullBodyBiped* solver, RootMotion::FinalIK::FullBodyBipedEffector effector, RootMotion::FinalIK::InteractionTarget* target, float timer, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::Apply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, effector, target, timer, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, effector, target, timer, weight);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.GetValue
float RootMotion::FinalIK::InteractionObject::GetValue(RootMotion::FinalIK::InteractionObject::WeightCurve::Type weightCurveType, RootMotion::FinalIK::InteractionTarget* target, float timer) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(weightCurveType, target, timer)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, weightCurveType, target, timer);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.get_targetsRoot
UnityEngine::Transform* RootMotion::FinalIK::InteractionObject::get_targetsRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::get_targetsRoot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_targetsRoot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.Start
void RootMotion::FinalIK::InteractionObject::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.Apply
void RootMotion::FinalIK::InteractionObject::Apply(RootMotion::FinalIK::IKSolverFullBodyBiped* solver, RootMotion::FinalIK::FullBodyBipedEffector effector, RootMotion::FinalIK::InteractionObject::WeightCurve::Type type, float value, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::Apply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, effector, type, value, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, effector, type, value, weight);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.GetTarget
UnityEngine::Transform* RootMotion::FinalIK::InteractionObject::GetTarget(RootMotion::FinalIK::FullBodyBipedEffector effectorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::GetTarget");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTarget", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effectorType)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method, effectorType);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.GetWeightCurveIndex
int RootMotion::FinalIK::InteractionObject::GetWeightCurveIndex(RootMotion::FinalIK::InteractionObject::WeightCurve::Type weightCurveType) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::GetWeightCurveIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetWeightCurveIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(weightCurveType)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, weightCurveType);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject.GetMultiplierIndex
int RootMotion::FinalIK::InteractionObject::GetMultiplierIndex(RootMotion::FinalIK::InteractionObject::WeightCurve::Type weightCurveType) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::GetMultiplierIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMultiplierIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(weightCurveType)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, weightCurveType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.InteractionObject/InteractionEvent
#include "RootMotion/FinalIK/InteractionObject_InteractionEvent.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.InteractionObject/AnimatorEvent
#include "RootMotion/FinalIK/InteractionObject_AnimatorEvent.hpp"
// Including type: RootMotion.FinalIK.InteractionObject/Message
#include "RootMotion/FinalIK/InteractionObject_Message.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.InteractionObject/InteractionEvent.Activate
void RootMotion::FinalIK::InteractionObject::InteractionEvent::Activate(UnityEngine::Transform* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::InteractionEvent::Activate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.InteractionObject/Message
#include "RootMotion/FinalIK/InteractionObject_Message.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String empty
::Il2CppString* RootMotion::FinalIK::InteractionObject::Message::_get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::Message::_get_empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("RootMotion.FinalIK", "InteractionObject/Message", "empty"));
}
// Autogenerated static field setter
// Set static field: static private System.String empty
void RootMotion::FinalIK::InteractionObject::Message::_set_empty(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::Message::_set_empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "InteractionObject/Message", "empty", value));
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject/Message.Send
void RootMotion::FinalIK::InteractionObject::Message::Send(UnityEngine::Transform* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::Message::Send");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.InteractionObject/AnimatorEvent
#include "RootMotion/FinalIK/InteractionObject_AnimatorEvent.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Animation
#include "UnityEngine/Animation.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String empty
::Il2CppString* RootMotion::FinalIK::InteractionObject::AnimatorEvent::_get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::AnimatorEvent::_get_empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("RootMotion.FinalIK", "InteractionObject/AnimatorEvent", "empty"));
}
// Autogenerated static field setter
// Set static field: static private System.String empty
void RootMotion::FinalIK::InteractionObject::AnimatorEvent::_set_empty(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::AnimatorEvent::_set_empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "InteractionObject/AnimatorEvent", "empty", value));
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject/AnimatorEvent.Activate
void RootMotion::FinalIK::InteractionObject::AnimatorEvent::Activate(bool pickUp) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::AnimatorEvent::Activate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pickUp)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pickUp);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject/AnimatorEvent.Activate
void RootMotion::FinalIK::InteractionObject::AnimatorEvent::Activate(UnityEngine::Animator* animator) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::AnimatorEvent::Activate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animator)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator);
}
// Autogenerated method: RootMotion.FinalIK.InteractionObject/AnimatorEvent.Activate
void RootMotion::FinalIK::InteractionObject::AnimatorEvent::Activate(UnityEngine::Animation* animation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::AnimatorEvent::Activate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.InteractionObject/WeightCurve
#include "RootMotion/FinalIK/InteractionObject.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.InteractionObject/WeightCurve.GetValue
float RootMotion::FinalIK::InteractionObject::WeightCurve::GetValue(float timer) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timer)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, timer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.InteractionObject/WeightCurve/Type
#include "RootMotion/FinalIK/InteractionObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type PositionWeight
RootMotion::FinalIK::InteractionObject::WeightCurve::Type RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_PositionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_PositionWeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::InteractionObject::WeightCurve::Type>("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "PositionWeight"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type PositionWeight
void RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_PositionWeight(RootMotion::FinalIK::InteractionObject::WeightCurve::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_PositionWeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "PositionWeight", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type RotationWeight
RootMotion::FinalIK::InteractionObject::WeightCurve::Type RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_RotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_RotationWeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::InteractionObject::WeightCurve::Type>("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "RotationWeight"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type RotationWeight
void RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_RotationWeight(RootMotion::FinalIK::InteractionObject::WeightCurve::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_RotationWeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "RotationWeight", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type PositionOffsetX
RootMotion::FinalIK::InteractionObject::WeightCurve::Type RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_PositionOffsetX() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_PositionOffsetX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::InteractionObject::WeightCurve::Type>("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "PositionOffsetX"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type PositionOffsetX
void RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_PositionOffsetX(RootMotion::FinalIK::InteractionObject::WeightCurve::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_PositionOffsetX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "PositionOffsetX", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type PositionOffsetY
RootMotion::FinalIK::InteractionObject::WeightCurve::Type RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_PositionOffsetY() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_PositionOffsetY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::InteractionObject::WeightCurve::Type>("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "PositionOffsetY"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type PositionOffsetY
void RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_PositionOffsetY(RootMotion::FinalIK::InteractionObject::WeightCurve::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_PositionOffsetY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "PositionOffsetY", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type PositionOffsetZ
RootMotion::FinalIK::InteractionObject::WeightCurve::Type RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_PositionOffsetZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_PositionOffsetZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::InteractionObject::WeightCurve::Type>("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "PositionOffsetZ"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type PositionOffsetZ
void RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_PositionOffsetZ(RootMotion::FinalIK::InteractionObject::WeightCurve::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_PositionOffsetZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "PositionOffsetZ", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type Pull
RootMotion::FinalIK::InteractionObject::WeightCurve::Type RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_Pull() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_Pull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::InteractionObject::WeightCurve::Type>("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "Pull"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type Pull
void RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_Pull(RootMotion::FinalIK::InteractionObject::WeightCurve::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_Pull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "Pull", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type Reach
RootMotion::FinalIK::InteractionObject::WeightCurve::Type RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_Reach() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_Reach");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::InteractionObject::WeightCurve::Type>("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "Reach"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type Reach
void RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_Reach(RootMotion::FinalIK::InteractionObject::WeightCurve::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_Reach");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "Reach", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type RotateBoneWeight
RootMotion::FinalIK::InteractionObject::WeightCurve::Type RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_RotateBoneWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_RotateBoneWeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::InteractionObject::WeightCurve::Type>("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "RotateBoneWeight"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type RotateBoneWeight
void RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_RotateBoneWeight(RootMotion::FinalIK::InteractionObject::WeightCurve::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_RotateBoneWeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "RotateBoneWeight", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type Push
RootMotion::FinalIK::InteractionObject::WeightCurve::Type RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_Push() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_Push");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::InteractionObject::WeightCurve::Type>("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "Push"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type Push
void RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_Push(RootMotion::FinalIK::InteractionObject::WeightCurve::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_Push");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "Push", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type PushParent
RootMotion::FinalIK::InteractionObject::WeightCurve::Type RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_PushParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_PushParent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::InteractionObject::WeightCurve::Type>("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "PushParent"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type PushParent
void RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_PushParent(RootMotion::FinalIK::InteractionObject::WeightCurve::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_PushParent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "PushParent", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type PoserWeight
RootMotion::FinalIK::InteractionObject::WeightCurve::Type RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_PoserWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_PoserWeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::InteractionObject::WeightCurve::Type>("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "PoserWeight"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type PoserWeight
void RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_PoserWeight(RootMotion::FinalIK::InteractionObject::WeightCurve::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_PoserWeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "PoserWeight", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type BendGoalWeight
RootMotion::FinalIK::InteractionObject::WeightCurve::Type RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_BendGoalWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_get_BendGoalWeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::InteractionObject::WeightCurve::Type>("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "BendGoalWeight"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.InteractionObject/WeightCurve/Type BendGoalWeight
void RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_BendGoalWeight(RootMotion::FinalIK::InteractionObject::WeightCurve::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::WeightCurve::Type::_set_BendGoalWeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type", "BendGoalWeight", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.InteractionObject/Multiplier
#include "RootMotion/FinalIK/InteractionObject_Multiplier.hpp"
// Including type: RootMotion.FinalIK.InteractionObject/WeightCurve
#include "RootMotion/FinalIK/InteractionObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.InteractionObject/Multiplier.GetValue
float RootMotion::FinalIK::InteractionObject::Multiplier::GetValue(RootMotion::FinalIK::InteractionObject::WeightCurve* weightCurve, float timer) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionObject::Multiplier::GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(weightCurve, timer)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, weightCurve, timer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.InteractionSystem
#include "RootMotion/FinalIK/InteractionSystem.hpp"
// Including type: RootMotion.FinalIK.InteractionSystem/InteractionDelegate
#include "RootMotion/FinalIK/InteractionSystem_InteractionDelegate.hpp"
// Including type: RootMotion.FinalIK.InteractionSystem/InteractionEventDelegate
#include "RootMotion/FinalIK/InteractionSystem_InteractionEventDelegate.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: RootMotion.FinalIK.InteractionTrigger/Range
#include "RootMotion/FinalIK/InteractionTrigger_Range.hpp"
// Including type: RootMotion.FinalIK.FullBodyBipedIK
#include "RootMotion/FinalIK/FullBodyBipedIK.hpp"
// Including type: RootMotion.FinalIK.InteractionLookAt
#include "RootMotion/FinalIK/InteractionLookAt.hpp"
// Including type: RootMotion.FinalIK.InteractionEffector
#include "RootMotion/FinalIK/InteractionEffector.hpp"
// Including type: RootMotion.FinalIK.FullBodyBipedEffector
#include "RootMotion/FinalIK/FullBodyBipedEffector.hpp"
// Including type: RootMotion.FinalIK.InteractionObject
#include "RootMotion/FinalIK/InteractionObject.hpp"
// Including type: RootMotion.FinalIK.InteractionTarget
#include "RootMotion/FinalIK/InteractionTarget.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.OpenUserManual
void RootMotion::FinalIK::InteractionSystem::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::OpenUserManual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.OpenScriptReference
void RootMotion::FinalIK::InteractionSystem::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::OpenScriptReference");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.OpenTutorial1
void RootMotion::FinalIK::InteractionSystem::OpenTutorial1() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::OpenTutorial1");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenTutorial1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.OpenTutorial2
void RootMotion::FinalIK::InteractionSystem::OpenTutorial2() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::OpenTutorial2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenTutorial2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.OpenTutorial3
void RootMotion::FinalIK::InteractionSystem::OpenTutorial3() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::OpenTutorial3");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenTutorial3", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.OpenTutorial4
void RootMotion::FinalIK::InteractionSystem::OpenTutorial4() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::OpenTutorial4");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenTutorial4", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.SupportGroup
void RootMotion::FinalIK::InteractionSystem::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.ASThread
void RootMotion::FinalIK::InteractionSystem::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::ASThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.get_inInteraction
bool RootMotion::FinalIK::InteractionSystem::get_inInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::get_inInteraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_inInteraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.IsInInteraction
bool RootMotion::FinalIK::InteractionSystem::IsInInteraction(RootMotion::FinalIK::FullBodyBipedEffector effectorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::IsInInteraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsInInteraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effectorType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, effectorType);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.IsPaused
bool RootMotion::FinalIK::InteractionSystem::IsPaused(RootMotion::FinalIK::FullBodyBipedEffector effectorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::IsPaused");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsPaused", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effectorType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, effectorType);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.IsPaused
bool RootMotion::FinalIK::InteractionSystem::IsPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::IsPaused");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsPaused", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.IsInSync
bool RootMotion::FinalIK::InteractionSystem::IsInSync() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::IsInSync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsInSync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.StartInteraction
bool RootMotion::FinalIK::InteractionSystem::StartInteraction(RootMotion::FinalIK::FullBodyBipedEffector effectorType, RootMotion::FinalIK::InteractionObject* interactionObject, bool interrupt) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::StartInteraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartInteraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effectorType, interactionObject, interrupt)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, effectorType, interactionObject, interrupt);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.PauseInteraction
bool RootMotion::FinalIK::InteractionSystem::PauseInteraction(RootMotion::FinalIK::FullBodyBipedEffector effectorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::PauseInteraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PauseInteraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effectorType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, effectorType);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.ResumeInteraction
bool RootMotion::FinalIK::InteractionSystem::ResumeInteraction(RootMotion::FinalIK::FullBodyBipedEffector effectorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::ResumeInteraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResumeInteraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effectorType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, effectorType);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.StopInteraction
bool RootMotion::FinalIK::InteractionSystem::StopInteraction(RootMotion::FinalIK::FullBodyBipedEffector effectorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::StopInteraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StopInteraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effectorType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, effectorType);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.PauseAll
void RootMotion::FinalIK::InteractionSystem::PauseAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::PauseAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PauseAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.ResumeAll
void RootMotion::FinalIK::InteractionSystem::ResumeAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::ResumeAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResumeAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.StopAll
void RootMotion::FinalIK::InteractionSystem::StopAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::StopAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StopAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.GetInteractionObject
RootMotion::FinalIK::InteractionObject* RootMotion::FinalIK::InteractionSystem::GetInteractionObject(RootMotion::FinalIK::FullBodyBipedEffector effectorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::GetInteractionObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInteractionObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effectorType)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::InteractionObject*, false>(this, ___internal__method, effectorType);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.GetProgress
float RootMotion::FinalIK::InteractionSystem::GetProgress(RootMotion::FinalIK::FullBodyBipedEffector effectorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::GetProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProgress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effectorType)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, effectorType);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.GetMinActiveProgress
float RootMotion::FinalIK::InteractionSystem::GetMinActiveProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::GetMinActiveProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMinActiveProgress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.TriggerInteraction
bool RootMotion::FinalIK::InteractionSystem::TriggerInteraction(int index, bool interrupt) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::TriggerInteraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TriggerInteraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, interrupt)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, index, interrupt);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.TriggerInteraction
bool RootMotion::FinalIK::InteractionSystem::TriggerInteraction(int index, bool interrupt, RootMotion::FinalIK::InteractionObject*& interactionObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::TriggerInteraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TriggerInteraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, interrupt, interactionObject)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, index, interrupt, interactionObject);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.TriggerInteraction
bool RootMotion::FinalIK::InteractionSystem::TriggerInteraction(int index, bool interrupt, RootMotion::FinalIK::InteractionTarget*& interactionTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::TriggerInteraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TriggerInteraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, interrupt, interactionTarget)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, index, interrupt, interactionTarget);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.GetClosestInteractionRange
RootMotion::FinalIK::InteractionTrigger::Range* RootMotion::FinalIK::InteractionSystem::GetClosestInteractionRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::GetClosestInteractionRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetClosestInteractionRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::InteractionTrigger::Range*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.GetClosestInteractionObjectInRange
RootMotion::FinalIK::InteractionObject* RootMotion::FinalIK::InteractionSystem::GetClosestInteractionObjectInRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::GetClosestInteractionObjectInRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetClosestInteractionObjectInRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::InteractionObject*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.GetClosestInteractionTargetInRange
RootMotion::FinalIK::InteractionTarget* RootMotion::FinalIK::InteractionSystem::GetClosestInteractionTargetInRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::GetClosestInteractionTargetInRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetClosestInteractionTargetInRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::InteractionTarget*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.GetClosestInteractionObjectsInRange
::Array<RootMotion::FinalIK::InteractionObject*>* RootMotion::FinalIK::InteractionSystem::GetClosestInteractionObjectsInRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::GetClosestInteractionObjectsInRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetClosestInteractionObjectsInRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<RootMotion::FinalIK::InteractionObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.GetClosestInteractionTargetsInRange
::Array<RootMotion::FinalIK::InteractionTarget*>* RootMotion::FinalIK::InteractionSystem::GetClosestInteractionTargetsInRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::GetClosestInteractionTargetsInRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetClosestInteractionTargetsInRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<RootMotion::FinalIK::InteractionTarget*>*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.TriggerEffectorsReady
bool RootMotion::FinalIK::InteractionSystem::TriggerEffectorsReady(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::TriggerEffectorsReady");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TriggerEffectorsReady", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.GetTriggerRange
RootMotion::FinalIK::InteractionTrigger::Range* RootMotion::FinalIK::InteractionSystem::GetTriggerRange(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::GetTriggerRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTriggerRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::InteractionTrigger::Range*, false>(this, ___internal__method, index);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.GetClosestTriggerIndex
int RootMotion::FinalIK::InteractionSystem::GetClosestTriggerIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::GetClosestTriggerIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetClosestTriggerIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.get_ik
RootMotion::FinalIK::FullBodyBipedIK* RootMotion::FinalIK::InteractionSystem::get_ik() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::get_ik");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ik", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::FullBodyBipedIK*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.set_ik
void RootMotion::FinalIK::InteractionSystem::set_ik(RootMotion::FinalIK::FullBodyBipedIK* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::set_ik");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_ik", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.get_triggersInRange
System::Collections::Generic::List_1<RootMotion::FinalIK::InteractionTrigger*>* RootMotion::FinalIK::InteractionSystem::get_triggersInRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::get_triggersInRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_triggersInRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<RootMotion::FinalIK::InteractionTrigger*>*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.set_triggersInRange
void RootMotion::FinalIK::InteractionSystem::set_triggersInRange(System::Collections::Generic::List_1<RootMotion::FinalIK::InteractionTrigger*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::set_triggersInRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_triggersInRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.Start
void RootMotion::FinalIK::InteractionSystem::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.InteractionPause
void RootMotion::FinalIK::InteractionSystem::InteractionPause(RootMotion::FinalIK::FullBodyBipedEffector effector, RootMotion::FinalIK::InteractionObject* interactionObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::InteractionPause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InteractionPause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effector, interactionObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, effector, interactionObject);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.InteractionResume
void RootMotion::FinalIK::InteractionSystem::InteractionResume(RootMotion::FinalIK::FullBodyBipedEffector effector, RootMotion::FinalIK::InteractionObject* interactionObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::InteractionResume");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InteractionResume", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effector, interactionObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, effector, interactionObject);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.InteractionStop
void RootMotion::FinalIK::InteractionSystem::InteractionStop(RootMotion::FinalIK::FullBodyBipedEffector effector, RootMotion::FinalIK::InteractionObject* interactionObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::InteractionStop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InteractionStop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effector, interactionObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, effector, interactionObject);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.LookAtInteraction
void RootMotion::FinalIK::InteractionSystem::LookAtInteraction(RootMotion::FinalIK::FullBodyBipedEffector effector, RootMotion::FinalIK::InteractionObject* interactionObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::LookAtInteraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LookAtInteraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effector, interactionObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, effector, interactionObject);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.OnTriggerEnter
void RootMotion::FinalIK::InteractionSystem::OnTriggerEnter(UnityEngine::Collider* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.OnTriggerExit
void RootMotion::FinalIK::InteractionSystem::OnTriggerExit(UnityEngine::Collider* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.ContactIsInRange
bool RootMotion::FinalIK::InteractionSystem::ContactIsInRange(int index, int& bestRangeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::ContactIsInRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ContactIsInRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, bestRangeIndex)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, index, bestRangeIndex);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.OnDrawGizmosSelected
void RootMotion::FinalIK::InteractionSystem::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.Update
void RootMotion::FinalIK::InteractionSystem::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.Raycasting
void RootMotion::FinalIK::InteractionSystem::Raycasting() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::Raycasting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Raycasting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.UpdateTriggerEventBroadcasting
void RootMotion::FinalIK::InteractionSystem::UpdateTriggerEventBroadcasting() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::UpdateTriggerEventBroadcasting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateTriggerEventBroadcasting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.UpdateEffectors
void RootMotion::FinalIK::InteractionSystem::UpdateEffectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::UpdateEffectors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateEffectors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.OnPreFBBIK
void RootMotion::FinalIK::InteractionSystem::OnPreFBBIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::OnPreFBBIK");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPreFBBIK", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.OnPostFBBIK
void RootMotion::FinalIK::InteractionSystem::OnPostFBBIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::OnPostFBBIK");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPostFBBIK", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.OnFixTransforms
void RootMotion::FinalIK::InteractionSystem::OnFixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::OnFixTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnFixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.OnDestroy
void RootMotion::FinalIK::InteractionSystem::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.IsValid
bool RootMotion::FinalIK::InteractionSystem::IsValid(bool log) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(log)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, log);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem.TriggerIndexIsValid
bool RootMotion::FinalIK::InteractionSystem::TriggerIndexIsValid(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::TriggerIndexIsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TriggerIndexIsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.InteractionSystem/InteractionDelegate
#include "RootMotion/FinalIK/InteractionSystem_InteractionDelegate.hpp"
// Including type: RootMotion.FinalIK.FullBodyBipedEffector
#include "RootMotion/FinalIK/FullBodyBipedEffector.hpp"
// Including type: RootMotion.FinalIK.InteractionObject
#include "RootMotion/FinalIK/InteractionObject.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.InteractionSystem/InteractionDelegate.Invoke
void RootMotion::FinalIK::InteractionSystem::InteractionDelegate::Invoke_NEW(RootMotion::FinalIK::FullBodyBipedEffector effectorType, RootMotion::FinalIK::InteractionObject* interactionObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::InteractionDelegate::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effectorType, interactionObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, effectorType, interactionObject);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem/InteractionDelegate.BeginInvoke
System::IAsyncResult* RootMotion::FinalIK::InteractionSystem::InteractionDelegate::BeginInvoke_NEW(RootMotion::FinalIK::FullBodyBipedEffector effectorType, RootMotion::FinalIK::InteractionObject* interactionObject, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::InteractionDelegate::BeginInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effectorType, interactionObject, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, effectorType, interactionObject, callback, object);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem/InteractionDelegate.EndInvoke
void RootMotion::FinalIK::InteractionSystem::InteractionDelegate::EndInvoke_NEW(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::InteractionDelegate::EndInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.InteractionSystem/InteractionEventDelegate
#include "RootMotion/FinalIK/InteractionSystem_InteractionEventDelegate.hpp"
// Including type: RootMotion.FinalIK.FullBodyBipedEffector
#include "RootMotion/FinalIK/FullBodyBipedEffector.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: RootMotion.FinalIK.InteractionObject/InteractionEvent
#include "RootMotion/FinalIK/InteractionObject_InteractionEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.InteractionSystem/InteractionEventDelegate.Invoke
void RootMotion::FinalIK::InteractionSystem::InteractionEventDelegate::Invoke_NEW(RootMotion::FinalIK::FullBodyBipedEffector effectorType, RootMotion::FinalIK::InteractionObject* interactionObject, RootMotion::FinalIK::InteractionObject::InteractionEvent* interactionEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::InteractionEventDelegate::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effectorType, interactionObject, interactionEvent)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, effectorType, interactionObject, interactionEvent);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem/InteractionEventDelegate.BeginInvoke
System::IAsyncResult* RootMotion::FinalIK::InteractionSystem::InteractionEventDelegate::BeginInvoke_NEW(RootMotion::FinalIK::FullBodyBipedEffector effectorType, RootMotion::FinalIK::InteractionObject* interactionObject, RootMotion::FinalIK::InteractionObject::InteractionEvent* interactionEvent, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::InteractionEventDelegate::BeginInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(effectorType, interactionObject, interactionEvent, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, effectorType, interactionObject, interactionEvent, callback, object);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem/InteractionEventDelegate.EndInvoke
void RootMotion::FinalIK::InteractionSystem::InteractionEventDelegate::EndInvoke_NEW(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::InteractionEventDelegate::EndInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.InteractionTarget
#include "RootMotion/FinalIK/InteractionTarget.hpp"
// Including type: RootMotion.FinalIK.InteractionTarget/Multiplier
#include "RootMotion/FinalIK/InteractionTarget_Multiplier.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.InteractionObject/WeightCurve/Type
#include "RootMotion/FinalIK/InteractionObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.InteractionTarget.OpenUserManual
void RootMotion::FinalIK::InteractionTarget::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTarget::OpenUserManual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionTarget.OpenScriptReference
void RootMotion::FinalIK::InteractionTarget::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTarget::OpenScriptReference");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionTarget.OpenTutorial1
void RootMotion::FinalIK::InteractionTarget::OpenTutorial1() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTarget::OpenTutorial1");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenTutorial1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionTarget.OpenTutorial2
void RootMotion::FinalIK::InteractionTarget::OpenTutorial2() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTarget::OpenTutorial2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenTutorial2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionTarget.OpenTutorial3
void RootMotion::FinalIK::InteractionTarget::OpenTutorial3() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTarget::OpenTutorial3");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenTutorial3", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionTarget.OpenTutorial4
void RootMotion::FinalIK::InteractionTarget::OpenTutorial4() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTarget::OpenTutorial4");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenTutorial4", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionTarget.SupportGroup
void RootMotion::FinalIK::InteractionTarget::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTarget::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionTarget.ASThread
void RootMotion::FinalIK::InteractionTarget::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTarget::ASThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionTarget.GetValue
float RootMotion::FinalIK::InteractionTarget::GetValue(RootMotion::FinalIK::InteractionObject::WeightCurve::Type curveType) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTarget::GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(curveType)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, curveType);
}
// Autogenerated method: RootMotion.FinalIK.InteractionTarget.ResetRotation
void RootMotion::FinalIK::InteractionTarget::ResetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTarget::ResetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionTarget.RotateTo
void RootMotion::FinalIK::InteractionTarget::RotateTo(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTarget::RotateTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RotateTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.InteractionTarget/Multiplier
#include "RootMotion/FinalIK/InteractionTarget_Multiplier.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.InteractionTrigger
#include "RootMotion/FinalIK/InteractionTrigger.hpp"
// Including type: RootMotion.FinalIK.InteractionTrigger/CharacterPosition
#include "RootMotion/FinalIK/InteractionTrigger_CharacterPosition.hpp"
// Including type: RootMotion.FinalIK.InteractionTrigger/CameraPosition
#include "RootMotion/FinalIK/InteractionTrigger_CameraPosition.hpp"
// Including type: RootMotion.FinalIK.InteractionTrigger/Range
#include "RootMotion/FinalIK/InteractionTrigger_Range.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.InteractionTrigger.OpenUserManual
void RootMotion::FinalIK::InteractionTrigger::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTrigger::OpenUserManual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionTrigger.OpenScriptReference
void RootMotion::FinalIK::InteractionTrigger::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTrigger::OpenScriptReference");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionTrigger.OpenTutorial4
void RootMotion::FinalIK::InteractionTrigger::OpenTutorial4() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTrigger::OpenTutorial4");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenTutorial4", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionTrigger.SupportGroup
void RootMotion::FinalIK::InteractionTrigger::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTrigger::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionTrigger.ASThread
void RootMotion::FinalIK::InteractionTrigger::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTrigger::ASThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionTrigger.Start
void RootMotion::FinalIK::InteractionTrigger::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTrigger::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionTrigger.GetBestRangeIndex
int RootMotion::FinalIK::InteractionTrigger::GetBestRangeIndex(UnityEngine::Transform* character, UnityEngine::Transform* raycastFrom, UnityEngine::RaycastHit raycastHit) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTrigger::GetBestRangeIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBestRangeIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(character, raycastFrom, raycastHit)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, character, raycastFrom, raycastHit);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.InteractionTrigger/CharacterPosition
#include "RootMotion/FinalIK/InteractionTrigger_CharacterPosition.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.InteractionTrigger/CharacterPosition.get_offset3D
UnityEngine::Vector3 RootMotion::FinalIK::InteractionTrigger::CharacterPosition::get_offset3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTrigger::CharacterPosition::get_offset3D");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_offset3D", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionTrigger/CharacterPosition.get_direction3D
UnityEngine::Vector3 RootMotion::FinalIK::InteractionTrigger::CharacterPosition::get_direction3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTrigger::CharacterPosition::get_direction3D");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_direction3D", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionTrigger/CharacterPosition.IsInRange
bool RootMotion::FinalIK::InteractionTrigger::CharacterPosition::IsInRange(UnityEngine::Transform* character, UnityEngine::Transform* trigger, float& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTrigger::CharacterPosition::IsInRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsInRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(character, trigger, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, character, trigger, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.InteractionTrigger/CameraPosition
#include "RootMotion/FinalIK/InteractionTrigger_CameraPosition.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.InteractionTrigger/CameraPosition.GetRotation
UnityEngine::Quaternion RootMotion::FinalIK::InteractionTrigger::CameraPosition::GetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTrigger::CameraPosition::GetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionTrigger/CameraPosition.IsInRange
bool RootMotion::FinalIK::InteractionTrigger::CameraPosition::IsInRange(UnityEngine::Transform* raycastFrom, UnityEngine::RaycastHit hit, UnityEngine::Transform* trigger, float& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTrigger::CameraPosition::IsInRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsInRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(raycastFrom, hit, trigger, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, raycastFrom, hit, trigger, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.InteractionTrigger/Range
#include "RootMotion/FinalIK/InteractionTrigger_Range.hpp"
// Including type: RootMotion.FinalIK.InteractionTrigger/Range/Interaction
#include "RootMotion/FinalIK/InteractionTrigger_Range_Interaction.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: RootMotion.FinalIK.InteractionTrigger/CharacterPosition
#include "RootMotion/FinalIK/InteractionTrigger_CharacterPosition.hpp"
// Including type: RootMotion.FinalIK.InteractionTrigger/CameraPosition
#include "RootMotion/FinalIK/InteractionTrigger_CameraPosition.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.InteractionTrigger/Range.IsInRange
bool RootMotion::FinalIK::InteractionTrigger::Range::IsInRange(UnityEngine::Transform* character, UnityEngine::Transform* raycastFrom, UnityEngine::RaycastHit raycastHit, UnityEngine::Transform* trigger, float& maxError) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTrigger::Range::IsInRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsInRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(character, raycastFrom, raycastHit, trigger, maxError)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, character, raycastFrom, raycastHit, trigger, maxError);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.InteractionTrigger/Range/Interaction
#include "RootMotion/FinalIK/InteractionTrigger_Range_Interaction.hpp"
// Including type: RootMotion.FinalIK.InteractionObject
#include "RootMotion/FinalIK/InteractionObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.GenericPoser
#include "RootMotion/FinalIK/GenericPoser.hpp"
// Including type: RootMotion.FinalIK.GenericPoser/Map
#include "RootMotion/FinalIK/GenericPoser_Map.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.GenericPoser.StoreDefaultState
void RootMotion::FinalIK::GenericPoser::StoreDefaultState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::GenericPoser::StoreDefaultState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GenericPoser.GetTargetNamed
UnityEngine::Transform* RootMotion::FinalIK::GenericPoser::GetTargetNamed(::Il2CppString* tName, ::Array<UnityEngine::Transform*>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::GenericPoser::GetTargetNamed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTargetNamed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tName, array)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method, tName, array);
}
// Autogenerated method: RootMotion.FinalIK.GenericPoser.AutoMapping
void RootMotion::FinalIK::GenericPoser::AutoMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::GenericPoser::AutoMapping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AutoMapping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GenericPoser.InitiatePoser
void RootMotion::FinalIK::GenericPoser::InitiatePoser() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::GenericPoser::InitiatePoser");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitiatePoser", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GenericPoser.UpdatePoser
void RootMotion::FinalIK::GenericPoser::UpdatePoser() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::GenericPoser::UpdatePoser");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdatePoser", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GenericPoser.FixPoserTransforms
void RootMotion::FinalIK::GenericPoser::FixPoserTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::GenericPoser::FixPoserTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixPoserTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.GenericPoser/Map
#include "RootMotion/FinalIK/GenericPoser_Map.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.GenericPoser/Map.StoreDefaultState
void RootMotion::FinalIK::GenericPoser::Map::StoreDefaultState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::GenericPoser::Map::StoreDefaultState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GenericPoser/Map.FixTransform
void RootMotion::FinalIK::GenericPoser::Map::FixTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::GenericPoser::Map::FixTransform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GenericPoser/Map.Update
void RootMotion::FinalIK::GenericPoser::Map::Update(float localRotationWeight, float localPositionWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::GenericPoser::Map::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(localRotationWeight, localPositionWeight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localRotationWeight, localPositionWeight);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.HandPoser
#include "RootMotion/FinalIK/HandPoser.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.HandPoser.StoreDefaultState
void RootMotion::FinalIK::HandPoser::StoreDefaultState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HandPoser::StoreDefaultState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HandPoser.AutoMapping
void RootMotion::FinalIK::HandPoser::AutoMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HandPoser::AutoMapping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AutoMapping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HandPoser.InitiatePoser
void RootMotion::FinalIK::HandPoser::InitiatePoser() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HandPoser::InitiatePoser");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitiatePoser", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HandPoser.FixPoserTransforms
void RootMotion::FinalIK::HandPoser::FixPoserTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HandPoser::FixPoserTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixPoserTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HandPoser.UpdatePoser
void RootMotion::FinalIK::HandPoser::UpdatePoser() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HandPoser::UpdatePoser");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdatePoser", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.Poser
#include "RootMotion/FinalIK/Poser.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.Poser.AutoMapping
void RootMotion::FinalIK::Poser::AutoMapping_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Poser::AutoMapping_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AutoMapping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Poser.UpdateManual
void RootMotion::FinalIK::Poser::UpdateManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Poser::UpdateManual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateManual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Poser.InitiatePoser
void RootMotion::FinalIK::Poser::InitiatePoser_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Poser::InitiatePoser_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitiatePoser", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Poser.UpdatePoser
void RootMotion::FinalIK::Poser::UpdatePoser_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Poser::UpdatePoser_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdatePoser", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Poser.FixPoserTransforms
void RootMotion::FinalIK::Poser::FixPoserTransforms_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Poser::FixPoserTransforms_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixPoserTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Poser.UpdateSolver
void RootMotion::FinalIK::Poser::UpdateSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Poser::UpdateSolver");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateSolver", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Poser.InitiateSolver
void RootMotion::FinalIK::Poser::InitiateSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Poser::InitiateSolver");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitiateSolver", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Poser.FixTransforms
void RootMotion::FinalIK::Poser::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Poser::FixTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.RagdollUtility
#include "RootMotion/FinalIK/RagdollUtility.hpp"
// Including type: RootMotion.FinalIK.RagdollUtility/Rigidbone
#include "RootMotion/FinalIK/RagdollUtility_Rigidbone.hpp"
// Including type: RootMotion.FinalIK.RagdollUtility/Child
#include "RootMotion/FinalIK/RagdollUtility_Child.hpp"
// Including type: RootMotion.FinalIK.RagdollUtility/<DisableRagdollSmooth>d__21
#include "RootMotion/FinalIK/RagdollUtility_-DisableRagdollSmooth-d__21.hpp"
// Including type: RootMotion.FinalIK.IK
#include "RootMotion/FinalIK/IK.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.RagdollUtility.EnableRagdoll
void RootMotion::FinalIK::RagdollUtility::EnableRagdoll() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::EnableRagdoll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnableRagdoll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility.DisableRagdoll
void RootMotion::FinalIK::RagdollUtility::DisableRagdoll() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::DisableRagdoll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DisableRagdoll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility.Start
void RootMotion::FinalIK::RagdollUtility::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility.DisableRagdollSmooth
System::Collections::IEnumerator* RootMotion::FinalIK::RagdollUtility::DisableRagdollSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::DisableRagdollSmooth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DisableRagdollSmooth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility.Update
void RootMotion::FinalIK::RagdollUtility::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility.FixedUpdate
void RootMotion::FinalIK::RagdollUtility::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility.LateUpdate
void RootMotion::FinalIK::RagdollUtility::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility.AfterLastIK
void RootMotion::FinalIK::RagdollUtility::AfterLastIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::AfterLastIK");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AfterLastIK", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility.AfterAnimation
void RootMotion::FinalIK::RagdollUtility::AfterAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::AfterAnimation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AfterAnimation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility.OnFinalPose
void RootMotion::FinalIK::RagdollUtility::OnFinalPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::OnFinalPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnFinalPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility.RagdollEnabler
void RootMotion::FinalIK::RagdollUtility::RagdollEnabler() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::RagdollEnabler");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RagdollEnabler", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility.get_isRagdoll
bool RootMotion::FinalIK::RagdollUtility::get_isRagdoll() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::get_isRagdoll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isRagdoll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility.RecordVelocities
void RootMotion::FinalIK::RagdollUtility::RecordVelocities() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::RecordVelocities");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RecordVelocities", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility.get_ikUsed
bool RootMotion::FinalIK::RagdollUtility::get_ikUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::get_ikUsed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ikUsed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility.StoreLocalState
void RootMotion::FinalIK::RagdollUtility::StoreLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::StoreLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility.FixTransforms
void RootMotion::FinalIK::RagdollUtility::FixTransforms(float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::FixTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, weight);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility.OnDestroy
void RootMotion::FinalIK::RagdollUtility::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.RagdollUtility/Rigidbone
#include "RootMotion/FinalIK/RagdollUtility_Rigidbone.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Joint
#include "UnityEngine/Joint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.RagdollUtility/Rigidbone.RecordVelocity
void RootMotion::FinalIK::RagdollUtility::Rigidbone::RecordVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::Rigidbone::RecordVelocity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RecordVelocity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility/Rigidbone.WakeUp
void RootMotion::FinalIK::RagdollUtility::Rigidbone::WakeUp(float velocityWeight, float angularVelocityWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::Rigidbone::WakeUp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WakeUp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(velocityWeight, angularVelocityWeight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, velocityWeight, angularVelocityWeight);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.RagdollUtility/Child
#include "RootMotion/FinalIK/RagdollUtility_Child.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.RagdollUtility/Child.FixTransform
void RootMotion::FinalIK::RagdollUtility::Child::FixTransform(float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::Child::FixTransform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, weight);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility/Child.StoreLocalState
void RootMotion::FinalIK::RagdollUtility::Child::StoreLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::Child::StoreLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.RagdollUtility/<DisableRagdollSmooth>d__21
#include "RootMotion/FinalIK/RagdollUtility_-DisableRagdollSmooth-d__21.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.RagdollUtility/<DisableRagdollSmooth>d__21.System.IDisposable.Dispose
void RootMotion::FinalIK::RagdollUtility::$DisableRagdollSmooth$d__21::System_IDisposable_Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::$DisableRagdollSmooth$d__21::System.IDisposable.Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility/<DisableRagdollSmooth>d__21.MoveNext
bool RootMotion::FinalIK::RagdollUtility::$DisableRagdollSmooth$d__21::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::$DisableRagdollSmooth$d__21::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility/<DisableRagdollSmooth>d__21.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* RootMotion::FinalIK::RagdollUtility::$DisableRagdollSmooth$d__21::System_Collections_Generic_IEnumerator$System_Object$_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::$DisableRagdollSmooth$d__21::System.Collections.Generic.IEnumerator<System.Object>.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility/<DisableRagdollSmooth>d__21.System.Collections.IEnumerator.Reset
void RootMotion::FinalIK::RagdollUtility::$DisableRagdollSmooth$d__21::System_Collections_IEnumerator_Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::$DisableRagdollSmooth$d__21::System.Collections.IEnumerator.Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility/<DisableRagdollSmooth>d__21.System.Collections.IEnumerator.get_Current
::Il2CppObject* RootMotion::FinalIK::RagdollUtility::$DisableRagdollSmooth$d__21::System_Collections_IEnumerator_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RagdollUtility::$DisableRagdollSmooth$d__21::System.Collections.IEnumerator.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.RotationLimit
#include "RootMotion/FinalIK/RotationLimit.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.RotationLimit.SetDefaultLocalRotation
void RootMotion::FinalIK::RotationLimit::SetDefaultLocalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimit::SetDefaultLocalRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetDefaultLocalRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimit.SetDefaultLocalRotation
void RootMotion::FinalIK::RotationLimit::SetDefaultLocalRotation(UnityEngine::Quaternion localRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimit::SetDefaultLocalRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetDefaultLocalRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(localRotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localRotation);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimit.GetLimitedLocalRotation
UnityEngine::Quaternion RootMotion::FinalIK::RotationLimit::GetLimitedLocalRotation(UnityEngine::Quaternion localRotation, bool& changed) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimit::GetLimitedLocalRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLimitedLocalRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(localRotation, changed)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, localRotation, changed);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimit.Apply
bool RootMotion::FinalIK::RotationLimit::Apply() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimit::Apply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimit.Disable
void RootMotion::FinalIK::RotationLimit::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimit::Disable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Disable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimit.get_secondaryAxis
UnityEngine::Vector3 RootMotion::FinalIK::RotationLimit::get_secondaryAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimit::get_secondaryAxis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_secondaryAxis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimit.get_crossAxis
UnityEngine::Vector3 RootMotion::FinalIK::RotationLimit::get_crossAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimit::get_crossAxis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_crossAxis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimit.get_defaultLocalRotationOverride
bool RootMotion::FinalIK::RotationLimit::get_defaultLocalRotationOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimit::get_defaultLocalRotationOverride");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_defaultLocalRotationOverride", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimit.set_defaultLocalRotationOverride
void RootMotion::FinalIK::RotationLimit::set_defaultLocalRotationOverride(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimit::set_defaultLocalRotationOverride");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_defaultLocalRotationOverride", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimit.LimitRotation
UnityEngine::Quaternion RootMotion::FinalIK::RotationLimit::LimitRotation_NEW(UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimit::LimitRotation_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LimitRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, rotation);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimit.Awake
void RootMotion::FinalIK::RotationLimit::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimit::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimit.LateUpdate
void RootMotion::FinalIK::RotationLimit::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimit::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimit.LogWarning
void RootMotion::FinalIK::RotationLimit::LogWarning(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimit::LogWarning");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimit.Limit1DOF
UnityEngine::Quaternion RootMotion::FinalIK::RotationLimit::Limit1DOF(UnityEngine::Quaternion rotation, UnityEngine::Vector3 axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimit::Limit1DOF");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "RotationLimit", "Limit1DOF", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation, axis)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rotation, axis);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimit.LimitTwist
UnityEngine::Quaternion RootMotion::FinalIK::RotationLimit::LimitTwist(UnityEngine::Quaternion rotation, UnityEngine::Vector3 axis, UnityEngine::Vector3 orthoAxis, float twistLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimit::LimitTwist");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "RotationLimit", "LimitTwist", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation, axis, orthoAxis, twistLimit)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rotation, axis, orthoAxis, twistLimit);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimit.GetOrthogonalAngle
float RootMotion::FinalIK::RotationLimit::GetOrthogonalAngle(UnityEngine::Vector3 v1, UnityEngine::Vector3 v2, UnityEngine::Vector3 normal) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimit::GetOrthogonalAngle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "RotationLimit", "GetOrthogonalAngle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v1, v2, normal)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v1, v2, normal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.RotationLimitAngle
#include "RootMotion/FinalIK/RotationLimitAngle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.RotationLimitAngle.OpenUserManual
void RootMotion::FinalIK::RotationLimitAngle::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitAngle::OpenUserManual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitAngle.OpenScriptReference
void RootMotion::FinalIK::RotationLimitAngle::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitAngle::OpenScriptReference");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitAngle.SupportGroup
void RootMotion::FinalIK::RotationLimitAngle::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitAngle::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitAngle.ASThread
void RootMotion::FinalIK::RotationLimitAngle::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitAngle::ASThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitAngle.LimitSwing
UnityEngine::Quaternion RootMotion::FinalIK::RotationLimitAngle::LimitSwing(UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitAngle::LimitSwing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LimitSwing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, rotation);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitAngle.LimitRotation
UnityEngine::Quaternion RootMotion::FinalIK::RotationLimitAngle::LimitRotation(UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitAngle::LimitRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LimitRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, rotation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.RotationLimitHinge
#include "RootMotion/FinalIK/RotationLimitHinge.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.RotationLimitHinge.OpenUserManual
void RootMotion::FinalIK::RotationLimitHinge::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitHinge::OpenUserManual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitHinge.OpenScriptReference
void RootMotion::FinalIK::RotationLimitHinge::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitHinge::OpenScriptReference");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitHinge.SupportGroup
void RootMotion::FinalIK::RotationLimitHinge::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitHinge::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitHinge.ASThread
void RootMotion::FinalIK::RotationLimitHinge::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitHinge::ASThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitHinge.LimitHinge
UnityEngine::Quaternion RootMotion::FinalIK::RotationLimitHinge::LimitHinge(UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitHinge::LimitHinge");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LimitHinge", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, rotation);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitHinge.LimitRotation
UnityEngine::Quaternion RootMotion::FinalIK::RotationLimitHinge::LimitRotation(UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitHinge::LimitRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LimitRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, rotation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.RotationLimitPolygonal
#include "RootMotion/FinalIK/RotationLimitPolygonal.hpp"
// Including type: RootMotion.FinalIK.RotationLimitPolygonal/ReachCone
#include "RootMotion/FinalIK/RotationLimitPolygonal_ReachCone.hpp"
// Including type: RootMotion.FinalIK.RotationLimitPolygonal/LimitPoint
#include "RootMotion/FinalIK/RotationLimitPolygonal_LimitPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal.OpenUserManual
void RootMotion::FinalIK::RotationLimitPolygonal::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::OpenUserManual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal.OpenScriptReference
void RootMotion::FinalIK::RotationLimitPolygonal::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::OpenScriptReference");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal.SupportGroup
void RootMotion::FinalIK::RotationLimitPolygonal::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal.ASThread
void RootMotion::FinalIK::RotationLimitPolygonal::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::ASThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal.SetLimitPoints
void RootMotion::FinalIK::RotationLimitPolygonal::SetLimitPoints(::Array<RootMotion::FinalIK::RotationLimitPolygonal::LimitPoint*>* points) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::SetLimitPoints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLimitPoints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(points)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, points);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal.Start
void RootMotion::FinalIK::RotationLimitPolygonal::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal.ResetToDefault
void RootMotion::FinalIK::RotationLimitPolygonal::ResetToDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::ResetToDefault");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetToDefault", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal.BuildReachCones
void RootMotion::FinalIK::RotationLimitPolygonal::BuildReachCones() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::BuildReachCones");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BuildReachCones", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal.SmoothPoints
::Array<UnityEngine::Vector3>* RootMotion::FinalIK::RotationLimitPolygonal::SmoothPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::SmoothPoints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SmoothPoints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal.GetScalar
float RootMotion::FinalIK::RotationLimitPolygonal::GetScalar(int k) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::GetScalar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetScalar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(k)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, k);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal.PointToTangentPlane
UnityEngine::Vector3 RootMotion::FinalIK::RotationLimitPolygonal::PointToTangentPlane(UnityEngine::Vector3 p, float r) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::PointToTangentPlane");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PointToTangentPlane", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(p, r)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, p, r);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal.TangentPointToSphere
UnityEngine::Vector3 RootMotion::FinalIK::RotationLimitPolygonal::TangentPointToSphere(UnityEngine::Vector3 q, float r) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::TangentPointToSphere");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TangentPointToSphere", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(q, r)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, q, r);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal.LimitSwing
UnityEngine::Quaternion RootMotion::FinalIK::RotationLimitPolygonal::LimitSwing(UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::LimitSwing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LimitSwing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, rotation);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal.GetReachCone
int RootMotion::FinalIK::RotationLimitPolygonal::GetReachCone(UnityEngine::Vector3 L) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::GetReachCone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetReachCone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(L)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, L);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal.LimitRotation
UnityEngine::Quaternion RootMotion::FinalIK::RotationLimitPolygonal::LimitRotation(UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::LimitRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LimitRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, rotation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.RotationLimitPolygonal/ReachCone
#include "RootMotion/FinalIK/RotationLimitPolygonal_ReachCone.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal/ReachCone.get_o
UnityEngine::Vector3 RootMotion::FinalIK::RotationLimitPolygonal::ReachCone::get_o() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::ReachCone::get_o");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_o", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal/ReachCone.get_a
UnityEngine::Vector3 RootMotion::FinalIK::RotationLimitPolygonal::ReachCone::get_a() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::ReachCone::get_a");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_a", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal/ReachCone.get_b
UnityEngine::Vector3 RootMotion::FinalIK::RotationLimitPolygonal::ReachCone::get_b() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::ReachCone::get_b");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_b", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal/ReachCone.get_c
UnityEngine::Vector3 RootMotion::FinalIK::RotationLimitPolygonal::ReachCone::get_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::ReachCone::get_c");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_c", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal/ReachCone.get_isValid
bool RootMotion::FinalIK::RotationLimitPolygonal::ReachCone::get_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::ReachCone::get_isValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal/ReachCone.Calculate
void RootMotion::FinalIK::RotationLimitPolygonal::ReachCone::Calculate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitPolygonal::ReachCone::Calculate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Calculate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.RotationLimitPolygonal/LimitPoint
#include "RootMotion/FinalIK/RotationLimitPolygonal_LimitPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.RotationLimitSpline
#include "RootMotion/FinalIK/RotationLimitSpline.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.RotationLimitSpline.OpenUserManual
void RootMotion::FinalIK::RotationLimitSpline::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitSpline::OpenUserManual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitSpline.OpenScriptReference
void RootMotion::FinalIK::RotationLimitSpline::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitSpline::OpenScriptReference");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitSpline.SupportGroup
void RootMotion::FinalIK::RotationLimitSpline::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitSpline::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitSpline.ASThread
void RootMotion::FinalIK::RotationLimitSpline::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitSpline::ASThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitSpline.SetSpline
void RootMotion::FinalIK::RotationLimitSpline::SetSpline(::Array<UnityEngine::Keyframe>* keyframes) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitSpline::SetSpline");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetSpline", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyframes)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keyframes);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitSpline.LimitSwing
UnityEngine::Quaternion RootMotion::FinalIK::RotationLimitSpline::LimitSwing(UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitSpline::LimitSwing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LimitSwing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, rotation);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitSpline.LimitRotation
UnityEngine::Quaternion RootMotion::FinalIK::RotationLimitSpline::LimitRotation(UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::RotationLimitSpline::LimitRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LimitRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, rotation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.AimController
#include "RootMotion/FinalIK/AimController.hpp"
// Including type: RootMotion.FinalIK.AimController/<TurnToTarget>d__33
#include "RootMotion/FinalIK/AimController_-TurnToTarget-d__33.hpp"
// Including type: RootMotion.FinalIK.AimIK
#include "RootMotion/FinalIK/AimIK.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.AimController.Start
void RootMotion::FinalIK::AimController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::AimController::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.AimController.LateUpdate
void RootMotion::FinalIK::AimController::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::AimController::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.AimController.get_pivot
UnityEngine::Vector3 RootMotion::FinalIK::AimController::get_pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::AimController::get_pivot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_pivot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.AimController.ApplyMinDistance
void RootMotion::FinalIK::AimController::ApplyMinDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::AimController::ApplyMinDistance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyMinDistance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.AimController.RootRotation
void RootMotion::FinalIK::AimController::RootRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::AimController::RootRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RootRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.AimController.TurnToTarget
System::Collections::IEnumerator* RootMotion::FinalIK::AimController::TurnToTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::AimController::TurnToTarget");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TurnToTarget", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.AimController/<TurnToTarget>d__33
#include "RootMotion/FinalIK/AimController_-TurnToTarget-d__33.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.AimController/<TurnToTarget>d__33.System.IDisposable.Dispose
void RootMotion::FinalIK::AimController::$TurnToTarget$d__33::System_IDisposable_Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::AimController::$TurnToTarget$d__33::System.IDisposable.Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.AimController/<TurnToTarget>d__33.MoveNext
bool RootMotion::FinalIK::AimController::$TurnToTarget$d__33::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::AimController::$TurnToTarget$d__33::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.AimController/<TurnToTarget>d__33.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* RootMotion::FinalIK::AimController::$TurnToTarget$d__33::System_Collections_Generic_IEnumerator$System_Object$_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::AimController::$TurnToTarget$d__33::System.Collections.Generic.IEnumerator<System.Object>.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.AimController/<TurnToTarget>d__33.System.Collections.IEnumerator.Reset
void RootMotion::FinalIK::AimController::$TurnToTarget$d__33::System_Collections_IEnumerator_Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::AimController::$TurnToTarget$d__33::System.Collections.IEnumerator.Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.AimController/<TurnToTarget>d__33.System.Collections.IEnumerator.get_Current
::Il2CppObject* RootMotion::FinalIK::AimController::$TurnToTarget$d__33::System_Collections_IEnumerator_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::AimController::$TurnToTarget$d__33::System.Collections.IEnumerator.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.AimPoser
#include "RootMotion/FinalIK/AimPoser.hpp"
// Including type: RootMotion.FinalIK.AimPoser/Pose
#include "RootMotion/FinalIK/AimPoser_Pose.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.AimPoser.GetPose
RootMotion::FinalIK::AimPoser::Pose* RootMotion::FinalIK::AimPoser::GetPose(UnityEngine::Vector3 localDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::AimPoser::GetPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(localDirection)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::AimPoser::Pose*, false>(this, ___internal__method, localDirection);
}
// Autogenerated method: RootMotion.FinalIK.AimPoser.SetPoseActive
void RootMotion::FinalIK::AimPoser::SetPoseActive(RootMotion::FinalIK::AimPoser::Pose* pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::AimPoser::SetPoseActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPoseActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pose)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pose);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.AimPoser/Pose
#include "RootMotion/FinalIK/AimPoser_Pose.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.AimPoser/Pose.IsInDirection
bool RootMotion::FinalIK::AimPoser::Pose::IsInDirection(UnityEngine::Vector3 d) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::AimPoser::Pose::IsInDirection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsInDirection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(d)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, d);
}
// Autogenerated method: RootMotion.FinalIK.AimPoser/Pose.SetAngleBuffer
void RootMotion::FinalIK::AimPoser::Pose::SetAngleBuffer(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::AimPoser::Pose::SetAngleBuffer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetAngleBuffer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.Amplifier
#include "RootMotion/FinalIK/Amplifier.hpp"
// Including type: RootMotion.FinalIK.Amplifier/Body
#include "RootMotion/FinalIK/Amplifier_Body.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.Amplifier.OnModifyOffset
void RootMotion::FinalIK::Amplifier::OnModifyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Amplifier::OnModifyOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnModifyOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.Amplifier/Body
#include "RootMotion/FinalIK/Amplifier_Body.hpp"
// Including type: RootMotion.FinalIK.Amplifier/Body/EffectorLink
#include "RootMotion/FinalIK/Amplifier_Body_EffectorLink.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBodyBiped
#include "RootMotion/FinalIK/IKSolverFullBodyBiped.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.Amplifier/Body.Update
void RootMotion::FinalIK::Amplifier::Body::Update(RootMotion::FinalIK::IKSolverFullBodyBiped* solver, float w, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Amplifier::Body::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, w, deltaTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, w, deltaTime);
}
// Autogenerated method: RootMotion.FinalIK.Amplifier/Body.Multiply
UnityEngine::Vector3 RootMotion::FinalIK::Amplifier::Body::Multiply(UnityEngine::Vector3 v1, UnityEngine::Vector3 v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Amplifier::Body::Multiply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "Amplifier/Body", "Multiply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v1, v2)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v1, v2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.Amplifier/Body/EffectorLink
#include "RootMotion/FinalIK/Amplifier_Body_EffectorLink.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.BodyTilt
#include "RootMotion/FinalIK/BodyTilt.hpp"
// Including type: RootMotion.FinalIK.OffsetPose
#include "RootMotion/FinalIK/OffsetPose.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.BodyTilt.Start
void RootMotion::FinalIK::BodyTilt::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BodyTilt::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BodyTilt.OnModifyOffset
void RootMotion::FinalIK::BodyTilt::OnModifyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::BodyTilt::OnModifyOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnModifyOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.EditorIK
#include "RootMotion/FinalIK/EditorIK.hpp"
// Including type: RootMotion.FinalIK.IK
#include "RootMotion/FinalIK/IK.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.EditorIK.Start
void RootMotion::FinalIK::EditorIK::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::EditorIK::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.EditorIK.Update
void RootMotion::FinalIK::EditorIK::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::EditorIK::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.HitReaction
#include "RootMotion/FinalIK/HitReaction.hpp"
// Including type: RootMotion.FinalIK.HitReaction/HitPoint
#include "RootMotion/FinalIK/HitReaction_HitPoint.hpp"
// Including type: RootMotion.FinalIK.HitReaction/HitPointEffector
#include "RootMotion/FinalIK/HitReaction_HitPointEffector.hpp"
// Including type: RootMotion.FinalIK.HitReaction/HitPointBone
#include "RootMotion/FinalIK/HitReaction_HitPointBone.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.HitReaction.get_inProgress
bool RootMotion::FinalIK::HitReaction::get_inProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::get_inProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_inProgress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction.Hit
void RootMotion::FinalIK::HitReaction::Hit(UnityEngine::Collider* collider, UnityEngine::Vector3 force, UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::Hit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Hit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collider, force, point)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collider, force, point);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction.OnModifyOffset
void RootMotion::FinalIK::HitReaction::OnModifyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::OnModifyOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnModifyOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.HitReaction/HitPoint
#include "RootMotion/FinalIK/HitReaction_HitPoint.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBodyBiped
#include "RootMotion/FinalIK/IKSolverFullBodyBiped.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPoint.get_inProgress
bool RootMotion::FinalIK::HitReaction::HitPoint::get_inProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPoint::get_inProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_inProgress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPoint.get_crossFader
float RootMotion::FinalIK::HitReaction::HitPoint::get_crossFader() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPoint::get_crossFader");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_crossFader", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPoint.set_crossFader
void RootMotion::FinalIK::HitReaction::HitPoint::set_crossFader(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPoint::set_crossFader");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_crossFader", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPoint.get_timer
float RootMotion::FinalIK::HitReaction::HitPoint::get_timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPoint::get_timer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_timer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPoint.set_timer
void RootMotion::FinalIK::HitReaction::HitPoint::set_timer(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPoint::set_timer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_timer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPoint.get_force
UnityEngine::Vector3 RootMotion::FinalIK::HitReaction::HitPoint::get_force() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPoint::get_force");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_force", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPoint.set_force
void RootMotion::FinalIK::HitReaction::HitPoint::set_force(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPoint::set_force");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_force", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPoint.get_point
UnityEngine::Vector3 RootMotion::FinalIK::HitReaction::HitPoint::get_point() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPoint::get_point");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_point", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPoint.set_point
void RootMotion::FinalIK::HitReaction::HitPoint::set_point(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPoint::set_point");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_point", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPoint.Hit
void RootMotion::FinalIK::HitReaction::HitPoint::Hit(UnityEngine::Vector3 force, UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPoint::Hit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Hit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(force, point)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, force, point);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPoint.Apply
void RootMotion::FinalIK::HitReaction::HitPoint::Apply(RootMotion::FinalIK::IKSolverFullBodyBiped* solver, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPoint::Apply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, weight);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPoint.GetLength
float RootMotion::FinalIK::HitReaction::HitPoint::GetLength_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPoint::GetLength_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPoint.CrossFadeStart
void RootMotion::FinalIK::HitReaction::HitPoint::CrossFadeStart_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPoint::CrossFadeStart_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CrossFadeStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPoint.OnApply
void RootMotion::FinalIK::HitReaction::HitPoint::OnApply_NEW(RootMotion::FinalIK::IKSolverFullBodyBiped* solver, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPoint::OnApply_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnApply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, weight);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.HitReaction/HitPointEffector
#include "RootMotion/FinalIK/HitReaction_HitPointEffector.hpp"
// Including type: RootMotion.FinalIK.HitReaction/HitPointEffector/EffectorLink
#include "RootMotion/FinalIK/HitReaction_HitPointEffector_EffectorLink.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBodyBiped
#include "RootMotion/FinalIK/IKSolverFullBodyBiped.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPointEffector.GetLength
float RootMotion::FinalIK::HitReaction::HitPointEffector::GetLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPointEffector::GetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPointEffector.CrossFadeStart
void RootMotion::FinalIK::HitReaction::HitPointEffector::CrossFadeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPointEffector::CrossFadeStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CrossFadeStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPointEffector.OnApply
void RootMotion::FinalIK::HitReaction::HitPointEffector::OnApply(RootMotion::FinalIK::IKSolverFullBodyBiped* solver, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPointEffector::OnApply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnApply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, weight);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.HitReaction/HitPointEffector/EffectorLink
#include "RootMotion/FinalIK/HitReaction_HitPointEffector_EffectorLink.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBodyBiped
#include "RootMotion/FinalIK/IKSolverFullBodyBiped.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPointEffector/EffectorLink.Apply
void RootMotion::FinalIK::HitReaction::HitPointEffector::EffectorLink::Apply(RootMotion::FinalIK::IKSolverFullBodyBiped* solver, UnityEngine::Vector3 offset, float crossFader) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPointEffector::EffectorLink::Apply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, offset, crossFader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, offset, crossFader);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPointEffector/EffectorLink.CrossFadeStart
void RootMotion::FinalIK::HitReaction::HitPointEffector::EffectorLink::CrossFadeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPointEffector::EffectorLink::CrossFadeStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CrossFadeStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.HitReaction/HitPointBone
#include "RootMotion/FinalIK/HitReaction_HitPointBone.hpp"
// Including type: RootMotion.FinalIK.HitReaction/HitPointBone/BoneLink
#include "RootMotion/FinalIK/HitReaction_HitPointBone_BoneLink.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBodyBiped
#include "RootMotion/FinalIK/IKSolverFullBodyBiped.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPointBone.GetLength
float RootMotion::FinalIK::HitReaction::HitPointBone::GetLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPointBone::GetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPointBone.CrossFadeStart
void RootMotion::FinalIK::HitReaction::HitPointBone::CrossFadeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPointBone::CrossFadeStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CrossFadeStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPointBone.OnApply
void RootMotion::FinalIK::HitReaction::HitPointBone::OnApply(RootMotion::FinalIK::IKSolverFullBodyBiped* solver, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPointBone::OnApply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnApply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, weight);
}
