// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Empty
#include "System/Empty.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Empty Value
System::Empty* System::Empty::_get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Empty::_get_Value");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Empty*>("System", "Empty", "Value"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Empty Value
void System::Empty::_set_Value(System::Empty* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Empty::_set_Value");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Empty", "Value", value));
}
// Autogenerated method: System.Empty.GetObjectData
void System::Empty::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Empty::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Empty..cctor
void System::Empty::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Empty::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Empty", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Empty.ToString
::Il2CppString* System::Empty::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Empty::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.EntryPointNotFoundException
#include "System/EntryPointNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Including type: System.Enum/ParseFailureKind
#include "System/Enum_ParseFailureKind.hpp"
// Including type: System.Enum/EnumResult
#include "System/Enum_EnumResult.hpp"
// Including type: System.Enum/ValuesAndNames
#include "System/Enum_ValuesAndNames.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] enumSeperatorCharArray
::Array<::Il2CppChar>* System::Enum::_get_enumSeperatorCharArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::_get_enumSeperatorCharArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System", "Enum", "enumSeperatorCharArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] enumSeperatorCharArray
void System::Enum::_set_enumSeperatorCharArray(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::_set_enumSeperatorCharArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Enum", "enumSeperatorCharArray", value));
}
// Autogenerated static field getter
// Get static field: static private System.String enumSeperator
::Il2CppString* System::Enum::_get_enumSeperator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::_get_enumSeperator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Enum", "enumSeperator"));
}
// Autogenerated static field setter
// Set static field: static private System.String enumSeperator
void System::Enum::_set_enumSeperator(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::_set_enumSeperator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Enum", "enumSeperator", value));
}
// Autogenerated method: System.Enum.GetCachedValuesAndNames
System::Enum::ValuesAndNames* System::Enum::GetCachedValuesAndNames(System::RuntimeType* enumType, bool getNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::GetCachedValuesAndNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "GetCachedValuesAndNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractType(getNames)})));
  return ::il2cpp_utils::RunMethodThrow<System::Enum::ValuesAndNames*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType, getNames);
}
// Autogenerated method: System.Enum.InternalFormattedHexString
::Il2CppString* System::Enum::InternalFormattedHexString(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::InternalFormattedHexString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "InternalFormattedHexString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Enum.InternalFormat
::Il2CppString* System::Enum::InternalFormat(System::RuntimeType* eT, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::InternalFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "InternalFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eT), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, eT, value);
}
// Autogenerated method: System.Enum.InternalFlagsFormat
::Il2CppString* System::Enum::InternalFlagsFormat(System::RuntimeType* eT, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::InternalFlagsFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "InternalFlagsFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eT), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, eT, value);
}
// Autogenerated method: System.Enum.ToUInt64
uint64_t System::Enum::ToUInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Enum.InternalCompareTo
int System::Enum::InternalCompareTo(::Il2CppObject* o1, ::Il2CppObject* o2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::InternalCompareTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "InternalCompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o1), ::il2cpp_utils::ExtractType(o2)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, o1, o2);
}
// Autogenerated method: System.Enum.InternalGetUnderlyingType
System::RuntimeType* System::Enum::InternalGetUnderlyingType(System::RuntimeType* enumType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::InternalGetUnderlyingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "InternalGetUnderlyingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType)})));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType);
}
// Autogenerated method: System.Enum.GetEnumValuesAndNames
bool System::Enum::GetEnumValuesAndNames(System::RuntimeType* enumType, ::Array<uint64_t>*& values, ::Array<::Il2CppString*>*& names) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::GetEnumValuesAndNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "GetEnumValuesAndNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType, values, names);
}
// Autogenerated method: System.Enum.InternalBoxEnum
::Il2CppObject* System::Enum::InternalBoxEnum(System::RuntimeType* enumType, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::InternalBoxEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "InternalBoxEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType, value);
}
// Autogenerated method: System.Enum.Parse
::Il2CppObject* System::Enum::Parse(System::Type* enumType, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType, value);
}
// Autogenerated method: System.Enum.Parse
::Il2CppObject* System::Enum::Parse(System::Type* enumType, ::Il2CppString* value, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType, value, ignoreCase);
}
// Autogenerated method: System.Enum.TryParseEnum
bool System::Enum::TryParseEnum(System::Type* enumType, ::Il2CppString* value, bool ignoreCase, System::Enum::EnumResult& parseResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::TryParseEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "TryParseEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(ignoreCase), ::il2cpp_utils::ExtractType(parseResult)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType, value, ignoreCase, parseResult);
}
// Autogenerated method: System.Enum.GetUnderlyingType
System::Type* System::Enum::GetUnderlyingType(System::Type* enumType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::GetUnderlyingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "GetUnderlyingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType);
}
// Autogenerated method: System.Enum.GetValues
System::Array* System::Enum::GetValues(System::Type* enumType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::GetValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "GetValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType);
}
// Autogenerated method: System.Enum.InternalGetValues
::Array<uint64_t>* System::Enum::InternalGetValues(System::RuntimeType* enumType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::InternalGetValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "InternalGetValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint64_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType);
}
// Autogenerated method: System.Enum.GetName
::Il2CppString* System::Enum::GetName(System::Type* enumType, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType, value);
}
// Autogenerated method: System.Enum.GetNames
::Array<::Il2CppString*>* System::Enum::GetNames(System::Type* enumType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::GetNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "GetNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType);
}
// Autogenerated method: System.Enum.InternalGetNames
::Array<::Il2CppString*>* System::Enum::InternalGetNames(System::RuntimeType* enumType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::InternalGetNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "InternalGetNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType);
}
// Autogenerated method: System.Enum.ToObject
::Il2CppObject* System::Enum::ToObject(System::Type* enumType, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ToObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "ToObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType, value);
}
// Autogenerated method: System.Enum.IsDefined
bool System::Enum::IsDefined(System::Type* enumType, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::IsDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType, value);
}
// Autogenerated method: System.Enum.get_value
::Il2CppObject* System::Enum::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Enum.GetValue
::Il2CppObject* System::Enum::GetValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Enum.InternalHasFlag
bool System::Enum::InternalHasFlag(System::Enum* flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::InternalHasFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalHasFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.Enum.get_hashcode
int System::Enum::get_hashcode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::get_hashcode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hashcode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Enum.ToString
::Il2CppString* System::Enum::ToString(::Il2CppString* format, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: System.Enum.CompareTo
int System::Enum::CompareTo(::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, target);
}
// Autogenerated method: System.Enum.ToString
::Il2CppString* System::Enum::ToString(::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, format);
}
// Autogenerated method: System.Enum.ToString
::Il2CppString* System::Enum::ToString(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Enum.HasFlag
bool System::Enum::HasFlag(System::Enum* flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::HasFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, flag);
}
// Autogenerated method: System.Enum.GetTypeCode
System::TypeCode System::Enum::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Enum.System.IConvertible.ToBoolean
bool System::Enum::System_IConvertible_ToBoolean(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Enum.System.IConvertible.ToChar
::Il2CppChar System::Enum::System_IConvertible_ToChar(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Enum.System.IConvertible.ToSByte
int8_t System::Enum::System_IConvertible_ToSByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Enum.System.IConvertible.ToByte
uint8_t System::Enum::System_IConvertible_ToByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Enum.System.IConvertible.ToInt16
int16_t System::Enum::System_IConvertible_ToInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Enum.System.IConvertible.ToUInt16
uint16_t System::Enum::System_IConvertible_ToUInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Enum.System.IConvertible.ToInt32
int System::Enum::System_IConvertible_ToInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Enum.System.IConvertible.ToUInt32
uint System::Enum::System_IConvertible_ToUInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Enum.System.IConvertible.ToInt64
int64_t System::Enum::System_IConvertible_ToInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Enum.System.IConvertible.ToUInt64
uint64_t System::Enum::System_IConvertible_ToUInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Enum.System.IConvertible.ToSingle
float System::Enum::System_IConvertible_ToSingle(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Enum.System.IConvertible.ToDouble
double System::Enum::System_IConvertible_ToDouble(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Enum.System.IConvertible.ToDecimal
System::Decimal System::Enum::System_IConvertible_ToDecimal(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Enum.System.IConvertible.ToDateTime
System::DateTime System::Enum::System_IConvertible_ToDateTime(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Enum.System.IConvertible.ToType
::Il2CppObject* System::Enum::System_IConvertible_ToType(System::Type* type, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.Enum.ToObject
::Il2CppObject* System::Enum::ToObject(System::Type* enumType, int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ToObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "ToObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType, value);
}
// Autogenerated method: System.Enum.ToObject
::Il2CppObject* System::Enum::ToObject(System::Type* enumType, int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ToObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "ToObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType, value);
}
// Autogenerated method: System.Enum.ToObject
::Il2CppObject* System::Enum::ToObject(System::Type* enumType, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ToObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "ToObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType, value);
}
// Autogenerated method: System.Enum.ToObject
::Il2CppObject* System::Enum::ToObject(System::Type* enumType, uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ToObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "ToObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType, value);
}
// Autogenerated method: System.Enum.ToObject
::Il2CppObject* System::Enum::ToObject(System::Type* enumType, uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ToObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "ToObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType, value);
}
// Autogenerated method: System.Enum.ToObject
::Il2CppObject* System::Enum::ToObject(System::Type* enumType, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ToObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "ToObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType, value);
}
// Autogenerated method: System.Enum.ToObject
::Il2CppObject* System::Enum::ToObject(System::Type* enumType, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ToObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "ToObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType, value);
}
// Autogenerated method: System.Enum.ToObject
::Il2CppObject* System::Enum::ToObject(System::Type* enumType, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ToObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "ToObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType, value);
}
// Autogenerated method: System.Enum.ToObject
::Il2CppObject* System::Enum::ToObject(System::Type* enumType, ::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ToObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "ToObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType, value);
}
// Autogenerated method: System.Enum.ToObject
::Il2CppObject* System::Enum::ToObject(System::Type* enumType, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ToObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", "ToObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumType, value);
}
// Autogenerated method: System.Enum..cctor
void System::Enum::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Enum", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Enum.Equals
bool System::Enum::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Enum.GetHashCode
int System::Enum::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Enum.ToString
::Il2CppString* System::Enum::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Enum/ParseFailureKind
#include "System/Enum_ParseFailureKind.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Enum/ParseFailureKind None
System::Enum::ParseFailureKind System::Enum::ParseFailureKind::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ParseFailureKind::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Enum::ParseFailureKind>("System", "Enum/ParseFailureKind", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Enum/ParseFailureKind None
void System::Enum::ParseFailureKind::_set_None(System::Enum::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ParseFailureKind::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Enum/ParseFailureKind", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Enum/ParseFailureKind Argument
System::Enum::ParseFailureKind System::Enum::ParseFailureKind::_get_Argument() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ParseFailureKind::_get_Argument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Enum::ParseFailureKind>("System", "Enum/ParseFailureKind", "Argument"));
}
// Autogenerated static field setter
// Set static field: static public System.Enum/ParseFailureKind Argument
void System::Enum::ParseFailureKind::_set_Argument(System::Enum::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ParseFailureKind::_set_Argument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Enum/ParseFailureKind", "Argument", value));
}
// Autogenerated static field getter
// Get static field: static public System.Enum/ParseFailureKind ArgumentNull
System::Enum::ParseFailureKind System::Enum::ParseFailureKind::_get_ArgumentNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ParseFailureKind::_get_ArgumentNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Enum::ParseFailureKind>("System", "Enum/ParseFailureKind", "ArgumentNull"));
}
// Autogenerated static field setter
// Set static field: static public System.Enum/ParseFailureKind ArgumentNull
void System::Enum::ParseFailureKind::_set_ArgumentNull(System::Enum::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ParseFailureKind::_set_ArgumentNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Enum/ParseFailureKind", "ArgumentNull", value));
}
// Autogenerated static field getter
// Get static field: static public System.Enum/ParseFailureKind ArgumentWithParameter
System::Enum::ParseFailureKind System::Enum::ParseFailureKind::_get_ArgumentWithParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ParseFailureKind::_get_ArgumentWithParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Enum::ParseFailureKind>("System", "Enum/ParseFailureKind", "ArgumentWithParameter"));
}
// Autogenerated static field setter
// Set static field: static public System.Enum/ParseFailureKind ArgumentWithParameter
void System::Enum::ParseFailureKind::_set_ArgumentWithParameter(System::Enum::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ParseFailureKind::_set_ArgumentWithParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Enum/ParseFailureKind", "ArgumentWithParameter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Enum/ParseFailureKind UnhandledException
System::Enum::ParseFailureKind System::Enum::ParseFailureKind::_get_UnhandledException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ParseFailureKind::_get_UnhandledException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Enum::ParseFailureKind>("System", "Enum/ParseFailureKind", "UnhandledException"));
}
// Autogenerated static field setter
// Set static field: static public System.Enum/ParseFailureKind UnhandledException
void System::Enum::ParseFailureKind::_set_UnhandledException(System::Enum::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::ParseFailureKind::_set_UnhandledException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Enum/ParseFailureKind", "UnhandledException", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum/EnumResult
#include "System/Enum_EnumResult.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Enum/EnumResult.Init
void System::Enum::EnumResult::Init(bool canMethodThrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::EnumResult::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canMethodThrow)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, canMethodThrow);
}
// Autogenerated method: System.Enum/EnumResult.SetFailure
void System::Enum::EnumResult::SetFailure(System::Exception* unhandledException) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::EnumResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unhandledException)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, unhandledException);
}
// Autogenerated method: System.Enum/EnumResult.SetFailure
void System::Enum::EnumResult::SetFailure(System::Enum::ParseFailureKind failure, ::Il2CppString* failureParameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::EnumResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failure), ::il2cpp_utils::ExtractType(failureParameter)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, failure, failureParameter);
}
// Autogenerated method: System.Enum/EnumResult.SetFailure
void System::Enum::EnumResult::SetFailure(System::Enum::ParseFailureKind failure, ::Il2CppString* failureMessageID, ::Il2CppObject* failureMessageFormatArgument) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::EnumResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failure), ::il2cpp_utils::ExtractType(failureMessageID), ::il2cpp_utils::ExtractType(failureMessageFormatArgument)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, failure, failureMessageID, failureMessageFormatArgument);
}
// Autogenerated method: System.Enum/EnumResult.GetEnumParseException
System::Exception* System::Enum::EnumResult::GetEnumParseException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Enum::EnumResult::GetEnumParseException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEnumParseException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum/ValuesAndNames
#include "System/Enum_ValuesAndNames.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.EventArgs Empty
System::EventArgs* System::EventArgs::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::EventArgs::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::EventArgs*>("System", "EventArgs", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.EventArgs Empty
void System::EventArgs::_set_Empty(System::EventArgs* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::EventArgs::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "EventArgs", "Empty", value));
}
// Autogenerated method: System.EventArgs..cctor
void System::EventArgs::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::EventArgs::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "EventArgs", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.EventHandler.Invoke
void System::EventHandler::Invoke(::Il2CppObject* sender, System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::EventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.EventHandler.BeginInvoke
System::IAsyncResult* System::EventHandler::BeginInvoke(::Il2CppObject* sender, System::EventArgs* e, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::EventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.EventHandler.EndInvoke
void System::EventHandler::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::EventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Exception/ExceptionMessageKind
#include "System/Exception_ExceptionMessageKind.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.Runtime.Serialization.SafeSerializationManager
#include "System/Runtime/Serialization/SafeSerializationManager.hpp"
// Including type: System.Diagnostics.StackTrace
#include "System/Diagnostics/StackTrace.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [OptionalFieldAttribute] Offset: 0xCABE60
// Autogenerated static field getter
// Get static field: static private System.Object s_EDILock
::Il2CppObject* System::Exception::_get_s_EDILock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::_get_s_EDILock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System", "Exception", "s_EDILock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object s_EDILock
void System::Exception::_set_s_EDILock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::_set_s_EDILock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Exception", "s_EDILock", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _COMPlusExceptionCode
int System::Exception::_get__COMPlusExceptionCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::_get__COMPlusExceptionCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Exception", "_COMPlusExceptionCode"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _COMPlusExceptionCode
void System::Exception::_set__COMPlusExceptionCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::_set__COMPlusExceptionCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Exception", "_COMPlusExceptionCode", value));
}
// Autogenerated method: System.Exception.Init
void System::Exception::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Exception.get_Message
::Il2CppString* System::Exception::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Exception.get_Data
System::Collections::IDictionary* System::Exception::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::get_Data");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionary*, false>(this, ___internal__method);
}
// Autogenerated method: System.Exception.IsImmutableAgileException
bool System::Exception::IsImmutableAgileException(System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::IsImmutableAgileException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Exception", "IsImmutableAgileException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, e);
}
// Autogenerated method: System.Exception.GetClassName
::Il2CppString* System::Exception::GetClassName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::GetClassName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClassName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Exception.get_InnerException
System::Exception* System::Exception::get_InnerException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::get_InnerException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InnerException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: System.Exception.get_StackTrace
::Il2CppString* System::Exception::get_StackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::get_StackTrace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Exception.GetStackTrace
::Il2CppString* System::Exception::GetStackTrace(bool needFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::GetStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(needFileInfo)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, needFileInfo);
}
// Autogenerated method: System.Exception.SetErrorCode
void System::Exception::SetErrorCode(int hr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::SetErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hr)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hr);
}
// Autogenerated method: System.Exception.get_Source
::Il2CppString* System::Exception::get_Source() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::get_Source");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Source", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Exception.ToString
::Il2CppString* System::Exception::ToString(bool needFileLineInfo, bool needMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(needFileLineInfo), ::il2cpp_utils::ExtractType(needMessage)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, needFileLineInfo, needMessage);
}
// Autogenerated method: System.Exception.GetObjectData
void System::Exception::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Exception.OnDeserialized
void System::Exception::OnDeserialized(System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Exception.InternalPreserveStackTrace
void System::Exception::InternalPreserveStackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::InternalPreserveStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalPreserveStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Exception.StripFileInfo
::Il2CppString* System::Exception::StripFileInfo(::Il2CppString* stackTrace, bool isRemoteStackTrace) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::StripFileInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StripFileInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stackTrace), ::il2cpp_utils::ExtractType(isRemoteStackTrace)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, stackTrace, isRemoteStackTrace);
}
// Autogenerated method: System.Exception.RestoreExceptionDispatchInfo
void System::Exception::RestoreExceptionDispatchInfo(System::Runtime::ExceptionServices::ExceptionDispatchInfo* exceptionDispatchInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::RestoreExceptionDispatchInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestoreExceptionDispatchInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exceptionDispatchInfo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, exceptionDispatchInfo);
}
// Autogenerated method: System.Exception.get_HResult
int System::Exception::get_HResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::get_HResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Exception.set_HResult
void System::Exception::set_HResult(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::set_HResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Exception.GetType
System::Type* System::Exception::GetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::GetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Exception.GetMessageFromNativeResources
::Il2CppString* System::Exception::GetMessageFromNativeResources(System::Exception::ExceptionMessageKind kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::GetMessageFromNativeResources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Exception", "GetMessageFromNativeResources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kind)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, kind);
}
// Autogenerated method: System.Exception.FixRemotingException
System::Exception* System::Exception::FixRemotingException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::FixRemotingException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixRemotingException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: System.Exception.ReportUnhandledException
void System::Exception::ReportUnhandledException(System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::ReportUnhandledException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Exception", "ReportUnhandledException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, exception);
}
// Autogenerated method: System.Exception..cctor
void System::Exception::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Exception", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Exception.ToString
::Il2CppString* System::Exception::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Exception/ExceptionMessageKind
#include "System/Exception_ExceptionMessageKind.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Exception/ExceptionMessageKind ThreadAbort
System::Exception::ExceptionMessageKind System::Exception::ExceptionMessageKind::_get_ThreadAbort() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::ExceptionMessageKind::_get_ThreadAbort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Exception::ExceptionMessageKind>("System", "Exception/ExceptionMessageKind", "ThreadAbort"));
}
// Autogenerated static field setter
// Set static field: static public System.Exception/ExceptionMessageKind ThreadAbort
void System::Exception::ExceptionMessageKind::_set_ThreadAbort(System::Exception::ExceptionMessageKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::ExceptionMessageKind::_set_ThreadAbort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Exception/ExceptionMessageKind", "ThreadAbort", value));
}
// Autogenerated static field getter
// Get static field: static public System.Exception/ExceptionMessageKind ThreadInterrupted
System::Exception::ExceptionMessageKind System::Exception::ExceptionMessageKind::_get_ThreadInterrupted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::ExceptionMessageKind::_get_ThreadInterrupted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Exception::ExceptionMessageKind>("System", "Exception/ExceptionMessageKind", "ThreadInterrupted"));
}
// Autogenerated static field setter
// Set static field: static public System.Exception/ExceptionMessageKind ThreadInterrupted
void System::Exception::ExceptionMessageKind::_set_ThreadInterrupted(System::Exception::ExceptionMessageKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::ExceptionMessageKind::_set_ThreadInterrupted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Exception/ExceptionMessageKind", "ThreadInterrupted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Exception/ExceptionMessageKind OutOfMemory
System::Exception::ExceptionMessageKind System::Exception::ExceptionMessageKind::_get_OutOfMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::ExceptionMessageKind::_get_OutOfMemory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Exception::ExceptionMessageKind>("System", "Exception/ExceptionMessageKind", "OutOfMemory"));
}
// Autogenerated static field setter
// Set static field: static public System.Exception/ExceptionMessageKind OutOfMemory
void System::Exception::ExceptionMessageKind::_set_OutOfMemory(System::Exception::ExceptionMessageKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Exception::ExceptionMessageKind::_set_OutOfMemory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Exception/ExceptionMessageKind", "OutOfMemory", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ExecutionEngineException
#include "System/ExecutionEngineException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.FieldAccessException
#include "System/FieldAccessException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.FlagsAttribute
#include "System/FlagsAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.FormatException
#include "System/FormatException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.GC
#include "System/GC.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Object EPHEMERON_TOMBSTONE
::Il2CppObject* System::GC::_get_EPHEMERON_TOMBSTONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::GC::_get_EPHEMERON_TOMBSTONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System", "GC", "EPHEMERON_TOMBSTONE"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Object EPHEMERON_TOMBSTONE
void System::GC::_set_EPHEMERON_TOMBSTONE(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::GC::_set_EPHEMERON_TOMBSTONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "GC", "EPHEMERON_TOMBSTONE", value));
}
// Autogenerated method: System.GC.GetMaxGeneration
int System::GC::GetMaxGeneration() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::GC::GetMaxGeneration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "GC", "GetMaxGeneration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.GC.InternalCollect
void System::GC::InternalCollect(int generation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::GC::InternalCollect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "GC", "InternalCollect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(generation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, generation);
}
// Autogenerated method: System.GC.register_ephemeron_array
void System::GC::register_ephemeron_array(::Array<System::Runtime::CompilerServices::Ephemeron>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::GC::register_ephemeron_array");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "GC", "register_ephemeron_array", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: System.GC.get_ephemeron_tombstone
::Il2CppObject* System::GC::get_ephemeron_tombstone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::GC::get_ephemeron_tombstone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "GC", "get_ephemeron_tombstone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.GC.Collect
void System::GC::Collect() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::GC::Collect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "GC", "Collect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.GC.KeepAlive
void System::GC::KeepAlive(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::GC::KeepAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "GC", "KeepAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.GC.get_MaxGeneration
int System::GC::get_MaxGeneration() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::GC::get_MaxGeneration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "GC", "get_MaxGeneration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.GC._SuppressFinalize
void System::GC::_SuppressFinalize(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::GC::_SuppressFinalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "GC", "_SuppressFinalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, o);
}
// Autogenerated method: System.GC.SuppressFinalize
void System::GC::SuppressFinalize(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::GC::SuppressFinalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "GC", "SuppressFinalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.GC._ReRegisterForFinalize
void System::GC::_ReRegisterForFinalize(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::GC::_ReRegisterForFinalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "GC", "_ReRegisterForFinalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, o);
}
// Autogenerated method: System.GC.ReRegisterForFinalize
void System::GC::ReRegisterForFinalize(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::GC::ReRegisterForFinalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "GC", "ReRegisterForFinalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.GC..cctor
void System::GC::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::GC::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "GC", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DateTimeFormat
#include "System/DateTimeFormat.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.TimeSpan NullOffset
System::TimeSpan System::DateTimeFormat::_get_NullOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::_get_NullOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TimeSpan>("System", "DateTimeFormat", "NullOffset"));
}
// Autogenerated static field setter
// Set static field: static readonly System.TimeSpan NullOffset
void System::DateTimeFormat::_set_NullOffset(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::_set_NullOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeFormat", "NullOffset", value));
}
// Autogenerated static field getter
// Get static field: static System.Char[] allStandardFormats
::Array<::Il2CppChar>* System::DateTimeFormat::_get_allStandardFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::_get_allStandardFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System", "DateTimeFormat", "allStandardFormats"));
}
// Autogenerated static field setter
// Set static field: static System.Char[] allStandardFormats
void System::DateTimeFormat::_set_allStandardFormats(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::_set_allStandardFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeFormat", "allStandardFormats", value));
}
// Autogenerated static field getter
// Get static field: static System.String[] fixedNumberFormats
::Array<::Il2CppString*>* System::DateTimeFormat::_get_fixedNumberFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::_get_fixedNumberFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("System", "DateTimeFormat", "fixedNumberFormats"));
}
// Autogenerated static field setter
// Set static field: static System.String[] fixedNumberFormats
void System::DateTimeFormat::_set_fixedNumberFormats(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::_set_fixedNumberFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeFormat", "fixedNumberFormats", value));
}
// Autogenerated method: System.DateTimeFormat.FormatDigits
void System::DateTimeFormat::FormatDigits(System::Text::StringBuilder* outputBuffer, int value, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::FormatDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, outputBuffer, value, len);
}
// Autogenerated method: System.DateTimeFormat.FormatDigits
void System::DateTimeFormat::FormatDigits(System::Text::StringBuilder* outputBuffer, int value, int len, bool overrideLengthLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::FormatDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(overrideLengthLimit)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, outputBuffer, value, len, overrideLengthLimit);
}
// Autogenerated method: System.DateTimeFormat.HebrewFormatDigits
void System::DateTimeFormat::HebrewFormatDigits(System::Text::StringBuilder* outputBuffer, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::HebrewFormatDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "HebrewFormatDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(digits)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, outputBuffer, digits);
}
// Autogenerated method: System.DateTimeFormat.ParseRepeatPattern
int System::DateTimeFormat::ParseRepeatPattern(::Il2CppString* format, int pos, ::Il2CppChar patternChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::ParseRepeatPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "ParseRepeatPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(patternChar)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, pos, patternChar);
}
// Autogenerated method: System.DateTimeFormat.FormatDayOfWeek
::Il2CppString* System::DateTimeFormat::FormatDayOfWeek(int dayOfWeek, int repeat, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::FormatDayOfWeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatDayOfWeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dayOfWeek), ::il2cpp_utils::ExtractType(repeat), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dayOfWeek, repeat, dtfi);
}
// Autogenerated method: System.DateTimeFormat.FormatMonth
::Il2CppString* System::DateTimeFormat::FormatMonth(int month, int repeatCount, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::FormatMonth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(repeatCount), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, month, repeatCount, dtfi);
}
// Autogenerated method: System.DateTimeFormat.FormatHebrewMonthName
::Il2CppString* System::DateTimeFormat::FormatHebrewMonthName(System::DateTime time, int month, int repeatCount, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::FormatHebrewMonthName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatHebrewMonthName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(repeatCount), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, month, repeatCount, dtfi);
}
// Autogenerated method: System.DateTimeFormat.ParseQuoteString
int System::DateTimeFormat::ParseQuoteString(::Il2CppString* format, int pos, System::Text::StringBuilder* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::ParseQuoteString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "ParseQuoteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, pos, result);
}
// Autogenerated method: System.DateTimeFormat.ParseNextChar
int System::DateTimeFormat::ParseNextChar(::Il2CppString* format, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::ParseNextChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "ParseNextChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, pos);
}
// Autogenerated method: System.DateTimeFormat.IsUseGenitiveForm
bool System::DateTimeFormat::IsUseGenitiveForm(::Il2CppString* format, int index, int tokenLen, ::Il2CppChar patternToMatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::IsUseGenitiveForm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "IsUseGenitiveForm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(tokenLen), ::il2cpp_utils::ExtractType(patternToMatch)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, index, tokenLen, patternToMatch);
}
// Autogenerated method: System.DateTimeFormat.FormatCustomized
::Il2CppString* System::DateTimeFormat::FormatCustomized(System::DateTime dateTime, ::Il2CppString* format, System::Globalization::DateTimeFormatInfo* dtfi, System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::FormatCustomized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatCustomized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateTime, format, dtfi, offset);
}
// Autogenerated method: System.DateTimeFormat.FormatCustomizedTimeZone
void System::DateTimeFormat::FormatCustomizedTimeZone(System::DateTime dateTime, System::TimeSpan offset, ::Il2CppString* format, int tokenLen, bool timeOnly, System::Text::StringBuilder* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::FormatCustomizedTimeZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatCustomizedTimeZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(tokenLen), ::il2cpp_utils::ExtractType(timeOnly), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateTime, offset, format, tokenLen, timeOnly, result);
}
// Autogenerated method: System.DateTimeFormat.FormatCustomizedRoundripTimeZone
void System::DateTimeFormat::FormatCustomizedRoundripTimeZone(System::DateTime dateTime, System::TimeSpan offset, System::Text::StringBuilder* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::FormatCustomizedRoundripTimeZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatCustomizedRoundripTimeZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateTime, offset, result);
}
// Autogenerated method: System.DateTimeFormat.GetRealFormat
::Il2CppString* System::DateTimeFormat::GetRealFormat(::Il2CppString* format, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::GetRealFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "GetRealFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, dtfi);
}
// Autogenerated method: System.DateTimeFormat.ExpandPredefinedFormat
::Il2CppString* System::DateTimeFormat::ExpandPredefinedFormat(::Il2CppString* format, System::DateTime& dateTime, System::Globalization::DateTimeFormatInfo*& dtfi, System::TimeSpan& offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::ExpandPredefinedFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "ExpandPredefinedFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, dateTime, dtfi, offset);
}
// Autogenerated method: System.DateTimeFormat.Format
::Il2CppString* System::DateTimeFormat::Format(System::DateTime dateTime, ::Il2CppString* format, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateTime, format, dtfi);
}
// Autogenerated method: System.DateTimeFormat.Format
::Il2CppString* System::DateTimeFormat::Format(System::DateTime dateTime, ::Il2CppString* format, System::Globalization::DateTimeFormatInfo* dtfi, System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateTime, format, dtfi, offset);
}
// Autogenerated method: System.DateTimeFormat.InvalidFormatForLocal
void System::DateTimeFormat::InvalidFormatForLocal(::Il2CppString* format, System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::InvalidFormatForLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "InvalidFormatForLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dateTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, dateTime);
}
// Autogenerated method: System.DateTimeFormat.InvalidFormatForUtc
void System::DateTimeFormat::InvalidFormatForUtc(::Il2CppString* format, System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::InvalidFormatForUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "InvalidFormatForUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dateTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, dateTime);
}
// Autogenerated method: System.DateTimeFormat..cctor
void System::DateTimeFormat::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeFormat::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DateTimeParse
#include "System/DateTimeParse.hpp"
// Including type: System.DateTimeParse/MatchNumberDelegate
#include "System/DateTimeParse_MatchNumberDelegate.hpp"
// Including type: System.DateTimeParse/DTT
#include "System/DateTimeParse_DTT.hpp"
// Including type: System.DateTimeParse/TM
#include "System/DateTimeParse_TM.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.Globalization.DateTimeStyles
#include "System/Globalization/DateTimeStyles.hpp"
// Including type: System.DateTimeResult
#include "System/DateTimeResult.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.__DTString
#include "System/__DTString.hpp"
// Including type: System.DateTimeToken
#include "System/DateTimeToken.hpp"
// Including type: System.DateTimeRawInfo
#include "System/DateTimeRawInfo.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.ParsingInfo
#include "System/ParsingInfo.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.DateTimeParse/MatchNumberDelegate m_hebrewNumberParser
System::DateTimeParse::MatchNumberDelegate* System::DateTimeParse::_get_m_hebrewNumberParser() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::_get_m_hebrewNumberParser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::MatchNumberDelegate*>("System", "DateTimeParse", "m_hebrewNumberParser"));
}
// Autogenerated static field setter
// Set static field: static System.DateTimeParse/MatchNumberDelegate m_hebrewNumberParser
void System::DateTimeParse::_set_m_hebrewNumberParser(System::DateTimeParse::MatchNumberDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::_set_m_hebrewNumberParser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse", "m_hebrewNumberParser", value));
}
// Autogenerated static field getter
// Get static field: static private System.DateTimeParse/DS[][] dateParsingStates
::Array<::Array<System::DateTimeParse::DS>*>* System::DateTimeParse::_get_dateParsingStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::_get_dateParsingStates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Array<System::DateTimeParse::DS>*>*>("System", "DateTimeParse", "dateParsingStates"));
}
// Autogenerated static field setter
// Set static field: static private System.DateTimeParse/DS[][] dateParsingStates
void System::DateTimeParse::_set_dateParsingStates(::Array<::Array<System::DateTimeParse::DS>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::_set_dateParsingStates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse", "dateParsingStates", value));
}
// Autogenerated method: System.DateTimeParse.ParseExact
System::DateTime System::DateTimeParse::ParseExact(::Il2CppString* s, ::Il2CppString* format, System::Globalization::DateTimeFormatInfo* dtfi, System::Globalization::DateTimeStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::ParseExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, format, dtfi, style);
}
// Autogenerated method: System.DateTimeParse.TryParseExact
bool System::DateTimeParse::TryParseExact(::Il2CppString* s, ::Il2CppString* format, System::Globalization::DateTimeFormatInfo* dtfi, System::Globalization::DateTimeStyles style, System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::TryParseExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParseExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, format, dtfi, style, result);
}
// Autogenerated method: System.DateTimeParse.TryParseExactMultiple
bool System::DateTimeParse::TryParseExactMultiple(::Il2CppString* s, ::Array<::Il2CppString*>* formats, System::Globalization::DateTimeFormatInfo* dtfi, System::Globalization::DateTimeStyles style, System::DateTime& result, System::TimeSpan& offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::TryParseExactMultiple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParseExactMultiple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(formats), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractIndependentType<System::DateTime>(), ::il2cpp_utils::ExtractIndependentType<System::TimeSpan>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, formats, dtfi, style, result, offset);
}
// Autogenerated method: System.DateTimeParse.TryParseExactMultiple
bool System::DateTimeParse::TryParseExactMultiple(::Il2CppString* s, ::Array<::Il2CppString*>* formats, System::Globalization::DateTimeFormatInfo* dtfi, System::Globalization::DateTimeStyles style, System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::TryParseExactMultiple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParseExactMultiple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(formats), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, formats, dtfi, style, result);
}
// Autogenerated method: System.DateTimeParse.MatchWord
bool System::DateTimeParse::MatchWord(System::__DTString& str, ::Il2CppString* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::MatchWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, target);
}
// Autogenerated method: System.DateTimeParse.GetTimeZoneName
bool System::DateTimeParse::GetTimeZoneName(System::__DTString& str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetTimeZoneName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetTimeZoneName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.DateTimeParse.IsDigit
bool System::DateTimeParse::IsDigit(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::IsDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "IsDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.DateTimeParse.ParseFraction
bool System::DateTimeParse::ParseFraction(System::__DTString& str, double& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::ParseFraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseFraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractIndependentType<double>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, result);
}
// Autogenerated method: System.DateTimeParse.ParseTimeZone
bool System::DateTimeParse::ParseTimeZone(System::__DTString& str, System::TimeSpan& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::ParseTimeZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseTimeZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, result);
}
// Autogenerated method: System.DateTimeParse.HandleTimeZone
bool System::DateTimeParse::HandleTimeZone(System::__DTString& str, System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::HandleTimeZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "HandleTimeZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, result);
}
// Autogenerated method: System.DateTimeParse.Lex
bool System::DateTimeParse::Lex(System::DateTimeParse::DS dps, System::__DTString& str, System::DateTimeToken& dtok, System::DateTimeRawInfo& raw, System::DateTimeResult& result, System::Globalization::DateTimeFormatInfo*& dtfi, System::Globalization::DateTimeStyles styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::Lex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "Lex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dps), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(dtok), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(styles)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dps, str, dtok, raw, result, dtfi, styles);
}
// Autogenerated method: System.DateTimeParse.VerifyValidPunctuation
bool System::DateTimeParse::VerifyValidPunctuation(System::__DTString& str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::VerifyValidPunctuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "VerifyValidPunctuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.DateTimeParse.GetYearMonthDayOrder
bool System::DateTimeParse::GetYearMonthDayOrder(::Il2CppString* datePattern, System::Globalization::DateTimeFormatInfo* dtfi, int& order) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetYearMonthDayOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetYearMonthDayOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(datePattern), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractIndependentType<int>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, datePattern, dtfi, order);
}
// Autogenerated method: System.DateTimeParse.GetYearMonthOrder
bool System::DateTimeParse::GetYearMonthOrder(::Il2CppString* pattern, System::Globalization::DateTimeFormatInfo* dtfi, int& order) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetYearMonthOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetYearMonthOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractIndependentType<int>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pattern, dtfi, order);
}
// Autogenerated method: System.DateTimeParse.GetMonthDayOrder
bool System::DateTimeParse::GetMonthDayOrder(::Il2CppString* pattern, System::Globalization::DateTimeFormatInfo* dtfi, int& order) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetMonthDayOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetMonthDayOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractIndependentType<int>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pattern, dtfi, order);
}
// Autogenerated method: System.DateTimeParse.TryAdjustYear
bool System::DateTimeParse::TryAdjustYear(System::DateTimeResult& result, int year, int& adjustedYear) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::TryAdjustYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryAdjustYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractIndependentType<int>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, year, adjustedYear);
}
// Autogenerated method: System.DateTimeParse.SetDateYMD
bool System::DateTimeParse::SetDateYMD(System::DateTimeResult& result, int year, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::SetDateYMD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "SetDateYMD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, year, month, day);
}
// Autogenerated method: System.DateTimeParse.SetDateMDY
bool System::DateTimeParse::SetDateMDY(System::DateTimeResult& result, int month, int day, int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::SetDateMDY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "SetDateMDY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(year)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, month, day, year);
}
// Autogenerated method: System.DateTimeParse.SetDateDMY
bool System::DateTimeParse::SetDateDMY(System::DateTimeResult& result, int day, int month, int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::SetDateDMY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "SetDateDMY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(year)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, day, month, year);
}
// Autogenerated method: System.DateTimeParse.SetDateYDM
bool System::DateTimeParse::SetDateYDM(System::DateTimeResult& result, int year, int day, int month) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::SetDateYDM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "SetDateYDM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(month)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, year, day, month);
}
// Autogenerated method: System.DateTimeParse.GetDefaultYear
void System::DateTimeParse::GetDefaultYear(System::DateTimeResult& result, System::Globalization::DateTimeStyles& styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetDefaultYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDefaultYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(styles)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, styles);
}
// Autogenerated method: System.DateTimeParse.GetDayOfNN
bool System::DateTimeParse::GetDayOfNN(System::DateTimeResult& result, System::Globalization::DateTimeStyles& styles, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetDayOfNN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfNN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, styles, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfNNN
bool System::DateTimeParse::GetDayOfNNN(System::DateTimeResult& result, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetDayOfNNN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfNNN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfMN
bool System::DateTimeParse::GetDayOfMN(System::DateTimeResult& result, System::Globalization::DateTimeStyles& styles, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetDayOfMN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfMN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, styles, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.GetHebrewDayOfNM
bool System::DateTimeParse::GetHebrewDayOfNM(System::DateTimeResult& result, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetHebrewDayOfNM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetHebrewDayOfNM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfNM
bool System::DateTimeParse::GetDayOfNM(System::DateTimeResult& result, System::Globalization::DateTimeStyles& styles, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetDayOfNM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfNM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, styles, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfMNN
bool System::DateTimeParse::GetDayOfMNN(System::DateTimeResult& result, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetDayOfMNN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfMNN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfYNN
bool System::DateTimeParse::GetDayOfYNN(System::DateTimeResult& result, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetDayOfYNN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfYNN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfNNY
bool System::DateTimeParse::GetDayOfNNY(System::DateTimeResult& result, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetDayOfNNY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfNNY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfYMN
bool System::DateTimeParse::GetDayOfYMN(System::DateTimeResult& result, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetDayOfYMN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfYMN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfYN
bool System::DateTimeParse::GetDayOfYN(System::DateTimeResult& result, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetDayOfYN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfYN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfYM
bool System::DateTimeParse::GetDayOfYM(System::DateTimeResult& result, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetDayOfYM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfYM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.AdjustTimeMark
void System::DateTimeParse::AdjustTimeMark(System::Globalization::DateTimeFormatInfo* dtfi, System::DateTimeRawInfo& raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::AdjustTimeMark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "AdjustTimeMark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(raw)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dtfi, raw);
}
// Autogenerated method: System.DateTimeParse.AdjustHour
bool System::DateTimeParse::AdjustHour(int& hour, System::DateTimeParse::TM timeMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::AdjustHour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "AdjustHour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(timeMark)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hour, timeMark);
}
// Autogenerated method: System.DateTimeParse.GetTimeOfN
bool System::DateTimeParse::GetTimeOfN(System::Globalization::DateTimeFormatInfo* dtfi, System::DateTimeResult& result, System::DateTimeRawInfo& raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetTimeOfN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetTimeOfN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dtfi, result, raw);
}
// Autogenerated method: System.DateTimeParse.GetTimeOfNN
bool System::DateTimeParse::GetTimeOfNN(System::Globalization::DateTimeFormatInfo* dtfi, System::DateTimeResult& result, System::DateTimeRawInfo& raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetTimeOfNN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetTimeOfNN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dtfi, result, raw);
}
// Autogenerated method: System.DateTimeParse.GetTimeOfNNN
bool System::DateTimeParse::GetTimeOfNNN(System::Globalization::DateTimeFormatInfo* dtfi, System::DateTimeResult& result, System::DateTimeRawInfo& raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetTimeOfNNN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetTimeOfNNN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dtfi, result, raw);
}
// Autogenerated method: System.DateTimeParse.GetDateOfDSN
bool System::DateTimeParse::GetDateOfDSN(System::DateTimeResult& result, System::DateTimeRawInfo& raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetDateOfDSN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDateOfDSN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw);
}
// Autogenerated method: System.DateTimeParse.GetDateOfNDS
bool System::DateTimeParse::GetDateOfNDS(System::DateTimeResult& result, System::DateTimeRawInfo& raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetDateOfNDS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDateOfNDS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw);
}
// Autogenerated method: System.DateTimeParse.GetDateOfNNDS
bool System::DateTimeParse::GetDateOfNNDS(System::DateTimeResult& result, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetDateOfNNDS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDateOfNNDS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.ProcessDateTimeSuffix
bool System::DateTimeParse::ProcessDateTimeSuffix(System::DateTimeResult& result, System::DateTimeRawInfo& raw, System::DateTimeToken& dtok) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::ProcessDateTimeSuffix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ProcessDateTimeSuffix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtok)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw, dtok);
}
// Autogenerated method: System.DateTimeParse.ProcessHebrewTerminalState
bool System::DateTimeParse::ProcessHebrewTerminalState(System::DateTimeParse::DS dps, System::DateTimeResult& result, System::Globalization::DateTimeStyles& styles, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::ProcessHebrewTerminalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ProcessHebrewTerminalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dps), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dps, result, styles, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.ProcessTerminaltState
bool System::DateTimeParse::ProcessTerminaltState(System::DateTimeParse::DS dps, System::DateTimeResult& result, System::Globalization::DateTimeStyles& styles, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::ProcessTerminaltState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ProcessTerminaltState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dps), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dps, result, styles, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.Parse
System::DateTime System::DateTimeParse::Parse(::Il2CppString* s, System::Globalization::DateTimeFormatInfo* dtfi, System::Globalization::DateTimeStyles styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(styles)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, dtfi, styles);
}
// Autogenerated method: System.DateTimeParse.TryParse
bool System::DateTimeParse::TryParse(::Il2CppString* s, System::Globalization::DateTimeFormatInfo* dtfi, System::Globalization::DateTimeStyles styles, System::DateTime& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractIndependentType<System::DateTime>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, dtfi, styles, result);
}
// Autogenerated method: System.DateTimeParse.TryParse
bool System::DateTimeParse::TryParse(::Il2CppString* s, System::Globalization::DateTimeFormatInfo* dtfi, System::Globalization::DateTimeStyles styles, System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, dtfi, styles, result);
}
// Autogenerated method: System.DateTimeParse.DetermineTimeZoneAdjustments
bool System::DateTimeParse::DetermineTimeZoneAdjustments(System::DateTimeResult& result, System::Globalization::DateTimeStyles styles, bool bTimeOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DetermineTimeZoneAdjustments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "DetermineTimeZoneAdjustments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(bTimeOnly)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, styles, bTimeOnly);
}
// Autogenerated method: System.DateTimeParse.DateTimeOffsetTimeZonePostProcessing
bool System::DateTimeParse::DateTimeOffsetTimeZonePostProcessing(System::DateTimeResult& result, System::Globalization::DateTimeStyles styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DateTimeOffsetTimeZonePostProcessing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "DateTimeOffsetTimeZonePostProcessing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(styles)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, styles);
}
// Autogenerated method: System.DateTimeParse.AdjustTimeZoneToUniversal
bool System::DateTimeParse::AdjustTimeZoneToUniversal(System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::AdjustTimeZoneToUniversal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "AdjustTimeZoneToUniversal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result);
}
// Autogenerated method: System.DateTimeParse.AdjustTimeZoneToLocal
bool System::DateTimeParse::AdjustTimeZoneToLocal(System::DateTimeResult& result, bool bTimeOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::AdjustTimeZoneToLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "AdjustTimeZoneToLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(bTimeOnly)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, bTimeOnly);
}
// Autogenerated method: System.DateTimeParse.ParseISO8601
bool System::DateTimeParse::ParseISO8601(System::DateTimeRawInfo& raw, System::__DTString& str, System::Globalization::DateTimeStyles styles, System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::ParseISO8601");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseISO8601", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, raw, str, styles, result);
}
// Autogenerated method: System.DateTimeParse.MatchHebrewDigits
bool System::DateTimeParse::MatchHebrewDigits(System::__DTString& str, int digitLen, int& number) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::MatchHebrewDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchHebrewDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(digitLen), ::il2cpp_utils::ExtractIndependentType<int>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, digitLen, number);
}
// Autogenerated method: System.DateTimeParse.ParseDigits
bool System::DateTimeParse::ParseDigits(System::__DTString& str, int digitLen, int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::ParseDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(digitLen), ::il2cpp_utils::ExtractIndependentType<int>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, digitLen, result);
}
// Autogenerated method: System.DateTimeParse.ParseDigits
bool System::DateTimeParse::ParseDigits(System::__DTString& str, int minDigitLen, int maxDigitLen, int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::ParseDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(minDigitLen), ::il2cpp_utils::ExtractType(maxDigitLen), ::il2cpp_utils::ExtractIndependentType<int>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, minDigitLen, maxDigitLen, result);
}
// Autogenerated method: System.DateTimeParse.ParseFractionExact
bool System::DateTimeParse::ParseFractionExact(System::__DTString& str, int maxDigitLen, double& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::ParseFractionExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseFractionExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(maxDigitLen), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, maxDigitLen, result);
}
// Autogenerated method: System.DateTimeParse.ParseSign
bool System::DateTimeParse::ParseSign(System::__DTString& str, bool& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::ParseSign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseSign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, result);
}
// Autogenerated method: System.DateTimeParse.ParseTimeZoneOffset
bool System::DateTimeParse::ParseTimeZoneOffset(System::__DTString& str, int len, System::TimeSpan& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::ParseTimeZoneOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseTimeZoneOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, len, result);
}
// Autogenerated method: System.DateTimeParse.MatchAbbreviatedMonthName
bool System::DateTimeParse::MatchAbbreviatedMonthName(System::__DTString& str, System::Globalization::DateTimeFormatInfo* dtfi, int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::MatchAbbreviatedMonthName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchAbbreviatedMonthName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, dtfi, result);
}
// Autogenerated method: System.DateTimeParse.MatchMonthName
bool System::DateTimeParse::MatchMonthName(System::__DTString& str, System::Globalization::DateTimeFormatInfo* dtfi, int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::MatchMonthName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchMonthName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, dtfi, result);
}
// Autogenerated method: System.DateTimeParse.MatchAbbreviatedDayName
bool System::DateTimeParse::MatchAbbreviatedDayName(System::__DTString& str, System::Globalization::DateTimeFormatInfo* dtfi, int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::MatchAbbreviatedDayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchAbbreviatedDayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, dtfi, result);
}
// Autogenerated method: System.DateTimeParse.MatchDayName
bool System::DateTimeParse::MatchDayName(System::__DTString& str, System::Globalization::DateTimeFormatInfo* dtfi, int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::MatchDayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchDayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, dtfi, result);
}
// Autogenerated method: System.DateTimeParse.MatchEraName
bool System::DateTimeParse::MatchEraName(System::__DTString& str, System::Globalization::DateTimeFormatInfo* dtfi, int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::MatchEraName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchEraName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, dtfi, result);
}
// Autogenerated method: System.DateTimeParse.MatchTimeMark
bool System::DateTimeParse::MatchTimeMark(System::__DTString& str, System::Globalization::DateTimeFormatInfo* dtfi, System::DateTimeParse::TM& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::MatchTimeMark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchTimeMark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, dtfi, result);
}
// Autogenerated method: System.DateTimeParse.MatchAbbreviatedTimeMark
bool System::DateTimeParse::MatchAbbreviatedTimeMark(System::__DTString& str, System::Globalization::DateTimeFormatInfo* dtfi, System::DateTimeParse::TM& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::MatchAbbreviatedTimeMark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchAbbreviatedTimeMark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, dtfi, result);
}
// Autogenerated method: System.DateTimeParse.CheckNewValue
bool System::DateTimeParse::CheckNewValue(int& currentValue, int newValue, ::Il2CppChar patternChar, System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::CheckNewValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "CheckNewValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentValue), ::il2cpp_utils::ExtractType(newValue), ::il2cpp_utils::ExtractType(patternChar), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, currentValue, newValue, patternChar, result);
}
// Autogenerated method: System.DateTimeParse.GetDateTimeNow
System::DateTime System::DateTimeParse::GetDateTimeNow(System::DateTimeResult& result, System::Globalization::DateTimeStyles& styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetDateTimeNow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDateTimeNow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(styles)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, styles);
}
// Autogenerated method: System.DateTimeParse.CheckDefaultDateTime
bool System::DateTimeParse::CheckDefaultDateTime(System::DateTimeResult& result, System::Globalization::Calendar*& cal, System::Globalization::DateTimeStyles styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::CheckDefaultDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "CheckDefaultDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(cal), ::il2cpp_utils::ExtractType(styles)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, cal, styles);
}
// Autogenerated method: System.DateTimeParse.ExpandPredefinedFormat
::Il2CppString* System::DateTimeParse::ExpandPredefinedFormat(::Il2CppString* format, System::Globalization::DateTimeFormatInfo*& dtfi, System::ParsingInfo& parseInfo, System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::ExpandPredefinedFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ExpandPredefinedFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(parseInfo), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, dtfi, parseInfo, result);
}
// Autogenerated method: System.DateTimeParse.ParseByFormat
bool System::DateTimeParse::ParseByFormat(System::__DTString& str, System::__DTString& format, System::ParsingInfo& parseInfo, System::Globalization::DateTimeFormatInfo* dtfi, System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::ParseByFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseByFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(parseInfo), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, format, parseInfo, dtfi, result);
}
// Autogenerated method: System.DateTimeParse.TryParseQuoteString
bool System::DateTimeParse::TryParseQuoteString(::Il2CppString* format, int pos, System::Text::StringBuilder* result, int& returnValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::TryParseQuoteString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParseQuoteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractIndependentType<int>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, pos, result, returnValue);
}
// Autogenerated method: System.DateTimeParse.DoStrictParse
bool System::DateTimeParse::DoStrictParse(::Il2CppString* s, ::Il2CppString* formatParam, System::Globalization::DateTimeStyles styles, System::Globalization::DateTimeFormatInfo* dtfi, System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DoStrictParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "DoStrictParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(formatParam), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, formatParam, styles, dtfi, result);
}
// Autogenerated method: System.DateTimeParse.GetDateTimeParseException
System::Exception* System::DateTimeParse::GetDateTimeParseException(System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::GetDateTimeParseException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDateTimeParseException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result);
}
// Autogenerated method: System.DateTimeParse..cctor
void System::DateTimeParse::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DateTimeParse/MatchNumberDelegate
#include "System/DateTimeParse_MatchNumberDelegate.hpp"
// Including type: System.__DTString
#include "System/__DTString.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.DateTimeParse/MatchNumberDelegate.Invoke
bool System::DateTimeParse::MatchNumberDelegate::Invoke(System::__DTString& str, int digitLen, int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::MatchNumberDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(digitLen), ::il2cpp_utils::ExtractIndependentType<int>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, str, digitLen, result);
}
// Autogenerated method: System.DateTimeParse/MatchNumberDelegate.BeginInvoke
System::IAsyncResult* System::DateTimeParse::MatchNumberDelegate::BeginInvoke(System::__DTString& str, int digitLen, int& result, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::MatchNumberDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(digitLen), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, str, digitLen, result, callback, object);
}
// Autogenerated method: System.DateTimeParse/MatchNumberDelegate.EndInvoke
bool System::DateTimeParse::MatchNumberDelegate::EndInvoke(System::__DTString& str, int& result, System::IAsyncResult* __result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::MatchNumberDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractType(__result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, str, result, __result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.DateTimeParse/DTT
#include "System/DateTimeParse_DTT.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT End
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT End
void System::DateTimeParse::DTT::_set_End(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "End", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT NumEnd
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_NumEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_NumEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "NumEnd"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT NumEnd
void System::DateTimeParse::DTT::_set_NumEnd(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_NumEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "NumEnd", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT NumAmpm
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_NumAmpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_NumAmpm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "NumAmpm"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT NumAmpm
void System::DateTimeParse::DTT::_set_NumAmpm(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_NumAmpm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "NumAmpm", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT NumSpace
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_NumSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_NumSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "NumSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT NumSpace
void System::DateTimeParse::DTT::_set_NumSpace(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_NumSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "NumSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT NumDatesep
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_NumDatesep() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_NumDatesep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "NumDatesep"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT NumDatesep
void System::DateTimeParse::DTT::_set_NumDatesep(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_NumDatesep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "NumDatesep", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT NumTimesep
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_NumTimesep() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_NumTimesep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "NumTimesep"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT NumTimesep
void System::DateTimeParse::DTT::_set_NumTimesep(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_NumTimesep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "NumTimesep", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT MonthEnd
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_MonthEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_MonthEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "MonthEnd"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT MonthEnd
void System::DateTimeParse::DTT::_set_MonthEnd(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_MonthEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "MonthEnd", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT MonthSpace
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_MonthSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_MonthSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "MonthSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT MonthSpace
void System::DateTimeParse::DTT::_set_MonthSpace(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_MonthSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "MonthSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT MonthDatesep
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_MonthDatesep() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_MonthDatesep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "MonthDatesep"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT MonthDatesep
void System::DateTimeParse::DTT::_set_MonthDatesep(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_MonthDatesep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "MonthDatesep", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT NumDatesuff
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_NumDatesuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_NumDatesuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "NumDatesuff"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT NumDatesuff
void System::DateTimeParse::DTT::_set_NumDatesuff(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_NumDatesuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "NumDatesuff", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT NumTimesuff
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_NumTimesuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_NumTimesuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "NumTimesuff"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT NumTimesuff
void System::DateTimeParse::DTT::_set_NumTimesuff(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_NumTimesuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "NumTimesuff", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT DayOfWeek
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_DayOfWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_DayOfWeek");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "DayOfWeek"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT DayOfWeek
void System::DateTimeParse::DTT::_set_DayOfWeek(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_DayOfWeek");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "DayOfWeek", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT YearSpace
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_YearSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_YearSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "YearSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT YearSpace
void System::DateTimeParse::DTT::_set_YearSpace(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_YearSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "YearSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT YearDateSep
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_YearDateSep() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_YearDateSep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "YearDateSep"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT YearDateSep
void System::DateTimeParse::DTT::_set_YearDateSep(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_YearDateSep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "YearDateSep", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT YearEnd
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_YearEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_YearEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "YearEnd"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT YearEnd
void System::DateTimeParse::DTT::_set_YearEnd(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_YearEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "YearEnd", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT TimeZone
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_TimeZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_TimeZone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "TimeZone"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT TimeZone
void System::DateTimeParse::DTT::_set_TimeZone(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_TimeZone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "TimeZone", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT Era
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_Era() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_Era");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "Era"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT Era
void System::DateTimeParse::DTT::_set_Era(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_Era");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "Era", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT NumUTCTimeMark
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_NumUTCTimeMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_NumUTCTimeMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "NumUTCTimeMark"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT NumUTCTimeMark
void System::DateTimeParse::DTT::_set_NumUTCTimeMark(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_NumUTCTimeMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "NumUTCTimeMark", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT Unk
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_Unk() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_Unk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "Unk"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT Unk
void System::DateTimeParse::DTT::_set_Unk(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_Unk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "Unk", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT NumLocalTimeMark
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_NumLocalTimeMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_NumLocalTimeMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "NumLocalTimeMark"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT NumLocalTimeMark
void System::DateTimeParse::DTT::_set_NumLocalTimeMark(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_NumLocalTimeMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "NumLocalTimeMark", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT Max
System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "Max"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT Max
void System::DateTimeParse::DTT::_set_Max(System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DTT::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "Max", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.DateTimeParse/TM
#include "System/DateTimeParse_TM.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/TM NotSet
System::DateTimeParse::TM System::DateTimeParse::TM::_get_NotSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::TM::_get_NotSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::TM>("System", "DateTimeParse/TM", "NotSet"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/TM NotSet
void System::DateTimeParse::TM::_set_NotSet(System::DateTimeParse::TM value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::TM::_set_NotSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/TM", "NotSet", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/TM AM
System::DateTimeParse::TM System::DateTimeParse::TM::_get_AM() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::TM::_get_AM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::TM>("System", "DateTimeParse/TM", "AM"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/TM AM
void System::DateTimeParse::TM::_set_AM(System::DateTimeParse::TM value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::TM::_set_AM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/TM", "AM", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/TM PM
System::DateTimeParse::TM System::DateTimeParse::TM::_get_PM() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::TM::_get_PM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::TM>("System", "DateTimeParse/TM", "PM"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/TM PM
void System::DateTimeParse::TM::_set_PM(System::DateTimeParse::TM value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::TM::_set_PM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/TM", "PM", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.DateTimeParse/DS
#include "System/DateTimeParse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS BEGIN
System::DateTimeParse::DS System::DateTimeParse::DS::_get_BEGIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_BEGIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "BEGIN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS BEGIN
void System::DateTimeParse::DS::_set_BEGIN(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_BEGIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "BEGIN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS N
System::DateTimeParse::DS System::DateTimeParse::DS::_get_N() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_N");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "N"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS N
void System::DateTimeParse::DS::_set_N(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_N");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "N", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS NN
System::DateTimeParse::DS System::DateTimeParse::DS::_get_NN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_NN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "NN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS NN
void System::DateTimeParse::DS::_set_NN(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_NN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "NN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_Nd
System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_Nd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_D_Nd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_Nd"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_Nd
void System::DateTimeParse::DS::_set_D_Nd(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_D_Nd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_Nd", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_NN
System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_NN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_D_NN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_NN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_NN
void System::DateTimeParse::DS::_set_D_NN(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_D_NN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_NN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_NNd
System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_NNd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_D_NNd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_NNd"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_NNd
void System::DateTimeParse::DS::_set_D_NNd(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_D_NNd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_NNd", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_M
System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_M() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_D_M");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_M"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_M
void System::DateTimeParse::DS::_set_D_M(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_D_M");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_M", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_MN
System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_MN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_D_MN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_MN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_MN
void System::DateTimeParse::DS::_set_D_MN(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_D_MN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_MN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_NM
System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_NM() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_D_NM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_NM"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_NM
void System::DateTimeParse::DS::_set_D_NM(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_D_NM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_NM", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_MNd
System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_MNd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_D_MNd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_MNd"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_MNd
void System::DateTimeParse::DS::_set_D_MNd(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_D_MNd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_MNd", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_NDS
System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_NDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_D_NDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_NDS"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_NDS
void System::DateTimeParse::DS::_set_D_NDS(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_D_NDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_NDS", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_Y
System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_D_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_Y"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_Y
void System::DateTimeParse::DS::_set_D_Y(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_D_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_Y", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_YN
System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_YN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_D_YN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_YN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_YN
void System::DateTimeParse::DS::_set_D_YN(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_D_YN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_YN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_YNd
System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_YNd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_D_YNd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_YNd"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_YNd
void System::DateTimeParse::DS::_set_D_YNd(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_D_YNd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_YNd", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_YM
System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_YM() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_D_YM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_YM"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_YM
void System::DateTimeParse::DS::_set_D_YM(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_D_YM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_YM", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_YMd
System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_YMd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_D_YMd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_YMd"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_YMd
void System::DateTimeParse::DS::_set_D_YMd(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_D_YMd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_YMd", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_S
System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_D_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_S"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_S
void System::DateTimeParse::DS::_set_D_S(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_D_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_S", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS T_S
System::DateTimeParse::DS System::DateTimeParse::DS::_get_T_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_T_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "T_S"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS T_S
void System::DateTimeParse::DS::_set_T_S(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_T_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "T_S", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS T_Nt
System::DateTimeParse::DS System::DateTimeParse::DS::_get_T_Nt() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_T_Nt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "T_Nt"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS T_Nt
void System::DateTimeParse::DS::_set_T_Nt(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_T_Nt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "T_Nt", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS T_NNt
System::DateTimeParse::DS System::DateTimeParse::DS::_get_T_NNt() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_T_NNt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "T_NNt"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS T_NNt
void System::DateTimeParse::DS::_set_T_NNt(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_T_NNt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "T_NNt", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS ERROR
System::DateTimeParse::DS System::DateTimeParse::DS::_get_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "ERROR"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS ERROR
void System::DateTimeParse::DS::_set_ERROR(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "ERROR", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_NN
System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_NN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_DX_NN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_NN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_NN
void System::DateTimeParse::DS::_set_DX_NN(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_DX_NN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_NN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_NNN
System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_NNN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_DX_NNN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_NNN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_NNN
void System::DateTimeParse::DS::_set_DX_NNN(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_DX_NNN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_NNN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_MN
System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_MN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_DX_MN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_MN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_MN
void System::DateTimeParse::DS::_set_DX_MN(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_DX_MN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_MN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_NM
System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_NM() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_DX_NM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_NM"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_NM
void System::DateTimeParse::DS::_set_DX_NM(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_DX_NM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_NM", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_MNN
System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_MNN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_DX_MNN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_MNN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_MNN
void System::DateTimeParse::DS::_set_DX_MNN(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_DX_MNN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_MNN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_DS
System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_DS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_DX_DS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_DS"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_DS
void System::DateTimeParse::DS::_set_DX_DS(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_DX_DS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_DS", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_DSN
System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_DSN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_DX_DSN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_DSN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_DSN
void System::DateTimeParse::DS::_set_DX_DSN(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_DX_DSN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_DSN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_NDS
System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_NDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_DX_NDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_NDS"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_NDS
void System::DateTimeParse::DS::_set_DX_NDS(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_DX_NDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_NDS", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_NNDS
System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_NNDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_DX_NNDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_NNDS"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_NNDS
void System::DateTimeParse::DS::_set_DX_NNDS(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_DX_NNDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_NNDS", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_YNN
System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_YNN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_DX_YNN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_YNN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_YNN
void System::DateTimeParse::DS::_set_DX_YNN(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_DX_YNN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_YNN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_YMN
System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_YMN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_DX_YMN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_YMN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_YMN
void System::DateTimeParse::DS::_set_DX_YMN(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_DX_YMN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_YMN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_YN
System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_YN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_DX_YN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_YN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_YN
void System::DateTimeParse::DS::_set_DX_YN(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_DX_YN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_YN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_YM
System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_YM() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_DX_YM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_YM"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_YM
void System::DateTimeParse::DS::_set_DX_YM(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_DX_YM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_YM", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS TX_N
System::DateTimeParse::DS System::DateTimeParse::DS::_get_TX_N() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_TX_N");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "TX_N"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS TX_N
void System::DateTimeParse::DS::_set_TX_N(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_TX_N");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "TX_N", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS TX_NN
System::DateTimeParse::DS System::DateTimeParse::DS::_get_TX_NN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_TX_NN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "TX_NN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS TX_NN
void System::DateTimeParse::DS::_set_TX_NN(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_TX_NN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "TX_NN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS TX_NNN
System::DateTimeParse::DS System::DateTimeParse::DS::_get_TX_NNN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_TX_NNN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "TX_NNN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS TX_NNN
void System::DateTimeParse::DS::_set_TX_NNN(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_TX_NNN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "TX_NNN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS TX_TS
System::DateTimeParse::DS System::DateTimeParse::DS::_get_TX_TS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_TX_TS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "TX_TS"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS TX_TS
void System::DateTimeParse::DS::_set_TX_TS(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_TX_TS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "TX_TS", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_NNY
System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_NNY() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_get_DX_NNY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_NNY"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_NNY
void System::DateTimeParse::DS::_set_DX_NNY(System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeParse::DS::_set_DX_NNY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_NNY", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.__DTString
#include "System/__DTString.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.TokenType
#include "System/TokenType.hpp"
// Including type: System.DTSubString
#include "System/DTSubString.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Char[] WhiteSpaceChecks
::Array<::Il2CppChar>* System::__DTString::_get_WhiteSpaceChecks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::_get_WhiteSpaceChecks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System", "__DTString", "WhiteSpaceChecks"));
}
// Autogenerated static field setter
// Set static field: static private System.Char[] WhiteSpaceChecks
void System::__DTString::_set_WhiteSpaceChecks(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::_set_WhiteSpaceChecks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "__DTString", "WhiteSpaceChecks", value));
}
// Autogenerated method: System.__DTString.get_CompareInfo
System::Globalization::CompareInfo* System::__DTString::get_CompareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::get_CompareInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CompareInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CompareInfo*, false>(*this, ___internal__method);
}
// Autogenerated method: System.__DTString.GetNext
bool System::__DTString::GetNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::GetNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.__DTString.AtEnd
bool System::__DTString::AtEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::AtEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AtEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.__DTString.Advance
bool System::__DTString::Advance(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::Advance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Advance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, count);
}
// Autogenerated method: System.__DTString.GetRegularToken
void System::__DTString::GetRegularToken(System::TokenType& tokenType, int& tokenValue, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::GetRegularToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRegularToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::TokenType>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractType(dtfi)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, tokenType, tokenValue, dtfi);
}
// Autogenerated method: System.__DTString.GetSeparatorToken
System::TokenType System::__DTString::GetSeparatorToken(System::Globalization::DateTimeFormatInfo* dtfi, int& indexBeforeSeparator, ::Il2CppChar& charBeforeSeparator) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::GetSeparatorToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSeparatorToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()})));
  return ::il2cpp_utils::RunMethodThrow<System::TokenType, false>(*this, ___internal__method, dtfi, indexBeforeSeparator, charBeforeSeparator);
}
// Autogenerated method: System.__DTString.MatchSpecifiedWord
bool System::__DTString::MatchSpecifiedWord(::Il2CppString* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::MatchSpecifiedWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MatchSpecifiedWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, target);
}
// Autogenerated method: System.__DTString.MatchSpecifiedWord
bool System::__DTString::MatchSpecifiedWord(::Il2CppString* target, int endIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::MatchSpecifiedWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MatchSpecifiedWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(endIndex)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, target, endIndex);
}
// Autogenerated method: System.__DTString.MatchSpecifiedWords
bool System::__DTString::MatchSpecifiedWords(::Il2CppString* target, bool checkWordBoundary, int& matchLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::MatchSpecifiedWords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MatchSpecifiedWords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(checkWordBoundary), ::il2cpp_utils::ExtractType(matchLength)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, target, checkWordBoundary, matchLength);
}
// Autogenerated method: System.__DTString.Match
bool System::__DTString::Match(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::Match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, str);
}
// Autogenerated method: System.__DTString.Match
bool System::__DTString::Match(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::Match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, ch);
}
// Autogenerated method: System.__DTString.MatchLongestWords
int System::__DTString::MatchLongestWords(::Array<::Il2CppString*>* words, int& maxMatchStrLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::MatchLongestWords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MatchLongestWords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(words), ::il2cpp_utils::ExtractType(maxMatchStrLen)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, words, maxMatchStrLen);
}
// Autogenerated method: System.__DTString.GetRepeatCount
int System::__DTString::GetRepeatCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::GetRepeatCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRepeatCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.__DTString.GetNextDigit
bool System::__DTString::GetNextDigit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::GetNextDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetNextDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.__DTString.GetChar
::Il2CppChar System::__DTString::GetChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::GetChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(*this, ___internal__method);
}
// Autogenerated method: System.__DTString.GetDigit
int System::__DTString::GetDigit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::GetDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.__DTString.SkipWhiteSpaces
void System::__DTString::SkipWhiteSpaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::SkipWhiteSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SkipWhiteSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.__DTString.SkipWhiteSpaceCurrent
bool System::__DTString::SkipWhiteSpaceCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::SkipWhiteSpaceCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SkipWhiteSpaceCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.__DTString.TrimTail
void System::__DTString::TrimTail() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::TrimTail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrimTail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.__DTString.RemoveTrailingInQuoteSpaces
void System::__DTString::RemoveTrailingInQuoteSpaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::RemoveTrailingInQuoteSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RemoveTrailingInQuoteSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.__DTString.RemoveLeadingInQuoteSpaces
void System::__DTString::RemoveLeadingInQuoteSpaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::RemoveLeadingInQuoteSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RemoveLeadingInQuoteSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.__DTString.GetSubString
System::DTSubString System::__DTString::GetSubString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::GetSubString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSubString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::DTSubString, false>(*this, ___internal__method);
}
// Autogenerated method: System.__DTString.ConsumeSubString
void System::__DTString::ConsumeSubString(System::DTSubString sub) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::ConsumeSubString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeSubString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sub)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, sub);
}
// Autogenerated method: System.__DTString..cctor
void System::__DTString::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__DTString::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "__DTString", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.DTSubStringType
#include "System/DTSubStringType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.DTSubStringType Unknown
System::DTSubStringType System::DTSubStringType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DTSubStringType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DTSubStringType>("System", "DTSubStringType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.DTSubStringType Unknown
void System::DTSubStringType::_set_Unknown(System::DTSubStringType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DTSubStringType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DTSubStringType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.DTSubStringType Invalid
System::DTSubStringType System::DTSubStringType::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DTSubStringType::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DTSubStringType>("System", "DTSubStringType", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public System.DTSubStringType Invalid
void System::DTSubStringType::_set_Invalid(System::DTSubStringType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DTSubStringType::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DTSubStringType", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.DTSubStringType Number
System::DTSubStringType System::DTSubStringType::_get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DTSubStringType::_get_Number");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DTSubStringType>("System", "DTSubStringType", "Number"));
}
// Autogenerated static field setter
// Set static field: static public System.DTSubStringType Number
void System::DTSubStringType::_set_Number(System::DTSubStringType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DTSubStringType::_set_Number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DTSubStringType", "Number", value));
}
// Autogenerated static field getter
// Get static field: static public System.DTSubStringType End
System::DTSubStringType System::DTSubStringType::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DTSubStringType::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DTSubStringType>("System", "DTSubStringType", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.DTSubStringType End
void System::DTSubStringType::_set_End(System::DTSubStringType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DTSubStringType::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DTSubStringType", "End", value));
}
// Autogenerated static field getter
// Get static field: static public System.DTSubStringType Other
System::DTSubStringType System::DTSubStringType::_get_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DTSubStringType::_get_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DTSubStringType>("System", "DTSubStringType", "Other"));
}
// Autogenerated static field setter
// Set static field: static public System.DTSubStringType Other
void System::DTSubStringType::_set_Other(System::DTSubStringType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DTSubStringType::_set_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DTSubStringType", "Other", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DTSubString
#include "System/DTSubString.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.DTSubString.get_Item
::Il2CppChar System::DTSubString::get_Item(int relativeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DTSubString::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativeIndex)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(*this, ___internal__method, relativeIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.DateTimeRawInfo
#include "System/DateTimeRawInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.DateTimeRawInfo.Init
void System::DateTimeRawInfo::Init(int* numberBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeRawInfo::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numberBuffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, numberBuffer);
}
// Autogenerated method: System.DateTimeRawInfo.AddNumber
void System::DateTimeRawInfo::AddNumber(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeRawInfo::AddNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.DateTimeRawInfo.GetNumber
int System::DateTimeRawInfo::GetNumber(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeRawInfo::GetNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ParseFailureKind
#include "System/ParseFailureKind.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ParseFailureKind None
System::ParseFailureKind System::ParseFailureKind::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFailureKind::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParseFailureKind>("System", "ParseFailureKind", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFailureKind None
void System::ParseFailureKind::_set_None(System::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFailureKind::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFailureKind", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFailureKind ArgumentNull
System::ParseFailureKind System::ParseFailureKind::_get_ArgumentNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFailureKind::_get_ArgumentNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParseFailureKind>("System", "ParseFailureKind", "ArgumentNull"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFailureKind ArgumentNull
void System::ParseFailureKind::_set_ArgumentNull(System::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFailureKind::_set_ArgumentNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFailureKind", "ArgumentNull", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFailureKind Format
System::ParseFailureKind System::ParseFailureKind::_get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFailureKind::_get_Format");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParseFailureKind>("System", "ParseFailureKind", "Format"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFailureKind Format
void System::ParseFailureKind::_set_Format(System::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFailureKind::_set_Format");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFailureKind", "Format", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFailureKind FormatWithParameter
System::ParseFailureKind System::ParseFailureKind::_get_FormatWithParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFailureKind::_get_FormatWithParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParseFailureKind>("System", "ParseFailureKind", "FormatWithParameter"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFailureKind FormatWithParameter
void System::ParseFailureKind::_set_FormatWithParameter(System::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFailureKind::_set_FormatWithParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFailureKind", "FormatWithParameter", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFailureKind FormatBadDateTimeCalendar
System::ParseFailureKind System::ParseFailureKind::_get_FormatBadDateTimeCalendar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFailureKind::_get_FormatBadDateTimeCalendar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParseFailureKind>("System", "ParseFailureKind", "FormatBadDateTimeCalendar"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFailureKind FormatBadDateTimeCalendar
void System::ParseFailureKind::_set_FormatBadDateTimeCalendar(System::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFailureKind::_set_FormatBadDateTimeCalendar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFailureKind", "FormatBadDateTimeCalendar", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ParseFlags
#include "System/ParseFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ParseFlags HaveYear
System::ParseFlags System::ParseFlags::_get_HaveYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_get_HaveYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParseFlags>("System", "ParseFlags", "HaveYear"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags HaveYear
void System::ParseFlags::_set_HaveYear(System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_set_HaveYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "HaveYear", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags HaveMonth
System::ParseFlags System::ParseFlags::_get_HaveMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_get_HaveMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParseFlags>("System", "ParseFlags", "HaveMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags HaveMonth
void System::ParseFlags::_set_HaveMonth(System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_set_HaveMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "HaveMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags HaveDay
System::ParseFlags System::ParseFlags::_get_HaveDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_get_HaveDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParseFlags>("System", "ParseFlags", "HaveDay"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags HaveDay
void System::ParseFlags::_set_HaveDay(System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_set_HaveDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "HaveDay", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags HaveHour
System::ParseFlags System::ParseFlags::_get_HaveHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_get_HaveHour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParseFlags>("System", "ParseFlags", "HaveHour"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags HaveHour
void System::ParseFlags::_set_HaveHour(System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_set_HaveHour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "HaveHour", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags HaveMinute
System::ParseFlags System::ParseFlags::_get_HaveMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_get_HaveMinute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParseFlags>("System", "ParseFlags", "HaveMinute"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags HaveMinute
void System::ParseFlags::_set_HaveMinute(System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_set_HaveMinute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "HaveMinute", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags HaveSecond
System::ParseFlags System::ParseFlags::_get_HaveSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_get_HaveSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParseFlags>("System", "ParseFlags", "HaveSecond"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags HaveSecond
void System::ParseFlags::_set_HaveSecond(System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_set_HaveSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "HaveSecond", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags HaveTime
System::ParseFlags System::ParseFlags::_get_HaveTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_get_HaveTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParseFlags>("System", "ParseFlags", "HaveTime"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags HaveTime
void System::ParseFlags::_set_HaveTime(System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_set_HaveTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "HaveTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags HaveDate
System::ParseFlags System::ParseFlags::_get_HaveDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_get_HaveDate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParseFlags>("System", "ParseFlags", "HaveDate"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags HaveDate
void System::ParseFlags::_set_HaveDate(System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_set_HaveDate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "HaveDate", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags TimeZoneUsed
System::ParseFlags System::ParseFlags::_get_TimeZoneUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_get_TimeZoneUsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParseFlags>("System", "ParseFlags", "TimeZoneUsed"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags TimeZoneUsed
void System::ParseFlags::_set_TimeZoneUsed(System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_set_TimeZoneUsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "TimeZoneUsed", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags TimeZoneUtc
System::ParseFlags System::ParseFlags::_get_TimeZoneUtc() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_get_TimeZoneUtc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParseFlags>("System", "ParseFlags", "TimeZoneUtc"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags TimeZoneUtc
void System::ParseFlags::_set_TimeZoneUtc(System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_set_TimeZoneUtc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "TimeZoneUtc", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags ParsedMonthName
System::ParseFlags System::ParseFlags::_get_ParsedMonthName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_get_ParsedMonthName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParseFlags>("System", "ParseFlags", "ParsedMonthName"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags ParsedMonthName
void System::ParseFlags::_set_ParsedMonthName(System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_set_ParsedMonthName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "ParsedMonthName", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags CaptureOffset
System::ParseFlags System::ParseFlags::_get_CaptureOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_get_CaptureOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParseFlags>("System", "ParseFlags", "CaptureOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags CaptureOffset
void System::ParseFlags::_set_CaptureOffset(System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_set_CaptureOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "CaptureOffset", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags YearDefault
System::ParseFlags System::ParseFlags::_get_YearDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_get_YearDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParseFlags>("System", "ParseFlags", "YearDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags YearDefault
void System::ParseFlags::_set_YearDefault(System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_set_YearDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "YearDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags Rfc1123Pattern
System::ParseFlags System::ParseFlags::_get_Rfc1123Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_get_Rfc1123Pattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParseFlags>("System", "ParseFlags", "Rfc1123Pattern"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags Rfc1123Pattern
void System::ParseFlags::_set_Rfc1123Pattern(System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_set_Rfc1123Pattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "Rfc1123Pattern", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags UtcSortPattern
System::ParseFlags System::ParseFlags::_get_UtcSortPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_get_UtcSortPattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParseFlags>("System", "ParseFlags", "UtcSortPattern"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags UtcSortPattern
void System::ParseFlags::_set_UtcSortPattern(System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseFlags::_set_UtcSortPattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "UtcSortPattern", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DateTimeResult
#include "System/DateTimeResult.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.DateTimeResult.Init
void System::DateTimeResult::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeResult::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.DateTimeResult.SetDate
void System::DateTimeResult::SetDate(int year, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeResult::SetDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, year, month, day);
}
// Autogenerated method: System.DateTimeResult.SetFailure
void System::DateTimeResult::SetFailure(System::ParseFailureKind failure, ::Il2CppString* failureMessageID, ::Il2CppObject* failureMessageFormatArgument) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failure), ::il2cpp_utils::ExtractType(failureMessageID), ::il2cpp_utils::ExtractType(failureMessageFormatArgument)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, failure, failureMessageID, failureMessageFormatArgument);
}
// Autogenerated method: System.DateTimeResult.SetFailure
void System::DateTimeResult::SetFailure(System::ParseFailureKind failure, ::Il2CppString* failureMessageID, ::Il2CppObject* failureMessageFormatArgument, ::Il2CppString* failureArgumentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DateTimeResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failure), ::il2cpp_utils::ExtractType(failureMessageID), ::il2cpp_utils::ExtractType(failureMessageFormatArgument), ::il2cpp_utils::ExtractType(failureArgumentName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, failure, failureMessageID, failureMessageFormatArgument, failureArgumentName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ParsingInfo
#include "System/ParsingInfo.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.DateTimeParse/MatchNumberDelegate
#include "System/DateTimeParse_MatchNumberDelegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ParsingInfo.Init
void System::ParsingInfo::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingInfo::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.TokenType
#include "System/TokenType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.TokenType NumberToken
System::TokenType System::TokenType::_get_NumberToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_NumberToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "NumberToken"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType NumberToken
void System::TokenType::_set_NumberToken(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_NumberToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "NumberToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType YearNumberToken
System::TokenType System::TokenType::_get_YearNumberToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_YearNumberToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "YearNumberToken"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType YearNumberToken
void System::TokenType::_set_YearNumberToken(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_YearNumberToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "YearNumberToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType Am
System::TokenType System::TokenType::_get_Am() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_Am");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "Am"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType Am
void System::TokenType::_set_Am(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_Am");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "Am", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType Pm
System::TokenType System::TokenType::_get_Pm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_Pm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "Pm"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType Pm
void System::TokenType::_set_Pm(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_Pm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "Pm", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType MonthToken
System::TokenType System::TokenType::_get_MonthToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_MonthToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "MonthToken"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType MonthToken
void System::TokenType::_set_MonthToken(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_MonthToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "MonthToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType EndOfString
System::TokenType System::TokenType::_get_EndOfString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_EndOfString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "EndOfString"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType EndOfString
void System::TokenType::_set_EndOfString(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_EndOfString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "EndOfString", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType DayOfWeekToken
System::TokenType System::TokenType::_get_DayOfWeekToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_DayOfWeekToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "DayOfWeekToken"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType DayOfWeekToken
void System::TokenType::_set_DayOfWeekToken(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_DayOfWeekToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "DayOfWeekToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType TimeZoneToken
System::TokenType System::TokenType::_get_TimeZoneToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_TimeZoneToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "TimeZoneToken"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType TimeZoneToken
void System::TokenType::_set_TimeZoneToken(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_TimeZoneToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "TimeZoneToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType EraToken
System::TokenType System::TokenType::_get_EraToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_EraToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "EraToken"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType EraToken
void System::TokenType::_set_EraToken(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_EraToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "EraToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType DateWordToken
System::TokenType System::TokenType::_get_DateWordToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_DateWordToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "DateWordToken"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType DateWordToken
void System::TokenType::_set_DateWordToken(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_DateWordToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "DateWordToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType UnknownToken
System::TokenType System::TokenType::_get_UnknownToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_UnknownToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "UnknownToken"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType UnknownToken
void System::TokenType::_set_UnknownToken(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_UnknownToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "UnknownToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType HebrewNumber
System::TokenType System::TokenType::_get_HebrewNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_HebrewNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "HebrewNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType HebrewNumber
void System::TokenType::_set_HebrewNumber(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_HebrewNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "HebrewNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType JapaneseEraToken
System::TokenType System::TokenType::_get_JapaneseEraToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_JapaneseEraToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "JapaneseEraToken"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType JapaneseEraToken
void System::TokenType::_set_JapaneseEraToken(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_JapaneseEraToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "JapaneseEraToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType TEraToken
System::TokenType System::TokenType::_get_TEraToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_TEraToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "TEraToken"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType TEraToken
void System::TokenType::_set_TEraToken(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_TEraToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "TEraToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType IgnorableSymbol
System::TokenType System::TokenType::_get_IgnorableSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_IgnorableSymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "IgnorableSymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType IgnorableSymbol
void System::TokenType::_set_IgnorableSymbol(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_IgnorableSymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "IgnorableSymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_Unk
System::TokenType System::TokenType::_get_SEP_Unk() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_SEP_Unk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "SEP_Unk"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_Unk
void System::TokenType::_set_SEP_Unk(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_SEP_Unk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_Unk", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_End
System::TokenType System::TokenType::_get_SEP_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_SEP_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "SEP_End"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_End
void System::TokenType::_set_SEP_End(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_SEP_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_End", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_Space
System::TokenType System::TokenType::_get_SEP_Space() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_SEP_Space");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "SEP_Space"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_Space
void System::TokenType::_set_SEP_Space(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_SEP_Space");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_Space", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_Am
System::TokenType System::TokenType::_get_SEP_Am() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_SEP_Am");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "SEP_Am"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_Am
void System::TokenType::_set_SEP_Am(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_SEP_Am");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_Am", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_Pm
System::TokenType System::TokenType::_get_SEP_Pm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_SEP_Pm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "SEP_Pm"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_Pm
void System::TokenType::_set_SEP_Pm(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_SEP_Pm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_Pm", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_Date
System::TokenType System::TokenType::_get_SEP_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_SEP_Date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "SEP_Date"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_Date
void System::TokenType::_set_SEP_Date(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_SEP_Date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_Date", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_Time
System::TokenType System::TokenType::_get_SEP_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_SEP_Time");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "SEP_Time"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_Time
void System::TokenType::_set_SEP_Time(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_SEP_Time");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_Time", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_YearSuff
System::TokenType System::TokenType::_get_SEP_YearSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_SEP_YearSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "SEP_YearSuff"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_YearSuff
void System::TokenType::_set_SEP_YearSuff(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_SEP_YearSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_YearSuff", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_MonthSuff
System::TokenType System::TokenType::_get_SEP_MonthSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_SEP_MonthSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "SEP_MonthSuff"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_MonthSuff
void System::TokenType::_set_SEP_MonthSuff(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_SEP_MonthSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_MonthSuff", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_DaySuff
System::TokenType System::TokenType::_get_SEP_DaySuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_SEP_DaySuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "SEP_DaySuff"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_DaySuff
void System::TokenType::_set_SEP_DaySuff(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_SEP_DaySuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_DaySuff", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_HourSuff
System::TokenType System::TokenType::_get_SEP_HourSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_SEP_HourSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "SEP_HourSuff"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_HourSuff
void System::TokenType::_set_SEP_HourSuff(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_SEP_HourSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_HourSuff", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_MinuteSuff
System::TokenType System::TokenType::_get_SEP_MinuteSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_SEP_MinuteSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "SEP_MinuteSuff"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_MinuteSuff
void System::TokenType::_set_SEP_MinuteSuff(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_SEP_MinuteSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_MinuteSuff", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_SecondSuff
System::TokenType System::TokenType::_get_SEP_SecondSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_SEP_SecondSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "SEP_SecondSuff"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_SecondSuff
void System::TokenType::_set_SEP_SecondSuff(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_SEP_SecondSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_SecondSuff", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_LocalTimeMark
System::TokenType System::TokenType::_get_SEP_LocalTimeMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_SEP_LocalTimeMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "SEP_LocalTimeMark"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_LocalTimeMark
void System::TokenType::_set_SEP_LocalTimeMark(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_SEP_LocalTimeMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_LocalTimeMark", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_DateOrOffset
System::TokenType System::TokenType::_get_SEP_DateOrOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_SEP_DateOrOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "SEP_DateOrOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_DateOrOffset
void System::TokenType::_set_SEP_DateOrOffset(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_SEP_DateOrOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_DateOrOffset", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType RegularTokenMask
System::TokenType System::TokenType::_get_RegularTokenMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_RegularTokenMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "RegularTokenMask"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType RegularTokenMask
void System::TokenType::_set_RegularTokenMask(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_RegularTokenMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "RegularTokenMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SeparatorTokenMask
System::TokenType System::TokenType::_get_SeparatorTokenMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_get_SeparatorTokenMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TokenType>("System", "TokenType", "SeparatorTokenMask"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SeparatorTokenMask
void System::TokenType::_set_SeparatorTokenMask(System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TokenType::_set_SeparatorTokenMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SeparatorTokenMask", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Guid/GuidStyles
#include "System/Guid_GuidStyles.hpp"
// Including type: System.Guid/GuidParseThrowStyle
#include "System/Guid_GuidParseThrowStyle.hpp"
// Including type: System.Guid/ParseFailureKind
#include "System/Guid_ParseFailureKind.hpp"
// Including type: System.Guid/GuidResult
#include "System/Guid_GuidResult.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Empty
System::Guid System::Guid::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid>("System", "Guid", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Empty
void System::Guid::_set_Empty(System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object _rngAccess
::Il2CppObject* System::Guid::_get__rngAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::_get__rngAccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System", "Guid", "_rngAccess"));
}
// Autogenerated static field setter
// Set static field: static private System.Object _rngAccess
void System::Guid::_set__rngAccess(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::_set__rngAccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid", "_rngAccess", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.RandomNumberGenerator _rng
System::Security::Cryptography::RandomNumberGenerator* System::Guid::_get__rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::_get__rng");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::RandomNumberGenerator*>("System", "Guid", "_rng"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.RandomNumberGenerator _rng
void System::Guid::_set__rng(System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::_set__rng");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid", "_rng", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.RandomNumberGenerator _fastRng
System::Security::Cryptography::RandomNumberGenerator* System::Guid::_get__fastRng() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::_get__fastRng");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::RandomNumberGenerator*>("System", "Guid", "_fastRng"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.RandomNumberGenerator _fastRng
void System::Guid::_set__fastRng(System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::_set__fastRng");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid", "_fastRng", value));
}
// Autogenerated method: System.Guid.Parse
System::Guid System::Guid::Parse(::Il2CppString* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Guid.TryParseGuid
bool System::Guid::TryParseGuid(::Il2CppString* g, System::Guid::GuidStyles flags, System::Guid::GuidResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::TryParseGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "TryParseGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, g, flags, result);
}
// Autogenerated method: System.Guid.TryParseGuidWithHexPrefix
bool System::Guid::TryParseGuidWithHexPrefix(::Il2CppString* guidString, System::Guid::GuidResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::TryParseGuidWithHexPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "TryParseGuidWithHexPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guidString), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, guidString, result);
}
// Autogenerated method: System.Guid.TryParseGuidWithNoStyle
bool System::Guid::TryParseGuidWithNoStyle(::Il2CppString* guidString, System::Guid::GuidResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::TryParseGuidWithNoStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "TryParseGuidWithNoStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guidString), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, guidString, result);
}
// Autogenerated method: System.Guid.TryParseGuidWithDashes
bool System::Guid::TryParseGuidWithDashes(::Il2CppString* guidString, System::Guid::GuidResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::TryParseGuidWithDashes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "TryParseGuidWithDashes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guidString), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, guidString, result);
}
// Autogenerated method: System.Guid.StringToShort
bool System::Guid::StringToShort(::Il2CppString* str, int requiredLength, int flags, int16_t& result, System::Guid::GuidResult& parseResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::StringToShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "StringToShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(requiredLength), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<int16_t>(), ::il2cpp_utils::ExtractType(parseResult)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, requiredLength, flags, result, parseResult);
}
// Autogenerated method: System.Guid.StringToShort
bool System::Guid::StringToShort(::Il2CppString* str, int* parsePos, int requiredLength, int flags, int16_t& result, System::Guid::GuidResult& parseResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::StringToShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "StringToShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(parsePos), ::il2cpp_utils::ExtractType(requiredLength), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<int16_t>(), ::il2cpp_utils::ExtractType(parseResult)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, parsePos, requiredLength, flags, result, parseResult);
}
// Autogenerated method: System.Guid.StringToInt
bool System::Guid::StringToInt(::Il2CppString* str, int requiredLength, int flags, int& result, System::Guid::GuidResult& parseResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::StringToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "StringToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(requiredLength), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractType(parseResult)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, requiredLength, flags, result, parseResult);
}
// Autogenerated method: System.Guid.StringToInt
bool System::Guid::StringToInt(::Il2CppString* str, int& parsePos, int requiredLength, int flags, int& result, System::Guid::GuidResult& parseResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::StringToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "StringToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(parsePos), ::il2cpp_utils::ExtractType(requiredLength), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractType(parseResult)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, parsePos, requiredLength, flags, result, parseResult);
}
// Autogenerated method: System.Guid.StringToInt
bool System::Guid::StringToInt(::Il2CppString* str, int* parsePos, int requiredLength, int flags, int& result, System::Guid::GuidResult& parseResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::StringToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "StringToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(parsePos), ::il2cpp_utils::ExtractType(requiredLength), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractType(parseResult)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, parsePos, requiredLength, flags, result, parseResult);
}
// Autogenerated method: System.Guid.StringToLong
bool System::Guid::StringToLong(::Il2CppString* str, int& parsePos, int flags, int64_t& result, System::Guid::GuidResult& parseResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::StringToLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "StringToLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(parsePos), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractType(parseResult)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, parsePos, flags, result, parseResult);
}
// Autogenerated method: System.Guid.StringToLong
bool System::Guid::StringToLong(::Il2CppString* str, int* parsePos, int flags, int64_t& result, System::Guid::GuidResult& parseResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::StringToLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "StringToLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(parsePos), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractType(parseResult)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, parsePos, flags, result, parseResult);
}
// Autogenerated method: System.Guid.EatAllWhitespace
::Il2CppString* System::Guid::EatAllWhitespace(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::EatAllWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "EatAllWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Guid.IsHexPrefix
bool System::Guid::IsHexPrefix(::Il2CppString* str, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::IsHexPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "IsHexPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, i);
}
// Autogenerated method: System.Guid.ToByteArray
::Array<uint8_t>* System::Guid::ToByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::ToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Guid.Equals
bool System::Guid::Equals(System::Guid g) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, g);
}
// Autogenerated method: System.Guid.GetResult
int System::Guid::GetResult(uint me, uint them) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(me), ::il2cpp_utils::ExtractType(them)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, me, them);
}
// Autogenerated method: System.Guid.CompareTo
int System::Guid::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Guid.CompareTo
int System::Guid::CompareTo(System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Guid.ToString
::Il2CppString* System::Guid::ToString(::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format);
}
// Autogenerated method: System.Guid.HexToChar
::Il2CppChar System::Guid::HexToChar(int a) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::HexToChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "HexToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a);
}
// Autogenerated method: System.Guid.HexsToChars
int System::Guid::HexsToChars(::Il2CppChar* guidChars, int offset, int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::HexsToChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "HexsToChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guidChars), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, guidChars, offset, a, b);
}
// Autogenerated method: System.Guid.HexsToChars
int System::Guid::HexsToChars(::Il2CppChar* guidChars, int offset, int a, int b, bool hex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::HexsToChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "HexsToChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guidChars), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(hex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, guidChars, offset, a, b, hex);
}
// Autogenerated method: System.Guid.ToString
::Il2CppString* System::Guid::ToString(::Il2CppString* format, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format, provider);
}
// Autogenerated method: System.Guid.NewGuid
System::Guid System::Guid::NewGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::NewGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "NewGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Guid..cctor
void System::Guid::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Guid.ToString
::Il2CppString* System::Guid::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Guid.GetHashCode
int System::Guid::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.Guid.Equals
bool System::Guid::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, o);
}
// Autogenerated method: System.Guid.op_Equality
bool System::operator ==(const System::Guid& a, const System::Guid& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: System.Guid.op_Inequality
bool System::operator !=(const System::Guid& a, const System::Guid& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Guid/GuidStyles
#include "System/Guid_GuidStyles.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles None
System::Guid::GuidStyles System::Guid::GuidStyles::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::GuidStyles>("System", "Guid/GuidStyles", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles None
void System::Guid::GuidStyles::_set_None(System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles AllowParenthesis
System::Guid::GuidStyles System::Guid::GuidStyles::_get_AllowParenthesis() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_get_AllowParenthesis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::GuidStyles>("System", "Guid/GuidStyles", "AllowParenthesis"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles AllowParenthesis
void System::Guid::GuidStyles::_set_AllowParenthesis(System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_set_AllowParenthesis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "AllowParenthesis", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles AllowBraces
System::Guid::GuidStyles System::Guid::GuidStyles::_get_AllowBraces() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_get_AllowBraces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::GuidStyles>("System", "Guid/GuidStyles", "AllowBraces"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles AllowBraces
void System::Guid::GuidStyles::_set_AllowBraces(System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_set_AllowBraces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "AllowBraces", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles AllowDashes
System::Guid::GuidStyles System::Guid::GuidStyles::_get_AllowDashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_get_AllowDashes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::GuidStyles>("System", "Guid/GuidStyles", "AllowDashes"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles AllowDashes
void System::Guid::GuidStyles::_set_AllowDashes(System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_set_AllowDashes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "AllowDashes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles AllowHexPrefix
System::Guid::GuidStyles System::Guid::GuidStyles::_get_AllowHexPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_get_AllowHexPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::GuidStyles>("System", "Guid/GuidStyles", "AllowHexPrefix"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles AllowHexPrefix
void System::Guid::GuidStyles::_set_AllowHexPrefix(System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_set_AllowHexPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "AllowHexPrefix", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles RequireParenthesis
System::Guid::GuidStyles System::Guid::GuidStyles::_get_RequireParenthesis() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_get_RequireParenthesis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::GuidStyles>("System", "Guid/GuidStyles", "RequireParenthesis"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles RequireParenthesis
void System::Guid::GuidStyles::_set_RequireParenthesis(System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_set_RequireParenthesis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "RequireParenthesis", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles RequireBraces
System::Guid::GuidStyles System::Guid::GuidStyles::_get_RequireBraces() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_get_RequireBraces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::GuidStyles>("System", "Guid/GuidStyles", "RequireBraces"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles RequireBraces
void System::Guid::GuidStyles::_set_RequireBraces(System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_set_RequireBraces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "RequireBraces", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles RequireDashes
System::Guid::GuidStyles System::Guid::GuidStyles::_get_RequireDashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_get_RequireDashes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::GuidStyles>("System", "Guid/GuidStyles", "RequireDashes"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles RequireDashes
void System::Guid::GuidStyles::_set_RequireDashes(System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_set_RequireDashes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "RequireDashes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles RequireHexPrefix
System::Guid::GuidStyles System::Guid::GuidStyles::_get_RequireHexPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_get_RequireHexPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::GuidStyles>("System", "Guid/GuidStyles", "RequireHexPrefix"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles RequireHexPrefix
void System::Guid::GuidStyles::_set_RequireHexPrefix(System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_set_RequireHexPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "RequireHexPrefix", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles HexFormat
System::Guid::GuidStyles System::Guid::GuidStyles::_get_HexFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_get_HexFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::GuidStyles>("System", "Guid/GuidStyles", "HexFormat"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles HexFormat
void System::Guid::GuidStyles::_set_HexFormat(System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_set_HexFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "HexFormat", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles NumberFormat
System::Guid::GuidStyles System::Guid::GuidStyles::_get_NumberFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_get_NumberFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::GuidStyles>("System", "Guid/GuidStyles", "NumberFormat"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles NumberFormat
void System::Guid::GuidStyles::_set_NumberFormat(System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_set_NumberFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "NumberFormat", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles DigitFormat
System::Guid::GuidStyles System::Guid::GuidStyles::_get_DigitFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_get_DigitFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::GuidStyles>("System", "Guid/GuidStyles", "DigitFormat"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles DigitFormat
void System::Guid::GuidStyles::_set_DigitFormat(System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_set_DigitFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "DigitFormat", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles BraceFormat
System::Guid::GuidStyles System::Guid::GuidStyles::_get_BraceFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_get_BraceFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::GuidStyles>("System", "Guid/GuidStyles", "BraceFormat"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles BraceFormat
void System::Guid::GuidStyles::_set_BraceFormat(System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_set_BraceFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "BraceFormat", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles ParenthesisFormat
System::Guid::GuidStyles System::Guid::GuidStyles::_get_ParenthesisFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_get_ParenthesisFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::GuidStyles>("System", "Guid/GuidStyles", "ParenthesisFormat"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles ParenthesisFormat
void System::Guid::GuidStyles::_set_ParenthesisFormat(System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_set_ParenthesisFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "ParenthesisFormat", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles Any
System::Guid::GuidStyles System::Guid::GuidStyles::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::GuidStyles>("System", "Guid/GuidStyles", "Any"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles Any
void System::Guid::GuidStyles::_set_Any(System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidStyles::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "Any", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Guid/GuidParseThrowStyle
#include "System/Guid_GuidParseThrowStyle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidParseThrowStyle None
System::Guid::GuidParseThrowStyle System::Guid::GuidParseThrowStyle::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidParseThrowStyle::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::GuidParseThrowStyle>("System", "Guid/GuidParseThrowStyle", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidParseThrowStyle None
void System::Guid::GuidParseThrowStyle::_set_None(System::Guid::GuidParseThrowStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidParseThrowStyle::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidParseThrowStyle", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidParseThrowStyle All
System::Guid::GuidParseThrowStyle System::Guid::GuidParseThrowStyle::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidParseThrowStyle::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::GuidParseThrowStyle>("System", "Guid/GuidParseThrowStyle", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidParseThrowStyle All
void System::Guid::GuidParseThrowStyle::_set_All(System::Guid::GuidParseThrowStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidParseThrowStyle::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidParseThrowStyle", "All", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidParseThrowStyle AllButOverflow
System::Guid::GuidParseThrowStyle System::Guid::GuidParseThrowStyle::_get_AllButOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidParseThrowStyle::_get_AllButOverflow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::GuidParseThrowStyle>("System", "Guid/GuidParseThrowStyle", "AllButOverflow"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidParseThrowStyle AllButOverflow
void System::Guid::GuidParseThrowStyle::_set_AllButOverflow(System::Guid::GuidParseThrowStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidParseThrowStyle::_set_AllButOverflow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidParseThrowStyle", "AllButOverflow", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Guid/ParseFailureKind
#include "System/Guid_ParseFailureKind.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Guid/ParseFailureKind None
System::Guid::ParseFailureKind System::Guid::ParseFailureKind::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::ParseFailureKind::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::ParseFailureKind>("System", "Guid/ParseFailureKind", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/ParseFailureKind None
void System::Guid::ParseFailureKind::_set_None(System::Guid::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::ParseFailureKind::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/ParseFailureKind", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/ParseFailureKind ArgumentNull
System::Guid::ParseFailureKind System::Guid::ParseFailureKind::_get_ArgumentNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::ParseFailureKind::_get_ArgumentNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::ParseFailureKind>("System", "Guid/ParseFailureKind", "ArgumentNull"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/ParseFailureKind ArgumentNull
void System::Guid::ParseFailureKind::_set_ArgumentNull(System::Guid::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::ParseFailureKind::_set_ArgumentNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/ParseFailureKind", "ArgumentNull", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/ParseFailureKind Format
System::Guid::ParseFailureKind System::Guid::ParseFailureKind::_get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::ParseFailureKind::_get_Format");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::ParseFailureKind>("System", "Guid/ParseFailureKind", "Format"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/ParseFailureKind Format
void System::Guid::ParseFailureKind::_set_Format(System::Guid::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::ParseFailureKind::_set_Format");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/ParseFailureKind", "Format", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/ParseFailureKind FormatWithParameter
System::Guid::ParseFailureKind System::Guid::ParseFailureKind::_get_FormatWithParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::ParseFailureKind::_get_FormatWithParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::ParseFailureKind>("System", "Guid/ParseFailureKind", "FormatWithParameter"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/ParseFailureKind FormatWithParameter
void System::Guid::ParseFailureKind::_set_FormatWithParameter(System::Guid::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::ParseFailureKind::_set_FormatWithParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/ParseFailureKind", "FormatWithParameter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/ParseFailureKind NativeException
System::Guid::ParseFailureKind System::Guid::ParseFailureKind::_get_NativeException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::ParseFailureKind::_get_NativeException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::ParseFailureKind>("System", "Guid/ParseFailureKind", "NativeException"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/ParseFailureKind NativeException
void System::Guid::ParseFailureKind::_set_NativeException(System::Guid::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::ParseFailureKind::_set_NativeException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/ParseFailureKind", "NativeException", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/ParseFailureKind FormatWithInnerException
System::Guid::ParseFailureKind System::Guid::ParseFailureKind::_get_FormatWithInnerException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::ParseFailureKind::_get_FormatWithInnerException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid::ParseFailureKind>("System", "Guid/ParseFailureKind", "FormatWithInnerException"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/ParseFailureKind FormatWithInnerException
void System::Guid::ParseFailureKind::_set_FormatWithInnerException(System::Guid::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::ParseFailureKind::_set_FormatWithInnerException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/ParseFailureKind", "FormatWithInnerException", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Guid/GuidResult
#include "System/Guid_GuidResult.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Guid/GuidResult.Init
void System::Guid::GuidResult::Init(System::Guid::GuidParseThrowStyle canThrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidResult::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canThrow)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, canThrow);
}
// Autogenerated method: System.Guid/GuidResult.SetFailure
void System::Guid::GuidResult::SetFailure(System::Exception* nativeException) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeException)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, nativeException);
}
// Autogenerated method: System.Guid/GuidResult.SetFailure
void System::Guid::GuidResult::SetFailure(System::Guid::ParseFailureKind failure, ::Il2CppString* failureMessageID) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failure), ::il2cpp_utils::ExtractType(failureMessageID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, failure, failureMessageID);
}
// Autogenerated method: System.Guid/GuidResult.SetFailure
void System::Guid::GuidResult::SetFailure(System::Guid::ParseFailureKind failure, ::Il2CppString* failureMessageID, ::Il2CppObject* failureMessageFormatArgument) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failure), ::il2cpp_utils::ExtractType(failureMessageID), ::il2cpp_utils::ExtractType(failureMessageFormatArgument)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, failure, failureMessageID, failureMessageFormatArgument);
}
// Autogenerated method: System.Guid/GuidResult.SetFailure
void System::Guid::GuidResult::SetFailure(System::Guid::ParseFailureKind failure, ::Il2CppString* failureMessageID, ::Il2CppObject* failureMessageFormatArgument, ::Il2CppString* failureArgumentName, System::Exception* innerException) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failure), ::il2cpp_utils::ExtractType(failureMessageID), ::il2cpp_utils::ExtractType(failureMessageFormatArgument), ::il2cpp_utils::ExtractType(failureArgumentName), ::il2cpp_utils::ExtractType(innerException)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, failure, failureMessageID, failureMessageFormatArgument, failureArgumentName, innerException);
}
// Autogenerated method: System.Guid/GuidResult.GetGuidParseException
System::Exception* System::Guid::GuidResult::GetGuidParseException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Guid::GuidResult::GetGuidParseException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetGuidParseException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IAsyncResult.get_IsCompleted
bool System::IAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IAsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IAsyncResult.get_AsyncWaitHandle
System::Threading::WaitHandle* System::IAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncWaitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.IAsyncResult.get_AsyncState
::Il2CppObject* System::IAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.IAsyncResult.get_CompletedSynchronously
bool System::IAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ICloneable
#include "System/ICloneable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ICloneable.Clone
::Il2CppObject* System::ICloneable::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ICloneable::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IComparable
#include "System/IComparable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IComparable.CompareTo
int System::IComparable::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IComparable::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IConvertible
#include "System/IConvertible.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IConvertible.GetTypeCode
System::TypeCode System::IConvertible::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IConvertible::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.IConvertible.ToBoolean
bool System::IConvertible::ToBoolean(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IConvertible::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToChar
::Il2CppChar System::IConvertible::ToChar(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IConvertible::ToChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToSByte
int8_t System::IConvertible::ToSByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IConvertible::ToSByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToByte
uint8_t System::IConvertible::ToByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IConvertible::ToByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToInt16
int16_t System::IConvertible::ToInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IConvertible::ToInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToUInt16
uint16_t System::IConvertible::ToUInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IConvertible::ToUInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToInt32
int System::IConvertible::ToInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IConvertible::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToUInt32
uint System::IConvertible::ToUInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IConvertible::ToUInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToInt64
int64_t System::IConvertible::ToInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IConvertible::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToUInt64
uint64_t System::IConvertible::ToUInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IConvertible::ToUInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToSingle
float System::IConvertible::ToSingle(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IConvertible::ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToDouble
double System::IConvertible::ToDouble(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IConvertible::ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToDecimal
System::Decimal System::IConvertible::ToDecimal(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IConvertible::ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToDateTime
System::DateTime System::IConvertible::ToDateTime(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IConvertible::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToString
::Il2CppString* System::IConvertible::ToString(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IConvertible::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToType
::Il2CppObject* System::IConvertible::ToType(System::Type* conversionType, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IConvertible::ToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(conversionType), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, conversionType, provider);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ICustomFormatter
#include "System/ICustomFormatter.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ICustomFormatter.Format
::Il2CppString* System::ICustomFormatter::Format(::Il2CppString* format, ::Il2CppObject* arg, System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ICustomFormatter::Format");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, format, arg, formatProvider);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IDisposable.Dispose
void System::IDisposable::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IDisposable::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IFormatProvider.GetFormat
::Il2CppObject* System::IFormatProvider::GetFormat(System::Type* formatType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IFormatProvider::GetFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(formatType)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, formatType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IFormattable
#include "System/IFormattable.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IFormattable.ToString
::Il2CppString* System::IFormattable::ToString(::Il2CppString* format, System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IFormattable::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, format, formatProvider);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IndexOutOfRangeException
#include "System/IndexOutOfRangeException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Int16
#include "System/Int16.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int16 MaxValue
int16_t System::Int16::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int16_t>("System", "Int16", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Int16 MaxValue
void System::Int16::_set_MaxValue(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Int16", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int16 MinValue
int16_t System::Int16::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int16_t>("System", "Int16", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Int16 MinValue
void System::Int16::_set_MinValue(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Int16", "MinValue", value));
}
// Autogenerated method: System.Int16.CompareTo
int System::Int16::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Int16.CompareTo
int System::Int16::CompareTo(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Int16.Equals
bool System::Int16::Equals(int16_t obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Int16.ToString
::Il2CppString* System::Int16::ToString(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.ToString
::Il2CppString* System::Int16::ToString(::Il2CppString* format, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format, provider);
}
// Autogenerated method: System.Int16.ToString
::Il2CppString* System::Int16::ToString(::Il2CppString* format, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format, info);
}
// Autogenerated method: System.Int16.Parse
int16_t System::Int16::Parse(::Il2CppString* s, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int16", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.Int16.Parse
int16_t System::Int16::Parse(::Il2CppString* s, System::Globalization::NumberStyles style, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int16", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.Int16.Parse
int16_t System::Int16::Parse(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int16", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, info);
}
// Autogenerated method: System.Int16.GetTypeCode
System::TypeCode System::Int16::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(*this, ___internal__method);
}
// Autogenerated method: System.Int16.System.IConvertible.ToBoolean
bool System::Int16::System_IConvertible_ToBoolean(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToChar
::Il2CppChar System::Int16::System_IConvertible_ToChar(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToSByte
int8_t System::Int16::System_IConvertible_ToSByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToByte
uint8_t System::Int16::System_IConvertible_ToByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToInt16
int16_t System::Int16::System_IConvertible_ToInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToUInt16
uint16_t System::Int16::System_IConvertible_ToUInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToInt32
int System::Int16::System_IConvertible_ToInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToUInt32
uint System::Int16::System_IConvertible_ToUInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToInt64
int64_t System::Int16::System_IConvertible_ToInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToUInt64
uint64_t System::Int16::System_IConvertible_ToUInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToSingle
float System::Int16::System_IConvertible_ToSingle(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToDouble
double System::Int16::System_IConvertible_ToDouble(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToDecimal
System::Decimal System::Int16::System_IConvertible_ToDecimal(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToDateTime
System::DateTime System::Int16::System_IConvertible_ToDateTime(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToType
::Il2CppObject* System::Int16::System_IConvertible_ToType(System::Type* type, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method, type, provider);
}
// Autogenerated method: System.Int16.Equals
bool System::Int16::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Int16.GetHashCode
int System::Int16::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.Int16.ToString
::Il2CppString* System::Int16::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int16::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxValue
int System::Int32::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Int32", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxValue
void System::Int32::_set_MaxValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Int32", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MinValue
int System::Int32::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Int32", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MinValue
void System::Int32::_set_MinValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Int32", "MinValue", value));
}
// Autogenerated method: System.Int32.CompareTo
int System::Int32::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Int32.CompareTo
int System::Int32::CompareTo(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Int32.Equals
bool System::Int32::Equals(int obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Int32.ToString
::Il2CppString* System::Int32::ToString(::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format);
}
// Autogenerated method: System.Int32.ToString
::Il2CppString* System::Int32::ToString(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.ToString
::Il2CppString* System::Int32::ToString(::Il2CppString* format, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format, provider);
}
// Autogenerated method: System.Int32.Parse
int System::Int32::Parse(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int32", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Int32.Parse
int System::Int32::Parse(::Il2CppString* s, System::Globalization::NumberStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int32", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style);
}
// Autogenerated method: System.Int32.Parse
int System::Int32::Parse(::Il2CppString* s, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int32", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.Int32.Parse
int System::Int32::Parse(::Il2CppString* s, System::Globalization::NumberStyles style, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int32", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.Int32.TryParse
bool System::Int32::TryParse(::Il2CppString* s, int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int32", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<int>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, result);
}
// Autogenerated method: System.Int32.TryParse
bool System::Int32::TryParse(::Il2CppString* s, System::Globalization::NumberStyles style, System::IFormatProvider* provider, int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int32", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractIndependentType<int>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, provider, result);
}
// Autogenerated method: System.Int32.GetTypeCode
System::TypeCode System::Int32::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(*this, ___internal__method);
}
// Autogenerated method: System.Int32.System.IConvertible.ToBoolean
bool System::Int32::System_IConvertible_ToBoolean(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToChar
::Il2CppChar System::Int32::System_IConvertible_ToChar(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToSByte
int8_t System::Int32::System_IConvertible_ToSByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToByte
uint8_t System::Int32::System_IConvertible_ToByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToInt16
int16_t System::Int32::System_IConvertible_ToInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToUInt16
uint16_t System::Int32::System_IConvertible_ToUInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToInt32
int System::Int32::System_IConvertible_ToInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToUInt32
uint System::Int32::System_IConvertible_ToUInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToInt64
int64_t System::Int32::System_IConvertible_ToInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToUInt64
uint64_t System::Int32::System_IConvertible_ToUInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToSingle
float System::Int32::System_IConvertible_ToSingle(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToDouble
double System::Int32::System_IConvertible_ToDouble(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToDecimal
System::Decimal System::Int32::System_IConvertible_ToDecimal(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToDateTime
System::DateTime System::Int32::System_IConvertible_ToDateTime(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToType
::Il2CppObject* System::Int32::System_IConvertible_ToType(System::Type* type, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method, type, provider);
}
// Autogenerated method: System.Int32.Equals
bool System::Int32::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Int32.GetHashCode
int System::Int32::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.Int32.ToString
::Il2CppString* System::Int32::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int32::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Int64
#include "System/Int64.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int64 MaxValue
int64_t System::Int64::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "Int64", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 MaxValue
void System::Int64::_set_MaxValue(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Int64", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int64 MinValue
int64_t System::Int64::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "Int64", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 MinValue
void System::Int64::_set_MinValue(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Int64", "MinValue", value));
}
// Autogenerated method: System.Int64.CompareTo
int System::Int64::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Int64.CompareTo
int System::Int64::CompareTo(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Int64.Equals
bool System::Int64::Equals(int64_t obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Int64.ToString
::Il2CppString* System::Int64::ToString(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.ToString
::Il2CppString* System::Int64::ToString(::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format);
}
// Autogenerated method: System.Int64.ToString
::Il2CppString* System::Int64::ToString(::Il2CppString* format, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format, provider);
}
// Autogenerated method: System.Int64.Parse
int64_t System::Int64::Parse(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int64", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Int64.Parse
int64_t System::Int64::Parse(::Il2CppString* s, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int64", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.Int64.Parse
int64_t System::Int64::Parse(::Il2CppString* s, System::Globalization::NumberStyles style, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int64", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.Int64.TryParse
bool System::Int64::TryParse(::Il2CppString* s, int64_t& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int64", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<int64_t>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, result);
}
// Autogenerated method: System.Int64.TryParse
bool System::Int64::TryParse(::Il2CppString* s, System::Globalization::NumberStyles style, System::IFormatProvider* provider, int64_t& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int64", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractIndependentType<int64_t>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, provider, result);
}
// Autogenerated method: System.Int64.GetTypeCode
System::TypeCode System::Int64::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(*this, ___internal__method);
}
// Autogenerated method: System.Int64.System.IConvertible.ToBoolean
bool System::Int64::System_IConvertible_ToBoolean(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToChar
::Il2CppChar System::Int64::System_IConvertible_ToChar(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToSByte
int8_t System::Int64::System_IConvertible_ToSByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToByte
uint8_t System::Int64::System_IConvertible_ToByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToInt16
int16_t System::Int64::System_IConvertible_ToInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToUInt16
uint16_t System::Int64::System_IConvertible_ToUInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToInt32
int System::Int64::System_IConvertible_ToInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToUInt32
uint System::Int64::System_IConvertible_ToUInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToInt64
int64_t System::Int64::System_IConvertible_ToInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToUInt64
uint64_t System::Int64::System_IConvertible_ToUInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToSingle
float System::Int64::System_IConvertible_ToSingle(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToDouble
double System::Int64::System_IConvertible_ToDouble(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToDecimal
System::Decimal System::Int64::System_IConvertible_ToDecimal(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToDateTime
System::DateTime System::Int64::System_IConvertible_ToDateTime(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToType
::Il2CppObject* System::Int64::System_IConvertible_ToType(System::Type* type, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method, type, provider);
}
// Autogenerated method: System.Int64.Equals
bool System::Int64::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Int64.GetHashCode
int System::Int64::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.Int64.ToString
::Il2CppString* System::Int64::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Int64::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.InvalidCastException
#include "System/InvalidCastException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.InvalidOperationException
#include "System/InvalidOperationException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.InvalidProgramException
#include "System/InvalidProgramException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.InvalidTimeZoneException
#include "System/InvalidTimeZoneException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IServiceProvider
#include "System/IServiceProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IServiceProvider.GetService
::Il2CppObject* System::IServiceProvider::GetService(System::Type* serviceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IServiceProvider::GetService");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetService", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serviceType)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, serviceType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Math
#include "System/Math.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Double doubleRoundLimit
double System::Math::_get_doubleRoundLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::_get_doubleRoundLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System", "Math", "doubleRoundLimit"));
}
// Autogenerated static field setter
// Set static field: static private System.Double doubleRoundLimit
void System::Math::_set_doubleRoundLimit(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::_set_doubleRoundLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Math", "doubleRoundLimit", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 maxRoundingDigits
int System::Math::_get_maxRoundingDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::_get_maxRoundingDigits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Math", "maxRoundingDigits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 maxRoundingDigits
void System::Math::_set_maxRoundingDigits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::_set_maxRoundingDigits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Math", "maxRoundingDigits", value));
}
// Autogenerated static field getter
// Get static field: static private System.Double[] roundPower10Double
::Array<double>* System::Math::_get_roundPower10Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::_get_roundPower10Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<double>*>("System", "Math", "roundPower10Double"));
}
// Autogenerated static field setter
// Set static field: static private System.Double[] roundPower10Double
void System::Math::_set_roundPower10Double(::Array<double>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::_set_roundPower10Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Math", "roundPower10Double", value));
}
// Autogenerated static field getter
// Get static field: static public System.Double PI
double System::Math::_get_PI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::_get_PI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System", "Math", "PI"));
}
// Autogenerated static field setter
// Set static field: static public System.Double PI
void System::Math::_set_PI(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::_set_PI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Math", "PI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Double E
double System::Math::_get_E() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::_get_E");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System", "Math", "E"));
}
// Autogenerated static field setter
// Set static field: static public System.Double E
void System::Math::_set_E(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::_set_E");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Math", "E", value));
}
// Autogenerated method: System.Math.Acos
double System::Math::Acos(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Acos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Acos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Asin
double System::Math::Asin(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Asin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Asin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Atan
double System::Math::Atan(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Atan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Atan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Atan2
double System::Math::Atan2(double y, double x) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Atan2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Atan2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, y, x);
}
// Autogenerated method: System.Math.Ceiling
double System::Math::Ceiling(double a) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Ceiling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Ceiling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a);
}
// Autogenerated method: System.Math.Cos
double System::Math::Cos(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Cos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Cos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Floor
double System::Math::Floor(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Floor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Floor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.InternalTruncate
double System::Math::InternalTruncate(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::InternalTruncate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "InternalTruncate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Sin
double System::Math::Sin(double a) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Sin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Sin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a);
}
// Autogenerated method: System.Math.Tan
double System::Math::Tan(double a) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Tan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Tan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a);
}
// Autogenerated method: System.Math.Round
double System::Math::Round(double a) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Round");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Round", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a);
}
// Autogenerated method: System.Math.SplitFractionDouble
double System::Math::SplitFractionDouble(double* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::SplitFractionDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "SplitFractionDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Math.Truncate
double System::Math::Truncate(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Truncate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Truncate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Sqrt
double System::Math::Sqrt(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Sqrt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Sqrt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Log
double System::Math::Log(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Log10
double System::Math::Log10(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Log10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Log10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Pow
double System::Math::Pow(double x, double y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Pow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Pow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Math.Abs
int System::Math::Abs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Math.AbsHelper
int System::Math::AbsHelper(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::AbsHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "AbsHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Math.Abs
int64_t System::Math::Abs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Math.AbsHelper
int64_t System::Math::AbsHelper(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::AbsHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "AbsHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Math.Abs
float System::Math::Abs(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Math.Abs
double System::Math::Abs(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Math.Abs
System::Decimal System::Math::Abs(System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Math.Max
int System::Math::Max(int val1, int val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Max
uint System::Math::Max(uint val1, uint val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Max
int64_t System::Math::Max(int64_t val1, int64_t val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Max
uint64_t System::Math::Max(uint64_t val1, uint64_t val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Max
float System::Math::Max(float val1, float val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Max
double System::Math::Max(double val1, double val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Min
int System::Math::Min(int val1, int val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Min
uint System::Math::Min(uint val1, uint val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Min
int64_t System::Math::Min(int64_t val1, int64_t val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Min
uint64_t System::Math::Min(uint64_t val1, uint64_t val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Min
float System::Math::Min(float val1, float val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Min
double System::Math::Min(double val1, double val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Log
double System::Math::Log(double a, double newBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(newBase)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, newBase);
}
// Autogenerated method: System.Math..cctor
void System::Math::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Math::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MemberAccessException
#include "System/MemberAccessException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MethodAccessException
#include "System/MethodAccessException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MissingFieldException
#include "System/MissingFieldException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.MissingFieldException.get_Message
::Il2CppString* System::MissingFieldException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::MissingFieldException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MissingMemberException
#include "System/MissingMemberException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.MissingMemberException.FormatSignature
::Il2CppString* System::MissingMemberException::FormatSignature(::Array<uint8_t>* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::MissingMemberException::FormatSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MissingMemberException", "FormatSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, signature);
}
// Autogenerated method: System.MissingMemberException.get_Message
::Il2CppString* System::MissingMemberException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::MissingMemberException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.MissingMemberException.GetObjectData
void System::MissingMemberException::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::MissingMemberException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MissingMethodException
#include "System/MissingMethodException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.MissingMethodException.get_Message
::Il2CppString* System::MissingMethodException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::MissingMethodException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MulticastNotSupportedException
#include "System/MulticastNotSupportedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.NonSerializedAttribute
#include "System/NonSerializedAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.NotImplementedException
#include "System/NotImplementedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.NotSupportedException
#include "System/NotSupportedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.NullReferenceException
#include "System/NullReferenceException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Number
#include "System/Number.hpp"
// Including type: System.Number/NumberBuffer
#include "System/Number_NumberBuffer.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Number.NumberBufferToDecimal
bool System::Number::NumberBufferToDecimal(uint8_t* number, System::Decimal& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::NumberBufferToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberBufferToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number, value);
}
// Autogenerated method: System.Number.NumberBufferToDouble
bool System::Number::NumberBufferToDouble(uint8_t* number, double& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::NumberBufferToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberBufferToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number, value);
}
// Autogenerated method: System.Number.FormatDecimal
::Il2CppString* System::Number::FormatDecimal(System::Decimal value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::FormatDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated method: System.Number.FormatDouble
::Il2CppString* System::Number::FormatDouble(double value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::FormatDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated method: System.Number.FormatInt32
::Il2CppString* System::Number::FormatInt32(int value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::FormatInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated method: System.Number.FormatUInt32
::Il2CppString* System::Number::FormatUInt32(uint value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::FormatUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated method: System.Number.FormatInt64
::Il2CppString* System::Number::FormatInt64(int64_t value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::FormatInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated method: System.Number.FormatUInt64
::Il2CppString* System::Number::FormatUInt64(uint64_t value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::FormatUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated method: System.Number.FormatSingle
::Il2CppString* System::Number::FormatSingle(float value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::FormatSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated method: System.Number.HexNumberToInt32
bool System::Number::HexNumberToInt32(System::Number::NumberBuffer& number, int& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::HexNumberToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "HexNumberToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number, value);
}
// Autogenerated method: System.Number.HexNumberToInt64
bool System::Number::HexNumberToInt64(System::Number::NumberBuffer& number, int64_t& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::HexNumberToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "HexNumberToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number, value);
}
// Autogenerated method: System.Number.HexNumberToUInt32
bool System::Number::HexNumberToUInt32(System::Number::NumberBuffer& number, uint& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::HexNumberToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "HexNumberToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number, value);
}
// Autogenerated method: System.Number.HexNumberToUInt64
bool System::Number::HexNumberToUInt64(System::Number::NumberBuffer& number, uint64_t& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::HexNumberToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "HexNumberToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number, value);
}
// Autogenerated method: System.Number.IsWhite
bool System::Number::IsWhite(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::IsWhite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "IsWhite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Number.NumberToInt32
bool System::Number::NumberToInt32(System::Number::NumberBuffer& number, int& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::NumberToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number, value);
}
// Autogenerated method: System.Number.NumberToInt64
bool System::Number::NumberToInt64(System::Number::NumberBuffer& number, int64_t& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::NumberToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number, value);
}
// Autogenerated method: System.Number.NumberToUInt32
bool System::Number::NumberToUInt32(System::Number::NumberBuffer& number, uint& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::NumberToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number, value);
}
// Autogenerated method: System.Number.NumberToUInt64
bool System::Number::NumberToUInt64(System::Number::NumberBuffer& number, uint64_t& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::NumberToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number, value);
}
// Autogenerated method: System.Number.MatchChars
::Il2CppChar* System::Number::MatchChars(::Il2CppChar* p, ::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::MatchChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "MatchChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, p, str);
}
// Autogenerated method: System.Number.MatchChars
::Il2CppChar* System::Number::MatchChars(::Il2CppChar* p, ::Il2CppChar* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::MatchChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "MatchChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, p, str);
}
// Autogenerated method: System.Number.ParseDecimal
System::Decimal System::Number::ParseDecimal(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::ParseDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(numfmt)})));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, options, numfmt);
}
// Autogenerated method: System.Number.ParseDouble
double System::Number::ParseDouble(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::ParseDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(numfmt)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, options, numfmt);
}
// Autogenerated method: System.Number.ParseInt32
int System::Number::ParseInt32(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::ParseInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, info);
}
// Autogenerated method: System.Number.ParseInt64
int64_t System::Number::ParseInt64(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::ParseInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(numfmt)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, options, numfmt);
}
// Autogenerated method: System.Number.ParseNumber
bool System::Number::ParseNumber(::Il2CppChar*& str, System::Globalization::NumberStyles options, System::Number::NumberBuffer& number, System::Text::StringBuilder* sb, System::Globalization::NumberFormatInfo* numfmt, bool parseDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::ParseNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(numfmt), ::il2cpp_utils::ExtractType(parseDecimal)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, options, number, sb, numfmt, parseDecimal);
}
// Autogenerated method: System.Number.ParseSingle
float System::Number::ParseSingle(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::ParseSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(numfmt)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, options, numfmt);
}
// Autogenerated method: System.Number.ParseUInt32
uint System::Number::ParseUInt32(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::ParseUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(numfmt)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, options, numfmt);
}
// Autogenerated method: System.Number.ParseUInt64
uint64_t System::Number::ParseUInt64(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::ParseUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(numfmt)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, options, numfmt);
}
// Autogenerated method: System.Number.StringToNumber
void System::Number::StringToNumber(::Il2CppString* str, System::Globalization::NumberStyles options, System::Number::NumberBuffer& number, System::Globalization::NumberFormatInfo* info, bool parseDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::StringToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "StringToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(parseDecimal)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, options, number, info, parseDecimal);
}
// Autogenerated method: System.Number.TrailingZeros
bool System::Number::TrailingZeros(::Il2CppString* s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::TrailingZeros");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TrailingZeros", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Number.TryParseDouble
bool System::Number::TryParseDouble(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt, double& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::TryParseDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(numfmt), ::il2cpp_utils::ExtractIndependentType<double>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, options, numfmt, result);
}
// Autogenerated method: System.Number.TryParseInt32
bool System::Number::TryParseInt32(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info, int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::TryParseInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<int>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, info, result);
}
// Autogenerated method: System.Number.TryParseInt64
bool System::Number::TryParseInt64(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info, int64_t& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::TryParseInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<int64_t>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, info, result);
}
// Autogenerated method: System.Number.TryParseSingle
bool System::Number::TryParseSingle(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt, float& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::TryParseSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(numfmt), ::il2cpp_utils::ExtractIndependentType<float>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, options, numfmt, result);
}
// Autogenerated method: System.Number.TryParseUInt32
bool System::Number::TryParseUInt32(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info, uint& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::TryParseUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<uint>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, info, result);
}
// Autogenerated method: System.Number.TryStringToNumber
bool System::Number::TryStringToNumber(::Il2CppString* str, System::Globalization::NumberStyles options, System::Number::NumberBuffer& number, System::Globalization::NumberFormatInfo* numfmt, bool parseDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::TryStringToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryStringToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(numfmt), ::il2cpp_utils::ExtractType(parseDecimal)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, options, number, numfmt, parseDecimal);
}
// Autogenerated method: System.Number.TryStringToNumber
bool System::Number::TryStringToNumber(::Il2CppString* str, System::Globalization::NumberStyles options, System::Number::NumberBuffer& number, System::Text::StringBuilder* sb, System::Globalization::NumberFormatInfo* numfmt, bool parseDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::TryStringToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryStringToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(numfmt), ::il2cpp_utils::ExtractType(parseDecimal)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, options, number, sb, numfmt, parseDecimal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Number/NumberBuffer
#include "System/Number_NumberBuffer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 NumberBufferBytes
int System::Number::NumberBuffer::_get_NumberBufferBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::NumberBuffer::_get_NumberBufferBytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number/NumberBuffer", "NumberBufferBytes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 NumberBufferBytes
void System::Number::NumberBuffer::_set_NumberBufferBytes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::NumberBuffer::_set_NumberBufferBytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/NumberBuffer", "NumberBufferBytes", value));
}
// Autogenerated method: System.Number/NumberBuffer.PackForNative
uint8_t* System::Number::NumberBuffer::PackForNative() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::NumberBuffer::PackForNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PackForNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Number/NumberBuffer..cctor
void System::Number::NumberBuffer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::NumberBuffer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/NumberBuffer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ObjectDisposedException
#include "System/ObjectDisposedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ObjectDisposedException.get_ObjectName
::Il2CppString* System::ObjectDisposedException::get_ObjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ObjectDisposedException::get_ObjectName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.ObjectDisposedException.get_Message
::Il2CppString* System::ObjectDisposedException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ObjectDisposedException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.ObjectDisposedException.GetObjectData
void System::ObjectDisposedException::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ObjectDisposedException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ObsoleteAttribute
#include "System/ObsoleteAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ObsoleteAttribute.get_Message
::Il2CppString* System::ObsoleteAttribute::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ObsoleteAttribute::get_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.OperationCanceledException
#include "System/OperationCanceledException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.OperationCanceledException.get_CancellationToken
System::Threading::CancellationToken System::OperationCanceledException::get_CancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::OperationCanceledException::get_CancellationToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CancellationToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::CancellationToken, false>(this, ___internal__method);
}
// Autogenerated method: System.OperationCanceledException.set_CancellationToken
void System::OperationCanceledException::set_CancellationToken(System::Threading::CancellationToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::OperationCanceledException::set_CancellationToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CancellationToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.OutOfMemoryException
#include "System/OutOfMemoryException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.OverflowException
#include "System/OverflowException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ParamArrayAttribute
#include "System/ParamArrayAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ParamsArray
#include "System/ParamsArray.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] oneArgArray
::Array<::Il2CppObject*>* System::ParamsArray::_get_oneArgArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParamsArray::_get_oneArgArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppObject*>*>("System", "ParamsArray", "oneArgArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] oneArgArray
void System::ParamsArray::_set_oneArgArray(::Array<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParamsArray::_set_oneArgArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParamsArray", "oneArgArray", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] twoArgArray
::Array<::Il2CppObject*>* System::ParamsArray::_get_twoArgArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParamsArray::_get_twoArgArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppObject*>*>("System", "ParamsArray", "twoArgArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] twoArgArray
void System::ParamsArray::_set_twoArgArray(::Array<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParamsArray::_set_twoArgArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParamsArray", "twoArgArray", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] threeArgArray
::Array<::Il2CppObject*>* System::ParamsArray::_get_threeArgArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParamsArray::_get_threeArgArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppObject*>*>("System", "ParamsArray", "threeArgArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] threeArgArray
void System::ParamsArray::_set_threeArgArray(::Array<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParamsArray::_set_threeArgArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParamsArray", "threeArgArray", value));
}
// Autogenerated method: System.ParamsArray.get_Length
int System::ParamsArray::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParamsArray::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.ParamsArray.get_Item
::Il2CppObject* System::ParamsArray::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParamsArray::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method, index);
}
// Autogenerated method: System.ParamsArray.GetAtSlow
::Il2CppObject* System::ParamsArray::GetAtSlow(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParamsArray::GetAtSlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetAtSlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method, index);
}
// Autogenerated method: System.ParamsArray..cctor
void System::ParamsArray::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParamsArray::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParamsArray", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.PlatformNotSupportedException
#include "System/PlatformNotSupportedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Random
#include "System/Random.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MBIG
int System::Random::_get_MBIG() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::_get_MBIG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Random", "MBIG"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MBIG
void System::Random::_set_MBIG(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::_set_MBIG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Random", "MBIG", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MSEED
int System::Random::_get_MSEED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::_get_MSEED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Random", "MSEED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MSEED
void System::Random::_set_MSEED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::_set_MSEED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Random", "MSEED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MZ
int System::Random::_get_MZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::_get_MZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Random", "MZ"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MZ
void System::Random::_set_MZ(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::_set_MZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Random", "MZ", value));
}
// Autogenerated method: System.Random.Sample
double System::Random::Sample() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::Sample");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Random.InternalSample
int System::Random::InternalSample() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::InternalSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Random.Next
int System::Random::Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::Next");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Random.GetSampleForLargeRange
double System::Random::GetSampleForLargeRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::GetSampleForLargeRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSampleForLargeRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Random.Next
int System::Random::Next(int minValue, int maxValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::Next");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minValue), ::il2cpp_utils::ExtractType(maxValue)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, minValue, maxValue);
}
// Autogenerated method: System.Random.Next
int System::Random::Next(int maxValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::Next");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxValue)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, maxValue);
}
// Autogenerated method: System.Random.NextBytes
void System::Random::NextBytes(::Array<uint8_t>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::NextBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.RankException
#include "System/RankException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.TypeNameFormatFlags
#include "System/TypeNameFormatFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatBasic
System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatBasic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_get_FormatBasic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatBasic"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatBasic
void System::TypeNameFormatFlags::_set_FormatBasic(System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_set_FormatBasic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatBasic", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatNamespace
System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_get_FormatNamespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatNamespace"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatNamespace
void System::TypeNameFormatFlags::_set_FormatNamespace(System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_set_FormatNamespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatNamespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatFullInst
System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatFullInst() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_get_FormatFullInst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatFullInst"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatFullInst
void System::TypeNameFormatFlags::_set_FormatFullInst(System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_set_FormatFullInst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatFullInst", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatAssembly
System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_get_FormatAssembly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatAssembly"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatAssembly
void System::TypeNameFormatFlags::_set_FormatAssembly(System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_set_FormatAssembly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatAssembly", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatSignature
System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_get_FormatSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatSignature"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatSignature
void System::TypeNameFormatFlags::_set_FormatSignature(System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_set_FormatSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatSignature", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatNoVersion
System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatNoVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_get_FormatNoVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatNoVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatNoVersion
void System::TypeNameFormatFlags::_set_FormatNoVersion(System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_set_FormatNoVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatNoVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatAngleBrackets
System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatAngleBrackets() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_get_FormatAngleBrackets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatAngleBrackets"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatAngleBrackets
void System::TypeNameFormatFlags::_set_FormatAngleBrackets(System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_set_FormatAngleBrackets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatAngleBrackets", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatStubInfo
System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatStubInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_get_FormatStubInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatStubInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatStubInfo
void System::TypeNameFormatFlags::_set_FormatStubInfo(System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_set_FormatStubInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatStubInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatGenericParam
System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatGenericParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_get_FormatGenericParam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatGenericParam"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatGenericParam
void System::TypeNameFormatFlags::_set_FormatGenericParam(System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_set_FormatGenericParam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatGenericParam", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatSerialization
System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatSerialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_get_FormatSerialization");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatSerialization"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatSerialization
void System::TypeNameFormatFlags::_set_FormatSerialization(System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_set_FormatSerialization");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatSerialization", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.TypeNameKind
#include "System/TypeNameKind.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.TypeNameKind Name
System::TypeNameKind System::TypeNameKind::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameKind::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameKind>("System", "TypeNameKind", "Name"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameKind Name
void System::TypeNameKind::_set_Name(System::TypeNameKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameKind::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameKind", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameKind ToString
System::TypeNameKind System::TypeNameKind::_get_ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameKind::_get_ToString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameKind>("System", "TypeNameKind", "ToString"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameKind ToString
void System::TypeNameKind::_set_ToString(System::TypeNameKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameKind::_set_ToString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameKind", "ToString", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameKind SerializationName
System::TypeNameKind System::TypeNameKind::_get_SerializationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameKind::_get_SerializationName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameKind>("System", "TypeNameKind", "SerializationName"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameKind SerializationName
void System::TypeNameKind::_set_SerializationName(System::TypeNameKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameKind::_set_SerializationName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameKind", "SerializationName", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameKind FullName
System::TypeNameKind System::TypeNameKind::_get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameKind::_get_FullName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameKind>("System", "TypeNameKind", "FullName"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameKind FullName
void System::TypeNameKind::_set_FullName(System::TypeNameKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameKind::_set_FullName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameKind", "FullName", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.RuntimeType/MemberListType
#include "System/RuntimeType_MemberListType.hpp"
// Including type: System.RuntimeType/ListBuilder`1
#include "System/RuntimeType_ListBuilder_1.hpp"
// Including type: System.MonoTypeInfo
#include "System/MonoTypeInfo.hpp"
// Including type: System.Reflection.RuntimeConstructorInfo
#include "System/Reflection/RuntimeConstructorInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Reflection.RuntimeMethodInfo
#include "System/Reflection/RuntimeMethodInfo.hpp"
// Including type: System.Reflection.CallingConventions
#include "System/Reflection/CallingConventions.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Reflection.EventInfo
#include "System/Reflection/EventInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.RuntimeModule
#include "System/Reflection/RuntimeModule.hpp"
// Including type: System.Reflection.RuntimeAssembly
#include "System/Reflection/RuntimeAssembly.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Threading.StackCrawlMark
#include "System/Threading/StackCrawlMark.hpp"
// Including type: System.Reflection.MonoCMethod
#include "System/Reflection/MonoCMethod.hpp"
// Including type: System.TypeNameKind
#include "System/TypeNameKind.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Reflection.RuntimePropertyInfo
#include "System/Reflection/RuntimePropertyInfo.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Reflection.GenericParameterAttributes
#include "System/Reflection/GenericParameterAttributes.hpp"
// Including type: System.Reflection.RuntimeFieldInfo
#include "System/Reflection/RuntimeFieldInfo.hpp"
// Including type: System.Reflection.RuntimeEventInfo
#include "System/Reflection/RuntimeEventInfo.hpp"
// Including type: System.Reflection.MemberTypes
#include "System/Reflection/MemberTypes.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.RuntimeTypeHandle
#include "System/RuntimeTypeHandle.hpp"
// Including type: System.Reflection.TypeAttributes
#include "System/Reflection/TypeAttributes.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Reflection.CustomAttributeData
#include "System/Reflection/CustomAttributeData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.RuntimeType ValueType
System::RuntimeType* System::RuntimeType::_get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_ValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType*>("System", "RuntimeType", "ValueType"));
}
// Autogenerated static field setter
// Set static field: static readonly System.RuntimeType ValueType
void System::RuntimeType::_set_ValueType(System::RuntimeType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_ValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "ValueType", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.RuntimeType EnumType
System::RuntimeType* System::RuntimeType::_get_EnumType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_EnumType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType*>("System", "RuntimeType", "EnumType"));
}
// Autogenerated static field setter
// Set static field: static readonly System.RuntimeType EnumType
void System::RuntimeType::_set_EnumType(System::RuntimeType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_EnumType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "EnumType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.RuntimeType ObjectType
System::RuntimeType* System::RuntimeType::_get_ObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_ObjectType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType*>("System", "RuntimeType", "ObjectType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.RuntimeType ObjectType
void System::RuntimeType::_set_ObjectType(System::RuntimeType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_ObjectType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "ObjectType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.RuntimeType StringType
System::RuntimeType* System::RuntimeType::_get_StringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_StringType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType*>("System", "RuntimeType", "StringType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.RuntimeType StringType
void System::RuntimeType::_set_StringType(System::RuntimeType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_StringType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "StringType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.RuntimeType DelegateType
System::RuntimeType* System::RuntimeType::_get_DelegateType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_DelegateType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType*>("System", "RuntimeType", "DelegateType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.RuntimeType DelegateType
void System::RuntimeType::_set_DelegateType(System::RuntimeType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_DelegateType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "DelegateType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type[] s_SICtorParamTypes
::Array<System::Type*>* System::RuntimeType::_get_s_SICtorParamTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_s_SICtorParamTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Type*>*>("System", "RuntimeType", "s_SICtorParamTypes"));
}
// Autogenerated static field setter
// Set static field: static private System.Type[] s_SICtorParamTypes
void System::RuntimeType::_set_s_SICtorParamTypes(::Array<System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_s_SICtorParamTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "s_SICtorParamTypes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags MemberBindingMask
System::Reflection::BindingFlags System::RuntimeType::_get_MemberBindingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_MemberBindingMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "MemberBindingMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags MemberBindingMask
void System::RuntimeType::_set_MemberBindingMask(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_MemberBindingMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "MemberBindingMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags InvocationMask
System::Reflection::BindingFlags System::RuntimeType::_get_InvocationMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_InvocationMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "InvocationMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags InvocationMask
void System::RuntimeType::_set_InvocationMask(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_InvocationMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "InvocationMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderNonCreateInstance
System::Reflection::BindingFlags System::RuntimeType::_get_BinderNonCreateInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_BinderNonCreateInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "BinderNonCreateInstance"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderNonCreateInstance
void System::RuntimeType::_set_BinderNonCreateInstance(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_BinderNonCreateInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderNonCreateInstance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderGetSetProperty
System::Reflection::BindingFlags System::RuntimeType::_get_BinderGetSetProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_BinderGetSetProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "BinderGetSetProperty"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderGetSetProperty
void System::RuntimeType::_set_BinderGetSetProperty(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_BinderGetSetProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderGetSetProperty", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderSetInvokeProperty
System::Reflection::BindingFlags System::RuntimeType::_get_BinderSetInvokeProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_BinderSetInvokeProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "BinderSetInvokeProperty"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderSetInvokeProperty
void System::RuntimeType::_set_BinderSetInvokeProperty(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_BinderSetInvokeProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderSetInvokeProperty", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderGetSetField
System::Reflection::BindingFlags System::RuntimeType::_get_BinderGetSetField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_BinderGetSetField");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "BinderGetSetField"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderGetSetField
void System::RuntimeType::_set_BinderGetSetField(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_BinderGetSetField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderGetSetField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderSetInvokeField
System::Reflection::BindingFlags System::RuntimeType::_get_BinderSetInvokeField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_BinderSetInvokeField");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "BinderSetInvokeField"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderSetInvokeField
void System::RuntimeType::_set_BinderSetInvokeField(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_BinderSetInvokeField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderSetInvokeField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderNonFieldGetSet
System::Reflection::BindingFlags System::RuntimeType::_get_BinderNonFieldGetSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_BinderNonFieldGetSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "BinderNonFieldGetSet"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderNonFieldGetSet
void System::RuntimeType::_set_BinderNonFieldGetSet(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_BinderNonFieldGetSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderNonFieldGetSet", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags ClassicBindingMask
System::Reflection::BindingFlags System::RuntimeType::_get_ClassicBindingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_ClassicBindingMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "ClassicBindingMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags ClassicBindingMask
void System::RuntimeType::_set_ClassicBindingMask(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_ClassicBindingMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "ClassicBindingMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.RuntimeType s_typedRef
System::RuntimeType* System::RuntimeType::_get_s_typedRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_s_typedRef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType*>("System", "RuntimeType", "s_typedRef"));
}
// Autogenerated static field setter
// Set static field: static private System.RuntimeType s_typedRef
void System::RuntimeType::_set_s_typedRef(System::RuntimeType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_s_typedRef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "s_typedRef", value));
}
// Autogenerated method: System.RuntimeType.ThrowIfTypeNeverValidGenericArgument
void System::RuntimeType::ThrowIfTypeNeverValidGenericArgument(System::RuntimeType* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::ThrowIfTypeNeverValidGenericArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "ThrowIfTypeNeverValidGenericArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.RuntimeType.SanityCheckGenericArguments
void System::RuntimeType::SanityCheckGenericArguments(::Array<System::RuntimeType*>* genericArguments, ::Array<System::RuntimeType*>* genericParamters) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::SanityCheckGenericArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "SanityCheckGenericArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(genericArguments), ::il2cpp_utils::ExtractType(genericParamters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, genericArguments, genericParamters);
}
// Autogenerated method: System.RuntimeType.SplitName
void System::RuntimeType::SplitName(::Il2CppString* fullname, ::Il2CppString*& name, ::Il2CppString*& ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::SplitName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "SplitName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullname), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fullname, name, ns);
}
// Autogenerated method: System.RuntimeType.FilterHelper
void System::RuntimeType::FilterHelper(System::Reflection::BindingFlags bindingFlags, ::Il2CppString*& name, bool allowPrefixLookup, bool& prefixLookup, bool& ignoreCase, System::RuntimeType::MemberListType& listType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::FilterHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingFlags), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(allowPrefixLookup), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::RuntimeType::MemberListType>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bindingFlags, name, allowPrefixLookup, prefixLookup, ignoreCase, listType);
}
// Autogenerated method: System.RuntimeType.FilterHelper
void System::RuntimeType::FilterHelper(System::Reflection::BindingFlags bindingFlags, ::Il2CppString*& name, bool& ignoreCase, System::RuntimeType::MemberListType& listType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::FilterHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingFlags), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::RuntimeType::MemberListType>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bindingFlags, name, ignoreCase, listType);
}
// Autogenerated method: System.RuntimeType.FilterApplyPrefixLookup
bool System::RuntimeType::FilterApplyPrefixLookup(System::Reflection::MemberInfo* memberInfo, ::Il2CppString* name, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::FilterApplyPrefixLookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyPrefixLookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberInfo), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, memberInfo, name, ignoreCase);
}
// Autogenerated method: System.RuntimeType.FilterApplyBase
bool System::RuntimeType::FilterApplyBase(System::Reflection::MemberInfo* memberInfo, System::Reflection::BindingFlags bindingFlags, bool isPublic, bool isNonProtectedInternal, bool isStatic, ::Il2CppString* name, bool prefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::FilterApplyBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberInfo), ::il2cpp_utils::ExtractType(bindingFlags), ::il2cpp_utils::ExtractType(isPublic), ::il2cpp_utils::ExtractType(isNonProtectedInternal), ::il2cpp_utils::ExtractType(isStatic), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(prefixLookup)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, memberInfo, bindingFlags, isPublic, isNonProtectedInternal, isStatic, name, prefixLookup);
}
// Autogenerated method: System.RuntimeType.FilterApplyType
bool System::RuntimeType::FilterApplyType(System::Type* type, System::Reflection::BindingFlags bindingFlags, ::Il2CppString* name, bool prefixLookup, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::FilterApplyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(bindingFlags), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(prefixLookup), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, bindingFlags, name, prefixLookup, ns);
}
// Autogenerated method: System.RuntimeType.FilterApplyMethodInfo
bool System::RuntimeType::FilterApplyMethodInfo(System::Reflection::RuntimeMethodInfo* method, System::Reflection::BindingFlags bindingFlags, System::Reflection::CallingConventions callConv, ::Array<System::Type*>* argumentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::FilterApplyMethodInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyMethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(bindingFlags), ::il2cpp_utils::ExtractType(callConv), ::il2cpp_utils::ExtractType(argumentTypes)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, method, bindingFlags, callConv, argumentTypes);
}
// Autogenerated method: System.RuntimeType.FilterApplyConstructorInfo
bool System::RuntimeType::FilterApplyConstructorInfo(System::Reflection::RuntimeConstructorInfo* constructor, System::Reflection::BindingFlags bindingFlags, System::Reflection::CallingConventions callConv, ::Array<System::Type*>* argumentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::FilterApplyConstructorInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyConstructorInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constructor), ::il2cpp_utils::ExtractType(bindingFlags), ::il2cpp_utils::ExtractType(callConv), ::il2cpp_utils::ExtractType(argumentTypes)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, constructor, bindingFlags, callConv, argumentTypes);
}
// Autogenerated method: System.RuntimeType.FilterApplyMethodBase
bool System::RuntimeType::FilterApplyMethodBase(System::Reflection::MethodBase* methodBase, System::Reflection::BindingFlags methodFlags, System::Reflection::BindingFlags bindingFlags, System::Reflection::CallingConventions callConv, ::Array<System::Type*>* argumentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::FilterApplyMethodBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyMethodBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodBase), ::il2cpp_utils::ExtractType(methodFlags), ::il2cpp_utils::ExtractType(bindingFlags), ::il2cpp_utils::ExtractType(callConv), ::il2cpp_utils::ExtractType(argumentTypes)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, methodBase, methodFlags, bindingFlags, callConv, argumentTypes);
}
// Autogenerated method: System.RuntimeType.IsSpecialSerializableType
bool System::RuntimeType::IsSpecialSerializableType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsSpecialSerializableType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSpecialSerializableType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetMethodCandidates
System::RuntimeType::ListBuilder_1<System::Reflection::MethodInfo*> System::RuntimeType::GetMethodCandidates(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::CallingConventions callConv, ::Array<System::Type*>* types, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetMethodCandidates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodCandidates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(callConv), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(allowPrefixLookup)})));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType::ListBuilder_1<System::Reflection::MethodInfo*>, false>(this, ___internal__method, name, bindingAttr, callConv, types, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetConstructorCandidates
System::RuntimeType::ListBuilder_1<System::Reflection::ConstructorInfo*> System::RuntimeType::GetConstructorCandidates(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::CallingConventions callConv, ::Array<System::Type*>* types, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetConstructorCandidates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructorCandidates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(callConv), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(allowPrefixLookup)})));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType::ListBuilder_1<System::Reflection::ConstructorInfo*>, false>(this, ___internal__method, name, bindingAttr, callConv, types, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetPropertyCandidates
System::RuntimeType::ListBuilder_1<System::Reflection::PropertyInfo*> System::RuntimeType::GetPropertyCandidates(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, ::Array<System::Type*>* types, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetPropertyCandidates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyCandidates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(allowPrefixLookup)})));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType::ListBuilder_1<System::Reflection::PropertyInfo*>, false>(this, ___internal__method, name, bindingAttr, types, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetEventCandidates
System::RuntimeType::ListBuilder_1<System::Reflection::EventInfo*> System::RuntimeType::GetEventCandidates(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetEventCandidates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEventCandidates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(allowPrefixLookup)})));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType::ListBuilder_1<System::Reflection::EventInfo*>, false>(this, ___internal__method, name, bindingAttr, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetFieldCandidates
System::RuntimeType::ListBuilder_1<System::Reflection::FieldInfo*> System::RuntimeType::GetFieldCandidates(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetFieldCandidates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFieldCandidates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(allowPrefixLookup)})));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType::ListBuilder_1<System::Reflection::FieldInfo*>, false>(this, ___internal__method, name, bindingAttr, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetNestedTypeCandidates
System::RuntimeType::ListBuilder_1<System::Type*> System::RuntimeType::GetNestedTypeCandidates(::Il2CppString* fullname, System::Reflection::BindingFlags bindingAttr, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetNestedTypeCandidates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNestedTypeCandidates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullname), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(allowPrefixLookup)})));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType::ListBuilder_1<System::Type*>, false>(this, ___internal__method, fullname, bindingAttr, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetRuntimeModule
System::Reflection::RuntimeModule* System::RuntimeType::GetRuntimeModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetRuntimeModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRuntimeModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::RuntimeModule*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetRuntimeAssembly
System::Reflection::RuntimeAssembly* System::RuntimeType::GetRuntimeAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetRuntimeAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRuntimeAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::RuntimeAssembly*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetBaseType
System::RuntimeType* System::RuntimeType::GetBaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetBaseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetGenericArgumentsInternal
::Array<System::RuntimeType*>* System::RuntimeType::GetGenericArgumentsInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetGenericArgumentsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericArgumentsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::RuntimeType*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.Clone
::Il2CppObject* System::RuntimeType::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetObjectData
void System::RuntimeType::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.RuntimeType.CreateInstanceCheckThis
void System::RuntimeType::CreateInstanceCheckThis() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::CreateInstanceCheckThis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstanceCheckThis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.CreateInstanceImpl
::Il2CppObject* System::RuntimeType::CreateInstanceImpl(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, ::Array<::Il2CppObject*>* args, System::Globalization::CultureInfo* culture, ::Array<::Il2CppObject*>* activationAttributes, System::Threading::StackCrawlMark& stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::CreateInstanceImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstanceImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(activationAttributes), ::il2cpp_utils::ExtractType(stackMark)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, bindingAttr, binder, args, culture, activationAttributes, stackMark);
}
// Autogenerated method: System.RuntimeType.CreateInstanceDefaultCtor
::Il2CppObject* System::RuntimeType::CreateInstanceDefaultCtor(bool publicOnly, bool skipCheckThis, bool fillCache, System::Threading::StackCrawlMark& stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::CreateInstanceDefaultCtor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstanceDefaultCtor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(publicOnly), ::il2cpp_utils::ExtractType(skipCheckThis), ::il2cpp_utils::ExtractType(fillCache), ::il2cpp_utils::ExtractType(stackMark)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, publicOnly, skipCheckThis, fillCache, stackMark);
}
// Autogenerated method: System.RuntimeType.GetDefaultConstructor
System::Reflection::MonoCMethod* System::RuntimeType::GetDefaultConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetDefaultConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MonoCMethod*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetDefaultMemberName
::Il2CppString* System::RuntimeType::GetDefaultMemberName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetDefaultMemberName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultMemberName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetSerializationCtor
System::Reflection::RuntimeConstructorInfo* System::RuntimeType::GetSerializationCtor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetSerializationCtor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSerializationCtor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::RuntimeConstructorInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.CreateInstanceSlow
::Il2CppObject* System::RuntimeType::CreateInstanceSlow(bool publicOnly, bool skipCheckThis, bool fillCache, System::Threading::StackCrawlMark& stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::CreateInstanceSlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstanceSlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(publicOnly), ::il2cpp_utils::ExtractType(skipCheckThis), ::il2cpp_utils::ExtractType(fillCache), ::il2cpp_utils::ExtractType(stackMark)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, publicOnly, skipCheckThis, fillCache, stackMark);
}
// Autogenerated method: System.RuntimeType.CreateInstanceMono
::Il2CppObject* System::RuntimeType::CreateInstanceMono(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::CreateInstanceMono");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstanceMono", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, nonPublic);
}
// Autogenerated method: System.RuntimeType.CheckValue
::Il2CppObject* System::RuntimeType::CheckValue(::Il2CppObject* value, System::Reflection::Binder* binder, System::Globalization::CultureInfo* culture, System::Reflection::BindingFlags invokeAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::CheckValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(invokeAttr)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, value, binder, culture, invokeAttr);
}
// Autogenerated method: System.RuntimeType.TryConvertToType
::Il2CppObject* System::RuntimeType::TryConvertToType(::Il2CppObject* value, bool& failed) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::TryConvertToType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryConvertToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(failed)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, value, failed);
}
// Autogenerated method: System.RuntimeType.IsConvertibleToPrimitiveType
::Il2CppObject* System::RuntimeType::IsConvertibleToPrimitiveType(::Il2CppObject* value, System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsConvertibleToPrimitiveType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "IsConvertibleToPrimitiveType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(targetType)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, targetType);
}
// Autogenerated method: System.RuntimeType.GetCachedName
::Il2CppString* System::RuntimeType::GetCachedName(System::TypeNameKind kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetCachedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCachedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kind)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, kind);
}
// Autogenerated method: System.RuntimeType.make_array_type
System::Type* System::RuntimeType::make_array_type(int rank) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::make_array_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "make_array_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rank)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, rank);
}
// Autogenerated method: System.RuntimeType.make_byref_type
System::Type* System::RuntimeType::make_byref_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::make_byref_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "make_byref_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.MakePointerType
System::Type* System::RuntimeType::MakePointerType(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MakePointerType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "MakePointerType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.RuntimeType.CreateInstanceForAnotherGenericParameter
::Il2CppObject* System::RuntimeType::CreateInstanceForAnotherGenericParameter(System::Type* genericType, System::RuntimeType* genericArgument) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::CreateInstanceForAnotherGenericParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "CreateInstanceForAnotherGenericParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(genericType), ::il2cpp_utils::ExtractType(genericArgument)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, genericType, genericArgument);
}
// Autogenerated method: System.RuntimeType.MakeGenericType
System::Type* System::RuntimeType::MakeGenericType(System::Type* gt, ::Array<System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MakeGenericType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "MakeGenericType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gt), ::il2cpp_utils::ExtractType(types)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gt, types);
}
// Autogenerated method: System.RuntimeType.GetMethodsByName_native
System::IntPtr System::RuntimeType::GetMethodsByName_native(System::IntPtr namePtr, System::Reflection::BindingFlags bindingAttr, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetMethodsByName_native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodsByName_native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namePtr), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, namePtr, bindingAttr, ignoreCase);
}
// Autogenerated method: System.RuntimeType.GetMethodsByName
::Array<System::Reflection::RuntimeMethodInfo*>* System::RuntimeType::GetMethodsByName(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, bool ignoreCase, System::RuntimeType* reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetMethodsByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodsByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(ignoreCase), ::il2cpp_utils::ExtractType(reflectedType)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::RuntimeMethodInfo*>*, false>(this, ___internal__method, name, bindingAttr, ignoreCase, reflectedType);
}
// Autogenerated method: System.RuntimeType.GetPropertiesByName_native
System::IntPtr System::RuntimeType::GetPropertiesByName_native(System::IntPtr name, System::Reflection::BindingFlags bindingAttr, bool icase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetPropertiesByName_native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertiesByName_native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(icase)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, name, bindingAttr, icase);
}
// Autogenerated method: System.RuntimeType.GetConstructors_native
System::IntPtr System::RuntimeType::GetConstructors_native(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetConstructors_native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructors_native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetConstructors_internal
::Array<System::Reflection::RuntimeConstructorInfo*>* System::RuntimeType::GetConstructors_internal(System::Reflection::BindingFlags bindingAttr, System::RuntimeType* reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetConstructors_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructors_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(reflectedType)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::RuntimeConstructorInfo*>*, false>(this, ___internal__method, bindingAttr, reflectedType);
}
// Autogenerated method: System.RuntimeType.GetPropertiesByName
::Array<System::Reflection::RuntimePropertyInfo*>* System::RuntimeType::GetPropertiesByName(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, bool icase, System::RuntimeType* reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetPropertiesByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertiesByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(icase), ::il2cpp_utils::ExtractType(reflectedType)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::RuntimePropertyInfo*>*, false>(this, ___internal__method, name, bindingAttr, icase, reflectedType);
}
// Autogenerated method: System.RuntimeType.GetTypeCodeImplInternal
System::TypeCode System::RuntimeType::GetTypeCodeImplInternal(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetTypeCodeImplInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "GetTypeCodeImplInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.RuntimeType.IsGenericCOMObjectImpl
bool System::RuntimeType::IsGenericCOMObjectImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsGenericCOMObjectImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsGenericCOMObjectImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.CreateInstanceInternal
::Il2CppObject* System::RuntimeType::CreateInstanceInternal(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::CreateInstanceInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "CreateInstanceInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.RuntimeType.getFullName
::Il2CppString* System::RuntimeType::getFullName(bool full_name, bool assembly_qualified) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::getFullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getFullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(full_name), ::il2cpp_utils::ExtractType(assembly_qualified)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, full_name, assembly_qualified);
}
// Autogenerated method: System.RuntimeType.GetGenericArgumentsInternal
::Array<System::Type*>* System::RuntimeType::GetGenericArgumentsInternal(bool runtimeArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetGenericArgumentsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericArgumentsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runtimeArray)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method, runtimeArray);
}
// Autogenerated method: System.RuntimeType.GetGenericParameterAttributes
System::Reflection::GenericParameterAttributes System::RuntimeType::GetGenericParameterAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetGenericParameterAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericParameterAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::GenericParameterAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetGenericParameterPosition
int System::RuntimeType::GetGenericParameterPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetGenericParameterPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericParameterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetEvents_native
System::IntPtr System::RuntimeType::GetEvents_native(System::IntPtr name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetEvents_native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEvents_native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetFields_native
System::IntPtr System::RuntimeType::GetFields_native(System::IntPtr name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetFields_native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFields_native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetFields_internal
::Array<System::Reflection::RuntimeFieldInfo*>* System::RuntimeType::GetFields_internal(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::RuntimeType* reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetFields_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFields_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(reflectedType)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::RuntimeFieldInfo*>*, false>(this, ___internal__method, name, bindingAttr, reflectedType);
}
// Autogenerated method: System.RuntimeType.GetEvents_internal
::Array<System::Reflection::RuntimeEventInfo*>* System::RuntimeType::GetEvents_internal(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::RuntimeType* reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetEvents_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEvents_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(reflectedType)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::RuntimeEventInfo*>*, false>(this, ___internal__method, name, bindingAttr, reflectedType);
}
// Autogenerated method: System.RuntimeType.GetNestedTypes_native
System::IntPtr System::RuntimeType::GetNestedTypes_native(System::IntPtr name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetNestedTypes_native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNestedTypes_native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetNestedTypes_internal
::Array<System::RuntimeType*>* System::RuntimeType::GetNestedTypes_internal(::Il2CppString* displayName, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetNestedTypes_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNestedTypes_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(displayName), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::RuntimeType*>*, false>(this, ___internal__method, displayName, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetMethods
::Array<System::Reflection::MethodInfo*>* System::RuntimeType::GetMethods(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetMethods");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethods", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::MethodInfo*>*, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetConstructors
::Array<System::Reflection::ConstructorInfo*>* System::RuntimeType::GetConstructors(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetConstructors");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::ConstructorInfo*>*, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetProperties
::Array<System::Reflection::PropertyInfo*>* System::RuntimeType::GetProperties(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::PropertyInfo*>*, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetFields
::Array<System::Reflection::FieldInfo*>* System::RuntimeType::GetFields(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetFields");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::FieldInfo*>*, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetMethodImpl
System::Reflection::MethodInfo* System::RuntimeType::GetMethodImpl(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Reflection::CallingConventions callConv, ::Array<System::Type*>* types, ::Array<System::Reflection::ParameterModifier>* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetMethodImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(callConv), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method, name, bindingAttr, binder, callConv, types, modifiers);
}
// Autogenerated method: System.RuntimeType.GetConstructorImpl
System::Reflection::ConstructorInfo* System::RuntimeType::GetConstructorImpl(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Reflection::CallingConventions callConvention, ::Array<System::Type*>* types, ::Array<System::Reflection::ParameterModifier>* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetConstructorImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructorImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(callConvention), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::ConstructorInfo*, false>(this, ___internal__method, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.RuntimeType.GetPropertyImpl
System::Reflection::PropertyInfo* System::RuntimeType::GetPropertyImpl(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Type* returnType, ::Array<System::Type*>* types, ::Array<System::Reflection::ParameterModifier>* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetPropertyImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(returnType), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::PropertyInfo*, false>(this, ___internal__method, name, bindingAttr, binder, returnType, types, modifiers);
}
// Autogenerated method: System.RuntimeType.GetEvent
System::Reflection::EventInfo* System::RuntimeType::GetEvent(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::EventInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetField
System::Reflection::FieldInfo* System::RuntimeType::GetField(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetField");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::FieldInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetNestedType
System::Type* System::RuntimeType::GetNestedType(::Il2CppString* fullname, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetNestedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNestedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullname), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, fullname, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetMember
::Array<System::Reflection::MemberInfo*>* System::RuntimeType::GetMember(::Il2CppString* name, System::Reflection::MemberTypes type, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetMember");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::MemberInfo*>*, false>(this, ___internal__method, name, type, bindingAttr);
}
// Autogenerated method: System.RuntimeType.get_Module
System::Reflection::Module* System::RuntimeType::get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_Module");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Module", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Module*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_Assembly
System::Reflection::Assembly* System::RuntimeType::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_Assembly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Assembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_TypeHandle
System::RuntimeTypeHandle System::RuntimeType::get_TypeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_TypeHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeTypeHandle, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsInstanceOfType
bool System::RuntimeType::IsInstanceOfType(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsInstanceOfType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInstanceOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: System.RuntimeType.IsSubclassOf
bool System::RuntimeType::IsSubclassOf(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsSubclassOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSubclassOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: System.RuntimeType.IsAssignableFrom
bool System::RuntimeType::IsAssignableFrom(System::Type* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsAssignableFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAssignableFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: System.RuntimeType.IsEquivalentTo
bool System::RuntimeType::IsEquivalentTo(System::Type* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsEquivalentTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEquivalentTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.RuntimeType.get_BaseType
System::Type* System::RuntimeType::get_BaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_BaseType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_UnderlyingSystemType
System::Type* System::RuntimeType::get_UnderlyingSystemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_UnderlyingSystemType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnderlyingSystemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetAttributeFlagsImpl
System::Reflection::TypeAttributes System::RuntimeType::GetAttributeFlagsImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetAttributeFlagsImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributeFlagsImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::TypeAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsContextfulImpl
bool System::RuntimeType::IsContextfulImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsContextfulImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsContextfulImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsByRefImpl
bool System::RuntimeType::IsByRefImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsByRefImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsByRefImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsPrimitiveImpl
bool System::RuntimeType::IsPrimitiveImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsPrimitiveImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrimitiveImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsPointerImpl
bool System::RuntimeType::IsPointerImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsPointerImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointerImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsCOMObjectImpl
bool System::RuntimeType::IsCOMObjectImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsCOMObjectImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCOMObjectImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsValueTypeImpl
bool System::RuntimeType::IsValueTypeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsValueTypeImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValueTypeImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_IsEnum
bool System::RuntimeType::get_IsEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_IsEnum");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.HasElementTypeImpl
bool System::RuntimeType::HasElementTypeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::HasElementTypeImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasElementTypeImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_GenericParameterAttributes
System::Reflection::GenericParameterAttributes System::RuntimeType::get_GenericParameterAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_GenericParameterAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GenericParameterAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::GenericParameterAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_IsSzArray
bool System::RuntimeType::get_IsSzArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_IsSzArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSzArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsArrayImpl
bool System::RuntimeType::IsArrayImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsArrayImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetArrayRank
int System::RuntimeType::GetArrayRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetArrayRank");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArrayRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetElementType
System::Type* System::RuntimeType::GetElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetElementType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetEnumNames
::Array<::Il2CppString*>* System::RuntimeType::GetEnumNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetEnumNames");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetEnumValues
System::Array* System::RuntimeType::GetEnumValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetEnumValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetEnumUnderlyingType
System::Type* System::RuntimeType::GetEnumUnderlyingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetEnumUnderlyingType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumUnderlyingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsEnumDefined
bool System::RuntimeType::IsEnumDefined(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsEnumDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEnumDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.RuntimeType.GetEnumName
::Il2CppString* System::RuntimeType::GetEnumName(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetEnumName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.RuntimeType.GetGenericArguments
::Array<System::Type*>* System::RuntimeType::GetGenericArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetGenericArguments");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.MakeGenericType
System::Type* System::RuntimeType::MakeGenericType(::Array<System::Type*>* instantiation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MakeGenericType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeGenericType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instantiation)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, instantiation);
}
// Creating initializer_list -> params proxy for: System.Type MakeGenericType(params System.Type[] instantiation)
System::Type* System::RuntimeType::MakeGenericType(std::initializer_list<System::Type*> instantiation) {
  return System::RuntimeType::MakeGenericType(::Array<System::Type*>::New(instantiation));
}
// Autogenerated method: System.RuntimeType.get_IsGenericTypeDefinition
bool System::RuntimeType::get_IsGenericTypeDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_IsGenericTypeDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGenericTypeDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_IsGenericParameter
bool System::RuntimeType::get_IsGenericParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_IsGenericParameter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGenericParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_GenericParameterPosition
int System::RuntimeType::get_GenericParameterPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_GenericParameterPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GenericParameterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetGenericTypeDefinition
System::Type* System::RuntimeType::GetGenericTypeDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetGenericTypeDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericTypeDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_IsGenericType
bool System::RuntimeType::get_IsGenericType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_IsGenericType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGenericType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.InvokeMember
::Il2CppObject* System::RuntimeType::InvokeMember(::Il2CppString* name, System::Reflection::BindingFlags bindingFlags, System::Reflection::Binder* binder, ::Il2CppObject* target, ::Array<::Il2CppObject*>* providedArgs, ::Array<System::Reflection::ParameterModifier>* modifiers, System::Globalization::CultureInfo* culture, ::Array<::Il2CppString*>* namedParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::InvokeMember");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingFlags), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(providedArgs), ::il2cpp_utils::ExtractType(modifiers), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(namedParams)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, name, bindingFlags, binder, target, providedArgs, modifiers, culture, namedParams);
}
// Autogenerated method: System.RuntimeType.Equals
bool System::RuntimeType::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.RuntimeType.GetCustomAttributes
::Array<::Il2CppObject*>* System::RuntimeType::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.RuntimeType.GetCustomAttributes
::Array<::Il2CppObject*>* System::RuntimeType::GetCustomAttributes(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.RuntimeType.IsDefined
bool System::RuntimeType::IsDefined(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.RuntimeType.GetCustomAttributesData
System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>* System::RuntimeType::GetCustomAttributesData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetCustomAttributesData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributesData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.FormatTypeName
::Il2CppString* System::RuntimeType::FormatTypeName(bool serialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::FormatTypeName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serialization)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, serialization);
}
// Autogenerated method: System.RuntimeType.get_MemberType
System::Reflection::MemberTypes System::RuntimeType::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_MemberType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MemberTypes, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_ReflectedType
System::Type* System::RuntimeType::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_MetadataToken
int System::RuntimeType::get_MetadataToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_MetadataToken");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MetadataToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.MakeArrayType
System::Type* System::RuntimeType::MakeArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MakeArrayType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeArrayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.MakeArrayType
System::Type* System::RuntimeType::MakeArrayType(int rank) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MakeArrayType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeArrayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rank)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, rank);
}
// Autogenerated method: System.RuntimeType.MakeByRefType
System::Type* System::RuntimeType::MakeByRefType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MakeByRefType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeByRefType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.MakePointerType
System::Type* System::RuntimeType::MakePointerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MakePointerType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakePointerType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_ContainsGenericParameters
bool System::RuntimeType::get_ContainsGenericParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_ContainsGenericParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContainsGenericParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetGenericParameterConstraints
::Array<System::Type*>* System::RuntimeType::GetGenericParameterConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetGenericParameterConstraints");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericParameterConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetTypeCodeImpl
System::TypeCode System::RuntimeType::GetTypeCodeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetTypeCodeImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeCodeImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.ToString
::Il2CppString* System::RuntimeType::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_DeclaringMethod
System::Reflection::MethodBase* System::RuntimeType::get_DeclaringMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_DeclaringMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodBase*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetInterfaces
::Array<System::Type*>* System::RuntimeType::GetInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetInterfaces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_AssemblyQualifiedName
::Il2CppString* System::RuntimeType::get_AssemblyQualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_AssemblyQualifiedName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssemblyQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_DeclaringType
System::Type* System::RuntimeType::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_Name
::Il2CppString* System::RuntimeType::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_Namespace
::Il2CppString* System::RuntimeType::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_Namespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetHashCode
int System::RuntimeType::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_FullName
::Il2CppString* System::RuntimeType::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_FullName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType..cctor
void System::RuntimeType::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.RuntimeType.op_Equality
bool System::operator ==(System::RuntimeType* left, System::RuntimeType& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.RuntimeType.op_Inequality
bool System::operator !=(System::RuntimeType* left, System::RuntimeType& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.RuntimeType/MemberListType
#include "System/RuntimeType_MemberListType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.RuntimeType/MemberListType All
System::RuntimeType::MemberListType System::RuntimeType::MemberListType::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MemberListType::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType::MemberListType>("System", "RuntimeType/MemberListType", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.RuntimeType/MemberListType All
void System::RuntimeType::MemberListType::_set_All(System::RuntimeType::MemberListType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MemberListType::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType/MemberListType", "All", value));
}
// Autogenerated static field getter
// Get static field: static public System.RuntimeType/MemberListType CaseSensitive
System::RuntimeType::MemberListType System::RuntimeType::MemberListType::_get_CaseSensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MemberListType::_get_CaseSensitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType::MemberListType>("System", "RuntimeType/MemberListType", "CaseSensitive"));
}
// Autogenerated static field setter
// Set static field: static public System.RuntimeType/MemberListType CaseSensitive
void System::RuntimeType::MemberListType::_set_CaseSensitive(System::RuntimeType::MemberListType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MemberListType::_set_CaseSensitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType/MemberListType", "CaseSensitive", value));
}
// Autogenerated static field getter
// Get static field: static public System.RuntimeType/MemberListType CaseInsensitive
System::RuntimeType::MemberListType System::RuntimeType::MemberListType::_get_CaseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MemberListType::_get_CaseInsensitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType::MemberListType>("System", "RuntimeType/MemberListType", "CaseInsensitive"));
}
// Autogenerated static field setter
// Set static field: static public System.RuntimeType/MemberListType CaseInsensitive
void System::RuntimeType::MemberListType::_set_CaseInsensitive(System::RuntimeType::MemberListType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MemberListType::_set_CaseInsensitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType/MemberListType", "CaseInsensitive", value));
}
// Autogenerated static field getter
// Get static field: static public System.RuntimeType/MemberListType HandleToInfo
System::RuntimeType::MemberListType System::RuntimeType::MemberListType::_get_HandleToInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MemberListType::_get_HandleToInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType::MemberListType>("System", "RuntimeType/MemberListType", "HandleToInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.RuntimeType/MemberListType HandleToInfo
void System::RuntimeType::MemberListType::_set_HandleToInfo(System::RuntimeType::MemberListType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MemberListType::_set_HandleToInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType/MemberListType", "HandleToInfo", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ReflectionOnlyType
#include "System/ReflectionOnlyType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ReflectionOnlyType.get_TypeHandle
System::RuntimeTypeHandle System::ReflectionOnlyType::get_TypeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ReflectionOnlyType::get_TypeHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeTypeHandle, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.SByte
#include "System/SByte.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.SByte MaxValue
int8_t System::SByte::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int8_t>("System", "SByte", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.SByte MaxValue
void System::SByte::_set_MaxValue(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "SByte", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.SByte MinValue
int8_t System::SByte::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int8_t>("System", "SByte", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.SByte MinValue
void System::SByte::_set_MinValue(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "SByte", "MinValue", value));
}
// Autogenerated method: System.SByte.CompareTo
int System::SByte::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.SByte.CompareTo
int System::SByte::CompareTo(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.SByte.Equals
bool System::SByte::Equals(int8_t obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.SByte.ToString
::Il2CppString* System::SByte::ToString(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.ToString
::Il2CppString* System::SByte::ToString(::Il2CppString* format, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format, provider);
}
// Autogenerated method: System.SByte.ToString
::Il2CppString* System::SByte::ToString(::Il2CppString* format, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format, info);
}
// Autogenerated method: System.SByte.Parse
int8_t System::SByte::Parse(::Il2CppString* s, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SByte", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.SByte.Parse
int8_t System::SByte::Parse(::Il2CppString* s, System::Globalization::NumberStyles style, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SByte", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.SByte.Parse
int8_t System::SByte::Parse(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SByte", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, info);
}
// Autogenerated method: System.SByte.GetTypeCode
System::TypeCode System::SByte::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(*this, ___internal__method);
}
// Autogenerated method: System.SByte.System.IConvertible.ToBoolean
bool System::SByte::System_IConvertible_ToBoolean(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToChar
::Il2CppChar System::SByte::System_IConvertible_ToChar(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToSByte
int8_t System::SByte::System_IConvertible_ToSByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToByte
uint8_t System::SByte::System_IConvertible_ToByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToInt16
int16_t System::SByte::System_IConvertible_ToInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToUInt16
uint16_t System::SByte::System_IConvertible_ToUInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToInt32
int System::SByte::System_IConvertible_ToInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToUInt32
uint System::SByte::System_IConvertible_ToUInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToInt64
int64_t System::SByte::System_IConvertible_ToInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToUInt64
uint64_t System::SByte::System_IConvertible_ToUInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToSingle
float System::SByte::System_IConvertible_ToSingle(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToDouble
double System::SByte::System_IConvertible_ToDouble(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToDecimal
System::Decimal System::SByte::System_IConvertible_ToDecimal(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToDateTime
System::DateTime System::SByte::System_IConvertible_ToDateTime(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToType
::Il2CppObject* System::SByte::System_IConvertible_ToType(System::Type* type, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method, type, provider);
}
// Autogenerated method: System.SByte.Equals
bool System::SByte::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.SByte.GetHashCode
int System::SByte::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.SByte.ToString
::Il2CppString* System::SByte::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.SerializableAttribute
#include "System/SerializableAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.SharedStatics
#include "System/SharedStatics.hpp"
// Including type: System.Security.Util.Tokenizer/StringMaker
#include "System/Security/Util/Tokenizer_StringMaker.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.SharedStatics _sharedStatics
System::SharedStatics* System::SharedStatics::_get__sharedStatics() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SharedStatics::_get__sharedStatics");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::SharedStatics*>("System", "SharedStatics", "_sharedStatics"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.SharedStatics _sharedStatics
void System::SharedStatics::_set__sharedStatics(System::SharedStatics* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SharedStatics::_set__sharedStatics");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "SharedStatics", "_sharedStatics", value));
}
// Autogenerated method: System.SharedStatics.GetSharedStringMaker
System::Security::Util::Tokenizer::StringMaker* System::SharedStatics::GetSharedStringMaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SharedStatics::GetSharedStringMaker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SharedStatics", "GetSharedStringMaker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Util::Tokenizer::StringMaker*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.SharedStatics.ReleaseSharedStringMaker
void System::SharedStatics::ReleaseSharedStringMaker(System::Security::Util::Tokenizer::StringMaker*& maker) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SharedStatics::ReleaseSharedStringMaker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SharedStatics", "ReleaseSharedStringMaker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maker)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, maker);
}
// Autogenerated method: System.SharedStatics..cctor
void System::SharedStatics::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SharedStatics::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SharedStatics", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Single
#include "System/Single.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single MinValue
float System::Single::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Single MinValue
void System::Single::_set_MinValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single Epsilon
float System::Single::_get_Epsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_get_Epsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "Epsilon"));
}
// Autogenerated static field setter
// Set static field: static public System.Single Epsilon
void System::Single::_set_Epsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_set_Epsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "Epsilon", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single MaxValue
float System::Single::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Single MaxValue
void System::Single::_set_MaxValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single PositiveInfinity
float System::Single::_get_PositiveInfinity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_get_PositiveInfinity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "PositiveInfinity"));
}
// Autogenerated static field setter
// Set static field: static public System.Single PositiveInfinity
void System::Single::_set_PositiveInfinity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_set_PositiveInfinity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "PositiveInfinity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single NegativeInfinity
float System::Single::_get_NegativeInfinity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_get_NegativeInfinity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "NegativeInfinity"));
}
// Autogenerated static field setter
// Set static field: static public System.Single NegativeInfinity
void System::Single::_set_NegativeInfinity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_set_NegativeInfinity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "NegativeInfinity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single NaN
float System::Single::_get_NaN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_get_NaN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "NaN"));
}
// Autogenerated static field setter
// Set static field: static public System.Single NaN
void System::Single::_set_NaN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_set_NaN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "NaN", value));
}
// Autogenerated method: System.Single.IsInfinity
bool System::Single::IsInfinity(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::IsInfinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "IsInfinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.IsPositiveInfinity
bool System::Single::IsPositiveInfinity(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::IsPositiveInfinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "IsPositiveInfinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.IsNegativeInfinity
bool System::Single::IsNegativeInfinity(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::IsNegativeInfinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "IsNegativeInfinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.IsNaN
bool System::Single::IsNaN(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::IsNaN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "IsNaN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.CompareTo
int System::Single::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Single.CompareTo
int System::Single::CompareTo(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Single.Equals
bool System::Single::Equals(float obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Single.ToString
::Il2CppString* System::Single::ToString(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.ToString
::Il2CppString* System::Single::ToString(::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format);
}
// Autogenerated method: System.Single.ToString
::Il2CppString* System::Single::ToString(::Il2CppString* format, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format, provider);
}
// Autogenerated method: System.Single.Parse
float System::Single::Parse(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Single.Parse
float System::Single::Parse(::Il2CppString* s, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.Single.Parse
float System::Single::Parse(::Il2CppString* s, System::Globalization::NumberStyles style, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.Single.Parse
float System::Single::Parse(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, info);
}
// Autogenerated method: System.Single.TryParse
bool System::Single::TryParse(::Il2CppString* s, float& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<float>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, result);
}
// Autogenerated method: System.Single.TryParse
bool System::Single::TryParse(::Il2CppString* s, System::Globalization::NumberStyles style, System::IFormatProvider* provider, float& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractIndependentType<float>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, provider, result);
}
// Autogenerated method: System.Single.TryParse
bool System::Single::TryParse(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info, float& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<float>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, info, result);
}
// Autogenerated method: System.Single.GetTypeCode
System::TypeCode System::Single::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(*this, ___internal__method);
}
// Autogenerated method: System.Single.System.IConvertible.ToBoolean
bool System::Single::System_IConvertible_ToBoolean(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToChar
::Il2CppChar System::Single::System_IConvertible_ToChar(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToSByte
int8_t System::Single::System_IConvertible_ToSByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToByte
uint8_t System::Single::System_IConvertible_ToByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToInt16
int16_t System::Single::System_IConvertible_ToInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToUInt16
uint16_t System::Single::System_IConvertible_ToUInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToInt32
int System::Single::System_IConvertible_ToInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToUInt32
uint System::Single::System_IConvertible_ToUInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToInt64
int64_t System::Single::System_IConvertible_ToInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToUInt64
uint64_t System::Single::System_IConvertible_ToUInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToSingle
float System::Single::System_IConvertible_ToSingle(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToDouble
double System::Single::System_IConvertible_ToDouble(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToDecimal
System::Decimal System::Single::System_IConvertible_ToDecimal(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToDateTime
System::DateTime System::Single::System_IConvertible_ToDateTime(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToType
::Il2CppObject* System::Single::System_IConvertible_ToType(System::Type* type, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method, type, provider);
}
// Autogenerated method: System.Single.Equals
bool System::Single::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Single.GetHashCode
int System::Single::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.Single.ToString
::Il2CppString* System::Single::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.StackOverflowException
#include "System/StackOverflowException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.StringComparison
#include "System/StringComparison.hpp"
// Including type: System.StringSplitOptions
#include "System/StringSplitOptions.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Text.NormalizationForm
#include "System/Text/NormalizationForm.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.CompareOptions
#include "System/Globalization/CompareOptions.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.ParamsArray
#include "System/ParamsArray.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 TrimHead
int System::String::_get_TrimHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_get_TrimHead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "String", "TrimHead"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TrimHead
void System::String::_set_TrimHead(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_set_TrimHead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "TrimHead", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 TrimTail
int System::String::_get_TrimTail() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_get_TrimTail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "String", "TrimTail"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TrimTail
void System::String::_set_TrimTail(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_set_TrimTail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "TrimTail", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 TrimBoth
int System::String::_get_TrimBoth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_get_TrimBoth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "String", "TrimBoth"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TrimBoth
void System::String::_set_TrimBoth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_set_TrimBoth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "TrimBoth", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String Empty
::Il2CppString* System::String::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "String", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String Empty
void System::String::_set_Empty(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 charPtrAlignConst
int System::String::_get_charPtrAlignConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_get_charPtrAlignConst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "String", "charPtrAlignConst"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 charPtrAlignConst
void System::String::_set_charPtrAlignConst(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_set_charPtrAlignConst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "charPtrAlignConst", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 alignConst
int System::String::_get_alignConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_get_alignConst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "String", "alignConst"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 alignConst
void System::String::_set_alignConst(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_set_alignConst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "alignConst", value));
}
// Autogenerated method: System.String.Join
::Il2CppString* System::String::Join(::Il2CppString* separator, ::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, separator, value);
}
// Creating initializer_list -> params proxy for: System.String Join(System.String separator, params System.String[] value)
::Il2CppString* System::String::Join(::Il2CppString* separator, std::initializer_list<::Il2CppString*> value) {
  return System::String::Join(separator, ::Array<::Il2CppString*>::New(value));
}
// Autogenerated method: System.String.Join
::Il2CppString* System::String::Join(::Il2CppString* separator, System::Collections::Generic::IEnumerable_1<::Il2CppString*>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, separator, values);
}
// Autogenerated method: System.String.Join
::Il2CppString* System::String::Join(::Il2CppString* separator, ::Array<::Il2CppString*>* value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, separator, value, startIndex, count);
}
// Autogenerated method: System.String.CompareOrdinalIgnoreCaseHelper
int System::String::CompareOrdinalIgnoreCaseHelper(::Il2CppString* strA, ::Il2CppString* strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CompareOrdinalIgnoreCaseHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CompareOrdinalIgnoreCaseHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.String.EqualsHelper
bool System::String::EqualsHelper(::Il2CppString* strA, ::Il2CppString* strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::EqualsHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "EqualsHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.String.CompareOrdinalHelper
int System::String::CompareOrdinalHelper(::Il2CppString* strA, ::Il2CppString* strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CompareOrdinalHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CompareOrdinalHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.String.Equals
bool System::String::Equals(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.Equals
bool System::String::Equals(::Il2CppString* value, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.Equals
bool System::String::Equals(::Il2CppString* a, ::Il2CppString* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: System.String.Equals
bool System::String::Equals(::Il2CppString* a, ::Il2CppString* b, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, comparisonType);
}
// Autogenerated method: System.String.get_Chars
::Il2CppChar System::String::get_Chars(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::get_Chars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Chars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, index);
}
// Autogenerated method: System.String.CopyTo
void System::String::CopyTo(int sourceIndex, ::Array<::Il2CppChar>* destination, int destinationIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceIndex), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(destinationIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sourceIndex, destination, destinationIndex, count);
}
// Autogenerated method: System.String.ToCharArray
::Array<::Il2CppChar>* System::String::ToCharArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.IsNullOrEmpty
bool System::String::IsNullOrEmpty(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IsNullOrEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "IsNullOrEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.String.IsNullOrWhiteSpace
bool System::String::IsNullOrWhiteSpace(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IsNullOrWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "IsNullOrWhiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.String.GetLegacyNonRandomizedHashCode
int System::String::GetLegacyNonRandomizedHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::GetLegacyNonRandomizedHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLegacyNonRandomizedHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.String.Split
::Array<::Il2CppString*>* System::String::Split(::Array<::Il2CppChar>* separator) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, separator);
}
// Creating initializer_list -> params proxy for: System.String[] Split(params System.Char[] separator)
::Array<::Il2CppString*>* System::String::Split(std::initializer_list<::Il2CppChar> separator) {
  return System::String::Split(::Array<::Il2CppChar>::New(separator));
}
// Autogenerated method: System.String.Split
::Array<::Il2CppString*>* System::String::Split(::Array<::Il2CppChar>* separator, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, separator, count);
}
// Autogenerated method: System.String.Split
::Array<::Il2CppString*>* System::String::Split(::Array<::Il2CppChar>* separator, System::StringSplitOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, separator, options);
}
// Autogenerated method: System.String.SplitInternal
::Array<::Il2CppString*>* System::String::SplitInternal(::Array<::Il2CppChar>* separator, int count, System::StringSplitOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::SplitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SplitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, separator, count, options);
}
// Autogenerated method: System.String.Split
::Array<::Il2CppString*>* System::String::Split(::Array<::Il2CppString*>* separator, System::StringSplitOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, separator, options);
}
// Autogenerated method: System.String.Split
::Array<::Il2CppString*>* System::String::Split(::Array<::Il2CppString*>* separator, int count, System::StringSplitOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, separator, count, options);
}
// Autogenerated method: System.String.InternalSplitKeepEmptyEntries
::Array<::Il2CppString*>* System::String::InternalSplitKeepEmptyEntries(::Array<int>* sepList, ::Array<int>* lengthList, int numReplaces, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::InternalSplitKeepEmptyEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSplitKeepEmptyEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sepList), ::il2cpp_utils::ExtractType(lengthList), ::il2cpp_utils::ExtractType(numReplaces), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, sepList, lengthList, numReplaces, count);
}
// Autogenerated method: System.String.InternalSplitOmitEmptyEntries
::Array<::Il2CppString*>* System::String::InternalSplitOmitEmptyEntries(::Array<int>* sepList, ::Array<int>* lengthList, int numReplaces, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::InternalSplitOmitEmptyEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSplitOmitEmptyEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sepList), ::il2cpp_utils::ExtractType(lengthList), ::il2cpp_utils::ExtractType(numReplaces), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, sepList, lengthList, numReplaces, count);
}
// Autogenerated method: System.String.MakeSeparatorList
int System::String::MakeSeparatorList(::Array<::Il2CppChar>* separator, ::Array<int>*& sepList) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::MakeSeparatorList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeSeparatorList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(sepList)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, separator, sepList);
}
// Autogenerated method: System.String.MakeSeparatorList
int System::String::MakeSeparatorList(::Array<::Il2CppString*>* separators, ::Array<int>*& sepList, ::Array<int>*& lengthList) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::MakeSeparatorList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeSeparatorList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separators), ::il2cpp_utils::ExtractType(sepList), ::il2cpp_utils::ExtractType(lengthList)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, separators, sepList, lengthList);
}
// Autogenerated method: System.String.Substring
::Il2CppString* System::String::Substring(int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Substring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Substring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, startIndex);
}
// Autogenerated method: System.String.Substring
::Il2CppString* System::String::Substring(int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Substring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Substring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, startIndex, length);
}
// Autogenerated method: System.String.InternalSubString
::Il2CppString* System::String::InternalSubString(int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::InternalSubString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSubString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, startIndex, length);
}
// Autogenerated method: System.String.Trim
::Il2CppString* System::String::Trim(::Array<::Il2CppChar>* trimChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Trim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trimChars)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, trimChars);
}
// Creating initializer_list -> params proxy for: System.String Trim(params System.Char[] trimChars)
::Il2CppString* System::String::Trim(std::initializer_list<::Il2CppChar> trimChars) {
  return System::String::Trim(::Array<::Il2CppChar>::New(trimChars));
}
// Autogenerated method: System.String.TrimStart
::Il2CppString* System::String::TrimStart(::Array<::Il2CppChar>* trimChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::TrimStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrimStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trimChars)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, trimChars);
}
// Creating initializer_list -> params proxy for: System.String TrimStart(params System.Char[] trimChars)
::Il2CppString* System::String::TrimStart(std::initializer_list<::Il2CppChar> trimChars) {
  return System::String::TrimStart(::Array<::Il2CppChar>::New(trimChars));
}
// Autogenerated method: System.String.TrimEnd
::Il2CppString* System::String::TrimEnd(::Array<::Il2CppChar>* trimChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::TrimEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrimEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trimChars)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, trimChars);
}
// Creating initializer_list -> params proxy for: System.String TrimEnd(params System.Char[] trimChars)
::Il2CppString* System::String::TrimEnd(std::initializer_list<::Il2CppChar> trimChars) {
  return System::String::TrimEnd(::Array<::Il2CppChar>::New(trimChars));
}
// Autogenerated method: System.String.CreateStringFromEncoding
::Il2CppString* System::String::CreateStringFromEncoding(uint8_t* bytes, int byteLength, System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CreateStringFromEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CreateStringFromEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteLength), ::il2cpp_utils::ExtractType(encoding)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes, byteLength, encoding);
}
// Autogenerated method: System.String.Normalize
::Il2CppString* System::String::Normalize(System::Text::NormalizationForm normalizationForm) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(normalizationForm)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, normalizationForm);
}
// Autogenerated method: System.String.FastAllocateString
::Il2CppString* System::String::FastAllocateString(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::FastAllocateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "FastAllocateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, length);
}
// Autogenerated method: System.String.FillStringChecked
void System::String::FillStringChecked(::Il2CppString* dest, int destPos, ::Il2CppString* src) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::FillStringChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "FillStringChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(destPos), ::il2cpp_utils::ExtractType(src)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, destPos, src);
}
// Autogenerated method: System.String.wstrcpy
void System::String::wstrcpy(::Il2CppChar* dmem, ::Il2CppChar* smem, int charCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::wstrcpy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "wstrcpy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dmem), ::il2cpp_utils::ExtractType(smem), ::il2cpp_utils::ExtractType(charCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dmem, smem, charCount);
}
// Autogenerated method: System.String.CtorCharArray
::Il2CppString* System::String::CtorCharArray(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CtorCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CtorCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.CtorCharArrayStartLength
::Il2CppString* System::String::CtorCharArrayStartLength(::Array<::Il2CppChar>* value, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CtorCharArrayStartLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CtorCharArrayStartLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value, startIndex, length);
}
// Autogenerated method: System.String.wcslen
int System::String::wcslen(::Il2CppChar* ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::wcslen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "wcslen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: System.String.CtorCharPtr
::Il2CppString* System::String::CtorCharPtr(::Il2CppChar* ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CtorCharPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CtorCharPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, ptr);
}
// Autogenerated method: System.String.CtorCharPtrStartLength
::Il2CppString* System::String::CtorCharPtrStartLength(::Il2CppChar* ptr, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CtorCharPtrStartLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CtorCharPtrStartLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, ptr, startIndex, length);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::Il2CppString* strA, ::Il2CppString* strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::Il2CppString* strA, ::Il2CppString* strB, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, strB, ignoreCase);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::Il2CppString* strA, ::Il2CppString* strB, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, strB, comparisonType);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::Il2CppString* strA, ::Il2CppString* strB, bool ignoreCase, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(ignoreCase), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, strB, ignoreCase, culture);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::Il2CppString* strA, int indexA, ::Il2CppString* strB, int indexB, int length, System::Globalization::CultureInfo* culture, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(indexA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(indexB), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, indexA, strB, indexB, length, culture, options);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::Il2CppString* strA, int indexA, ::Il2CppString* strB, int indexB, int length, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(indexA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(indexB), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, indexA, strB, indexB, length, comparisonType);
}
// Autogenerated method: System.String.CompareTo
int System::String::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.CompareTo
int System::String::CompareTo(::Il2CppString* strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strB)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, strB);
}
// Autogenerated method: System.String.CompareOrdinal
int System::String::CompareOrdinal(::Il2CppString* strA, ::Il2CppString* strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CompareOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CompareOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.String.CompareOrdinal
int System::String::CompareOrdinal(::Il2CppString* strA, int indexA, ::Il2CppString* strB, int indexB, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CompareOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CompareOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(indexA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(indexB), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, indexA, strB, indexB, length);
}
// Autogenerated method: System.String.Contains
bool System::String::Contains(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.EndsWith
bool System::String::EndsWith(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::EndsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.EndsWith
bool System::String::EndsWith(::Il2CppString* value, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::EndsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.EndsWith
bool System::String::EndsWith(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::EndsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppChar value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex);
}
// Autogenerated method: System.String.IndexOfAny
int System::String::IndexOfAny(::Array<::Il2CppChar>* anyOf) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, anyOf);
}
// Autogenerated method: System.String.IndexOfAny
int System::String::IndexOfAny(::Array<::Il2CppChar>* anyOf, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, anyOf, startIndex);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppString* value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppString* value, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppString* value, int startIndex, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex, comparisonType);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppString* value, int startIndex, int count, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex, count, comparisonType);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::Il2CppChar value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex);
}
// Autogenerated method: System.String.LastIndexOfAny
int System::String::LastIndexOfAny(::Array<::Il2CppChar>* anyOf) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, anyOf);
}
// Autogenerated method: System.String.LastIndexOfAny
int System::String::LastIndexOfAny(::Array<::Il2CppChar>* anyOf, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, anyOf, startIndex);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::Il2CppString* value, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::Il2CppString* value, int startIndex, int count, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex, count, comparisonType);
}
// Autogenerated method: System.String.PadLeft
::Il2CppString* System::String::PadLeft(int totalWidth, ::Il2CppChar paddingChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::PadLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PadLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(totalWidth), ::il2cpp_utils::ExtractType(paddingChar)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, totalWidth, paddingChar);
}
// Autogenerated method: System.String.PadRight
::Il2CppString* System::String::PadRight(int totalWidth, ::Il2CppChar paddingChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::PadRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PadRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(totalWidth), ::il2cpp_utils::ExtractType(paddingChar)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, totalWidth, paddingChar);
}
// Autogenerated method: System.String.StartsWith
bool System::String::StartsWith(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::StartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.StartsWith
bool System::String::StartsWith(::Il2CppString* value, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::StartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.ToLower
::Il2CppString* System::String::ToLower() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ToLower");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLower", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.ToLower
::Il2CppString* System::String::ToLower(System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ToLower");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLower", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, culture);
}
// Autogenerated method: System.String.ToLowerInvariant
::Il2CppString* System::String::ToLowerInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ToLowerInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLowerInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.ToUpper
::Il2CppString* System::String::ToUpper() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ToUpper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUpper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.ToUpper
::Il2CppString* System::String::ToUpper(System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ToUpper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUpper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, culture);
}
// Autogenerated method: System.String.ToUpperInvariant
::Il2CppString* System::String::ToUpperInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ToUpperInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUpperInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.ToString
::Il2CppString* System::String::ToString(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.Clone
::Il2CppObject* System::String::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.IsBOMWhitespace
bool System::String::IsBOMWhitespace(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IsBOMWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "IsBOMWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.String.Trim
::Il2CppString* System::String::Trim() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Trim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.TrimHelper
::Il2CppString* System::String::TrimHelper(int trimType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::TrimHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrimHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trimType)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, trimType);
}
// Autogenerated method: System.String.TrimHelper
::Il2CppString* System::String::TrimHelper(::Array<::Il2CppChar>* trimChars, int trimType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::TrimHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrimHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trimChars), ::il2cpp_utils::ExtractType(trimType)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, trimChars, trimType);
}
// Autogenerated method: System.String.CreateTrimmedString
::Il2CppString* System::String::CreateTrimmedString(int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CreateTrimmedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTrimmedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, start, end);
}
// Autogenerated method: System.String.Insert
::Il2CppString* System::String::Insert(int startIndex, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, startIndex, value);
}
// Autogenerated method: System.String.Replace
::Il2CppString* System::String::Replace(::Il2CppChar oldChar, ::Il2CppChar newChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldChar), ::il2cpp_utils::ExtractType(newChar)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, oldChar, newChar);
}
// Autogenerated method: System.String.Replace
::Il2CppString* System::String::Replace(::Il2CppString* oldValue, ::Il2CppString* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, oldValue, newValue);
}
// Autogenerated method: System.String.Remove
::Il2CppString* System::String::Remove(int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, startIndex, count);
}
// Autogenerated method: System.String.Remove
::Il2CppString* System::String::Remove(int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, startIndex);
}
// Autogenerated method: System.String.Format
::Il2CppString* System::String::Format(::Il2CppString* format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, arg0);
}
// Autogenerated method: System.String.Format
::Il2CppString* System::String::Format(::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, arg0, arg1);
}
// Autogenerated method: System.String.Format
::Il2CppString* System::String::Format(::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, arg0, arg1, arg2);
}
// Autogenerated method: System.String.Format
::Il2CppString* System::String::Format(::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, args);
}
// Creating initializer_list -> params proxy for: System.String Format(System.String format, params System.Object[] args)
::Il2CppString* System::String::Format(::Il2CppString* format, std::initializer_list<::Il2CppObject*> args) {
  return System::String::Format(format, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: System.String.Format
::Il2CppString* System::String::Format(System::IFormatProvider* provider, ::Il2CppString* format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, provider, format, arg0);
}
// Autogenerated method: System.String.Format
::Il2CppString* System::String::Format(System::IFormatProvider* provider, ::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, provider, format, arg0, arg1);
}
// Autogenerated method: System.String.Format
::Il2CppString* System::String::Format(System::IFormatProvider* provider, ::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, provider, format, arg0, arg1, arg2);
}
// Autogenerated method: System.String.Format
::Il2CppString* System::String::Format(System::IFormatProvider* provider, ::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, provider, format, args);
}
// Creating initializer_list -> params proxy for: System.String Format(System.IFormatProvider provider, System.String format, params System.Object[] args)
::Il2CppString* System::String::Format(System::IFormatProvider* provider, ::Il2CppString* format, std::initializer_list<::Il2CppObject*> args) {
  return System::String::Format(provider, format, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: System.String.FormatHelper
::Il2CppString* System::String::FormatHelper(System::IFormatProvider* provider, ::Il2CppString* format, System::ParamsArray args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::FormatHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "FormatHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, provider, format, args);
}
// Autogenerated method: System.String.Copy
::Il2CppString* System::String::Copy(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.String.Concat
::Il2CppString* System::String::Concat(::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, arg0);
}
// Autogenerated method: System.String.Concat
::Il2CppString* System::String::Concat(::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, arg0, arg1);
}
// Autogenerated method: System.String.Concat
::Il2CppString* System::String::Concat(::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, arg0, arg1, arg2);
}
// Autogenerated method: System.String.Concat
::Il2CppString* System::String::Concat(::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args);
}
// Creating initializer_list -> params proxy for: System.String Concat(params System.Object[] args)
::Il2CppString* System::String::Concat(std::initializer_list<::Il2CppObject*> args) {
  return System::String::Concat(::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: System.String.Concat
::Il2CppString* System::String::Concat(::Il2CppString* str0, ::Il2CppString* str1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str0), ::il2cpp_utils::ExtractType(str1)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str0, str1);
}
// Autogenerated method: System.String.Concat
::Il2CppString* System::String::Concat(::Il2CppString* str0, ::Il2CppString* str1, ::Il2CppString* str2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str0), ::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(str2)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str0, str1, str2);
}
// Autogenerated method: System.String.Concat
::Il2CppString* System::String::Concat(::Il2CppString* str0, ::Il2CppString* str1, ::Il2CppString* str2, ::Il2CppString* str3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str0), ::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(str2), ::il2cpp_utils::ExtractType(str3)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str0, str1, str2, str3);
}
// Autogenerated method: System.String.ConcatArray
::Il2CppString* System::String::ConcatArray(::Array<::Il2CppString*>* values, int totalLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ConcatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "ConcatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(totalLength)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, values, totalLength);
}
// Autogenerated method: System.String.Concat
::Il2CppString* System::String::Concat(::Array<::Il2CppString*>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, values);
}
// Creating initializer_list -> params proxy for: System.String Concat(params System.String[] values)
::Il2CppString* System::String::Concat(std::initializer_list<::Il2CppString*> values) {
  return System::String::Concat(::Array<::Il2CppString*>::New(values));
}
// Autogenerated method: System.String.IsInterned
::Il2CppString* System::String::IsInterned(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IsInterned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "IsInterned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.String.GetTypeCode
System::TypeCode System::String::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.String.System.IConvertible.ToBoolean
bool System::String::System_IConvertible_ToBoolean(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToChar
::Il2CppChar System::String::System_IConvertible_ToChar(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToSByte
int8_t System::String::System_IConvertible_ToSByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToByte
uint8_t System::String::System_IConvertible_ToByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToInt16
int16_t System::String::System_IConvertible_ToInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToUInt16
uint16_t System::String::System_IConvertible_ToUInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToInt32
int System::String::System_IConvertible_ToInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToUInt32
uint System::String::System_IConvertible_ToUInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToInt64
int64_t System::String::System_IConvertible_ToInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToUInt64
uint64_t System::String::System_IConvertible_ToUInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToSingle
float System::String::System_IConvertible_ToSingle(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToDouble
double System::String::System_IConvertible_ToDouble(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToDecimal
System::Decimal System::String::System_IConvertible_ToDecimal(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToDateTime
System::DateTime System::String::System_IConvertible_ToDateTime(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToType
::Il2CppObject* System::String::System_IConvertible_ToType(System::Type* type, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.String.System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator
System::Collections::Generic::IEnumerator_1<::Il2CppChar>* System::String::System_Collections_Generic_IEnumerable$System_Char$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<::Il2CppChar>*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::String::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.get_Length
int System::String::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.String.CompareOrdinalUnchecked
int System::String::CompareOrdinalUnchecked(::Il2CppString* strA, int indexA, int lenA, ::Il2CppString* strB, int indexB, int lenB) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CompareOrdinalUnchecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CompareOrdinalUnchecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(indexA), ::il2cpp_utils::ExtractType(lenA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(indexB), ::il2cpp_utils::ExtractType(lenB)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, indexA, lenA, strB, indexB, lenB);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppChar value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.IndexOfUnchecked
int System::String::IndexOfUnchecked(::Il2CppChar value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOfUnchecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfUnchecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.IndexOfUnchecked
int System::String::IndexOfUnchecked(::Il2CppString* value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOfUnchecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfUnchecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.IndexOfAny
int System::String::IndexOfAny(::Array<::Il2CppChar>* anyOf, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, anyOf, startIndex, count);
}
// Autogenerated method: System.String.IndexOfAnyUnchecked
int System::String::IndexOfAnyUnchecked(::Array<::Il2CppChar>* anyOf, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOfAnyUnchecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfAnyUnchecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, anyOf, startIndex, count);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::Il2CppChar value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.LastIndexOfUnchecked
int System::String::LastIndexOfUnchecked(::Il2CppChar value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOfUnchecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfUnchecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.LastIndexOfAny
int System::String::LastIndexOfAny(::Array<::Il2CppChar>* anyOf, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, anyOf, startIndex, count);
}
// Autogenerated method: System.String.LastIndexOfAnyUnchecked
int System::String::LastIndexOfAnyUnchecked(::Array<::Il2CppChar>* anyOf, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOfAnyUnchecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfAnyUnchecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, anyOf, startIndex, count);
}
// Autogenerated method: System.String.nativeCompareOrdinalEx
int System::String::nativeCompareOrdinalEx(::Il2CppString* strA, int indexA, ::Il2CppString* strB, int indexB, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::nativeCompareOrdinalEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "nativeCompareOrdinalEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(indexA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(indexB), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, indexA, strB, indexB, count);
}
// Autogenerated method: System.String.ReplaceInternal
::Il2CppString* System::String::ReplaceInternal(::Il2CppChar oldChar, ::Il2CppChar newChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ReplaceInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldChar), ::il2cpp_utils::ExtractType(newChar)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, oldChar, newChar);
}
// Autogenerated method: System.String.ReplaceInternal
::Il2CppString* System::String::ReplaceInternal(::Il2CppString* oldValue, ::Il2CppString* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ReplaceInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, oldValue, newValue);
}
// Autogenerated method: System.String.ReplaceUnchecked
::Il2CppString* System::String::ReplaceUnchecked(::Il2CppString* oldValue, ::Il2CppString* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ReplaceUnchecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceUnchecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, oldValue, newValue);
}
// Autogenerated method: System.String.ReplaceFallback
::Il2CppString* System::String::ReplaceFallback(::Il2CppString* oldValue, ::Il2CppString* newValue, int testedCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ReplaceFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue), ::il2cpp_utils::ExtractType(testedCount)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, oldValue, newValue, testedCount);
}
// Autogenerated method: System.String.PadHelper
::Il2CppString* System::String::PadHelper(int totalWidth, ::Il2CppChar paddingChar, bool isRightPadded) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::PadHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PadHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(totalWidth), ::il2cpp_utils::ExtractType(paddingChar), ::il2cpp_utils::ExtractType(isRightPadded)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, totalWidth, paddingChar, isRightPadded);
}
// Autogenerated method: System.String.StartsWithOrdinalUnchecked
bool System::String::StartsWithOrdinalUnchecked(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::StartsWithOrdinalUnchecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartsWithOrdinalUnchecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.IsAscii
bool System::String::IsAscii() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IsAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.String.InternalIsInterned
::Il2CppString* System::String::InternalIsInterned(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::InternalIsInterned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "InternalIsInterned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.String.CharCopy
void System::String::CharCopy(::Il2CppChar* dest, ::Il2CppChar* src, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CharCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CharCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, src, count);
}
// Autogenerated method: System.String.memset
void System::String::memset(uint8_t* dest, int val, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::memset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "memset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, val, len);
}
// Autogenerated method: System.String.memcpy
void System::String::memcpy(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::memcpy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "memcpy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.String.bzero
void System::String::bzero_(uint8_t* dest, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::bzero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "bzero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.String.bzero_aligned_1
void System::String::bzero_aligned_1(uint8_t* dest, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::bzero_aligned_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "bzero_aligned_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.String.bzero_aligned_2
void System::String::bzero_aligned_2(uint8_t* dest, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::bzero_aligned_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "bzero_aligned_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.String.bzero_aligned_4
void System::String::bzero_aligned_4(uint8_t* dest, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::bzero_aligned_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "bzero_aligned_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.String.bzero_aligned_8
void System::String::bzero_aligned_8(uint8_t* dest, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::bzero_aligned_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "bzero_aligned_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.String.memcpy_aligned_1
void System::String::memcpy_aligned_1(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::memcpy_aligned_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "memcpy_aligned_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.String.memcpy_aligned_2
void System::String::memcpy_aligned_2(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::memcpy_aligned_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "memcpy_aligned_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.String.memcpy_aligned_4
void System::String::memcpy_aligned_4(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::memcpy_aligned_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "memcpy_aligned_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.String.memcpy_aligned_8
void System::String::memcpy_aligned_8(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::memcpy_aligned_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "memcpy_aligned_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.String.CreateString
::Il2CppString* System::String::CreateString(int8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.CreateString
::Il2CppString* System::String::CreateString(int8_t* value, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value, startIndex, length);
}
// Autogenerated method: System.String.CreateString
::Il2CppString* System::String::CreateString(::Il2CppChar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.CreateString
::Il2CppString* System::String::CreateString(::Il2CppChar* value, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value, startIndex, length);
}
// Autogenerated method: System.String.CreateString
::Il2CppString* System::String::CreateString(::Array<::Il2CppChar>* val, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, val, startIndex, length);
}
// Autogenerated method: System.String.CreateString
::Il2CppString* System::String::CreateString(::Array<::Il2CppChar>* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, val);
}
// Autogenerated method: System.String.CreateString
::Il2CppString* System::String::CreateString(::Il2CppChar c, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, c, count);
}
// Autogenerated method: System.String.CreateString
::Il2CppString* System::String::CreateString(int8_t* value, int startIndex, int length, System::Text::Encoding* enc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(enc)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value, startIndex, length, enc);
}
// Autogenerated method: System.String.Equals
bool System::String::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.String.GetHashCode
int System::String::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.String.ToString
::Il2CppString* System::String::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.op_Equality
bool System::operator ==(::Il2CppString* a, ::Il2CppString& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated method: System.String.op_Inequality
bool System::operator !=(::Il2CppString* a, ::Il2CppString& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.StringSplitOptions
#include "System/StringSplitOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.StringSplitOptions None
System::StringSplitOptions System::StringSplitOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringSplitOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::StringSplitOptions>("System", "StringSplitOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.StringSplitOptions None
void System::StringSplitOptions::_set_None(System::StringSplitOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringSplitOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringSplitOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.StringSplitOptions RemoveEmptyEntries
System::StringSplitOptions System::StringSplitOptions::_get_RemoveEmptyEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringSplitOptions::_get_RemoveEmptyEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::StringSplitOptions>("System", "StringSplitOptions", "RemoveEmptyEntries"));
}
// Autogenerated static field setter
// Set static field: static public System.StringSplitOptions RemoveEmptyEntries
void System::StringSplitOptions::_set_RemoveEmptyEntries(System::StringSplitOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringSplitOptions::_set_RemoveEmptyEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringSplitOptions", "RemoveEmptyEntries", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.StringComparer
#include "System/StringComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.StringComparer _invariantCulture
System::StringComparer* System::StringComparer::_get__invariantCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::_get__invariantCulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::StringComparer*>("System", "StringComparer", "_invariantCulture"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.StringComparer _invariantCulture
void System::StringComparer::_set__invariantCulture(System::StringComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::_set__invariantCulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringComparer", "_invariantCulture", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.StringComparer _invariantCultureIgnoreCase
System::StringComparer* System::StringComparer::_get__invariantCultureIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::_get__invariantCultureIgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::StringComparer*>("System", "StringComparer", "_invariantCultureIgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.StringComparer _invariantCultureIgnoreCase
void System::StringComparer::_set__invariantCultureIgnoreCase(System::StringComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::_set__invariantCultureIgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringComparer", "_invariantCultureIgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.StringComparer _ordinal
System::StringComparer* System::StringComparer::_get__ordinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::_get__ordinal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::StringComparer*>("System", "StringComparer", "_ordinal"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.StringComparer _ordinal
void System::StringComparer::_set__ordinal(System::StringComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::_set__ordinal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringComparer", "_ordinal", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.StringComparer _ordinalIgnoreCase
System::StringComparer* System::StringComparer::_get__ordinalIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::_get__ordinalIgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::StringComparer*>("System", "StringComparer", "_ordinalIgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.StringComparer _ordinalIgnoreCase
void System::StringComparer::_set__ordinalIgnoreCase(System::StringComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::_set__ordinalIgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringComparer", "_ordinalIgnoreCase", value));
}
// Autogenerated method: System.StringComparer.get_InvariantCultureIgnoreCase
System::StringComparer* System::StringComparer::get_InvariantCultureIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::get_InvariantCultureIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "StringComparer", "get_InvariantCultureIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::StringComparer*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.StringComparer.get_CurrentCultureIgnoreCase
System::StringComparer* System::StringComparer::get_CurrentCultureIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::get_CurrentCultureIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "StringComparer", "get_CurrentCultureIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::StringComparer*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.StringComparer.get_Ordinal
System::StringComparer* System::StringComparer::get_Ordinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::get_Ordinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "StringComparer", "get_Ordinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::StringComparer*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.StringComparer.get_OrdinalIgnoreCase
System::StringComparer* System::StringComparer::get_OrdinalIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::get_OrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "StringComparer", "get_OrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::StringComparer*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.StringComparer.Compare
int System::StringComparer::Compare(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.StringComparer.Equals
bool System::StringComparer::Equals(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.StringComparer.GetHashCode
int System::StringComparer::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.StringComparer.Compare
int System::StringComparer::Compare(::Il2CppString* x, ::Il2CppString* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.StringComparer.Equals
bool System::StringComparer::Equals(::Il2CppString* x, ::Il2CppString* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.StringComparer.GetHashCode
int System::StringComparer::GetHashCode(::Il2CppString* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.StringComparer..cctor
void System::StringComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "StringComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.CultureAwareComparer
#include "System/CultureAwareComparer.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.CultureAwareComparer.Compare
int System::CultureAwareComparer::Compare(::Il2CppString* x, ::Il2CppString* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CultureAwareComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.CultureAwareComparer.Equals
bool System::CultureAwareComparer::Equals(::Il2CppString* x, ::Il2CppString* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CultureAwareComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.CultureAwareComparer.GetHashCode
int System::CultureAwareComparer::GetHashCode(::Il2CppString* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CultureAwareComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.CultureAwareComparer.Equals
bool System::CultureAwareComparer::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CultureAwareComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.CultureAwareComparer.GetHashCode
int System::CultureAwareComparer::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CultureAwareComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.OrdinalComparer
#include "System/OrdinalComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.OrdinalComparer.Compare
int System::OrdinalComparer::Compare(::Il2CppString* x, ::Il2CppString* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::OrdinalComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.OrdinalComparer.Equals
bool System::OrdinalComparer::Equals(::Il2CppString* x, ::Il2CppString* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::OrdinalComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.OrdinalComparer.GetHashCode
int System::OrdinalComparer::GetHashCode(::Il2CppString* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::OrdinalComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.OrdinalComparer.Equals
bool System::OrdinalComparer::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::OrdinalComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.OrdinalComparer.GetHashCode
int System::OrdinalComparer::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::OrdinalComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.SystemException
#include "System/SystemException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.STAThreadAttribute
#include "System/STAThreadAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ThreadStaticAttribute
#include "System/ThreadStaticAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ExceptionArgument
#include "System/ExceptionArgument.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument obj
System::ExceptionArgument System::ExceptionArgument::_get_obj() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_obj");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "obj"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument obj
void System::ExceptionArgument::_set_obj(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_obj");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "obj", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument dictionary
System::ExceptionArgument System::ExceptionArgument::_get_dictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_dictionary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "dictionary"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument dictionary
void System::ExceptionArgument::_set_dictionary(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_dictionary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "dictionary", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument dictionaryCreationThreshold
System::ExceptionArgument System::ExceptionArgument::_get_dictionaryCreationThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_dictionaryCreationThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "dictionaryCreationThreshold"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument dictionaryCreationThreshold
void System::ExceptionArgument::_set_dictionaryCreationThreshold(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_dictionaryCreationThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "dictionaryCreationThreshold", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument array
System::ExceptionArgument System::ExceptionArgument::_get_array() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "array"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument array
void System::ExceptionArgument::_set_array(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "array", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument info
System::ExceptionArgument System::ExceptionArgument::_get_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "info"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument info
void System::ExceptionArgument::_set_info(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "info", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument key
System::ExceptionArgument System::ExceptionArgument::_get_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_key");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "key"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument key
void System::ExceptionArgument::_set_key(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_key");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "key", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument collection
System::ExceptionArgument System::ExceptionArgument::_get_collection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_collection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "collection"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument collection
void System::ExceptionArgument::_set_collection(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_collection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "collection", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument list
System::ExceptionArgument System::ExceptionArgument::_get_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_list");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "list"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument list
void System::ExceptionArgument::_set_list(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_list");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "list", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument match
System::ExceptionArgument System::ExceptionArgument::_get_match() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_match");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "match"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument match
void System::ExceptionArgument::_set_match(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_match");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "match", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument converter
System::ExceptionArgument System::ExceptionArgument::_get_converter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_converter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "converter"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument converter
void System::ExceptionArgument::_set_converter(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_converter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "converter", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument queue
System::ExceptionArgument System::ExceptionArgument::_get_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_queue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "queue"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument queue
void System::ExceptionArgument::_set_queue(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_queue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "queue", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument stack
System::ExceptionArgument System::ExceptionArgument::_get_stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_stack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "stack"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument stack
void System::ExceptionArgument::_set_stack(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_stack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "stack", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument capacity
System::ExceptionArgument System::ExceptionArgument::_get_capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_capacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "capacity"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument capacity
void System::ExceptionArgument::_set_capacity(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_capacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "capacity", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument index
System::ExceptionArgument System::ExceptionArgument::_get_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "index"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument index
void System::ExceptionArgument::_set_index(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "index", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument startIndex
System::ExceptionArgument System::ExceptionArgument::_get_startIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_startIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "startIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument startIndex
void System::ExceptionArgument::_set_startIndex(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_startIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "startIndex", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument value
System::ExceptionArgument System::ExceptionArgument::_get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_value");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "value"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument value
void System::ExceptionArgument::_set_value(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_value");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "value", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument count
System::ExceptionArgument System::ExceptionArgument::_get_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "count"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument count
void System::ExceptionArgument::_set_count(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "count", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument arrayIndex
System::ExceptionArgument System::ExceptionArgument::_get_arrayIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_arrayIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "arrayIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument arrayIndex
void System::ExceptionArgument::_set_arrayIndex(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_arrayIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "arrayIndex", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument name
System::ExceptionArgument System::ExceptionArgument::_get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "name"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument name
void System::ExceptionArgument::_set_name(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "name", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument mode
System::ExceptionArgument System::ExceptionArgument::_get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_mode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "mode"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument mode
void System::ExceptionArgument::_set_mode(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_mode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "mode", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument item
System::ExceptionArgument System::ExceptionArgument::_get_item() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_item");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "item"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument item
void System::ExceptionArgument::_set_item(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_item");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "item", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument options
System::ExceptionArgument System::ExceptionArgument::_get_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_options");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "options"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument options
void System::ExceptionArgument::_set_options(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_options");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "options", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument view
System::ExceptionArgument System::ExceptionArgument::_get_view() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_view");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "view"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument view
void System::ExceptionArgument::_set_view(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_view");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "view", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument sourceBytesToCopy
System::ExceptionArgument System::ExceptionArgument::_get_sourceBytesToCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_sourceBytesToCopy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "sourceBytesToCopy"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument sourceBytesToCopy
void System::ExceptionArgument::_set_sourceBytesToCopy(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_sourceBytesToCopy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "sourceBytesToCopy", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument start
System::ExceptionArgument System::ExceptionArgument::_get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "start"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument start
void System::ExceptionArgument::_set_start(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "start", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument pointer
System::ExceptionArgument System::ExceptionArgument::_get_pointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_pointer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "pointer"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument pointer
void System::ExceptionArgument::_set_pointer(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_pointer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "pointer", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument ownedMemory
System::ExceptionArgument System::ExceptionArgument::_get_ownedMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_ownedMemory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "ownedMemory"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument ownedMemory
void System::ExceptionArgument::_set_ownedMemory(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_ownedMemory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "ownedMemory", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument text
System::ExceptionArgument System::ExceptionArgument::_get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "text"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument text
void System::ExceptionArgument::_set_text(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "text", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ExceptionResource
#include "System/ExceptionResource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_ImplementIComparable
System::ExceptionResource System::ExceptionResource::_get_Argument_ImplementIComparable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Argument_ImplementIComparable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Argument_ImplementIComparable"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_ImplementIComparable
void System::ExceptionResource::_set_Argument_ImplementIComparable(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Argument_ImplementIComparable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_ImplementIComparable", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidType
System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Argument_InvalidType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidType"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidType
void System::ExceptionResource::_set_Argument_InvalidType(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Argument_InvalidType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidType", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidArgumentForComparison
System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidArgumentForComparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Argument_InvalidArgumentForComparison");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidArgumentForComparison"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidArgumentForComparison
void System::ExceptionResource::_set_Argument_InvalidArgumentForComparison(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Argument_InvalidArgumentForComparison");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidArgumentForComparison", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidRegistryKeyPermissionCheck
System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidRegistryKeyPermissionCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Argument_InvalidRegistryKeyPermissionCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidRegistryKeyPermissionCheck"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidRegistryKeyPermissionCheck
void System::ExceptionResource::_set_Argument_InvalidRegistryKeyPermissionCheck(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Argument_InvalidRegistryKeyPermissionCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidRegistryKeyPermissionCheck", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_NeedNonNegNum
System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_NeedNonNegNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_ArgumentOutOfRange_NeedNonNegNum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_NeedNonNegNum"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_NeedNonNegNum
void System::ExceptionResource::_set_ArgumentOutOfRange_NeedNonNegNum(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_ArgumentOutOfRange_NeedNonNegNum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_NeedNonNegNum", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_ArrayPlusOffTooSmall
System::ExceptionResource System::ExceptionResource::_get_Arg_ArrayPlusOffTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Arg_ArrayPlusOffTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Arg_ArrayPlusOffTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_ArrayPlusOffTooSmall
void System::ExceptionResource::_set_Arg_ArrayPlusOffTooSmall(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Arg_ArrayPlusOffTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_ArrayPlusOffTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_NonZeroLowerBound
System::ExceptionResource System::ExceptionResource::_get_Arg_NonZeroLowerBound() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Arg_NonZeroLowerBound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Arg_NonZeroLowerBound"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_NonZeroLowerBound
void System::ExceptionResource::_set_Arg_NonZeroLowerBound(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Arg_NonZeroLowerBound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_NonZeroLowerBound", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RankMultiDimNotSupported
System::ExceptionResource System::ExceptionResource::_get_Arg_RankMultiDimNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Arg_RankMultiDimNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Arg_RankMultiDimNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RankMultiDimNotSupported
void System::ExceptionResource::_set_Arg_RankMultiDimNotSupported(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Arg_RankMultiDimNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RankMultiDimNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RegKeyDelHive
System::ExceptionResource System::ExceptionResource::_get_Arg_RegKeyDelHive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Arg_RegKeyDelHive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Arg_RegKeyDelHive"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RegKeyDelHive
void System::ExceptionResource::_set_Arg_RegKeyDelHive(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Arg_RegKeyDelHive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RegKeyDelHive", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RegKeyStrLenBug
System::ExceptionResource System::ExceptionResource::_get_Arg_RegKeyStrLenBug() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Arg_RegKeyStrLenBug");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Arg_RegKeyStrLenBug"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RegKeyStrLenBug
void System::ExceptionResource::_set_Arg_RegKeyStrLenBug(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Arg_RegKeyStrLenBug");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RegKeyStrLenBug", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RegSetStrArrNull
System::ExceptionResource System::ExceptionResource::_get_Arg_RegSetStrArrNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Arg_RegSetStrArrNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Arg_RegSetStrArrNull"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RegSetStrArrNull
void System::ExceptionResource::_set_Arg_RegSetStrArrNull(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Arg_RegSetStrArrNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RegSetStrArrNull", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RegSetMismatchedKind
System::ExceptionResource System::ExceptionResource::_get_Arg_RegSetMismatchedKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Arg_RegSetMismatchedKind");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Arg_RegSetMismatchedKind"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RegSetMismatchedKind
void System::ExceptionResource::_set_Arg_RegSetMismatchedKind(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Arg_RegSetMismatchedKind");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RegSetMismatchedKind", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RegSubKeyAbsent
System::ExceptionResource System::ExceptionResource::_get_Arg_RegSubKeyAbsent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Arg_RegSubKeyAbsent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Arg_RegSubKeyAbsent"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RegSubKeyAbsent
void System::ExceptionResource::_set_Arg_RegSubKeyAbsent(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Arg_RegSubKeyAbsent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RegSubKeyAbsent", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RegSubKeyValueAbsent
System::ExceptionResource System::ExceptionResource::_get_Arg_RegSubKeyValueAbsent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Arg_RegSubKeyValueAbsent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Arg_RegSubKeyValueAbsent"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RegSubKeyValueAbsent
void System::ExceptionResource::_set_Arg_RegSubKeyValueAbsent(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Arg_RegSubKeyValueAbsent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RegSubKeyValueAbsent", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_AddingDuplicate
System::ExceptionResource System::ExceptionResource::_get_Argument_AddingDuplicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Argument_AddingDuplicate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Argument_AddingDuplicate"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_AddingDuplicate
void System::ExceptionResource::_set_Argument_AddingDuplicate(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Argument_AddingDuplicate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_AddingDuplicate", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Serialization_InvalidOnDeser
System::ExceptionResource System::ExceptionResource::_get_Serialization_InvalidOnDeser() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Serialization_InvalidOnDeser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Serialization_InvalidOnDeser"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Serialization_InvalidOnDeser
void System::ExceptionResource::_set_Serialization_InvalidOnDeser(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Serialization_InvalidOnDeser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Serialization_InvalidOnDeser", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Serialization_MissingKeys
System::ExceptionResource System::ExceptionResource::_get_Serialization_MissingKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Serialization_MissingKeys");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Serialization_MissingKeys"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Serialization_MissingKeys
void System::ExceptionResource::_set_Serialization_MissingKeys(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Serialization_MissingKeys");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Serialization_MissingKeys", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Serialization_NullKey
System::ExceptionResource System::ExceptionResource::_get_Serialization_NullKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Serialization_NullKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Serialization_NullKey"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Serialization_NullKey
void System::ExceptionResource::_set_Serialization_NullKey(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Serialization_NullKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Serialization_NullKey", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidArrayType
System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Argument_InvalidArrayType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidArrayType"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidArrayType
void System::ExceptionResource::_set_Argument_InvalidArrayType(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Argument_InvalidArrayType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidArrayType", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource NotSupported_KeyCollectionSet
System::ExceptionResource System::ExceptionResource::_get_NotSupported_KeyCollectionSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_NotSupported_KeyCollectionSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "NotSupported_KeyCollectionSet"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource NotSupported_KeyCollectionSet
void System::ExceptionResource::_set_NotSupported_KeyCollectionSet(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_NotSupported_KeyCollectionSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "NotSupported_KeyCollectionSet", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource NotSupported_ValueCollectionSet
System::ExceptionResource System::ExceptionResource::_get_NotSupported_ValueCollectionSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_NotSupported_ValueCollectionSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "NotSupported_ValueCollectionSet"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource NotSupported_ValueCollectionSet
void System::ExceptionResource::_set_NotSupported_ValueCollectionSet(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_NotSupported_ValueCollectionSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "NotSupported_ValueCollectionSet", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_SmallCapacity
System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_SmallCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_ArgumentOutOfRange_SmallCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_SmallCapacity"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_SmallCapacity
void System::ExceptionResource::_set_ArgumentOutOfRange_SmallCapacity(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_ArgumentOutOfRange_SmallCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_SmallCapacity", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_Index
System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_ArgumentOutOfRange_Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_Index"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_Index
void System::ExceptionResource::_set_ArgumentOutOfRange_Index(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_ArgumentOutOfRange_Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_Index", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidOffLen
System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidOffLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Argument_InvalidOffLen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidOffLen"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidOffLen
void System::ExceptionResource::_set_Argument_InvalidOffLen(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Argument_InvalidOffLen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidOffLen", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_ItemNotExist
System::ExceptionResource System::ExceptionResource::_get_Argument_ItemNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Argument_ItemNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Argument_ItemNotExist"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_ItemNotExist
void System::ExceptionResource::_set_Argument_ItemNotExist(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Argument_ItemNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_ItemNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_Count
System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_ArgumentOutOfRange_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_Count"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_Count
void System::ExceptionResource::_set_ArgumentOutOfRange_Count(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_ArgumentOutOfRange_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_Count", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_InvalidThreshold
System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_InvalidThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_ArgumentOutOfRange_InvalidThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_InvalidThreshold"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_InvalidThreshold
void System::ExceptionResource::_set_ArgumentOutOfRange_InvalidThreshold(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_ArgumentOutOfRange_InvalidThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_InvalidThreshold", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_ListInsert
System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_ListInsert() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_ArgumentOutOfRange_ListInsert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_ListInsert"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_ListInsert
void System::ExceptionResource::_set_ArgumentOutOfRange_ListInsert(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_ArgumentOutOfRange_ListInsert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_ListInsert", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource NotSupported_ReadOnlyCollection
System::ExceptionResource System::ExceptionResource::_get_NotSupported_ReadOnlyCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_NotSupported_ReadOnlyCollection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "NotSupported_ReadOnlyCollection"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource NotSupported_ReadOnlyCollection
void System::ExceptionResource::_set_NotSupported_ReadOnlyCollection(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_NotSupported_ReadOnlyCollection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "NotSupported_ReadOnlyCollection", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_CannotRemoveFromStackOrQueue
System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_CannotRemoveFromStackOrQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_InvalidOperation_CannotRemoveFromStackOrQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_CannotRemoveFromStackOrQueue"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_CannotRemoveFromStackOrQueue
void System::ExceptionResource::_set_InvalidOperation_CannotRemoveFromStackOrQueue(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_InvalidOperation_CannotRemoveFromStackOrQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_CannotRemoveFromStackOrQueue", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_EmptyQueue
System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_EmptyQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_InvalidOperation_EmptyQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_EmptyQueue"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_EmptyQueue
void System::ExceptionResource::_set_InvalidOperation_EmptyQueue(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_InvalidOperation_EmptyQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_EmptyQueue", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_EnumOpCantHappen
System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_EnumOpCantHappen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_InvalidOperation_EnumOpCantHappen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_EnumOpCantHappen"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_EnumOpCantHappen
void System::ExceptionResource::_set_InvalidOperation_EnumOpCantHappen(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_InvalidOperation_EnumOpCantHappen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_EnumOpCantHappen", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_EnumFailedVersion
System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_EnumFailedVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_InvalidOperation_EnumFailedVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_EnumFailedVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_EnumFailedVersion
void System::ExceptionResource::_set_InvalidOperation_EnumFailedVersion(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_InvalidOperation_EnumFailedVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_EnumFailedVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_EmptyStack
System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_EmptyStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_InvalidOperation_EmptyStack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_EmptyStack"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_EmptyStack
void System::ExceptionResource::_set_InvalidOperation_EmptyStack(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_InvalidOperation_EmptyStack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_EmptyStack", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_BiggerThanCollection
System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_BiggerThanCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_ArgumentOutOfRange_BiggerThanCollection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_BiggerThanCollection"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_BiggerThanCollection
void System::ExceptionResource::_set_ArgumentOutOfRange_BiggerThanCollection(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_ArgumentOutOfRange_BiggerThanCollection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_BiggerThanCollection", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_EnumNotStarted
System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_EnumNotStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_InvalidOperation_EnumNotStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_EnumNotStarted"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_EnumNotStarted
void System::ExceptionResource::_set_InvalidOperation_EnumNotStarted(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_InvalidOperation_EnumNotStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_EnumNotStarted", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_EnumEnded
System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_EnumEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_InvalidOperation_EnumEnded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_EnumEnded"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_EnumEnded
void System::ExceptionResource::_set_InvalidOperation_EnumEnded(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_InvalidOperation_EnumEnded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_EnumEnded", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource NotSupported_SortedListNestedWrite
System::ExceptionResource System::ExceptionResource::_get_NotSupported_SortedListNestedWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_NotSupported_SortedListNestedWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "NotSupported_SortedListNestedWrite"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource NotSupported_SortedListNestedWrite
void System::ExceptionResource::_set_NotSupported_SortedListNestedWrite(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_NotSupported_SortedListNestedWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "NotSupported_SortedListNestedWrite", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_NoValue
System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_NoValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_InvalidOperation_NoValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_NoValue"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_NoValue
void System::ExceptionResource::_set_InvalidOperation_NoValue(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_InvalidOperation_NoValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_NoValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_RegRemoveSubKey
System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_RegRemoveSubKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_InvalidOperation_RegRemoveSubKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_RegRemoveSubKey"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_RegRemoveSubKey
void System::ExceptionResource::_set_InvalidOperation_RegRemoveSubKey(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_InvalidOperation_RegRemoveSubKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_RegRemoveSubKey", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Security_RegistryPermission
System::ExceptionResource System::ExceptionResource::_get_Security_RegistryPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Security_RegistryPermission");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Security_RegistryPermission"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Security_RegistryPermission
void System::ExceptionResource::_set_Security_RegistryPermission(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Security_RegistryPermission");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Security_RegistryPermission", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource UnauthorizedAccess_RegistryNoWrite
System::ExceptionResource System::ExceptionResource::_get_UnauthorizedAccess_RegistryNoWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_UnauthorizedAccess_RegistryNoWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "UnauthorizedAccess_RegistryNoWrite"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource UnauthorizedAccess_RegistryNoWrite
void System::ExceptionResource::_set_UnauthorizedAccess_RegistryNoWrite(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_UnauthorizedAccess_RegistryNoWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "UnauthorizedAccess_RegistryNoWrite", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ObjectDisposed_RegKeyClosed
System::ExceptionResource System::ExceptionResource::_get_ObjectDisposed_RegKeyClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_ObjectDisposed_RegKeyClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "ObjectDisposed_RegKeyClosed"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ObjectDisposed_RegKeyClosed
void System::ExceptionResource::_set_ObjectDisposed_RegKeyClosed(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_ObjectDisposed_RegKeyClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ObjectDisposed_RegKeyClosed", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource NotSupported_InComparableType
System::ExceptionResource System::ExceptionResource::_get_NotSupported_InComparableType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_NotSupported_InComparableType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "NotSupported_InComparableType"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource NotSupported_InComparableType
void System::ExceptionResource::_set_NotSupported_InComparableType(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_NotSupported_InComparableType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "NotSupported_InComparableType", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidRegistryOptionsCheck
System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidRegistryOptionsCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Argument_InvalidRegistryOptionsCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidRegistryOptionsCheck"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidRegistryOptionsCheck
void System::ExceptionResource::_set_Argument_InvalidRegistryOptionsCheck(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Argument_InvalidRegistryOptionsCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidRegistryOptionsCheck", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidRegistryViewCheck
System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidRegistryViewCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Argument_InvalidRegistryViewCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidRegistryViewCheck"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidRegistryViewCheck
void System::ExceptionResource::_set_Argument_InvalidRegistryViewCheck(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Argument_InvalidRegistryViewCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidRegistryViewCheck", value));
}
