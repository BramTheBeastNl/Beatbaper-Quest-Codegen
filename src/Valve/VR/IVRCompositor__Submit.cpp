// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRCompositor/_Submit
#include "Valve/VR/IVRCompositor__Submit.hpp"
// Including type: Valve.VR.EVRCompositorError
#include "Valve/VR/EVRCompositorError.hpp"
// Including type: Valve.VR.EVREye
#include "Valve/VR/EVREye.hpp"
// Including type: Valve.VR.Texture_t
#include "Valve/VR/Texture_t.hpp"
// Including type: Valve.VR.VRTextureBounds_t
#include "Valve/VR/VRTextureBounds_t.hpp"
// Including type: Valve.VR.EVRSubmitFlags
#include "Valve/VR/EVRSubmitFlags.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRCompositor/_Submit..ctor
Valve::VR::IVRCompositor::_Submit* Valve::VR::IVRCompositor::_Submit::New_ctor(::Il2CppObject* object, System::IntPtr method) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("_Submit").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<IVRCompositor::_Submit*>(object, method));
}
// Autogenerated method: Valve.VR.IVRCompositor/_Submit.Invoke
Valve::VR::EVRCompositorError Valve::VR::IVRCompositor::_Submit::Invoke(Valve::VR::EVREye eEye, Valve::VR::Texture_t& pTexture, Valve::VR::VRTextureBounds_t& pBounds, Valve::VR::EVRSubmitFlags nSubmitFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("_Submit").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRCompositorError>(), "Invoke", {}, ::il2cpp_utils::ExtractTypes(eEye, pTexture, pBounds, nSubmitFlags)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRCompositorError, false>(this, ___internal__method, eEye, pTexture, pBounds, nSubmitFlags);
}
// Autogenerated method: Valve.VR.IVRCompositor/_Submit.BeginInvoke
System::IAsyncResult* Valve::VR::IVRCompositor::_Submit::BeginInvoke(Valve::VR::EVREye eEye, Valve::VR::Texture_t& pTexture, Valve::VR::VRTextureBounds_t& pBounds, Valve::VR::EVRSubmitFlags nSubmitFlags, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("_Submit").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::IAsyncResult*>(), "BeginInvoke", {}, ::il2cpp_utils::ExtractTypes(eEye, pTexture, pBounds, nSubmitFlags, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, eEye, pTexture, pBounds, nSubmitFlags, callback, object);
}
// Autogenerated method: Valve.VR.IVRCompositor/_Submit.EndInvoke
Valve::VR::EVRCompositorError Valve::VR::IVRCompositor::_Submit::EndInvoke(Valve::VR::Texture_t& pTexture, Valve::VR::VRTextureBounds_t& pBounds, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("_Submit").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRCompositorError>(), "EndInvoke", {}, ::il2cpp_utils::ExtractTypes(pTexture, pBounds, result)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRCompositorError, false>(this, ___internal__method, pTexture, pBounds, result);
}
