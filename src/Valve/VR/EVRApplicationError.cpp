// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRApplicationError
#include "Valve/VR/EVRApplicationError.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError None
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError None
void Valve::VR::EVRApplicationError::_set_None(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError AppKeyAlreadyExists
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_AppKeyAlreadyExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_AppKeyAlreadyExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "AppKeyAlreadyExists"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError AppKeyAlreadyExists
void Valve::VR::EVRApplicationError::_set_AppKeyAlreadyExists(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_AppKeyAlreadyExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "AppKeyAlreadyExists", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError NoManifest
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_NoManifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_NoManifest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "NoManifest"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError NoManifest
void Valve::VR::EVRApplicationError::_set_NoManifest(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_NoManifest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "NoManifest", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError NoApplication
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_NoApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_NoApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "NoApplication"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError NoApplication
void Valve::VR::EVRApplicationError::_set_NoApplication(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_NoApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "NoApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError InvalidIndex
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_InvalidIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_InvalidIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "InvalidIndex"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError InvalidIndex
void Valve::VR::EVRApplicationError::_set_InvalidIndex(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_InvalidIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "InvalidIndex", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError UnknownApplication
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_UnknownApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_UnknownApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "UnknownApplication"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError UnknownApplication
void Valve::VR::EVRApplicationError::_set_UnknownApplication(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_UnknownApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "UnknownApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError IPCFailed
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_IPCFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_IPCFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "IPCFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError IPCFailed
void Valve::VR::EVRApplicationError::_set_IPCFailed(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_IPCFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "IPCFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError ApplicationAlreadyRunning
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_ApplicationAlreadyRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_ApplicationAlreadyRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "ApplicationAlreadyRunning"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError ApplicationAlreadyRunning
void Valve::VR::EVRApplicationError::_set_ApplicationAlreadyRunning(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_ApplicationAlreadyRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "ApplicationAlreadyRunning", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError InvalidManifest
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_InvalidManifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_InvalidManifest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "InvalidManifest"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError InvalidManifest
void Valve::VR::EVRApplicationError::_set_InvalidManifest(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_InvalidManifest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "InvalidManifest", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError InvalidApplication
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_InvalidApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_InvalidApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "InvalidApplication"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError InvalidApplication
void Valve::VR::EVRApplicationError::_set_InvalidApplication(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_InvalidApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "InvalidApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError LaunchFailed
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_LaunchFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_LaunchFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "LaunchFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError LaunchFailed
void Valve::VR::EVRApplicationError::_set_LaunchFailed(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_LaunchFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "LaunchFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError ApplicationAlreadyStarting
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_ApplicationAlreadyStarting() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_ApplicationAlreadyStarting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "ApplicationAlreadyStarting"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError ApplicationAlreadyStarting
void Valve::VR::EVRApplicationError::_set_ApplicationAlreadyStarting(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_ApplicationAlreadyStarting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "ApplicationAlreadyStarting", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError LaunchInProgress
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_LaunchInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_LaunchInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "LaunchInProgress"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError LaunchInProgress
void Valve::VR::EVRApplicationError::_set_LaunchInProgress(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_LaunchInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "LaunchInProgress", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError OldApplicationQuitting
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_OldApplicationQuitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_OldApplicationQuitting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "OldApplicationQuitting"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError OldApplicationQuitting
void Valve::VR::EVRApplicationError::_set_OldApplicationQuitting(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_OldApplicationQuitting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "OldApplicationQuitting", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError TransitionAborted
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_TransitionAborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_TransitionAborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "TransitionAborted"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError TransitionAborted
void Valve::VR::EVRApplicationError::_set_TransitionAborted(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_TransitionAborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "TransitionAborted", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError IsTemplate
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_IsTemplate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_IsTemplate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "IsTemplate"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError IsTemplate
void Valve::VR::EVRApplicationError::_set_IsTemplate(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_IsTemplate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "IsTemplate", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError SteamVRIsExiting
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_SteamVRIsExiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_SteamVRIsExiting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "SteamVRIsExiting"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError SteamVRIsExiting
void Valve::VR::EVRApplicationError::_set_SteamVRIsExiting(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_SteamVRIsExiting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "SteamVRIsExiting", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError BufferTooSmall
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError BufferTooSmall
void Valve::VR::EVRApplicationError::_set_BufferTooSmall(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError PropertyNotSet
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_PropertyNotSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_PropertyNotSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "PropertyNotSet"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError PropertyNotSet
void Valve::VR::EVRApplicationError::_set_PropertyNotSet(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_PropertyNotSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "PropertyNotSet", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError UnknownProperty
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_UnknownProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_UnknownProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "UnknownProperty"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError UnknownProperty
void Valve::VR::EVRApplicationError::_set_UnknownProperty(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_UnknownProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "UnknownProperty", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError InvalidParameter
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_InvalidParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_get_InvalidParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "InvalidParameter"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError InvalidParameter
void Valve::VR::EVRApplicationError::_set_InvalidParameter(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRApplicationError").WithContext("_set_InvalidParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "InvalidParameter", value));
}
