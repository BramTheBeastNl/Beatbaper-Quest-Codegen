// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRChaperoneSetup/_GetLiveCollisionBoundsTagsInfo
#include "Valve/VR/IVRChaperoneSetup__GetLiveCollisionBoundsTagsInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRChaperoneSetup/_GetLiveCollisionBoundsTagsInfo..ctor
Valve::VR::IVRChaperoneSetup::_GetLiveCollisionBoundsTagsInfo* Valve::VR::IVRChaperoneSetup::_GetLiveCollisionBoundsTagsInfo::New_ctor(::CsObject* object, System::IntPtr method) {
  return (IVRChaperoneSetup::_GetLiveCollisionBoundsTagsInfo*)THROW_UNLESS(il2cpp_utils::New("Valve.VR", "IVRChaperoneSetup/_GetLiveCollisionBoundsTagsInfo", object, method));
}
// Autogenerated method: Valve.VR.IVRChaperoneSetup/_GetLiveCollisionBoundsTagsInfo.Invoke
bool Valve::VR::IVRChaperoneSetup::_GetLiveCollisionBoundsTagsInfo::Invoke(::Array<uint8_t>*& pTagsBuffer, uint& punTagCount) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Invoke", pTagsBuffer, punTagCount));
}
// Autogenerated method: Valve.VR.IVRChaperoneSetup/_GetLiveCollisionBoundsTagsInfo.BeginInvoke
System::IAsyncResult* Valve::VR::IVRChaperoneSetup::_GetLiveCollisionBoundsTagsInfo::BeginInvoke(::Array<uint8_t>*& pTagsBuffer, uint& punTagCount, System::AsyncCallback* callback, ::CsObject* object) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IAsyncResult*>(this, "BeginInvoke", pTagsBuffer, punTagCount, callback, object));
}
// Autogenerated method: Valve.VR.IVRChaperoneSetup/_GetLiveCollisionBoundsTagsInfo.EndInvoke
bool Valve::VR::IVRChaperoneSetup::_GetLiveCollisionBoundsTagsInfo::EndInvoke(uint& punTagCount, System::IAsyncResult* result) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "EndInvoke", punTagCount, result));
}
