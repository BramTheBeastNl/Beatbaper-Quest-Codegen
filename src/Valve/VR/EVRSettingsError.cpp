// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.EVRSettingsError
#include "Valve/VR/EVRSettingsError.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRSettingsError None
Valve::VR::EVRSettingsError Valve::VR::EVRSettingsError::_get_None() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRSettingsError>("Valve.VR", "EVRSettingsError", "None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRSettingsError None
void Valve::VR::EVRSettingsError::_set_None(Valve::VR::EVRSettingsError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRSettingsError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRSettingsError IPCFailed
Valve::VR::EVRSettingsError Valve::VR::EVRSettingsError::_get_IPCFailed() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRSettingsError>("Valve.VR", "EVRSettingsError", "IPCFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRSettingsError IPCFailed
void Valve::VR::EVRSettingsError::_set_IPCFailed(Valve::VR::EVRSettingsError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRSettingsError", "IPCFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRSettingsError WriteFailed
Valve::VR::EVRSettingsError Valve::VR::EVRSettingsError::_get_WriteFailed() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRSettingsError>("Valve.VR", "EVRSettingsError", "WriteFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRSettingsError WriteFailed
void Valve::VR::EVRSettingsError::_set_WriteFailed(Valve::VR::EVRSettingsError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRSettingsError", "WriteFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRSettingsError ReadFailed
Valve::VR::EVRSettingsError Valve::VR::EVRSettingsError::_get_ReadFailed() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRSettingsError>("Valve.VR", "EVRSettingsError", "ReadFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRSettingsError ReadFailed
void Valve::VR::EVRSettingsError::_set_ReadFailed(Valve::VR::EVRSettingsError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRSettingsError", "ReadFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRSettingsError JsonParseFailed
Valve::VR::EVRSettingsError Valve::VR::EVRSettingsError::_get_JsonParseFailed() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRSettingsError>("Valve.VR", "EVRSettingsError", "JsonParseFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRSettingsError JsonParseFailed
void Valve::VR::EVRSettingsError::_set_JsonParseFailed(Valve::VR::EVRSettingsError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRSettingsError", "JsonParseFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRSettingsError UnsetSettingHasNoDefault
Valve::VR::EVRSettingsError Valve::VR::EVRSettingsError::_get_UnsetSettingHasNoDefault() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRSettingsError>("Valve.VR", "EVRSettingsError", "UnsetSettingHasNoDefault"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRSettingsError UnsetSettingHasNoDefault
void Valve::VR::EVRSettingsError::_set_UnsetSettingHasNoDefault(Valve::VR::EVRSettingsError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRSettingsError", "UnsetSettingHasNoDefault", value));
}
