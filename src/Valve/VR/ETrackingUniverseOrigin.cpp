// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.ETrackingUniverseOrigin
#include "Valve/VR/ETrackingUniverseOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackingUniverseOrigin TrackingUniverseSeated
Valve::VR::ETrackingUniverseOrigin Valve::VR::ETrackingUniverseOrigin::_get_TrackingUniverseSeated() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("ETrackingUniverseOrigin").WithContext("_get_TrackingUniverseSeated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackingUniverseOrigin>("Valve.VR", "ETrackingUniverseOrigin", "TrackingUniverseSeated"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackingUniverseOrigin TrackingUniverseSeated
void Valve::VR::ETrackingUniverseOrigin::_set_TrackingUniverseSeated(Valve::VR::ETrackingUniverseOrigin value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("ETrackingUniverseOrigin").WithContext("_set_TrackingUniverseSeated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackingUniverseOrigin", "TrackingUniverseSeated", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackingUniverseOrigin TrackingUniverseStanding
Valve::VR::ETrackingUniverseOrigin Valve::VR::ETrackingUniverseOrigin::_get_TrackingUniverseStanding() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("ETrackingUniverseOrigin").WithContext("_get_TrackingUniverseStanding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackingUniverseOrigin>("Valve.VR", "ETrackingUniverseOrigin", "TrackingUniverseStanding"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackingUniverseOrigin TrackingUniverseStanding
void Valve::VR::ETrackingUniverseOrigin::_set_TrackingUniverseStanding(Valve::VR::ETrackingUniverseOrigin value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("ETrackingUniverseOrigin").WithContext("_set_TrackingUniverseStanding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackingUniverseOrigin", "TrackingUniverseStanding", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackingUniverseOrigin TrackingUniverseRawAndUncalibrated
Valve::VR::ETrackingUniverseOrigin Valve::VR::ETrackingUniverseOrigin::_get_TrackingUniverseRawAndUncalibrated() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("ETrackingUniverseOrigin").WithContext("_get_TrackingUniverseRawAndUncalibrated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackingUniverseOrigin>("Valve.VR", "ETrackingUniverseOrigin", "TrackingUniverseRawAndUncalibrated"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackingUniverseOrigin TrackingUniverseRawAndUncalibrated
void Valve::VR::ETrackingUniverseOrigin::_set_TrackingUniverseRawAndUncalibrated(Valve::VR::ETrackingUniverseOrigin value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("ETrackingUniverseOrigin").WithContext("_set_TrackingUniverseRawAndUncalibrated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackingUniverseOrigin", "TrackingUniverseRawAndUncalibrated", value));
}
