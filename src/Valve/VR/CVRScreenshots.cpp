// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.CVRScreenshots
#include "Valve/VR/CVRScreenshots.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Valve.VR.EVRScreenshotError
#include "Valve/VR/EVRScreenshotError.hpp"
// Including type: Valve.VR.EVRScreenshotType
#include "Valve/VR/EVRScreenshotType.hpp"
// Including type: Valve.VR.EVRScreenshotPropertyFilenames
#include "Valve/VR/EVRScreenshotPropertyFilenames.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.CVRScreenshots..ctor
Valve::VR::CVRScreenshots* Valve::VR::CVRScreenshots::New_ctor(System::IntPtr pInterface) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRScreenshots").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<CVRScreenshots*>(pInterface));
}
// Autogenerated method: Valve.VR.CVRScreenshots.RequestScreenshot
Valve::VR::EVRScreenshotError Valve::VR::CVRScreenshots::RequestScreenshot(uint& pOutScreenshotHandle, Valve::VR::EVRScreenshotType type, ::Il2CppString* pchPreviewFilename, ::Il2CppString* pchVRFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRScreenshots").WithContext("RequestScreenshot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRScreenshotError>(), "RequestScreenshot", {}, ::il2cpp_utils::ExtractTypes(pOutScreenshotHandle, type, pchPreviewFilename, pchVRFilename)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRScreenshotError, false>(this, ___internal__method, pOutScreenshotHandle, type, pchPreviewFilename, pchVRFilename);
}
// Autogenerated method: Valve.VR.CVRScreenshots.HookScreenshot
Valve::VR::EVRScreenshotError Valve::VR::CVRScreenshots::HookScreenshot(::Array<Valve::VR::EVRScreenshotType>* pSupportedTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRScreenshots").WithContext("HookScreenshot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRScreenshotError>(), "HookScreenshot", {}, ::il2cpp_utils::ExtractTypes(pSupportedTypes)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRScreenshotError, false>(this, ___internal__method, pSupportedTypes);
}
// Autogenerated method: Valve.VR.CVRScreenshots.GetScreenshotPropertyType
Valve::VR::EVRScreenshotType Valve::VR::CVRScreenshots::GetScreenshotPropertyType(uint screenshotHandle, Valve::VR::EVRScreenshotError& pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRScreenshots").WithContext("GetScreenshotPropertyType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRScreenshotType>(), "GetScreenshotPropertyType", {}, ::il2cpp_utils::ExtractTypes(screenshotHandle, pError)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRScreenshotType, false>(this, ___internal__method, screenshotHandle, pError);
}
// Autogenerated method: Valve.VR.CVRScreenshots.GetScreenshotPropertyFilename
uint Valve::VR::CVRScreenshots::GetScreenshotPropertyFilename(uint screenshotHandle, Valve::VR::EVRScreenshotPropertyFilenames filenameType, System::Text::StringBuilder* pchFilename, uint cchFilename, Valve::VR::EVRScreenshotError& pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRScreenshots").WithContext("GetScreenshotPropertyFilename");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<uint>(), "GetScreenshotPropertyFilename", {}, ::il2cpp_utils::ExtractTypes(screenshotHandle, filenameType, pchFilename, cchFilename, pError)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, screenshotHandle, filenameType, pchFilename, cchFilename, pError);
}
// Autogenerated method: Valve.VR.CVRScreenshots.UpdateScreenshotProgress
Valve::VR::EVRScreenshotError Valve::VR::CVRScreenshots::UpdateScreenshotProgress(uint screenshotHandle, float flProgress) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRScreenshots").WithContext("UpdateScreenshotProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRScreenshotError>(), "UpdateScreenshotProgress", {}, ::il2cpp_utils::ExtractTypes(screenshotHandle, flProgress)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRScreenshotError, false>(this, ___internal__method, screenshotHandle, flProgress);
}
// Autogenerated method: Valve.VR.CVRScreenshots.TakeStereoScreenshot
Valve::VR::EVRScreenshotError Valve::VR::CVRScreenshots::TakeStereoScreenshot(uint& pOutScreenshotHandle, ::Il2CppString* pchPreviewFilename, ::Il2CppString* pchVRFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRScreenshots").WithContext("TakeStereoScreenshot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRScreenshotError>(), "TakeStereoScreenshot", {}, ::il2cpp_utils::ExtractTypes(pOutScreenshotHandle, pchPreviewFilename, pchVRFilename)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRScreenshotError, false>(this, ___internal__method, pOutScreenshotHandle, pchPreviewFilename, pchVRFilename);
}
// Autogenerated method: Valve.VR.CVRScreenshots.SubmitScreenshot
Valve::VR::EVRScreenshotError Valve::VR::CVRScreenshots::SubmitScreenshot(uint screenshotHandle, Valve::VR::EVRScreenshotType type, ::Il2CppString* pchSourcePreviewFilename, ::Il2CppString* pchSourceVRFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRScreenshots").WithContext("SubmitScreenshot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRScreenshotError>(), "SubmitScreenshot", {}, ::il2cpp_utils::ExtractTypes(screenshotHandle, type, pchSourcePreviewFilename, pchSourceVRFilename)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRScreenshotError, false>(this, ___internal__method, screenshotHandle, type, pchSourcePreviewFilename, pchSourceVRFilename);
}
