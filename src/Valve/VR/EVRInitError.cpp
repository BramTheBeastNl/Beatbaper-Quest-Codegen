// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRInitError
#include "Valve/VR/EVRInitError.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError None
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_None() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError None
void Valve::VR::EVRInitError::_set_None(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Unknown
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Unknown() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Unknown
void Valve::VR::EVRInitError::_set_Unknown(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_InstallationNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_InstallationNotFound() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_InstallationNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_InstallationNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_InstallationNotFound
void Valve::VR::EVRInitError::_set_Init_InstallationNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_InstallationNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_InstallationNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_InstallationCorrupt
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_InstallationCorrupt() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_InstallationCorrupt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_InstallationCorrupt"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_InstallationCorrupt
void Valve::VR::EVRInitError::_set_Init_InstallationCorrupt(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_InstallationCorrupt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_InstallationCorrupt", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_VRClientDLLNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_VRClientDLLNotFound() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_VRClientDLLNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_VRClientDLLNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_VRClientDLLNotFound
void Valve::VR::EVRInitError::_set_Init_VRClientDLLNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_VRClientDLLNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_VRClientDLLNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_FileNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_FileNotFound() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_FileNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_FileNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_FileNotFound
void Valve::VR::EVRInitError::_set_Init_FileNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_FileNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_FileNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_FactoryNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_FactoryNotFound() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_FactoryNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_FactoryNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_FactoryNotFound
void Valve::VR::EVRInitError::_set_Init_FactoryNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_FactoryNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_FactoryNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_InterfaceNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_InterfaceNotFound() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_InterfaceNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_InterfaceNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_InterfaceNotFound
void Valve::VR::EVRInitError::_set_Init_InterfaceNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_InterfaceNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_InterfaceNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_InvalidInterface
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_InvalidInterface() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_InvalidInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_InvalidInterface"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_InvalidInterface
void Valve::VR::EVRInitError::_set_Init_InvalidInterface(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_InvalidInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_InvalidInterface", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_UserConfigDirectoryInvalid
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_UserConfigDirectoryInvalid() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_UserConfigDirectoryInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_UserConfigDirectoryInvalid"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_UserConfigDirectoryInvalid
void Valve::VR::EVRInitError::_set_Init_UserConfigDirectoryInvalid(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_UserConfigDirectoryInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_UserConfigDirectoryInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_HmdNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_HmdNotFound() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_HmdNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_HmdNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_HmdNotFound
void Valve::VR::EVRInitError::_set_Init_HmdNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_HmdNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_HmdNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_NotInitialized
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_NotInitialized() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_NotInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_NotInitialized"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_NotInitialized
void Valve::VR::EVRInitError::_set_Init_NotInitialized(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_NotInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_NotInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_PathRegistryNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_PathRegistryNotFound() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_PathRegistryNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_PathRegistryNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_PathRegistryNotFound
void Valve::VR::EVRInitError::_set_Init_PathRegistryNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_PathRegistryNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_PathRegistryNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_NoConfigPath
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_NoConfigPath() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_NoConfigPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_NoConfigPath"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_NoConfigPath
void Valve::VR::EVRInitError::_set_Init_NoConfigPath(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_NoConfigPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_NoConfigPath", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_NoLogPath
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_NoLogPath() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_NoLogPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_NoLogPath"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_NoLogPath
void Valve::VR::EVRInitError::_set_Init_NoLogPath(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_NoLogPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_NoLogPath", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_PathRegistryNotWritable
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_PathRegistryNotWritable() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_PathRegistryNotWritable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_PathRegistryNotWritable"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_PathRegistryNotWritable
void Valve::VR::EVRInitError::_set_Init_PathRegistryNotWritable(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_PathRegistryNotWritable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_PathRegistryNotWritable", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_AppInfoInitFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_AppInfoInitFailed() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_AppInfoInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_AppInfoInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_AppInfoInitFailed
void Valve::VR::EVRInitError::_set_Init_AppInfoInitFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_AppInfoInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_AppInfoInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_Retry
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_Retry() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_Retry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_Retry"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_Retry
void Valve::VR::EVRInitError::_set_Init_Retry(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_Retry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_Retry", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_InitCanceledByUser
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_InitCanceledByUser() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_InitCanceledByUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_InitCanceledByUser"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_InitCanceledByUser
void Valve::VR::EVRInitError::_set_Init_InitCanceledByUser(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_InitCanceledByUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_InitCanceledByUser", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_AnotherAppLaunching
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_AnotherAppLaunching() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_AnotherAppLaunching");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_AnotherAppLaunching"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_AnotherAppLaunching
void Valve::VR::EVRInitError::_set_Init_AnotherAppLaunching(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_AnotherAppLaunching");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_AnotherAppLaunching", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_SettingsInitFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_SettingsInitFailed() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_SettingsInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_SettingsInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_SettingsInitFailed
void Valve::VR::EVRInitError::_set_Init_SettingsInitFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_SettingsInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_SettingsInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_ShuttingDown
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_ShuttingDown() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_ShuttingDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_ShuttingDown"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_ShuttingDown
void Valve::VR::EVRInitError::_set_Init_ShuttingDown(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_ShuttingDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_ShuttingDown", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_TooManyObjects
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_TooManyObjects() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_TooManyObjects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_TooManyObjects"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_TooManyObjects
void Valve::VR::EVRInitError::_set_Init_TooManyObjects(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_TooManyObjects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_TooManyObjects", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_NoServerForBackgroundApp
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_NoServerForBackgroundApp() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_NoServerForBackgroundApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_NoServerForBackgroundApp"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_NoServerForBackgroundApp
void Valve::VR::EVRInitError::_set_Init_NoServerForBackgroundApp(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_NoServerForBackgroundApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_NoServerForBackgroundApp", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_NotSupportedWithCompositor
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_NotSupportedWithCompositor() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_NotSupportedWithCompositor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_NotSupportedWithCompositor"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_NotSupportedWithCompositor
void Valve::VR::EVRInitError::_set_Init_NotSupportedWithCompositor(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_NotSupportedWithCompositor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_NotSupportedWithCompositor", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_NotAvailableToUtilityApps
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_NotAvailableToUtilityApps() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_NotAvailableToUtilityApps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_NotAvailableToUtilityApps"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_NotAvailableToUtilityApps
void Valve::VR::EVRInitError::_set_Init_NotAvailableToUtilityApps(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_NotAvailableToUtilityApps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_NotAvailableToUtilityApps", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_Internal
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_Internal() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_Internal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_Internal"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_Internal
void Valve::VR::EVRInitError::_set_Init_Internal(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_Internal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_Internal", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_HmdDriverIdIsNone
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_HmdDriverIdIsNone() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_HmdDriverIdIsNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_HmdDriverIdIsNone"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_HmdDriverIdIsNone
void Valve::VR::EVRInitError::_set_Init_HmdDriverIdIsNone(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_HmdDriverIdIsNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_HmdDriverIdIsNone", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_HmdNotFoundPresenceFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_HmdNotFoundPresenceFailed() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_HmdNotFoundPresenceFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_HmdNotFoundPresenceFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_HmdNotFoundPresenceFailed
void Valve::VR::EVRInitError::_set_Init_HmdNotFoundPresenceFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_HmdNotFoundPresenceFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_HmdNotFoundPresenceFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_VRMonitorNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_VRMonitorNotFound() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_VRMonitorNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_VRMonitorNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_VRMonitorNotFound
void Valve::VR::EVRInitError::_set_Init_VRMonitorNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_VRMonitorNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_VRMonitorNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_VRMonitorStartupFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_VRMonitorStartupFailed() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_VRMonitorStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_VRMonitorStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_VRMonitorStartupFailed
void Valve::VR::EVRInitError::_set_Init_VRMonitorStartupFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_VRMonitorStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_VRMonitorStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_LowPowerWatchdogNotSupported
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_LowPowerWatchdogNotSupported() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_LowPowerWatchdogNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_LowPowerWatchdogNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_LowPowerWatchdogNotSupported
void Valve::VR::EVRInitError::_set_Init_LowPowerWatchdogNotSupported(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_LowPowerWatchdogNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_LowPowerWatchdogNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_InvalidApplicationType
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_InvalidApplicationType() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_InvalidApplicationType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_InvalidApplicationType"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_InvalidApplicationType
void Valve::VR::EVRInitError::_set_Init_InvalidApplicationType(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_InvalidApplicationType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_InvalidApplicationType", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_NotAvailableToWatchdogApps
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_NotAvailableToWatchdogApps() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_NotAvailableToWatchdogApps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_NotAvailableToWatchdogApps"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_NotAvailableToWatchdogApps
void Valve::VR::EVRInitError::_set_Init_NotAvailableToWatchdogApps(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_NotAvailableToWatchdogApps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_NotAvailableToWatchdogApps", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_WatchdogDisabledInSettings
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_WatchdogDisabledInSettings() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_WatchdogDisabledInSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_WatchdogDisabledInSettings"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_WatchdogDisabledInSettings
void Valve::VR::EVRInitError::_set_Init_WatchdogDisabledInSettings(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_WatchdogDisabledInSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_WatchdogDisabledInSettings", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_VRDashboardNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_VRDashboardNotFound() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_VRDashboardNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_VRDashboardNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_VRDashboardNotFound
void Valve::VR::EVRInitError::_set_Init_VRDashboardNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_VRDashboardNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_VRDashboardNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_VRDashboardStartupFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_VRDashboardStartupFailed() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_VRDashboardStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_VRDashboardStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_VRDashboardStartupFailed
void Valve::VR::EVRInitError::_set_Init_VRDashboardStartupFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_VRDashboardStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_VRDashboardStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_VRHomeNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_VRHomeNotFound() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_VRHomeNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_VRHomeNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_VRHomeNotFound
void Valve::VR::EVRInitError::_set_Init_VRHomeNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_VRHomeNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_VRHomeNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_VRHomeStartupFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_VRHomeStartupFailed() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_VRHomeStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_VRHomeStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_VRHomeStartupFailed
void Valve::VR::EVRInitError::_set_Init_VRHomeStartupFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_VRHomeStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_VRHomeStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_RebootingBusy
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_RebootingBusy() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_RebootingBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_RebootingBusy"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_RebootingBusy
void Valve::VR::EVRInitError::_set_Init_RebootingBusy(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_RebootingBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_RebootingBusy", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_FirmwareUpdateBusy
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_FirmwareUpdateBusy() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_FirmwareUpdateBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_FirmwareUpdateBusy"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_FirmwareUpdateBusy
void Valve::VR::EVRInitError::_set_Init_FirmwareUpdateBusy(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_FirmwareUpdateBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_FirmwareUpdateBusy", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_FirmwareRecoveryBusy
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_FirmwareRecoveryBusy() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_FirmwareRecoveryBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_FirmwareRecoveryBusy"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_FirmwareRecoveryBusy
void Valve::VR::EVRInitError::_set_Init_FirmwareRecoveryBusy(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_FirmwareRecoveryBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_FirmwareRecoveryBusy", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_USBServiceBusy
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_USBServiceBusy() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Init_USBServiceBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_USBServiceBusy"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_USBServiceBusy
void Valve::VR::EVRInitError::_set_Init_USBServiceBusy(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Init_USBServiceBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_USBServiceBusy", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_Failed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_Failed() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Driver_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_Failed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_Failed
void Valve::VR::EVRInitError::_set_Driver_Failed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Driver_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_Failed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_Unknown
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_Unknown() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Driver_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_Unknown
void Valve::VR::EVRInitError::_set_Driver_Unknown(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Driver_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_HmdUnknown
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_HmdUnknown() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Driver_HmdUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_HmdUnknown"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_HmdUnknown
void Valve::VR::EVRInitError::_set_Driver_HmdUnknown(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Driver_HmdUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_HmdUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_NotLoaded
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_NotLoaded() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Driver_NotLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_NotLoaded"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_NotLoaded
void Valve::VR::EVRInitError::_set_Driver_NotLoaded(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Driver_NotLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_NotLoaded", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_RuntimeOutOfDate
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_RuntimeOutOfDate() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Driver_RuntimeOutOfDate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_RuntimeOutOfDate"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_RuntimeOutOfDate
void Valve::VR::EVRInitError::_set_Driver_RuntimeOutOfDate(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Driver_RuntimeOutOfDate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_RuntimeOutOfDate", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_HmdInUse
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_HmdInUse() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Driver_HmdInUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_HmdInUse"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_HmdInUse
void Valve::VR::EVRInitError::_set_Driver_HmdInUse(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Driver_HmdInUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_HmdInUse", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_NotCalibrated
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_NotCalibrated() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Driver_NotCalibrated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_NotCalibrated"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_NotCalibrated
void Valve::VR::EVRInitError::_set_Driver_NotCalibrated(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Driver_NotCalibrated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_NotCalibrated", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_CalibrationInvalid
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_CalibrationInvalid() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Driver_CalibrationInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_CalibrationInvalid"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_CalibrationInvalid
void Valve::VR::EVRInitError::_set_Driver_CalibrationInvalid(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Driver_CalibrationInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_CalibrationInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_HmdDisplayNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_HmdDisplayNotFound() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Driver_HmdDisplayNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_HmdDisplayNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_HmdDisplayNotFound
void Valve::VR::EVRInitError::_set_Driver_HmdDisplayNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Driver_HmdDisplayNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_HmdDisplayNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_TrackedDeviceInterfaceUnknown
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_TrackedDeviceInterfaceUnknown() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Driver_TrackedDeviceInterfaceUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_TrackedDeviceInterfaceUnknown"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_TrackedDeviceInterfaceUnknown
void Valve::VR::EVRInitError::_set_Driver_TrackedDeviceInterfaceUnknown(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Driver_TrackedDeviceInterfaceUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_TrackedDeviceInterfaceUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_HmdDriverIdOutOfBounds
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_HmdDriverIdOutOfBounds() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Driver_HmdDriverIdOutOfBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_HmdDriverIdOutOfBounds"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_HmdDriverIdOutOfBounds
void Valve::VR::EVRInitError::_set_Driver_HmdDriverIdOutOfBounds(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Driver_HmdDriverIdOutOfBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_HmdDriverIdOutOfBounds", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_HmdDisplayMirrored
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_HmdDisplayMirrored() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Driver_HmdDisplayMirrored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_HmdDisplayMirrored"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_HmdDisplayMirrored
void Valve::VR::EVRInitError::_set_Driver_HmdDisplayMirrored(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Driver_HmdDisplayMirrored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_HmdDisplayMirrored", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError IPC_ServerInitFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_IPC_ServerInitFailed() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_IPC_ServerInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "IPC_ServerInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError IPC_ServerInitFailed
void Valve::VR::EVRInitError::_set_IPC_ServerInitFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_IPC_ServerInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "IPC_ServerInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError IPC_ConnectFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_IPC_ConnectFailed() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_IPC_ConnectFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "IPC_ConnectFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError IPC_ConnectFailed
void Valve::VR::EVRInitError::_set_IPC_ConnectFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_IPC_ConnectFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "IPC_ConnectFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError IPC_SharedStateInitFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_IPC_SharedStateInitFailed() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_IPC_SharedStateInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "IPC_SharedStateInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError IPC_SharedStateInitFailed
void Valve::VR::EVRInitError::_set_IPC_SharedStateInitFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_IPC_SharedStateInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "IPC_SharedStateInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError IPC_CompositorInitFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_IPC_CompositorInitFailed() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_IPC_CompositorInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "IPC_CompositorInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError IPC_CompositorInitFailed
void Valve::VR::EVRInitError::_set_IPC_CompositorInitFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_IPC_CompositorInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "IPC_CompositorInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError IPC_MutexInitFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_IPC_MutexInitFailed() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_IPC_MutexInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "IPC_MutexInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError IPC_MutexInitFailed
void Valve::VR::EVRInitError::_set_IPC_MutexInitFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_IPC_MutexInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "IPC_MutexInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError IPC_Failed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_IPC_Failed() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_IPC_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "IPC_Failed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError IPC_Failed
void Valve::VR::EVRInitError::_set_IPC_Failed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_IPC_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "IPC_Failed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError IPC_CompositorConnectFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_IPC_CompositorConnectFailed() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_IPC_CompositorConnectFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "IPC_CompositorConnectFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError IPC_CompositorConnectFailed
void Valve::VR::EVRInitError::_set_IPC_CompositorConnectFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_IPC_CompositorConnectFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "IPC_CompositorConnectFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError IPC_CompositorInvalidConnectResponse
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_IPC_CompositorInvalidConnectResponse() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_IPC_CompositorInvalidConnectResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "IPC_CompositorInvalidConnectResponse"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError IPC_CompositorInvalidConnectResponse
void Valve::VR::EVRInitError::_set_IPC_CompositorInvalidConnectResponse(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_IPC_CompositorInvalidConnectResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "IPC_CompositorInvalidConnectResponse", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError IPC_ConnectFailedAfterMultipleAttempts
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_IPC_ConnectFailedAfterMultipleAttempts() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_IPC_ConnectFailedAfterMultipleAttempts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "IPC_ConnectFailedAfterMultipleAttempts"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError IPC_ConnectFailedAfterMultipleAttempts
void Valve::VR::EVRInitError::_set_IPC_ConnectFailedAfterMultipleAttempts(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_IPC_ConnectFailedAfterMultipleAttempts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "IPC_ConnectFailedAfterMultipleAttempts", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Compositor_Failed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Compositor_Failed() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Compositor_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Compositor_Failed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Compositor_Failed
void Valve::VR::EVRInitError::_set_Compositor_Failed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Compositor_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Compositor_Failed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Compositor_D3D11HardwareRequired
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Compositor_D3D11HardwareRequired() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Compositor_D3D11HardwareRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Compositor_D3D11HardwareRequired"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Compositor_D3D11HardwareRequired
void Valve::VR::EVRInitError::_set_Compositor_D3D11HardwareRequired(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Compositor_D3D11HardwareRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Compositor_D3D11HardwareRequired", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Compositor_FirmwareRequiresUpdate
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Compositor_FirmwareRequiresUpdate() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Compositor_FirmwareRequiresUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Compositor_FirmwareRequiresUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Compositor_FirmwareRequiresUpdate
void Valve::VR::EVRInitError::_set_Compositor_FirmwareRequiresUpdate(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Compositor_FirmwareRequiresUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Compositor_FirmwareRequiresUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Compositor_OverlayInitFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Compositor_OverlayInitFailed() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Compositor_OverlayInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Compositor_OverlayInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Compositor_OverlayInitFailed
void Valve::VR::EVRInitError::_set_Compositor_OverlayInitFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Compositor_OverlayInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Compositor_OverlayInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Compositor_ScreenshotsInitFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Compositor_ScreenshotsInitFailed() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Compositor_ScreenshotsInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Compositor_ScreenshotsInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Compositor_ScreenshotsInitFailed
void Valve::VR::EVRInitError::_set_Compositor_ScreenshotsInitFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Compositor_ScreenshotsInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Compositor_ScreenshotsInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Compositor_UnableToCreateDevice
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Compositor_UnableToCreateDevice() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Compositor_UnableToCreateDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Compositor_UnableToCreateDevice"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Compositor_UnableToCreateDevice
void Valve::VR::EVRInitError::_set_Compositor_UnableToCreateDevice(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Compositor_UnableToCreateDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Compositor_UnableToCreateDevice", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_UnableToConnectToOculusRuntime
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_UnableToConnectToOculusRuntime() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_VendorSpecific_UnableToConnectToOculusRuntime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_UnableToConnectToOculusRuntime"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_UnableToConnectToOculusRuntime
void Valve::VR::EVRInitError::_set_VendorSpecific_UnableToConnectToOculusRuntime(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_VendorSpecific_UnableToConnectToOculusRuntime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_UnableToConnectToOculusRuntime", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_WindowsNotInDevMode
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_WindowsNotInDevMode() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_VendorSpecific_WindowsNotInDevMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_WindowsNotInDevMode"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_WindowsNotInDevMode
void Valve::VR::EVRInitError::_set_VendorSpecific_WindowsNotInDevMode(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_VendorSpecific_WindowsNotInDevMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_WindowsNotInDevMode", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_CantOpenDevice
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_CantOpenDevice() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_VendorSpecific_HmdFound_CantOpenDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_CantOpenDevice"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_CantOpenDevice
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_CantOpenDevice(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_VendorSpecific_HmdFound_CantOpenDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_CantOpenDevice", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToRequestConfigStart
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToRequestConfigStart() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_VendorSpecific_HmdFound_UnableToRequestConfigStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UnableToRequestConfigStart"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToRequestConfigStart
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToRequestConfigStart(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_VendorSpecific_HmdFound_UnableToRequestConfigStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UnableToRequestConfigStart", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_NoStoredConfig
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_NoStoredConfig() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_VendorSpecific_HmdFound_NoStoredConfig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_NoStoredConfig"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_NoStoredConfig
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_NoStoredConfig(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_VendorSpecific_HmdFound_NoStoredConfig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_NoStoredConfig", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigTooBig
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooBig() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_VendorSpecific_HmdFound_ConfigTooBig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooBig"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigTooBig
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooBig(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_VendorSpecific_HmdFound_ConfigTooBig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooBig", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigTooSmall
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooSmall() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_VendorSpecific_HmdFound_ConfigTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigTooSmall
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooSmall(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_VendorSpecific_HmdFound_ConfigTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToInitZLib
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToInitZLib() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_VendorSpecific_HmdFound_UnableToInitZLib");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UnableToInitZLib"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToInitZLib
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToInitZLib(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_VendorSpecific_HmdFound_UnableToInitZLib");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UnableToInitZLib", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_CantReadFirmwareVersion
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_CantReadFirmwareVersion() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_VendorSpecific_HmdFound_CantReadFirmwareVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_CantReadFirmwareVersion"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_CantReadFirmwareVersion
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_CantReadFirmwareVersion(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_VendorSpecific_HmdFound_CantReadFirmwareVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_CantReadFirmwareVersion", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToSendUserDataStart
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToSendUserDataStart() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_VendorSpecific_HmdFound_UnableToSendUserDataStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UnableToSendUserDataStart"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToSendUserDataStart
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToSendUserDataStart(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_VendorSpecific_HmdFound_UnableToSendUserDataStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UnableToSendUserDataStart", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataStart
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataStart() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_VendorSpecific_HmdFound_UnableToGetUserDataStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataStart"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataStart
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataStart(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_VendorSpecific_HmdFound_UnableToGetUserDataStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataStart", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataNext
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataNext() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_VendorSpecific_HmdFound_UnableToGetUserDataNext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataNext"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataNext
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataNext(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_VendorSpecific_HmdFound_UnableToGetUserDataNext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataNext", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UserDataAddressRange
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataAddressRange() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_VendorSpecific_HmdFound_UserDataAddressRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UserDataAddressRange"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UserDataAddressRange
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataAddressRange(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_VendorSpecific_HmdFound_UserDataAddressRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UserDataAddressRange", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UserDataError
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataError() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_VendorSpecific_HmdFound_UserDataError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UserDataError"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UserDataError
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataError(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_VendorSpecific_HmdFound_UserDataError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UserDataError", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigFailedSanityCheck
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigFailedSanityCheck() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_VendorSpecific_HmdFound_ConfigFailedSanityCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_ConfigFailedSanityCheck"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigFailedSanityCheck
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigFailedSanityCheck(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_VendorSpecific_HmdFound_ConfigFailedSanityCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_ConfigFailedSanityCheck", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Steam_SteamInstallationNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Steam_SteamInstallationNotFound() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_get_Steam_SteamInstallationNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Steam_SteamInstallationNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Steam_SteamInstallationNotFound
void Valve::VR::EVRInitError::_set_Steam_SteamInstallationNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRInitError").WithContext("_set_Steam_SteamInstallationNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Steam_SteamInstallationNotFound", value));
}
