// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRNotifications/_CreateNotification
#include "Valve/VR/IVRNotifications__CreateNotification.hpp"
// Including type: Valve.VR.EVRNotificationError
#include "Valve/VR/EVRNotificationError.hpp"
// Including type: Valve.VR.EVRNotificationType
#include "Valve/VR/EVRNotificationType.hpp"
// Including type: Valve.VR.EVRNotificationStyle
#include "Valve/VR/EVRNotificationStyle.hpp"
// Including type: Valve.VR.NotificationBitmap_t
#include "Valve/VR/NotificationBitmap_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRNotifications/_CreateNotification.Invoke
Valve::VR::EVRNotificationError Valve::VR::IVRNotifications::_CreateNotification::Invoke(uint64_t ulOverlayHandle, uint64_t ulUserValue, Valve::VR::EVRNotificationType type, ::Il2CppString* pchText, Valve::VR::EVRNotificationStyle style, Valve::VR::NotificationBitmap_t& pImage, uint& pNotificationId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("_CreateNotification").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ulOverlayHandle, ulUserValue, type, pchText, style, pImage, pNotificationId)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRNotificationError, false>(this, ___internal__method, ulOverlayHandle, ulUserValue, type, pchText, style, pImage, pNotificationId);
}
// Autogenerated method: Valve.VR.IVRNotifications/_CreateNotification.BeginInvoke
System::IAsyncResult* Valve::VR::IVRNotifications::_CreateNotification::BeginInvoke(uint64_t ulOverlayHandle, uint64_t ulUserValue, Valve::VR::EVRNotificationType type, ::Il2CppString* pchText, Valve::VR::EVRNotificationStyle style, Valve::VR::NotificationBitmap_t& pImage, uint& pNotificationId, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("_CreateNotification").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ulOverlayHandle, ulUserValue, type, pchText, style, pImage, pNotificationId, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, ulUserValue, type, pchText, style, pImage, pNotificationId, callback, object);
}
// Autogenerated method: Valve.VR.IVRNotifications/_CreateNotification.EndInvoke
Valve::VR::EVRNotificationError Valve::VR::IVRNotifications::_CreateNotification::EndInvoke(Valve::VR::NotificationBitmap_t& pImage, uint& pNotificationId, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("_CreateNotification").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pImage, pNotificationId, result)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRNotificationError, false>(this, ___internal__method, pImage, pNotificationId, result);
}
