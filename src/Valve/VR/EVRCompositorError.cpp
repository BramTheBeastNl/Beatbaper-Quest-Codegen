// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRCompositorError
#include "Valve/VR/EVRCompositorError.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError None
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_None() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError None
void Valve::VR::EVRCompositorError::_set_None(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError RequestFailed
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_RequestFailed() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_get_RequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError RequestFailed
void Valve::VR::EVRCompositorError::_set_RequestFailed(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_set_RequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "RequestFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError IncompatibleVersion
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_IncompatibleVersion() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_get_IncompatibleVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "IncompatibleVersion"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError IncompatibleVersion
void Valve::VR::EVRCompositorError::_set_IncompatibleVersion(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_set_IncompatibleVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "IncompatibleVersion", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError DoNotHaveFocus
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_DoNotHaveFocus() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_get_DoNotHaveFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "DoNotHaveFocus"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError DoNotHaveFocus
void Valve::VR::EVRCompositorError::_set_DoNotHaveFocus(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_set_DoNotHaveFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "DoNotHaveFocus", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError InvalidTexture
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_InvalidTexture() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_get_InvalidTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "InvalidTexture"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError InvalidTexture
void Valve::VR::EVRCompositorError::_set_InvalidTexture(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_set_InvalidTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "InvalidTexture", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError IsNotSceneApplication
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_IsNotSceneApplication() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_get_IsNotSceneApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "IsNotSceneApplication"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError IsNotSceneApplication
void Valve::VR::EVRCompositorError::_set_IsNotSceneApplication(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_set_IsNotSceneApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "IsNotSceneApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError TextureIsOnWrongDevice
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_TextureIsOnWrongDevice() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_get_TextureIsOnWrongDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "TextureIsOnWrongDevice"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError TextureIsOnWrongDevice
void Valve::VR::EVRCompositorError::_set_TextureIsOnWrongDevice(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_set_TextureIsOnWrongDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "TextureIsOnWrongDevice", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError TextureUsesUnsupportedFormat
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_TextureUsesUnsupportedFormat() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_get_TextureUsesUnsupportedFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "TextureUsesUnsupportedFormat"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError TextureUsesUnsupportedFormat
void Valve::VR::EVRCompositorError::_set_TextureUsesUnsupportedFormat(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_set_TextureUsesUnsupportedFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "TextureUsesUnsupportedFormat", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError SharedTexturesNotSupported
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_SharedTexturesNotSupported() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_get_SharedTexturesNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "SharedTexturesNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError SharedTexturesNotSupported
void Valve::VR::EVRCompositorError::_set_SharedTexturesNotSupported(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_set_SharedTexturesNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "SharedTexturesNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError IndexOutOfRange
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_IndexOutOfRange() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_get_IndexOutOfRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "IndexOutOfRange"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError IndexOutOfRange
void Valve::VR::EVRCompositorError::_set_IndexOutOfRange(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_set_IndexOutOfRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "IndexOutOfRange", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError AlreadySubmitted
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_AlreadySubmitted() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_get_AlreadySubmitted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "AlreadySubmitted"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError AlreadySubmitted
void Valve::VR::EVRCompositorError::_set_AlreadySubmitted(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_set_AlreadySubmitted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "AlreadySubmitted", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError InvalidBounds
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_InvalidBounds() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_get_InvalidBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "InvalidBounds"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError InvalidBounds
void Valve::VR::EVRCompositorError::_set_InvalidBounds(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("EVRCompositorError").WithContext("_set_InvalidBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "InvalidBounds", value));
}
