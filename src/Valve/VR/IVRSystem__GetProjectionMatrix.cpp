// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetProjectionMatrix
#include "Valve\VR\IVRSystem__GetProjectionMatrix.hpp"
// Including type: Valve.VR.HmdMatrix44_t
#include "Valve\VR\HmdMatrix44_t.hpp"
// Including type: Valve.VR.EVREye
#include "Valve\VR\EVREye.hpp"
// Including type: System.IAsyncResult
#include "System\IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System\AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetProjectionMatrix..ctor
Valve::VR::IVRSystem::_GetProjectionMatrix* Valve::VR::IVRSystem::_GetProjectionMatrix::New_ctor(::Il2CppObject* object, System::IntPtr method) {
  return (IVRSystem::_GetProjectionMatrix*)THROW_UNLESS(il2cpp_utils::New("Valve.VR", "IVRSystem/_GetProjectionMatrix", object, method));
}
// Autogenerated method: Valve.VR.IVRSystem/_GetProjectionMatrix.Invoke
Valve::VR::HmdMatrix44_t Valve::VR::IVRSystem::_GetProjectionMatrix::Invoke(Valve::VR::EVREye eEye, float fNearZ, float fFarZ) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Valve::VR::HmdMatrix44_t>(this, "Invoke", eEye, fNearZ, fFarZ));
}
// Autogenerated method: Valve.VR.IVRSystem/_GetProjectionMatrix.BeginInvoke
System::IAsyncResult* Valve::VR::IVRSystem::_GetProjectionMatrix::BeginInvoke(Valve::VR::EVREye eEye, float fNearZ, float fFarZ, System::AsyncCallback* callback, ::Il2CppObject* object) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IAsyncResult*>(this, "BeginInvoke", eEye, fNearZ, fFarZ, callback, object));
}
// Autogenerated method: Valve.VR.IVRSystem/_GetProjectionMatrix.EndInvoke
Valve::VR::HmdMatrix44_t Valve::VR::IVRSystem::_GetProjectionMatrix::EndInvoke(System::IAsyncResult* result) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Valve::VR::HmdMatrix44_t>(this, "EndInvoke", result));
}
