// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.EVRScreenshotError
#include "Valve\VR\EVRScreenshotError.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRScreenshotError None
Valve::VR::EVRScreenshotError Valve::VR::EVRScreenshotError::_get_None() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRScreenshotError>("Valve.VR", "EVRScreenshotError", "None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRScreenshotError None
void Valve::VR::EVRScreenshotError::_set_None(Valve::VR::EVRScreenshotError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRScreenshotError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRScreenshotError RequestFailed
Valve::VR::EVRScreenshotError Valve::VR::EVRScreenshotError::_get_RequestFailed() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRScreenshotError>("Valve.VR", "EVRScreenshotError", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRScreenshotError RequestFailed
void Valve::VR::EVRScreenshotError::_set_RequestFailed(Valve::VR::EVRScreenshotError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRScreenshotError", "RequestFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRScreenshotError IncompatibleVersion
Valve::VR::EVRScreenshotError Valve::VR::EVRScreenshotError::_get_IncompatibleVersion() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRScreenshotError>("Valve.VR", "EVRScreenshotError", "IncompatibleVersion"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRScreenshotError IncompatibleVersion
void Valve::VR::EVRScreenshotError::_set_IncompatibleVersion(Valve::VR::EVRScreenshotError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRScreenshotError", "IncompatibleVersion", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRScreenshotError NotFound
Valve::VR::EVRScreenshotError Valve::VR::EVRScreenshotError::_get_NotFound() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRScreenshotError>("Valve.VR", "EVRScreenshotError", "NotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRScreenshotError NotFound
void Valve::VR::EVRScreenshotError::_set_NotFound(Valve::VR::EVRScreenshotError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRScreenshotError", "NotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRScreenshotError BufferTooSmall
Valve::VR::EVRScreenshotError Valve::VR::EVRScreenshotError::_get_BufferTooSmall() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRScreenshotError>("Valve.VR", "EVRScreenshotError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRScreenshotError BufferTooSmall
void Valve::VR::EVRScreenshotError::_set_BufferTooSmall(Valve::VR::EVRScreenshotError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRScreenshotError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRScreenshotError ScreenshotAlreadyInProgress
Valve::VR::EVRScreenshotError Valve::VR::EVRScreenshotError::_get_ScreenshotAlreadyInProgress() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRScreenshotError>("Valve.VR", "EVRScreenshotError", "ScreenshotAlreadyInProgress"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRScreenshotError ScreenshotAlreadyInProgress
void Valve::VR::EVRScreenshotError::_set_ScreenshotAlreadyInProgress(Valve::VR::EVRScreenshotError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRScreenshotError", "ScreenshotAlreadyInProgress", value));
}
