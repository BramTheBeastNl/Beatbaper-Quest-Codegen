// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRTrackedCamera/_GetVideoStreamTextureSize
#include "Valve/VR/IVRTrackedCamera__GetVideoStreamTextureSize.hpp"
// Including type: Valve.VR.EVRTrackedCameraError
#include "Valve/VR/EVRTrackedCameraError.hpp"
// Including type: Valve.VR.EVRTrackedCameraFrameType
#include "Valve/VR/EVRTrackedCameraFrameType.hpp"
// Including type: Valve.VR.VRTextureBounds_t
#include "Valve/VR/VRTextureBounds_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRTrackedCamera/_GetVideoStreamTextureSize..ctor
Valve::VR::IVRTrackedCamera::_GetVideoStreamTextureSize* Valve::VR::IVRTrackedCamera::_GetVideoStreamTextureSize::New_ctor(::Il2CppObject* object, System::IntPtr method) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("_GetVideoStreamTextureSize").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<IVRTrackedCamera::_GetVideoStreamTextureSize*>(object, method));
}
// Autogenerated method: Valve.VR.IVRTrackedCamera/_GetVideoStreamTextureSize.Invoke
Valve::VR::EVRTrackedCameraError Valve::VR::IVRTrackedCamera::_GetVideoStreamTextureSize::Invoke(uint nDeviceIndex, Valve::VR::EVRTrackedCameraFrameType eFrameType, Valve::VR::VRTextureBounds_t& pTextureBounds, uint& pnWidth, uint& pnHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("_GetVideoStreamTextureSize").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRTrackedCameraError>(), "Invoke", {}, ::il2cpp_utils::ExtractTypes(nDeviceIndex, eFrameType, pTextureBounds, pnWidth, pnHeight)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRTrackedCameraError, false>(this, ___internal__method, nDeviceIndex, eFrameType, pTextureBounds, pnWidth, pnHeight);
}
// Autogenerated method: Valve.VR.IVRTrackedCamera/_GetVideoStreamTextureSize.BeginInvoke
System::IAsyncResult* Valve::VR::IVRTrackedCamera::_GetVideoStreamTextureSize::BeginInvoke(uint nDeviceIndex, Valve::VR::EVRTrackedCameraFrameType eFrameType, Valve::VR::VRTextureBounds_t& pTextureBounds, uint& pnWidth, uint& pnHeight, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("_GetVideoStreamTextureSize").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::IAsyncResult*>(), "BeginInvoke", {}, ::il2cpp_utils::ExtractTypes(nDeviceIndex, eFrameType, pTextureBounds, pnWidth, pnHeight, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, nDeviceIndex, eFrameType, pTextureBounds, pnWidth, pnHeight, callback, object);
}
// Autogenerated method: Valve.VR.IVRTrackedCamera/_GetVideoStreamTextureSize.EndInvoke
Valve::VR::EVRTrackedCameraError Valve::VR::IVRTrackedCamera::_GetVideoStreamTextureSize::EndInvoke(Valve::VR::VRTextureBounds_t& pTextureBounds, uint& pnWidth, uint& pnHeight, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("_GetVideoStreamTextureSize").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRTrackedCameraError>(), "EndInvoke", {}, ::il2cpp_utils::ExtractTypes(pTextureBounds, pnWidth, pnHeight, result)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRTrackedCameraError, false>(this, ___internal__method, pTextureBounds, pnWidth, pnHeight, result);
}
