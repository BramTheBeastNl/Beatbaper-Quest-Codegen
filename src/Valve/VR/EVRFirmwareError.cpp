// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.EVRFirmwareError
#include "Valve\VR\EVRFirmwareError.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRFirmwareError None
Valve::VR::EVRFirmwareError Valve::VR::EVRFirmwareError::_get_None() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRFirmwareError>("Valve.VR", "EVRFirmwareError", "None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRFirmwareError None
void Valve::VR::EVRFirmwareError::_set_None(Valve::VR::EVRFirmwareError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRFirmwareError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRFirmwareError Success
Valve::VR::EVRFirmwareError Valve::VR::EVRFirmwareError::_get_Success() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRFirmwareError>("Valve.VR", "EVRFirmwareError", "Success"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRFirmwareError Success
void Valve::VR::EVRFirmwareError::_set_Success(Valve::VR::EVRFirmwareError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRFirmwareError", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRFirmwareError Fail
Valve::VR::EVRFirmwareError Valve::VR::EVRFirmwareError::_get_Fail() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRFirmwareError>("Valve.VR", "EVRFirmwareError", "Fail"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRFirmwareError Fail
void Valve::VR::EVRFirmwareError::_set_Fail(Valve::VR::EVRFirmwareError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRFirmwareError", "Fail", value));
}
