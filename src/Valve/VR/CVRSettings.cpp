// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.CVRSettings
#include "Valve/VR/CVRSettings.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Valve.VR.EVRSettingsError
#include "Valve/VR/EVRSettingsError.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.CVRSettings..ctor
Valve::VR::CVRSettings* Valve::VR::CVRSettings::New_ctor(System::IntPtr pInterface) {
  return (CVRSettings*)THROW_UNLESS(il2cpp_utils::New("Valve.VR", "CVRSettings", pInterface));
}
// Autogenerated method: Valve.VR.CVRSettings.GetSettingsErrorNameFromEnum
::CsString* Valve::VR::CVRSettings::GetSettingsErrorNameFromEnum(Valve::VR::EVRSettingsError eError) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>(this, "GetSettingsErrorNameFromEnum", eError));
}
// Autogenerated method: Valve.VR.CVRSettings.Sync
bool Valve::VR::CVRSettings::Sync(bool bForce, Valve::VR::EVRSettingsError& peError) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Sync", bForce, peError));
}
// Autogenerated method: Valve.VR.CVRSettings.SetBool
void Valve::VR::CVRSettings::SetBool(::CsString* pchSection, ::CsString* pchSettingsKey, bool bValue, Valve::VR::EVRSettingsError& peError) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetBool", pchSection, pchSettingsKey, bValue, peError));
}
// Autogenerated method: Valve.VR.CVRSettings.SetInt32
void Valve::VR::CVRSettings::SetInt32(::CsString* pchSection, ::CsString* pchSettingsKey, int nValue, Valve::VR::EVRSettingsError& peError) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetInt32", pchSection, pchSettingsKey, nValue, peError));
}
// Autogenerated method: Valve.VR.CVRSettings.SetFloat
void Valve::VR::CVRSettings::SetFloat(::CsString* pchSection, ::CsString* pchSettingsKey, float flValue, Valve::VR::EVRSettingsError& peError) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetFloat", pchSection, pchSettingsKey, flValue, peError));
}
// Autogenerated method: Valve.VR.CVRSettings.SetString
void Valve::VR::CVRSettings::SetString(::CsString* pchSection, ::CsString* pchSettingsKey, ::CsString* pchValue, Valve::VR::EVRSettingsError& peError) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetString", pchSection, pchSettingsKey, pchValue, peError));
}
// Autogenerated method: Valve.VR.CVRSettings.GetBool
bool Valve::VR::CVRSettings::GetBool(::CsString* pchSection, ::CsString* pchSettingsKey, Valve::VR::EVRSettingsError& peError) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "GetBool", pchSection, pchSettingsKey, peError));
}
// Autogenerated method: Valve.VR.CVRSettings.GetInt32
int Valve::VR::CVRSettings::GetInt32(::CsString* pchSection, ::CsString* pchSettingsKey, Valve::VR::EVRSettingsError& peError) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetInt32", pchSection, pchSettingsKey, peError));
}
// Autogenerated method: Valve.VR.CVRSettings.GetFloat
float Valve::VR::CVRSettings::GetFloat(::CsString* pchSection, ::CsString* pchSettingsKey, Valve::VR::EVRSettingsError& peError) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "GetFloat", pchSection, pchSettingsKey, peError));
}
// Autogenerated method: Valve.VR.CVRSettings.GetString
void Valve::VR::CVRSettings::GetString(::CsString* pchSection, ::CsString* pchSettingsKey, System::Text::StringBuilder* pchValue, uint unValueLen, Valve::VR::EVRSettingsError& peError) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GetString", pchSection, pchSettingsKey, pchValue, unValueLen, peError));
}
// Autogenerated method: Valve.VR.CVRSettings.RemoveSection
void Valve::VR::CVRSettings::RemoveSection(::CsString* pchSection, Valve::VR::EVRSettingsError& peError) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RemoveSection", pchSection, peError));
}
// Autogenerated method: Valve.VR.CVRSettings.RemoveKeyInSection
void Valve::VR::CVRSettings::RemoveKeyInSection(::CsString* pchSection, ::CsString* pchSettingsKey, Valve::VR::EVRSettingsError& peError) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RemoveKeyInSection", pchSection, pchSettingsKey, peError));
}
