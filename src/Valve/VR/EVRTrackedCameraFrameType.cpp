// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.EVRTrackedCameraFrameType
#include "Valve/VR/EVRTrackedCameraFrameType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraFrameType Distorted
Valve::VR::EVRTrackedCameraFrameType Valve::VR::EVRTrackedCameraFrameType::_get_Distorted() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraFrameType>("Valve.VR", "EVRTrackedCameraFrameType", "Distorted"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraFrameType Distorted
void Valve::VR::EVRTrackedCameraFrameType::_set_Distorted(Valve::VR::EVRTrackedCameraFrameType value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraFrameType", "Distorted", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraFrameType Undistorted
Valve::VR::EVRTrackedCameraFrameType Valve::VR::EVRTrackedCameraFrameType::_get_Undistorted() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraFrameType>("Valve.VR", "EVRTrackedCameraFrameType", "Undistorted"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraFrameType Undistorted
void Valve::VR::EVRTrackedCameraFrameType::_set_Undistorted(Valve::VR::EVRTrackedCameraFrameType value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraFrameType", "Undistorted", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraFrameType MaximumUndistorted
Valve::VR::EVRTrackedCameraFrameType Valve::VR::EVRTrackedCameraFrameType::_get_MaximumUndistorted() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraFrameType>("Valve.VR", "EVRTrackedCameraFrameType", "MaximumUndistorted"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraFrameType MaximumUndistorted
void Valve::VR::EVRTrackedCameraFrameType::_set_MaximumUndistorted(Valve::VR::EVRTrackedCameraFrameType value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraFrameType", "MaximumUndistorted", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraFrameType MAX_CAMERA_FRAME_TYPES
Valve::VR::EVRTrackedCameraFrameType Valve::VR::EVRTrackedCameraFrameType::_get_MAX_CAMERA_FRAME_TYPES() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraFrameType>("Valve.VR", "EVRTrackedCameraFrameType", "MAX_CAMERA_FRAME_TYPES"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraFrameType MAX_CAMERA_FRAME_TYPES
void Valve::VR::EVRTrackedCameraFrameType::_set_MAX_CAMERA_FRAME_TYPES(Valve::VR::EVRTrackedCameraFrameType value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraFrameType", "MAX_CAMERA_FRAME_TYPES", value));
}
