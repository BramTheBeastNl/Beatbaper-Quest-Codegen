// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.OpenVR/COpenVRContext
#include "Valve/VR/OpenVR_COpenVRContext.hpp"
// Including type: Valve.VR.CVRSystem
#include "Valve/VR/CVRSystem.hpp"
// Including type: Valve.VR.CVRChaperone
#include "Valve/VR/CVRChaperone.hpp"
// Including type: Valve.VR.CVRChaperoneSetup
#include "Valve/VR/CVRChaperoneSetup.hpp"
// Including type: Valve.VR.CVRCompositor
#include "Valve/VR/CVRCompositor.hpp"
// Including type: Valve.VR.CVROverlay
#include "Valve/VR/CVROverlay.hpp"
// Including type: Valve.VR.CVRRenderModels
#include "Valve/VR/CVRRenderModels.hpp"
// Including type: Valve.VR.CVRExtendedDisplay
#include "Valve/VR/CVRExtendedDisplay.hpp"
// Including type: Valve.VR.CVRSettings
#include "Valve/VR/CVRSettings.hpp"
// Including type: Valve.VR.CVRApplications
#include "Valve/VR/CVRApplications.hpp"
// Including type: Valve.VR.CVRScreenshots
#include "Valve/VR/CVRScreenshots.hpp"
// Including type: Valve.VR.CVRTrackedCamera
#include "Valve/VR/CVRTrackedCamera.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.OpenVR/COpenVRContext.Clear
void Valve::VR::OpenVR::COpenVRContext::Clear() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Clear"));
}
// Autogenerated method: Valve.VR.OpenVR/COpenVRContext.CheckClear
void Valve::VR::OpenVR::COpenVRContext::CheckClear() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "CheckClear"));
}
// Autogenerated method: Valve.VR.OpenVR/COpenVRContext.VRSystem
Valve::VR::CVRSystem* Valve::VR::OpenVR::COpenVRContext::VRSystem() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Valve::VR::CVRSystem*>(this, "VRSystem"));
}
// Autogenerated method: Valve.VR.OpenVR/COpenVRContext.VRChaperone
Valve::VR::CVRChaperone* Valve::VR::OpenVR::COpenVRContext::VRChaperone() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Valve::VR::CVRChaperone*>(this, "VRChaperone"));
}
// Autogenerated method: Valve.VR.OpenVR/COpenVRContext.VRChaperoneSetup
Valve::VR::CVRChaperoneSetup* Valve::VR::OpenVR::COpenVRContext::VRChaperoneSetup() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Valve::VR::CVRChaperoneSetup*>(this, "VRChaperoneSetup"));
}
// Autogenerated method: Valve.VR.OpenVR/COpenVRContext.VRCompositor
Valve::VR::CVRCompositor* Valve::VR::OpenVR::COpenVRContext::VRCompositor() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Valve::VR::CVRCompositor*>(this, "VRCompositor"));
}
// Autogenerated method: Valve.VR.OpenVR/COpenVRContext.VROverlay
Valve::VR::CVROverlay* Valve::VR::OpenVR::COpenVRContext::VROverlay() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Valve::VR::CVROverlay*>(this, "VROverlay"));
}
// Autogenerated method: Valve.VR.OpenVR/COpenVRContext.VRRenderModels
Valve::VR::CVRRenderModels* Valve::VR::OpenVR::COpenVRContext::VRRenderModels() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Valve::VR::CVRRenderModels*>(this, "VRRenderModels"));
}
// Autogenerated method: Valve.VR.OpenVR/COpenVRContext.VRExtendedDisplay
Valve::VR::CVRExtendedDisplay* Valve::VR::OpenVR::COpenVRContext::VRExtendedDisplay() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Valve::VR::CVRExtendedDisplay*>(this, "VRExtendedDisplay"));
}
// Autogenerated method: Valve.VR.OpenVR/COpenVRContext.VRSettings
Valve::VR::CVRSettings* Valve::VR::OpenVR::COpenVRContext::VRSettings() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Valve::VR::CVRSettings*>(this, "VRSettings"));
}
// Autogenerated method: Valve.VR.OpenVR/COpenVRContext.VRApplications
Valve::VR::CVRApplications* Valve::VR::OpenVR::COpenVRContext::VRApplications() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Valve::VR::CVRApplications*>(this, "VRApplications"));
}
// Autogenerated method: Valve.VR.OpenVR/COpenVRContext.VRScreenshots
Valve::VR::CVRScreenshots* Valve::VR::OpenVR::COpenVRContext::VRScreenshots() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Valve::VR::CVRScreenshots*>(this, "VRScreenshots"));
}
// Autogenerated method: Valve.VR.OpenVR/COpenVRContext.VRTrackedCamera
Valve::VR::CVRTrackedCamera* Valve::VR::OpenVR::COpenVRContext::VRTrackedCamera() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Valve::VR::CVRTrackedCamera*>(this, "VRTrackedCamera"));
}
// Autogenerated method: Valve.VR.OpenVR/COpenVRContext..ctor
Valve::VR::OpenVR::COpenVRContext* Valve::VR::OpenVR::COpenVRContext::New_ctor() {
  return (OpenVR::COpenVRContext*)THROW_UNLESS(il2cpp_utils::New("Valve.VR", "OpenVR/COpenVRContext"));
}
