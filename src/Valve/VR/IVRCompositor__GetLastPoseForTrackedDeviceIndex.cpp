// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRCompositor/_GetLastPoseForTrackedDeviceIndex
#include "Valve/VR/IVRCompositor__GetLastPoseForTrackedDeviceIndex.hpp"
// Including type: Valve.VR.EVRCompositorError
#include "Valve/VR/EVRCompositorError.hpp"
// Including type: Valve.VR.TrackedDevicePose_t
#include "Valve/VR/TrackedDevicePose_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRCompositor/_GetLastPoseForTrackedDeviceIndex..ctor
Valve::VR::IVRCompositor::_GetLastPoseForTrackedDeviceIndex* Valve::VR::IVRCompositor::_GetLastPoseForTrackedDeviceIndex::New_ctor(::Il2CppObject* object, System::IntPtr method) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("_GetLastPoseForTrackedDeviceIndex").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<IVRCompositor::_GetLastPoseForTrackedDeviceIndex*>(object, method));
}
// Autogenerated method: Valve.VR.IVRCompositor/_GetLastPoseForTrackedDeviceIndex.Invoke
Valve::VR::EVRCompositorError Valve::VR::IVRCompositor::_GetLastPoseForTrackedDeviceIndex::Invoke(uint unDeviceIndex, Valve::VR::TrackedDevicePose_t& pOutputPose, Valve::VR::TrackedDevicePose_t& pOutputGamePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("_GetLastPoseForTrackedDeviceIndex").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRCompositorError>(), "Invoke", {}, ::il2cpp_utils::ExtractTypes(unDeviceIndex, pOutputPose, pOutputGamePose)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRCompositorError, false>(this, ___internal__method, unDeviceIndex, pOutputPose, pOutputGamePose);
}
// Autogenerated method: Valve.VR.IVRCompositor/_GetLastPoseForTrackedDeviceIndex.BeginInvoke
System::IAsyncResult* Valve::VR::IVRCompositor::_GetLastPoseForTrackedDeviceIndex::BeginInvoke(uint unDeviceIndex, Valve::VR::TrackedDevicePose_t& pOutputPose, Valve::VR::TrackedDevicePose_t& pOutputGamePose, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("_GetLastPoseForTrackedDeviceIndex").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::IAsyncResult*>(), "BeginInvoke", {}, ::il2cpp_utils::ExtractTypes(unDeviceIndex, pOutputPose, pOutputGamePose, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, unDeviceIndex, pOutputPose, pOutputGamePose, callback, object);
}
// Autogenerated method: Valve.VR.IVRCompositor/_GetLastPoseForTrackedDeviceIndex.EndInvoke
Valve::VR::EVRCompositorError Valve::VR::IVRCompositor::_GetLastPoseForTrackedDeviceIndex::EndInvoke(Valve::VR::TrackedDevicePose_t& pOutputPose, Valve::VR::TrackedDevicePose_t& pOutputGamePose, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("_GetLastPoseForTrackedDeviceIndex").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRCompositorError>(), "EndInvoke", {}, ::il2cpp_utils::ExtractTypes(pOutputPose, pOutputGamePose, result)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRCompositorError, false>(this, ___internal__method, pOutputPose, pOutputGamePose, result);
}
