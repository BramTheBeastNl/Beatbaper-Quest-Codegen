// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.CVRApplications
#include "Valve/VR/CVRApplications.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Valve.VR.EVRApplicationError
#include "Valve/VR/EVRApplicationError.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: Valve.VR.AppOverrideKeys_t
#include "Valve/VR/AppOverrideKeys_t.hpp"
// Including type: Valve.VR.EVRApplicationProperty
#include "Valve/VR/EVRApplicationProperty.hpp"
// Including type: Valve.VR.EVRApplicationTransitionState
#include "Valve/VR/EVRApplicationTransitionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.CVRApplications..ctor
Valve::VR::CVRApplications* Valve::VR::CVRApplications::New_ctor(System::IntPtr pInterface) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<CVRApplications*>(pInterface));
}
// Autogenerated method: Valve.VR.CVRApplications.AddApplicationManifest
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::AddApplicationManifest(::Il2CppString* pchApplicationManifestFullPath, bool bTemporary) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("AddApplicationManifest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRApplicationError>(), "AddApplicationManifest", {}, ::il2cpp_utils::ExtractTypes(pchApplicationManifestFullPath, bTemporary)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchApplicationManifestFullPath, bTemporary);
}
// Autogenerated method: Valve.VR.CVRApplications.RemoveApplicationManifest
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::RemoveApplicationManifest(::Il2CppString* pchApplicationManifestFullPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("RemoveApplicationManifest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRApplicationError>(), "RemoveApplicationManifest", {}, ::il2cpp_utils::ExtractTypes(pchApplicationManifestFullPath)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchApplicationManifestFullPath);
}
// Autogenerated method: Valve.VR.CVRApplications.IsApplicationInstalled
bool Valve::VR::CVRApplications::IsApplicationInstalled(::Il2CppString* pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("IsApplicationInstalled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "IsApplicationInstalled", {}, ::il2cpp_utils::ExtractTypes(pchAppKey)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationCount
uint Valve::VR::CVRApplications::GetApplicationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("GetApplicationCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<uint>(), "GetApplicationCount", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationKeyByIndex
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::GetApplicationKeyByIndex(uint unApplicationIndex, System::Text::StringBuilder* pchAppKeyBuffer, uint unAppKeyBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("GetApplicationKeyByIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRApplicationError>(), "GetApplicationKeyByIndex", {}, ::il2cpp_utils::ExtractTypes(unApplicationIndex, pchAppKeyBuffer, unAppKeyBufferLen)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, unApplicationIndex, pchAppKeyBuffer, unAppKeyBufferLen);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationKeyByProcessId
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::GetApplicationKeyByProcessId(uint unProcessId, System::Text::StringBuilder* pchAppKeyBuffer, uint unAppKeyBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("GetApplicationKeyByProcessId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRApplicationError>(), "GetApplicationKeyByProcessId", {}, ::il2cpp_utils::ExtractTypes(unProcessId, pchAppKeyBuffer, unAppKeyBufferLen)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, unProcessId, pchAppKeyBuffer, unAppKeyBufferLen);
}
// Autogenerated method: Valve.VR.CVRApplications.LaunchApplication
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::LaunchApplication(::Il2CppString* pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("LaunchApplication");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRApplicationError>(), "LaunchApplication", {}, ::il2cpp_utils::ExtractTypes(pchAppKey)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: Valve.VR.CVRApplications.LaunchTemplateApplication
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::LaunchTemplateApplication(::Il2CppString* pchTemplateAppKey, ::Il2CppString* pchNewAppKey, ::Array<Valve::VR::AppOverrideKeys_t>* pKeys) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("LaunchTemplateApplication");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRApplicationError>(), "LaunchTemplateApplication", {}, ::il2cpp_utils::ExtractTypes(pchTemplateAppKey, pchNewAppKey, pKeys)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchTemplateAppKey, pchNewAppKey, pKeys);
}
// Autogenerated method: Valve.VR.CVRApplications.LaunchApplicationFromMimeType
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::LaunchApplicationFromMimeType(::Il2CppString* pchMimeType, ::Il2CppString* pchArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("LaunchApplicationFromMimeType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRApplicationError>(), "LaunchApplicationFromMimeType", {}, ::il2cpp_utils::ExtractTypes(pchMimeType, pchArgs)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchMimeType, pchArgs);
}
// Autogenerated method: Valve.VR.CVRApplications.LaunchDashboardOverlay
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::LaunchDashboardOverlay(::Il2CppString* pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("LaunchDashboardOverlay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRApplicationError>(), "LaunchDashboardOverlay", {}, ::il2cpp_utils::ExtractTypes(pchAppKey)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: Valve.VR.CVRApplications.CancelApplicationLaunch
bool Valve::VR::CVRApplications::CancelApplicationLaunch(::Il2CppString* pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("CancelApplicationLaunch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "CancelApplicationLaunch", {}, ::il2cpp_utils::ExtractTypes(pchAppKey)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: Valve.VR.CVRApplications.IdentifyApplication
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::IdentifyApplication(uint unProcessId, ::Il2CppString* pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("IdentifyApplication");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRApplicationError>(), "IdentifyApplication", {}, ::il2cpp_utils::ExtractTypes(unProcessId, pchAppKey)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, unProcessId, pchAppKey);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationProcessId
uint Valve::VR::CVRApplications::GetApplicationProcessId(::Il2CppString* pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("GetApplicationProcessId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<uint>(), "GetApplicationProcessId", {}, ::il2cpp_utils::ExtractTypes(pchAppKey)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationsErrorNameFromEnum
::Il2CppString* Valve::VR::CVRApplications::GetApplicationsErrorNameFromEnum(Valve::VR::EVRApplicationError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("GetApplicationsErrorNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "GetApplicationsErrorNameFromEnum", {}, ::il2cpp_utils::ExtractTypes(error)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, error);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationPropertyString
uint Valve::VR::CVRApplications::GetApplicationPropertyString(::Il2CppString* pchAppKey, Valve::VR::EVRApplicationProperty eProperty, System::Text::StringBuilder* pchPropertyValueBuffer, uint unPropertyValueBufferLen, Valve::VR::EVRApplicationError& peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("GetApplicationPropertyString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<uint>(), "GetApplicationPropertyString", {}, ::il2cpp_utils::ExtractTypes(pchAppKey, eProperty, pchPropertyValueBuffer, unPropertyValueBufferLen, peError)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, pchAppKey, eProperty, pchPropertyValueBuffer, unPropertyValueBufferLen, peError);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationPropertyBool
bool Valve::VR::CVRApplications::GetApplicationPropertyBool(::Il2CppString* pchAppKey, Valve::VR::EVRApplicationProperty eProperty, Valve::VR::EVRApplicationError& peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("GetApplicationPropertyBool");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "GetApplicationPropertyBool", {}, ::il2cpp_utils::ExtractTypes(pchAppKey, eProperty, peError)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pchAppKey, eProperty, peError);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationPropertyUint64
uint64_t Valve::VR::CVRApplications::GetApplicationPropertyUint64(::Il2CppString* pchAppKey, Valve::VR::EVRApplicationProperty eProperty, Valve::VR::EVRApplicationError& peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("GetApplicationPropertyUint64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<uint64_t>(), "GetApplicationPropertyUint64", {}, ::il2cpp_utils::ExtractTypes(pchAppKey, eProperty, peError)));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method, pchAppKey, eProperty, peError);
}
// Autogenerated method: Valve.VR.CVRApplications.SetApplicationAutoLaunch
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::SetApplicationAutoLaunch(::Il2CppString* pchAppKey, bool bAutoLaunch) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("SetApplicationAutoLaunch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRApplicationError>(), "SetApplicationAutoLaunch", {}, ::il2cpp_utils::ExtractTypes(pchAppKey, bAutoLaunch)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchAppKey, bAutoLaunch);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationAutoLaunch
bool Valve::VR::CVRApplications::GetApplicationAutoLaunch(::Il2CppString* pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("GetApplicationAutoLaunch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "GetApplicationAutoLaunch", {}, ::il2cpp_utils::ExtractTypes(pchAppKey)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: Valve.VR.CVRApplications.SetDefaultApplicationForMimeType
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::SetDefaultApplicationForMimeType(::Il2CppString* pchAppKey, ::Il2CppString* pchMimeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("SetDefaultApplicationForMimeType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRApplicationError>(), "SetDefaultApplicationForMimeType", {}, ::il2cpp_utils::ExtractTypes(pchAppKey, pchMimeType)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchAppKey, pchMimeType);
}
// Autogenerated method: Valve.VR.CVRApplications.GetDefaultApplicationForMimeType
bool Valve::VR::CVRApplications::GetDefaultApplicationForMimeType(::Il2CppString* pchMimeType, System::Text::StringBuilder* pchAppKeyBuffer, uint unAppKeyBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("GetDefaultApplicationForMimeType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "GetDefaultApplicationForMimeType", {}, ::il2cpp_utils::ExtractTypes(pchMimeType, pchAppKeyBuffer, unAppKeyBufferLen)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pchMimeType, pchAppKeyBuffer, unAppKeyBufferLen);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationSupportedMimeTypes
bool Valve::VR::CVRApplications::GetApplicationSupportedMimeTypes(::Il2CppString* pchAppKey, System::Text::StringBuilder* pchMimeTypesBuffer, uint unMimeTypesBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("GetApplicationSupportedMimeTypes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "GetApplicationSupportedMimeTypes", {}, ::il2cpp_utils::ExtractTypes(pchAppKey, pchMimeTypesBuffer, unMimeTypesBuffer)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pchAppKey, pchMimeTypesBuffer, unMimeTypesBuffer);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationsThatSupportMimeType
uint Valve::VR::CVRApplications::GetApplicationsThatSupportMimeType(::Il2CppString* pchMimeType, System::Text::StringBuilder* pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("GetApplicationsThatSupportMimeType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<uint>(), "GetApplicationsThatSupportMimeType", {}, ::il2cpp_utils::ExtractTypes(pchMimeType, pchAppKeysThatSupportBuffer, unAppKeysThatSupportBuffer)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, pchMimeType, pchAppKeysThatSupportBuffer, unAppKeysThatSupportBuffer);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationLaunchArguments
uint Valve::VR::CVRApplications::GetApplicationLaunchArguments(uint unHandle, System::Text::StringBuilder* pchArgs, uint unArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("GetApplicationLaunchArguments");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<uint>(), "GetApplicationLaunchArguments", {}, ::il2cpp_utils::ExtractTypes(unHandle, pchArgs, unArgs)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, unHandle, pchArgs, unArgs);
}
// Autogenerated method: Valve.VR.CVRApplications.GetStartingApplication
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::GetStartingApplication(System::Text::StringBuilder* pchAppKeyBuffer, uint unAppKeyBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("GetStartingApplication");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRApplicationError>(), "GetStartingApplication", {}, ::il2cpp_utils::ExtractTypes(pchAppKeyBuffer, unAppKeyBufferLen)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchAppKeyBuffer, unAppKeyBufferLen);
}
// Autogenerated method: Valve.VR.CVRApplications.GetTransitionState
Valve::VR::EVRApplicationTransitionState Valve::VR::CVRApplications::GetTransitionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("GetTransitionState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRApplicationTransitionState>(), "GetTransitionState", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRApplicationTransitionState, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRApplications.PerformApplicationPrelaunchCheck
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::PerformApplicationPrelaunchCheck(::Il2CppString* pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("PerformApplicationPrelaunchCheck");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRApplicationError>(), "PerformApplicationPrelaunchCheck", {}, ::il2cpp_utils::ExtractTypes(pchAppKey)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationsTransitionStateNameFromEnum
::Il2CppString* Valve::VR::CVRApplications::GetApplicationsTransitionStateNameFromEnum(Valve::VR::EVRApplicationTransitionState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("GetApplicationsTransitionStateNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "GetApplicationsTransitionStateNameFromEnum", {}, ::il2cpp_utils::ExtractTypes(state)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, state);
}
// Autogenerated method: Valve.VR.CVRApplications.IsQuitUserPromptRequested
bool Valve::VR::CVRApplications::IsQuitUserPromptRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("IsQuitUserPromptRequested");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "IsQuitUserPromptRequested", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRApplications.LaunchInternalProcess
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::LaunchInternalProcess(::Il2CppString* pchBinaryPath, ::Il2CppString* pchArguments, ::Il2CppString* pchWorkingDirectory) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("LaunchInternalProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::EVRApplicationError>(), "LaunchInternalProcess", {}, ::il2cpp_utils::ExtractTypes(pchBinaryPath, pchArguments, pchWorkingDirectory)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchBinaryPath, pchArguments, pchWorkingDirectory);
}
// Autogenerated method: Valve.VR.CVRApplications.GetCurrentSceneProcessId
uint Valve::VR::CVRApplications::GetCurrentSceneProcessId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("CVRApplications").WithContext("GetCurrentSceneProcessId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<uint>(), "GetCurrentSceneProcessId", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
