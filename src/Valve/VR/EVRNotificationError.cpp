// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.EVRNotificationError
#include "Valve/VR/EVRNotificationError.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRNotificationError OK
Valve::VR::EVRNotificationError Valve::VR::EVRNotificationError::_get_OK() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRNotificationError>("Valve.VR", "EVRNotificationError", "OK"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRNotificationError OK
void Valve::VR::EVRNotificationError::_set_OK(Valve::VR::EVRNotificationError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRNotificationError", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRNotificationError InvalidNotificationId
Valve::VR::EVRNotificationError Valve::VR::EVRNotificationError::_get_InvalidNotificationId() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRNotificationError>("Valve.VR", "EVRNotificationError", "InvalidNotificationId"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRNotificationError InvalidNotificationId
void Valve::VR::EVRNotificationError::_set_InvalidNotificationId(Valve::VR::EVRNotificationError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRNotificationError", "InvalidNotificationId", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRNotificationError NotificationQueueFull
Valve::VR::EVRNotificationError Valve::VR::EVRNotificationError::_get_NotificationQueueFull() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRNotificationError>("Valve.VR", "EVRNotificationError", "NotificationQueueFull"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRNotificationError NotificationQueueFull
void Valve::VR::EVRNotificationError::_set_NotificationQueueFull(Valve::VR::EVRNotificationError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRNotificationError", "NotificationQueueFull", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRNotificationError InvalidOverlayHandle
Valve::VR::EVRNotificationError Valve::VR::EVRNotificationError::_get_InvalidOverlayHandle() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRNotificationError>("Valve.VR", "EVRNotificationError", "InvalidOverlayHandle"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRNotificationError InvalidOverlayHandle
void Valve::VR::EVRNotificationError::_set_InvalidOverlayHandle(Valve::VR::EVRNotificationError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRNotificationError", "InvalidOverlayHandle", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRNotificationError SystemWithUserValueAlreadyExists
Valve::VR::EVRNotificationError Valve::VR::EVRNotificationError::_get_SystemWithUserValueAlreadyExists() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRNotificationError>("Valve.VR", "EVRNotificationError", "SystemWithUserValueAlreadyExists"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRNotificationError SystemWithUserValueAlreadyExists
void Valve::VR::EVRNotificationError::_set_SystemWithUserValueAlreadyExists(Valve::VR::EVRNotificationError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRNotificationError", "SystemWithUserValueAlreadyExists", value));
}
