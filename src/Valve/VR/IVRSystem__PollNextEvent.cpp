// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_PollNextEvent
#include "Valve/VR/IVRSystem__PollNextEvent.hpp"
// Including type: Valve.VR.VREvent_t
#include "Valve/VR/VREvent_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_PollNextEvent.Invoke
bool Valve::VR::IVRSystem::_PollNextEvent::Invoke(Valve::VR::VREvent_t& pEvent, uint uncbVREvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("_PollNextEvent").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pEvent, uncbVREvent)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pEvent, uncbVREvent);
}
// Autogenerated method: Valve.VR.IVRSystem/_PollNextEvent.BeginInvoke
System::IAsyncResult* Valve::VR::IVRSystem::_PollNextEvent::BeginInvoke(Valve::VR::VREvent_t& pEvent, uint uncbVREvent, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("_PollNextEvent").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pEvent, uncbVREvent, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, pEvent, uncbVREvent, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_PollNextEvent.EndInvoke
bool Valve::VR::IVRSystem::_PollNextEvent::EndInvoke(Valve::VR::VREvent_t& pEvent, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Valve::VR").WithContext("_PollNextEvent").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pEvent, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pEvent, result);
}
