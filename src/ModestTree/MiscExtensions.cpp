// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ModestTree.MiscExtensions
#include "ModestTree/MiscExtensions.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.LinkedList`1
#include "System/Collections/Generic/LinkedList_1.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ModestTree.MiscExtensions.Fmt
::Il2CppString* ModestTree::MiscExtensions::Fmt(::Il2CppString* s, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("ModestTree").WithContext("MiscExtensions").WithContext("Fmt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("ModestTree", "MiscExtensions", "Fmt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, args);
}
// Creating initializer_list -> params proxy for: System.String Fmt(System.String s, params System.Object[] args)
::Il2CppString* ModestTree::MiscExtensions::Fmt(::Il2CppString* s, std::initializer_list<::Il2CppObject*> args) {
  return ModestTree::MiscExtensions::Fmt(s, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: ModestTree.MiscExtensions.Join
::Il2CppString* ModestTree::MiscExtensions::Join(System::Collections::Generic::IEnumerable_1<::Il2CppString*>* values, ::Il2CppString* separator) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("ModestTree").WithContext("MiscExtensions").WithContext("Join");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("ModestTree", "MiscExtensions", "Join", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(values, separator)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, values, separator);
}
