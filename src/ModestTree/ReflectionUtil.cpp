// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ModestTree.ReflectionUtil
#include "ModestTree/ReflectionUtil.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: System.Action`5
#include "System/Action_5.hpp"
// Including type: System.Action`6
#include "System/Action_6.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Func`4
#include "System/Func_4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ModestTree.ReflectionUtil.CreateArray
System::Array* ModestTree::ReflectionUtil::CreateArray(System::Type* elementType, System::Collections::Generic::List_1<::Il2CppObject*>* instances) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("ModestTree").WithContext("ReflectionUtil").WithContext("CreateArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("ModestTree", "ReflectionUtil", "CreateArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(elementType, instances)));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, instances);
}
// Autogenerated method: ModestTree.ReflectionUtil.CreateGenericList
System::Collections::IList* ModestTree::ReflectionUtil::CreateGenericList(System::Type* elementType, System::Collections::Generic::List_1<::Il2CppObject*>* instances) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("ModestTree").WithContext("ReflectionUtil").WithContext("CreateGenericList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("ModestTree", "ReflectionUtil", "CreateGenericList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(elementType, instances)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IList*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, instances);
}
// Autogenerated method: ModestTree.ReflectionUtil.ToDebugString
::Il2CppString* ModestTree::ReflectionUtil::ToDebugString(System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("ModestTree").WithContext("ReflectionUtil").WithContext("ToDebugString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("ModestTree", "ReflectionUtil", "ToDebugString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(method)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, method);
}
// Autogenerated method: ModestTree.ReflectionUtil.ToDebugString
::Il2CppString* ModestTree::ReflectionUtil::ToDebugString(System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("ModestTree").WithContext("ReflectionUtil").WithContext("ToDebugString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("ModestTree", "ReflectionUtil", "ToDebugString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, action);
}
