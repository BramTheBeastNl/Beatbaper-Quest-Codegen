// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ClientHelloRequest
#include "MasterServer/ClientHelloRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.ClientHelloRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ClientHelloRequest*>* MasterServer::ClientHelloRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ClientHelloRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ClientHelloRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ClientHelloRequest.Init
MasterServer::ClientHelloRequest* MasterServer::ClientHelloRequest::Init(::Array<uint8_t>* random) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(random)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ClientHelloRequest*, false>(this, ___internal__method, random);
}
// Autogenerated method: MasterServer.ClientHelloRequest.Serialize
void MasterServer::ClientHelloRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.ClientHelloRequest.Deserialize
void MasterServer::ClientHelloRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.ClientHelloRequest.Release
void MasterServer::ClientHelloRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ClientHelloWithCookieRequest
#include "MasterServer/ClientHelloWithCookieRequest.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.ClientHelloWithCookieRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ClientHelloWithCookieRequest*>* MasterServer::ClientHelloWithCookieRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ClientHelloWithCookieRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ClientHelloWithCookieRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ClientHelloWithCookieRequest.Init
MasterServer::ClientHelloWithCookieRequest* MasterServer::ClientHelloWithCookieRequest::Init(uint certificateResponseId, ::Array<uint8_t>* random, ::Array<uint8_t>* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificateResponseId), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(cookie)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ClientHelloWithCookieRequest*, false>(this, ___internal__method, certificateResponseId, random, cookie);
}
// Autogenerated method: MasterServer.ClientHelloWithCookieRequest.Serialize
void MasterServer::ClientHelloWithCookieRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.ClientHelloWithCookieRequest.Deserialize
void MasterServer::ClientHelloWithCookieRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.ClientHelloWithCookieRequest.Release
void MasterServer::ClientHelloWithCookieRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.HelloVerifyRequest
#include "MasterServer/HelloVerifyRequest.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.HelloVerifyRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::HelloVerifyRequest*>* MasterServer::HelloVerifyRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HelloVerifyRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "HelloVerifyRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::HelloVerifyRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.HelloVerifyRequest.Init
MasterServer::HelloVerifyRequest* MasterServer::HelloVerifyRequest::Init(::Array<uint8_t>* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HelloVerifyRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::HelloVerifyRequest*, false>(this, ___internal__method, cookie);
}
// Autogenerated method: MasterServer.HelloVerifyRequest.Serialize
void MasterServer::HelloVerifyRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HelloVerifyRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.HelloVerifyRequest.Deserialize
void MasterServer::HelloVerifyRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HelloVerifyRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.HelloVerifyRequest.Release
void MasterServer::HelloVerifyRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HelloVerifyRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ServerHelloRequest
#include "MasterServer/ServerHelloRequest.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.ServerHelloRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ServerHelloRequest*>* MasterServer::ServerHelloRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ServerHelloRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ServerHelloRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ServerHelloRequest.Init
MasterServer::ServerHelloRequest* MasterServer::ServerHelloRequest::Init(::Array<uint8_t>* random, ::Array<uint8_t>* publicKey, ::Array<uint8_t>* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ServerHelloRequest*, false>(this, ___internal__method, random, publicKey, signature);
}
// Autogenerated method: MasterServer.ServerHelloRequest.Serialize
void MasterServer::ServerHelloRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.ServerHelloRequest.Deserialize
void MasterServer::ServerHelloRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.ServerHelloRequest.Release
void MasterServer::ServerHelloRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ServerCertificateRequest
#include "MasterServer/ServerCertificateRequest.hpp"
// Including type: MasterServer.ServerCertificateRequest/<get_certificateList>d__5
#include "MasterServer/ServerCertificateRequest_-get_certificateList-d__5.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.ServerCertificateRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ServerCertificateRequest*>* MasterServer::ServerCertificateRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ServerCertificateRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ServerCertificateRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest.get_certificateList
System::Collections::Generic::IEnumerable_1<::Array<uint8_t>*>* MasterServer::ServerCertificateRequest::get_certificateList() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::get_certificateList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_certificateList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<::Array<uint8_t>*>*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest.Init
MasterServer::ServerCertificateRequest* MasterServer::ServerCertificateRequest::Init(System::Collections::Generic::IEnumerable_1<::Array<uint8_t>*>* certificateList) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificateList)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ServerCertificateRequest*, false>(this, ___internal__method, certificateList);
}
// Autogenerated method: MasterServer.ServerCertificateRequest.Serialize
void MasterServer::ServerCertificateRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.ServerCertificateRequest.Deserialize
void MasterServer::ServerCertificateRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.ServerCertificateRequest.Release
void MasterServer::ServerCertificateRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ServerCertificateRequest/<get_certificateList>d__5
#include "MasterServer/ServerCertificateRequest_-get_certificateList-d__5.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.ServerCertificateRequest/<get_certificateList>d__5.System.IDisposable.Dispose
void MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest/<get_certificateList>d__5.MoveNext
bool MasterServer::ServerCertificateRequest::$get_certificateList$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest/<get_certificateList>d__5.System.Collections.Generic.IEnumerator<System.Byte[]>.get_Current
::Array<uint8_t>* MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_Generic_IEnumerator$System_Byte$$$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System.Collections.Generic.IEnumerator<System.Byte[]>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Byte[]>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest/<get_certificateList>d__5.System.Collections.IEnumerator.Reset
void MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest/<get_certificateList>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest/<get_certificateList>d__5.System.Collections.Generic.IEnumerable<System.Byte[]>.GetEnumerator
System::Collections::Generic::IEnumerator_1<::Array<uint8_t>*>* MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_Generic_IEnumerable$System_Byte$$$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System.Collections.Generic.IEnumerable<System.Byte[]>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Byte[]>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<::Array<uint8_t>*>*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest/<get_certificateList>d__5.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ClientKeyExchangeRequest
#include "MasterServer/ClientKeyExchangeRequest.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.ClientKeyExchangeRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ClientKeyExchangeRequest*>* MasterServer::ClientKeyExchangeRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientKeyExchangeRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ClientKeyExchangeRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ClientKeyExchangeRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ClientKeyExchangeRequest.Init
MasterServer::ClientKeyExchangeRequest* MasterServer::ClientKeyExchangeRequest::Init(::Array<uint8_t>* clientPublicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientKeyExchangeRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientPublicKey)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ClientKeyExchangeRequest*, false>(this, ___internal__method, clientPublicKey);
}
// Autogenerated method: MasterServer.ClientKeyExchangeRequest.Serialize
void MasterServer::ClientKeyExchangeRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientKeyExchangeRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.ClientKeyExchangeRequest.Deserialize
void MasterServer::ClientKeyExchangeRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientKeyExchangeRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.ClientKeyExchangeRequest.Release
void MasterServer::ClientKeyExchangeRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientKeyExchangeRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.ChangeCipherSpecRequest
#include "MasterServer/ChangeCipherSpecRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.ChangeCipherSpecRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ChangeCipherSpecRequest*>* MasterServer::ChangeCipherSpecRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ChangeCipherSpecRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ChangeCipherSpecRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ChangeCipherSpecRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ChangeCipherSpecRequest.Release
void MasterServer::ChangeCipherSpecRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ChangeCipherSpecRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.HandshakeMessageReceivedAcknowledge
#include "MasterServer/HandshakeMessageReceivedAcknowledge.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.HandshakeMessageReceivedAcknowledge.get_pool
GlobalNamespace::PacketPool_1<MasterServer::HandshakeMessageReceivedAcknowledge*>* MasterServer::HandshakeMessageReceivedAcknowledge::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HandshakeMessageReceivedAcknowledge::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "HandshakeMessageReceivedAcknowledge", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::HandshakeMessageReceivedAcknowledge*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.HandshakeMessageReceivedAcknowledge.Release
void MasterServer::HandshakeMessageReceivedAcknowledge::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HandshakeMessageReceivedAcknowledge::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.HandshakeMultipartMessage
#include "MasterServer/HandshakeMultipartMessage.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.HandshakeMultipartMessage.get_pool
GlobalNamespace::PacketPool_1<MasterServer::HandshakeMultipartMessage*>* MasterServer::HandshakeMultipartMessage::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HandshakeMultipartMessage::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "HandshakeMultipartMessage", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::HandshakeMultipartMessage*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.HandshakeMultipartMessage.Release
void MasterServer::HandshakeMultipartMessage::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HandshakeMultipartMessage::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.AnalyticsMetricUnit
#include "MasterServer/AnalyticsMetricUnit.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit None
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "None"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit None
void MasterServer::AnalyticsMetricUnit::_set_None(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit Count
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "Count"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit Count
void MasterServer::AnalyticsMetricUnit::_set_Count(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "Count", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit Percent
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_Percent() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_Percent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "Percent"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit Percent
void MasterServer::AnalyticsMetricUnit::_set_Percent(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_Percent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "Percent", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit Seconds
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_Seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_Seconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "Seconds"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit Seconds
void MasterServer::AnalyticsMetricUnit::_set_Seconds(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_Seconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "Seconds", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit Milliseconds
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_Milliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_Milliseconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "Milliseconds"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit Milliseconds
void MasterServer::AnalyticsMetricUnit::_set_Milliseconds(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_Milliseconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "Milliseconds", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit Microseconds
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_Microseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_Microseconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "Microseconds"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit Microseconds
void MasterServer::AnalyticsMetricUnit::_set_Microseconds(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_Microseconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "Microseconds", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit Bytes
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_Bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_Bytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "Bytes"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit Bytes
void MasterServer::AnalyticsMetricUnit::_set_Bytes(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_Bytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "Bytes", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.IAnalyticsManager
#include "MasterServer/IAnalyticsManager.hpp"
// Including type: MasterServer.AnalyticsMetricUnit
#include "MasterServer/AnalyticsMetricUnit.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: MasterServer.IMasterServerReliableResponse
#include "MasterServer/IMasterServerReliableResponse.hpp"
// Including type: MasterServer.IMasterServerUnreliableMessage
#include "MasterServer/IMasterServerUnreliableMessage.hpp"
// Including type: MasterServer.IMasterServerResponse
#include "MasterServer/IMasterServerResponse.hpp"
// Including type: DedicatedServerType
#include "GlobalNamespace/DedicatedServerType.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IAnalyticsManager.PollUpdate
void MasterServer::IAnalyticsManager::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.IAnalyticsManager.UpdateState
void MasterServer::IAnalyticsManager::UpdateState(::Il2CppString* metricName, int64_t state, MasterServer::AnalyticsMetricUnit unit, bool alarmMetric) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::UpdateState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(metricName), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(unit), ::il2cpp_utils::ExtractType(alarmMetric)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, metricName, state, unit, alarmMetric);
}
// Autogenerated method: MasterServer.IAnalyticsManager.UpdateAverage
void MasterServer::IAnalyticsManager::UpdateAverage(::Il2CppString* metricName, double value, MasterServer::AnalyticsMetricUnit unit, bool alarmMetric) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::UpdateAverage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAverage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(metricName), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(unit), ::il2cpp_utils::ExtractType(alarmMetric)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, metricName, value, unit, alarmMetric);
}
// Autogenerated method: MasterServer.IAnalyticsManager.IncrementCounter
void MasterServer::IAnalyticsManager::IncrementCounter(::Il2CppString* metricName, int64_t incrementAmount, MasterServer::AnalyticsMetricUnit unit) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::IncrementCounter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementCounter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(metricName), ::il2cpp_utils::ExtractType(incrementAmount), ::il2cpp_utils::ExtractType(unit)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, metricName, incrementAmount, unit);
}
// Autogenerated method: MasterServer.IAnalyticsManager.ReceivedReliableRequestEvent
void MasterServer::IAnalyticsManager::ReceivedReliableRequestEvent(MasterServer::IMasterServerReliableRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::ReceivedReliableRequestEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceivedReliableRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: MasterServer.IAnalyticsManager.SentReliableRequestEvent
void MasterServer::IAnalyticsManager::SentReliableRequestEvent(MasterServer::IMasterServerReliableRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::SentReliableRequestEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SentReliableRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: MasterServer.IAnalyticsManager.ReceivedReliableResponseEvent
void MasterServer::IAnalyticsManager::ReceivedReliableResponseEvent(MasterServer::IMasterServerReliableResponse* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::ReceivedReliableResponseEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceivedReliableResponseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: MasterServer.IAnalyticsManager.SentReliableResponseEvent
void MasterServer::IAnalyticsManager::SentReliableResponseEvent(MasterServer::IMasterServerReliableResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::SentReliableResponseEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SentReliableResponseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: MasterServer.IAnalyticsManager.ReceivedUnreliableMessageEvent
void MasterServer::IAnalyticsManager::ReceivedUnreliableMessageEvent(MasterServer::IMasterServerUnreliableMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::ReceivedUnreliableMessageEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceivedUnreliableMessageEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: MasterServer.IAnalyticsManager.SentUnreliableMessageEvent
void MasterServer::IAnalyticsManager::SentUnreliableMessageEvent(MasterServer::IMasterServerUnreliableMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::SentUnreliableMessageEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SentUnreliableMessageEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: MasterServer.IAnalyticsManager.SentUnreliableResponseEvent
void MasterServer::IAnalyticsManager::SentUnreliableResponseEvent(MasterServer::IMasterServerResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::SentUnreliableResponseEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SentUnreliableResponseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: MasterServer.IAnalyticsManager.ReceivedUnreliableResponseEvent
void MasterServer::IAnalyticsManager::ReceivedUnreliableResponseEvent(MasterServer::IMasterServerResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::ReceivedUnreliableResponseEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceivedUnreliableResponseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: MasterServer.IAnalyticsManager.DedicatedServerServerConnectedEvent
void MasterServer::IAnalyticsManager::DedicatedServerServerConnectedEvent(GlobalNamespace::DedicatedServerType serverType) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::DedicatedServerServerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DedicatedServerServerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverType);
}
// Autogenerated method: MasterServer.IAnalyticsManager.DedicatedServerServerConnectionFailedEvent
void MasterServer::IAnalyticsManager::DedicatedServerServerConnectionFailedEvent(GlobalNamespace::DedicatedServerType serverType, GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::DedicatedServerServerConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DedicatedServerServerConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverType), ::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverType, reason);
}
// Autogenerated method: MasterServer.IAnalyticsManager.DedicatedServerServerDisconnectedEvent
void MasterServer::IAnalyticsManager::DedicatedServerServerDisconnectedEvent(GlobalNamespace::DedicatedServerType serverType, GlobalNamespace::DisconnectedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::DedicatedServerServerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DedicatedServerServerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverType), ::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverType, reason);
}
// Autogenerated method: MasterServer.IAnalyticsManager.DedicatedServerPlayerConnectedEvent
void MasterServer::IAnalyticsManager::DedicatedServerPlayerConnectedEvent(GlobalNamespace::DedicatedServerType serverType) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::DedicatedServerPlayerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DedicatedServerPlayerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverType);
}
// Autogenerated method: MasterServer.IAnalyticsManager.DedicatedServerPlayerDisconnectedEvent
void MasterServer::IAnalyticsManager::DedicatedServerPlayerDisconnectedEvent(GlobalNamespace::DedicatedServerType serverType, GlobalNamespace::DisconnectedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::DedicatedServerPlayerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DedicatedServerPlayerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverType), ::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverType, reason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.IMasterServer
#include "MasterServer/IMasterServer.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: AuthenticationToken
#include "GlobalNamespace/AuthenticationToken.hpp"
// Including type: MasterServer.BroadcastServerStatusResponse
#include "MasterServer/BroadcastServerStatusResponse.hpp"
// Including type: DiscoveryPolicy
#include "GlobalNamespace/DiscoveryPolicy.hpp"
// Including type: InvitePolicy
#include "GlobalNamespace/InvitePolicy.hpp"
// Including type: MasterServer.BroadcastServerHeartbeatResponse
#include "MasterServer/BroadcastServerHeartbeatResponse.hpp"
// Including type: MasterServer.ConnectToServerResponse
#include "MasterServer/ConnectToServerResponse.hpp"
// Including type: MasterServer.GetPublicServersResponse
#include "MasterServer/GetPublicServersResponse.hpp"
// Including type: GameplayServerFilter
#include "GlobalNamespace/GameplayServerFilter.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: GameplayServerFiniteStateMachine/GameStateType
#include "GlobalNamespace/GameplayServerFiniteStateMachine_GameStateType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServer.TryAuthenticateUser
System::Threading::Tasks::Task_1<bool>* MasterServer::IMasterServer::TryAuthenticateUser(uint protocolVersion, System::Net::IPEndPoint* endPoint, GlobalNamespace::AuthenticationToken authenticationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::TryAuthenticateUser");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAuthenticateUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(authenticationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, protocolVersion, endPoint, authenticationToken);
}
// Autogenerated method: MasterServer.IMasterServer.TryAuthenticateDedicatedServer
bool MasterServer::IMasterServer::TryAuthenticateDedicatedServer(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* id, ::Array<uint8_t>* nonce, ::Array<uint8_t>* hash, int64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::TryAuthenticateDedicatedServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAuthenticateDedicatedServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(nonce), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, protocolVersion, endPoint, id, nonce, hash, timestamp);
}
// Autogenerated method: MasterServer.IMasterServer.TryBroadcastServer
System::Threading::Tasks::Task_1<MasterServer::BroadcastServerStatusResponse*>* MasterServer::IMasterServer::TryBroadcastServer(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* serverName, ::Il2CppString* secret, ::Il2CppString* password, ::Array<uint8_t>* random, ::Array<uint8_t>* publicKey, int currentPlayerCount, int maxPlayerCount, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::TryBroadcastServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryBroadcastServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(serverName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey), ::il2cpp_utils::ExtractType(currentPlayerCount), ::il2cpp_utils::ExtractType(maxPlayerCount), ::il2cpp_utils::ExtractType(discoveryPolicy), ::il2cpp_utils::ExtractType(invitePolicy), ::il2cpp_utils::ExtractType(configuration)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::BroadcastServerStatusResponse*>*, false>(this, ___internal__method, protocolVersion, endPoint, userId, userName, serverName, secret, password, random, publicKey, currentPlayerCount, maxPlayerCount, discoveryPolicy, invitePolicy, configuration);
}
// Autogenerated method: MasterServer.IMasterServer.TryHeartbeatUserServer
System::Threading::Tasks::Task_1<MasterServer::BroadcastServerHeartbeatResponse*>* MasterServer::IMasterServer::TryHeartbeatUserServer(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret, int currentPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::TryHeartbeatUserServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryHeartbeatUserServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(currentPlayerCount)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::BroadcastServerHeartbeatResponse*>*, false>(this, ___internal__method, protocolVersion, endPoint, userId, userName, secret, currentPlayerCount);
}
// Autogenerated method: MasterServer.IMasterServer.TryRemoveServer
void MasterServer::IMasterServer::TryRemoveServer(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::TryRemoveServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryRemoveServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, endPoint, userId, userName, secret);
}
// Autogenerated method: MasterServer.IMasterServer.TryGetServer
System::Threading::Tasks::Task_1<MasterServer::ConnectToServerResponse*>* MasterServer::IMasterServer::TryGetServer(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret, ::Il2CppString* code, ::Il2CppString* password, ::Array<uint8_t>* random, ::Array<uint8_t>* publicKey, bool useRelay) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::TryGetServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey), ::il2cpp_utils::ExtractType(useRelay)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::ConnectToServerResponse*>*, false>(this, ___internal__method, protocolVersion, endPoint, userId, userName, secret, code, password, random, publicKey, useRelay);
}
// Autogenerated method: MasterServer.IMasterServer.TryGetMatchmakingServer
System::Threading::Tasks::Task_1<MasterServer::ConnectToServerResponse*>* MasterServer::IMasterServer::TryGetMatchmakingServer(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* userId, ::Il2CppString* userName, GlobalNamespace::GameplayServerConfiguration configuration, ::Array<uint8_t>* random, ::Array<uint8_t>* publicKey, ::Il2CppString* secret) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::TryGetMatchmakingServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetMatchmakingServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey), ::il2cpp_utils::ExtractType(secret)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::ConnectToServerResponse*>*, false>(this, ___internal__method, protocolVersion, endPoint, userId, userName, configuration, random, publicKey, secret);
}
// Autogenerated method: MasterServer.IMasterServer.TryGetPublicServers
System::Threading::Tasks::Task_1<MasterServer::GetPublicServersResponse*>* MasterServer::IMasterServer::TryGetPublicServers(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* userId, ::Il2CppString* userName, int offset, int count, GlobalNamespace::GameplayServerFilter filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::TryGetPublicServers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetPublicServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(filter)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::GetPublicServersResponse*>*, false>(this, ___internal__method, protocolVersion, endPoint, userId, userName, offset, count, filter);
}
// Autogenerated method: MasterServer.IMasterServer.HeartbeatDedicatedServer
void MasterServer::IMasterServer::HeartbeatDedicatedServer(uint protocolVersion, ::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, System::Net::IPEndPoint* endPoint, int cpuUtilization, int occupiedServerSlotCount, int unoccupiedServerSlotCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::HeartbeatDedicatedServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HeartbeatDedicatedServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(cpuUtilization), ::il2cpp_utils::ExtractType(occupiedServerSlotCount), ::il2cpp_utils::ExtractType(unoccupiedServerSlotCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, cpuUtilization, occupiedServerSlotCount, unoccupiedServerSlotCount);
}
// Autogenerated method: MasterServer.IMasterServer.UpdateRelayServerStatus
void MasterServer::IMasterServer::UpdateRelayServerStatus(uint protocolVersion, ::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, System::Net::IPEndPoint* endPoint, ::Il2CppString* id, int currentPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::UpdateRelayServerStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRelayServerStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(currentPlayerCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, id, currentPlayerCount);
}
// Autogenerated method: MasterServer.IMasterServer.UpdateMatchmakingServerStatus
void MasterServer::IMasterServer::UpdateMatchmakingServerStatus(uint protocolVersion, ::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, System::Net::IPEndPoint* endPoint, ::Il2CppString* id, GlobalNamespace::GameplayServerFiniteStateMachine::GameStateType gameState, int currentPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::UpdateMatchmakingServerStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMatchmakingServerStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(gameState), ::il2cpp_utils::ExtractType(currentPlayerCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, id, gameState, currentPlayerCount);
}
// Autogenerated method: MasterServer.IMasterServer.SetDedicatedServerNoLongerOccupied
void MasterServer::IMasterServer::SetDedicatedServerNoLongerOccupied(uint protocolVersion, ::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, System::Net::IPEndPoint* endPoint, ::Il2CppString* id) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::SetDedicatedServerNoLongerOccupied");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDedicatedServerNoLongerOccupied", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, id);
}
// Autogenerated method: MasterServer.IMasterServer.RemoveDedicatedServer
void MasterServer::IMasterServer::RemoveDedicatedServer(uint protocolVersion, ::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::RemoveDedicatedServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveDedicatedServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint);
}
// Autogenerated method: MasterServer.IMasterServer.ShouldHandleMessageFromEndPoint
bool MasterServer::IMasterServer::ShouldHandleMessageFromEndPoint(System::Net::IPEndPoint* remoteEndPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::ShouldHandleMessageFromEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleMessageFromEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, remoteEndPoint);
}
// Autogenerated method: MasterServer.IMasterServer.ReportExceptionForEndPoint
void MasterServer::IMasterServer::ReportExceptionForEndPoint(System::Net::IPEndPoint* remoteEndPoint, System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::ReportExceptionForEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportExceptionForEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, exception);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServerReliableRequest.get_requestId
uint MasterServer::IMasterServerReliableRequest::get_requestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerReliableRequest::get_requestId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerReliableRequest.WithRequestId
MasterServer::IMasterServerReliableRequest* MasterServer::IMasterServerReliableRequest::WithRequestId(uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerReliableRequest::WithRequestId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithRequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerReliableRequest*, false>(this, ___internal__method, requestId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.IMasterServerResponse
#include "MasterServer/IMasterServerResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServerResponse.get_responseId
uint MasterServer::IMasterServerResponse::get_responseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerResponse::get_responseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_responseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerResponse.get_resultCode
uint8_t MasterServer::IMasterServerResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerResponse.get_resultCodeString
::Il2CppString* MasterServer::IMasterServerResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerResponse.WithResponseId
MasterServer::IMasterServerResponse* MasterServer::IMasterServerResponse::WithResponseId(uint responseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerResponse::WithResponseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithResponseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseId)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerResponse*, false>(this, ___internal__method, responseId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.IMasterServerReliableResponse
#include "MasterServer/IMasterServerReliableResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServerReliableResponse.WithRequestAndResponseId
MasterServer::IMasterServerReliableResponse* MasterServer::IMasterServerReliableResponse::WithRequestAndResponseId(uint requestId, uint responseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerReliableResponse::WithRequestAndResponseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithRequestAndResponseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(responseId)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerReliableResponse*, false>(this, ___internal__method, requestId, responseId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.IMasterServerAcknowledgeMessage
#include "MasterServer/IMasterServerAcknowledgeMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServerAcknowledgeMessage.get_messageHandled
bool MasterServer::IMasterServerAcknowledgeMessage::get_messageHandled() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerAcknowledgeMessage::get_messageHandled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_messageHandled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.IMasterServerAuthenticateResponse
#include "MasterServer/IMasterServerAuthenticateResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServerAuthenticateResponse.get_isAuthenticated
bool MasterServer::IMasterServerAuthenticateResponse::get_isAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerAuthenticateResponse::get_isAuthenticated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.IMasterServerMultipartMessage
#include "MasterServer/IMasterServerMultipartMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServerMultipartMessage.get_multipartMessageId
uint MasterServer::IMasterServerMultipartMessage::get_multipartMessageId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerMultipartMessage::get_multipartMessageId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multipartMessageId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerMultipartMessage.get_offset
int MasterServer::IMasterServerMultipartMessage::get_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerMultipartMessage::get_offset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerMultipartMessage.get_length
int MasterServer::IMasterServerMultipartMessage::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerMultipartMessage::get_length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerMultipartMessage.get_totalLength
int MasterServer::IMasterServerMultipartMessage::get_totalLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerMultipartMessage::get_totalLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_totalLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerMultipartMessage.get_data
::Array<uint8_t>* MasterServer::IMasterServerMultipartMessage::get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerMultipartMessage::get_data");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler
#include "MasterServer/MessageHandler.hpp"
// Including type: MasterServer.MessageHandler/IMessageSender
#include "MasterServer/MessageHandler_IMessageSender.hpp"
// Including type: MasterServer.MessageHandler/ConnectionState
#include "MasterServer/MessageHandler_ConnectionState.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: MasterServer.MessageHandler/RequestWaiter
#include "MasterServer/MessageHandler_RequestWaiter.hpp"
// Including type: MasterServer.MessageHandler/SentRequestWaiter
#include "MasterServer/MessageHandler_SentRequestWaiter.hpp"
// Including type: MasterServer.MessageHandler/RequestResponseWaiter
#include "MasterServer/MessageHandler_RequestResponseWaiter.hpp"
// Including type: MasterServer.MessageHandler/MultipartMessageWaiter
#include "MasterServer/MessageHandler_MultipartMessageWaiter.hpp"
// Including type: PacketEncryptionLayer
#include "GlobalNamespace/PacketEncryptionLayer.hpp"
// Including type: MasterServer.IAnalyticsManager
#include "MasterServer/IAnalyticsManager.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: MasterServer.MessageHandler/<>c__DisplayClass74_0`1
#include "MasterServer/MessageHandler_--c__DisplayClass74_0_1.hpp"
// Including type: MasterServer.MessageHandler/<>c__DisplayClass75_0`1
#include "MasterServer/MessageHandler_--c__DisplayClass75_0_1.hpp"
// Including type: MasterServer.MessageHandler/<GetAndSendResponse>d__80`2
#include "MasterServer/MessageHandler_-GetAndSendResponse-d__80_2.hpp"
// Including type: MasterServer.MessageHandler/<GetAndSendResponseAsync>d__81`2
#include "MasterServer/MessageHandler_-GetAndSendResponseAsync-d__81_2.hpp"
// Including type: MasterServer.MessageHandler/<GetAndSendUnreilableResponse>d__82`2
#include "MasterServer/MessageHandler_-GetAndSendUnreilableResponse-d__82_2.hpp"
// Including type: MasterServer.MessageHandler/<SendMessageWithRetry>d__95
#include "MasterServer/MessageHandler_-SendMessageWithRetry-d__95.hpp"
// Including type: MasterServer.MessageHandler/<>c__DisplayClass97_0
#include "MasterServer/MessageHandler_--c__DisplayClass97_0.hpp"
// Including type: MasterServer.MessageHandler/<SendMultipartMessageWithRetryAsync>d__97
#include "MasterServer/MessageHandler_-SendMultipartMessageWithRetryAsync-d__97.hpp"
// Including type: MasterServer.MessageHandler/<SendMessageWithRetryAsyncInternal>d__98
#include "MasterServer/MessageHandler_-SendMessageWithRetryAsyncInternal-d__98.hpp"
// Including type: MasterServer.MessageHandler/<SendMessageWithRetryAwaitResponseAsync>d__99`1
#include "MasterServer/MessageHandler_-SendMessageWithRetryAwaitResponseAsync-d__99_1.hpp"
// Including type: MasterServer.MessageHandler/<>c__DisplayClass100_0`1
#include "MasterServer/MessageHandler_--c__DisplayClass100_0_1.hpp"
// Including type: MasterServer.MessageHandler/<AwaitResponseAsync>d__101`1
#include "MasterServer/MessageHandler_-AwaitResponseAsync-d__101_1.hpp"
// Including type: NetworkPacketSerializer`2
#include "GlobalNamespace/NetworkPacketSerializer_2.hpp"
// Including type: ExpiringDictionary`2
#include "GlobalNamespace/ExpiringDictionary_2.hpp"
// Including type: SmallBufferPool
#include "GlobalNamespace/SmallBufferPool.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: MasterServer.IHandshakeMessage
#include "MasterServer/IHandshakeMessage.hpp"
// Including type: MasterServer.ClientHelloRequest
#include "MasterServer/ClientHelloRequest.hpp"
// Including type: MasterServer.HelloVerifyRequest
#include "MasterServer/HelloVerifyRequest.hpp"
// Including type: MasterServer.ClientHelloWithCookieRequest
#include "MasterServer/ClientHelloWithCookieRequest.hpp"
// Including type: MasterServer.IUserMessage
#include "MasterServer/IUserMessage.hpp"
// Including type: MasterServer.BroadcastServerStatusRequest
#include "MasterServer/BroadcastServerStatusRequest.hpp"
// Including type: MasterServer.BroadcastServerHeartbeatRequest
#include "MasterServer/BroadcastServerHeartbeatRequest.hpp"
// Including type: MasterServer.BroadcastServerHeartbeatResponse
#include "MasterServer/BroadcastServerHeartbeatResponse.hpp"
// Including type: MasterServer.BroadcastServerRemoveRequest
#include "MasterServer/BroadcastServerRemoveRequest.hpp"
// Including type: MasterServer.ConnectToServerRequest
#include "MasterServer/ConnectToServerRequest.hpp"
// Including type: MasterServer.ConnectToMatchmakingRequest
#include "MasterServer/ConnectToMatchmakingRequest.hpp"
// Including type: MasterServer.PrepareForConnectionRequest
#include "MasterServer/PrepareForConnectionRequest.hpp"
// Including type: MasterServer.GetPublicServersRequest
#include "MasterServer/GetPublicServersRequest.hpp"
// Including type: MasterServer.SessionKeepaliveMessage
#include "MasterServer/SessionKeepaliveMessage.hpp"
// Including type: MasterServer.IDedicatedServerMessage
#include "MasterServer/IDedicatedServerMessage.hpp"
// Including type: MasterServer.GetAvailableRelayServerRequest
#include "MasterServer/GetAvailableRelayServerRequest.hpp"
// Including type: MasterServer.GetAvailableMatchmakingServerRequest
#include "MasterServer/GetAvailableMatchmakingServerRequest.hpp"
// Including type: MasterServer.DedicatedServerNoLongerOccupiedRequest
#include "MasterServer/DedicatedServerNoLongerOccupiedRequest.hpp"
// Including type: MasterServer.DedicatedServerHeartbeatRequest
#include "MasterServer/DedicatedServerHeartbeatRequest.hpp"
// Including type: MasterServer.DedicatedServerHeartbeatResponse
#include "MasterServer/DedicatedServerHeartbeatResponse.hpp"
// Including type: MasterServer.RelayServerStatusUpdateRequest
#include "MasterServer/RelayServerStatusUpdateRequest.hpp"
// Including type: MasterServer.MatchmakingServerStatusUpdateRequest
#include "MasterServer/MatchmakingServerStatusUpdateRequest.hpp"
// Including type: MasterServer.DedicatedServerShutDownRequest
#include "MasterServer/DedicatedServerShutDownRequest.hpp"
// Including type: MasterServer.DedicatedServerPrepareForConnectionRequest
#include "MasterServer/DedicatedServerPrepareForConnectionRequest.hpp"
// Including type: MasterServer.IMasterServerMessage
#include "MasterServer/IMasterServerMessage.hpp"
// Including type: MasterServer.IMasterServerAcknowledgeMessage
#include "MasterServer/IMasterServerAcknowledgeMessage.hpp"
// Including type: MasterServer.IMasterServerReliableResponse
#include "MasterServer/IMasterServerReliableResponse.hpp"
// Including type: MasterServer.IMasterServerMultipartMessage
#include "MasterServer/IMasterServerMultipartMessage.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MasterServer.IMasterServerUnreliableMessage
#include "MasterServer/IMasterServerUnreliableMessage.hpp"
// Including type: MasterServer.IMasterServerResponse
#include "MasterServer/IMasterServerResponse.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: System.Func`5
#include "System/Func_5.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: INetworkPacketSerializer`1
#include "GlobalNamespace/INetworkPacketSerializer_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt32 kHandshakeMessageType
uint MasterServer::MessageHandler::_get_kHandshakeMessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kHandshakeMessageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler", "kHandshakeMessageType"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kHandshakeMessageType
void MasterServer::MessageHandler::_set_kHandshakeMessageType(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kHandshakeMessageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kHandshakeMessageType", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kUserMessageType
uint MasterServer::MessageHandler::_get_kUserMessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kUserMessageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler", "kUserMessageType"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kUserMessageType
void MasterServer::MessageHandler::_set_kUserMessageType(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kUserMessageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kUserMessageType", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kDedicatedServerMessageType
uint MasterServer::MessageHandler::_get_kDedicatedServerMessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kDedicatedServerMessageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler", "kDedicatedServerMessageType"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kDedicatedServerMessageType
void MasterServer::MessageHandler::_set_kDedicatedServerMessageType(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kDedicatedServerMessageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kDedicatedServerMessageType", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 kProtocolVersion
uint MasterServer::MessageHandler::_get_kProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kProtocolVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler", "kProtocolVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 kProtocolVersion
void MasterServer::MessageHandler::_set_kProtocolVersion(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kProtocolVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kProtocolVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxPublicKeyLength
int MasterServer::MessageHandler::_get_kMaxPublicKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kMaxPublicKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kMaxPublicKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxPublicKeyLength
void MasterServer::MessageHandler::_set_kMaxPublicKeyLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kMaxPublicKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kMaxPublicKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMinSignatureLength
int MasterServer::MessageHandler::_get_kMinSignatureLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kMinSignatureLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kMinSignatureLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMinSignatureLength
void MasterServer::MessageHandler::_set_kMinSignatureLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kMinSignatureLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kMinSignatureLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxSignatureLength
int MasterServer::MessageHandler::_get_kMaxSignatureLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kMaxSignatureLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kMaxSignatureLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxSignatureLength
void MasterServer::MessageHandler::_set_kMaxSignatureLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kMaxSignatureLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kMaxSignatureLength", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxPacketSize
int MasterServer::MessageHandler::_get_kMaxPacketSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kMaxPacketSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kMaxPacketSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxPacketSize
void MasterServer::MessageHandler::_set_kMaxPacketSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kMaxPacketSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kMaxPacketSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryCount
int MasterServer::MessageHandler::_get_kRetryCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kRetryCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryCount
void MasterServer::MessageHandler::_set_kRetryCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kRetryCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryDelay0Ms
int MasterServer::MessageHandler::_get_kRetryDelay0Ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kRetryDelay0Ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryDelay0Ms"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryDelay0Ms
void MasterServer::MessageHandler::_set_kRetryDelay0Ms(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kRetryDelay0Ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryDelay0Ms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryDelay1Ms
int MasterServer::MessageHandler::_get_kRetryDelay1Ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kRetryDelay1Ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryDelay1Ms"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryDelay1Ms
void MasterServer::MessageHandler::_set_kRetryDelay1Ms(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kRetryDelay1Ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryDelay1Ms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryDelay2Ms
int MasterServer::MessageHandler::_get_kRetryDelay2Ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kRetryDelay2Ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryDelay2Ms"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryDelay2Ms
void MasterServer::MessageHandler::_set_kRetryDelay2Ms(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kRetryDelay2Ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryDelay2Ms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryDelay3Ms
int MasterServer::MessageHandler::_get_kRetryDelay3Ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kRetryDelay3Ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryDelay3Ms"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryDelay3Ms
void MasterServer::MessageHandler::_set_kRetryDelay3Ms(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kRetryDelay3Ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryDelay3Ms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryDelay4Ms
int MasterServer::MessageHandler::_get_kRetryDelay4Ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kRetryDelay4Ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryDelay4Ms"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryDelay4Ms
void MasterServer::MessageHandler::_set_kRetryDelay4Ms(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kRetryDelay4Ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryDelay4Ms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kConnectionStateTimeout
int64_t MasterServer::MessageHandler::_get_kConnectionStateTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kConnectionStateTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "MessageHandler", "kConnectionStateTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kConnectionStateTimeout
void MasterServer::MessageHandler::_set_kConnectionStateTimeout(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kConnectionStateTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kConnectionStateTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kSentRequestTimeout
int64_t MasterServer::MessageHandler::_get_kSentRequestTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kSentRequestTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "MessageHandler", "kSentRequestTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kSentRequestTimeout
void MasterServer::MessageHandler::_set_kSentRequestTimeout(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kSentRequestTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kSentRequestTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kSentRequestWithResponseTimeout
int64_t MasterServer::MessageHandler::_get_kSentRequestWithResponseTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kSentRequestWithResponseTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "MessageHandler", "kSentRequestWithResponseTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kSentRequestWithResponseTimeout
void MasterServer::MessageHandler::_set_kSentRequestWithResponseTimeout(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kSentRequestWithResponseTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kSentRequestWithResponseTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kMultipartMessageTimeout
int64_t MasterServer::MessageHandler::_get_kMultipartMessageTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kMultipartMessageTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "MessageHandler", "kMultipartMessageTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kMultipartMessageTimeout
void MasterServer::MessageHandler::_set_kMultipartMessageTimeout(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kMultipartMessageTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kMultipartMessageTimeout", value));
}
// Autogenerated method: MasterServer.MessageHandler.RegisterHandshakeMessageHandlers
void MasterServer::MessageHandler::RegisterHandshakeMessageHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RegisterHandshakeMessageHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterHandshakeMessageHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.ShouldHandleHandshakeMessage
bool MasterServer::MessageHandler::ShouldHandleHandshakeMessage(MasterServer::IHandshakeMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ShouldHandleHandshakeMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleHandshakeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleClientHelloRequest
void MasterServer::MessageHandler::HandleClientHelloRequest(MasterServer::ClientHelloRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleClientHelloRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleClientHelloRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleHelloVerifyRequest
void MasterServer::MessageHandler::HandleHelloVerifyRequest(MasterServer::HelloVerifyRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleHelloVerifyRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHelloVerifyRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleClientHelloWithCookieRequest
void MasterServer::MessageHandler::HandleClientHelloWithCookieRequest(MasterServer::ClientHelloWithCookieRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleClientHelloWithCookieRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleClientHelloWithCookieRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.RegisterUserMessageHandlers
void MasterServer::MessageHandler::RegisterUserMessageHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RegisterUserMessageHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterUserMessageHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.ShouldHandleUserMessage
bool MasterServer::MessageHandler::ShouldHandleUserMessage(MasterServer::IUserMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ShouldHandleUserMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleUserMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleBroadcastServerStatusRequest
void MasterServer::MessageHandler::HandleBroadcastServerStatusRequest(MasterServer::BroadcastServerStatusRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleBroadcastServerStatusRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBroadcastServerStatusRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleBroadcastServerHeartbeatRequest
void MasterServer::MessageHandler::HandleBroadcastServerHeartbeatRequest(MasterServer::BroadcastServerHeartbeatRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleBroadcastServerHeartbeatRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBroadcastServerHeartbeatRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleBroadcastServerHeartbeatResponse
void MasterServer::MessageHandler::HandleBroadcastServerHeartbeatResponse(MasterServer::BroadcastServerHeartbeatResponse* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleBroadcastServerHeartbeatResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBroadcastServerHeartbeatResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleBroadcastServerRemoveRequest
void MasterServer::MessageHandler::HandleBroadcastServerRemoveRequest(MasterServer::BroadcastServerRemoveRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleBroadcastServerRemoveRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBroadcastServerRemoveRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleConnectToServerRequest
void MasterServer::MessageHandler::HandleConnectToServerRequest(MasterServer::ConnectToServerRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleConnectToServerRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectToServerRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleConnectToMatchmakingRequest
void MasterServer::MessageHandler::HandleConnectToMatchmakingRequest(MasterServer::ConnectToMatchmakingRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleConnectToMatchmakingRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectToMatchmakingRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandlePrepareForConnectionRequest
void MasterServer::MessageHandler::HandlePrepareForConnectionRequest(MasterServer::PrepareForConnectionRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandlePrepareForConnectionRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePrepareForConnectionRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleGetPublicServersRequest
void MasterServer::MessageHandler::HandleGetPublicServersRequest(MasterServer::GetPublicServersRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleGetPublicServersRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGetPublicServersRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleSessionKeepaliveMessage
void MasterServer::MessageHandler::HandleSessionKeepaliveMessage(MasterServer::SessionKeepaliveMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleSessionKeepaliveMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSessionKeepaliveMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.RegisterDedicatedServerHandlers
void MasterServer::MessageHandler::RegisterDedicatedServerHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RegisterDedicatedServerHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterDedicatedServerHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.ShouldHandleDedicatedServerMessage
bool MasterServer::MessageHandler::ShouldHandleDedicatedServerMessage(MasterServer::IDedicatedServerMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ShouldHandleDedicatedServerMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleDedicatedServerMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleGetAvailableRelayServerRequest
void MasterServer::MessageHandler::HandleGetAvailableRelayServerRequest(MasterServer::GetAvailableRelayServerRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleGetAvailableRelayServerRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGetAvailableRelayServerRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleGetAvailableMatchmakingServerRequest
void MasterServer::MessageHandler::HandleGetAvailableMatchmakingServerRequest(MasterServer::GetAvailableMatchmakingServerRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleGetAvailableMatchmakingServerRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGetAvailableMatchmakingServerRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerUnavailableRequest
void MasterServer::MessageHandler::HandleDedicatedServerUnavailableRequest(MasterServer::DedicatedServerNoLongerOccupiedRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleDedicatedServerUnavailableRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDedicatedServerUnavailableRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerHeartbeatRequest
void MasterServer::MessageHandler::HandleDedicatedServerHeartbeatRequest(MasterServer::DedicatedServerHeartbeatRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleDedicatedServerHeartbeatRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDedicatedServerHeartbeatRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerHeartbeatResponse
void MasterServer::MessageHandler::HandleDedicatedServerHeartbeatResponse(MasterServer::DedicatedServerHeartbeatResponse* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleDedicatedServerHeartbeatResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDedicatedServerHeartbeatResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleRelayServerStatusUpdateRequest
void MasterServer::MessageHandler::HandleRelayServerStatusUpdateRequest(MasterServer::RelayServerStatusUpdateRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleRelayServerStatusUpdateRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRelayServerStatusUpdateRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleMatchmakingServerStatusUpdateRequest
void MasterServer::MessageHandler::HandleMatchmakingServerStatusUpdateRequest(MasterServer::MatchmakingServerStatusUpdateRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleMatchmakingServerStatusUpdateRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMatchmakingServerStatusUpdateRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerShutDownRequest
void MasterServer::MessageHandler::HandleDedicatedServerShutDownRequest(MasterServer::DedicatedServerShutDownRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleDedicatedServerShutDownRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDedicatedServerShutDownRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerPrepareForConnectionRequest
void MasterServer::MessageHandler::HandleDedicatedServerPrepareForConnectionRequest(MasterServer::DedicatedServerPrepareForConnectionRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleDedicatedServerPrepareForConnectionRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDedicatedServerPrepareForConnectionRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.IsUnhandledMessage
bool MasterServer::MessageHandler::IsUnhandledMessage(MasterServer::IMasterServerReliableRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::IsUnhandledMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsUnhandledMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.CompleteSend
void MasterServer::MessageHandler::CompleteSend(MasterServer::IMasterServerResponse* packet, System::Net::IPEndPoint* remoteEndPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::CompleteSend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteSend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(remoteEndPoint)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, remoteEndPoint);
}
// Autogenerated method: MasterServer.MessageHandler.CompleteRequest
bool MasterServer::MessageHandler::CompleteRequest(MasterServer::IMasterServerReliableResponse* packet, System::Net::IPEndPoint* remoteEndPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::CompleteRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(remoteEndPoint)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, packet, remoteEndPoint);
}
// Autogenerated method: MasterServer.MessageHandler.ShouldHandleMessage
bool MasterServer::MessageHandler::ShouldHandleMessage(MasterServer::IMasterServerMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ShouldHandleMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.SendUnreliableMessage
void MasterServer::MessageHandler::SendUnreliableMessage(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerUnreliableMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendUnreliableMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendUnreliableMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, remoteEndPoint, message);
}
// Autogenerated method: MasterServer.MessageHandler.SendUnreliableResponse
void MasterServer::MessageHandler::SendUnreliableResponse(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* request, MasterServer::IMasterServerResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendUnreliableResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendUnreliableResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, remoteEndPoint, request, response);
}
// Autogenerated method: MasterServer.MessageHandler.SendUnreliableResponse
void MasterServer::MessageHandler::SendUnreliableResponse(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, uint responseId, MasterServer::IMasterServerResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendUnreliableResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendUnreliableResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(responseId), ::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, remoteEndPoint, responseId, response);
}
// Autogenerated method: MasterServer.MessageHandler.SendReliableRequest
void MasterServer::MessageHandler::SendReliableRequest(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* request, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendReliableRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendReliableRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, remoteEndPoint, request, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendReliableRequestAsync
System::Threading::Tasks::Task* MasterServer::MessageHandler::SendReliableRequestAsync(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* request, System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* onSendFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendReliableRequestAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendReliableRequestAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(onSendFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, protocolVersion, remoteEndPoint, request, onSendFailed, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendReliableResponse
void MasterServer::MessageHandler::SendReliableResponse(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* request, MasterServer::IMasterServerReliableResponse* response, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendReliableResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendReliableResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(cancellationToken)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, remoteEndPoint, request, response, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendReliableResponse
void MasterServer::MessageHandler::SendReliableResponse(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, uint responseId, MasterServer::IMasterServerReliableResponse* response, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendReliableResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendReliableResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(responseId), ::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(cancellationToken)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, remoteEndPoint, responseId, response, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendReliableResponseAsync
System::Threading::Tasks::Task* MasterServer::MessageHandler::SendReliableResponseAsync(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* request, MasterServer::IMasterServerReliableResponse* response, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendReliableResponseAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendReliableResponseAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, protocolVersion, remoteEndPoint, request, response, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendMessage
void MasterServer::MessageHandler::SendMessage(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, remoteEndPoint, message);
}
// Autogenerated method: MasterServer.MessageHandler.SendMessageWithRetry
void MasterServer::MessageHandler::SendMessageWithRetry(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* message, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendMessageWithRetry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessageWithRetry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(cancellationToken)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, remoteEndPoint, message, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendMessageWithRetryAsync
System::Threading::Tasks::Task* MasterServer::MessageHandler::SendMessageWithRetryAsync(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* message, System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* onSendFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendMessageWithRetryAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessageWithRetryAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(onSendFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, protocolVersion, remoteEndPoint, message, onSendFailed, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendMultipartMessageWithRetryAsync
System::Threading::Tasks::Task* MasterServer::MessageHandler::SendMultipartMessageWithRetryAsync(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* message, LiteNetLib::Utils::NetDataWriter* data, System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* onSendFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendMultipartMessageWithRetryAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMultipartMessageWithRetryAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(onSendFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, protocolVersion, remoteEndPoint, message, data, onSendFailed, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendMessageWithRetryAsyncInternal
System::Threading::Tasks::Task* MasterServer::MessageHandler::SendMessageWithRetryAsyncInternal(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* message, System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* onSendFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendMessageWithRetryAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessageWithRetryAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(onSendFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, protocolVersion, remoteEndPoint, message, onSendFailed, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.WaitForRetry
System::Threading::Tasks::Task* MasterServer::MessageHandler::WaitForRetry(int retryAttempt, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::WaitForRetry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForRetry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(retryAttempt), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, retryAttempt, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.Write
LiteNetLib::Utils::NetDataWriter* MasterServer::MessageHandler::Write(uint protocolVersion, LiteNetLib::Utils::INetSerializable* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::Utils::NetDataWriter*, false>(this, ___internal__method, protocolVersion, message);
}
// Autogenerated method: MasterServer.MessageHandler.PollUpdate
void MasterServer::MessageHandler::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.ReceiveMessage
void MasterServer::MessageHandler::ReceiveMessage(System::Net::IPEndPoint* remoteEndPoint, LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ReceiveMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, reader);
}
// Autogenerated method: MasterServer.MessageHandler.ShouldHandleMessageFromEndPoint
bool MasterServer::MessageHandler::ShouldHandleMessageFromEndPoint(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ShouldHandleMessageFromEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleMessageFromEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, endPoint);
}
// Autogenerated method: MasterServer.MessageHandler.ReceivedMessageException
void MasterServer::MessageHandler::ReceivedMessageException(System::Net::IPEndPoint* endPoint, System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ReceivedMessageException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceivedMessageException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPoint, exception);
}
// Autogenerated method: MasterServer.MessageHandler.BeginSession
void MasterServer::MessageHandler::BeginSession(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::BeginSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPoint);
}
// Autogenerated method: MasterServer.MessageHandler.BeginSession
void MasterServer::MessageHandler::BeginSession(System::Net::IPEndPoint* endPoint, uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::BeginSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(requestId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPoint, requestId);
}
// Autogenerated method: MasterServer.MessageHandler.GetNextRequestId
uint MasterServer::MessageHandler::GetNextRequestId(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::GetNextRequestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextRequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, endPoint);
}
// Autogenerated method: MasterServer.MessageHandler.GetConnectionState
MasterServer::MessageHandler::ConnectionState* MasterServer::MessageHandler::GetConnectionState(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::GetConnectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::MessageHandler::ConnectionState*, false>(this, ___internal__method, endPoint);
}
// Autogenerated method: MasterServer.MessageHandler.IsValidSessionStartRequestId
bool MasterServer::MessageHandler::IsValidSessionStartRequestId(System::Net::IPEndPoint* endPoint, uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::IsValidSessionStartRequestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidSessionStartRequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(requestId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, endPoint, requestId);
}
// Autogenerated method: MasterServer.MessageHandler.IsConnectionStateEncrypted
bool MasterServer::MessageHandler::IsConnectionStateEncrypted(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::IsConnectionStateEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsConnectionStateEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, endPoint);
}
// Autogenerated method: MasterServer.MessageHandler.GetSerializer
GlobalNamespace::INetworkPacketSerializer_1<MasterServer::MessageHandler::MessageOrigin>* MasterServer::MessageHandler::GetSerializer(uint protocolVersion, uint messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::GetSerializer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(messageType)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::INetworkPacketSerializer_1<MasterServer::MessageHandler::MessageOrigin>*, false>(this, ___internal__method, protocolVersion, messageType);
}
// Autogenerated method: MasterServer.MessageHandler.Dispose
void MasterServer::MessageHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.CreateHandshakeHeader
::Array<uint8_t>* MasterServer::MessageHandler::CreateHandshakeHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::CreateHandshakeHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "MessageHandler", "CreateHandshakeHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/IMessageSender
#include "MasterServer/MessageHandler_IMessageSender.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.MessageHandler/IMessageSender.SendMessage
void MasterServer::MessageHandler::IMessageSender::SendMessage(LiteNetLib::Utils::NetDataWriter* writer, System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::IMessageSender::SendMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer, endPoint);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler/ConnectionState
#include "MasterServer/MessageHandler_ConnectionState.hpp"
// Including type: PacketEncryptionLayer/IEncryptionState
#include "GlobalNamespace/PacketEncryptionLayer_IEncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kEpochBitOffset
int MasterServer::MessageHandler::ConnectionState::_get_kEpochBitOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get_kEpochBitOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler/ConnectionState", "kEpochBitOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kEpochBitOffset
void MasterServer::MessageHandler::ConnectionState::_set_kEpochBitOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set_kEpochBitOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/ConnectionState", "kEpochBitOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kRequestIdRange
uint MasterServer::MessageHandler::ConnectionState::_get_kRequestIdRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get_kRequestIdRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler/ConnectionState", "kRequestIdRange"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kRequestIdRange
void MasterServer::MessageHandler::ConnectionState::_set_kRequestIdRange(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set_kRequestIdRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/ConnectionState", "kRequestIdRange", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kRangeMask
uint MasterServer::MessageHandler::ConnectionState::_get_kRangeMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get_kRangeMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler/ConnectionState", "kRangeMask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kRangeMask
void MasterServer::MessageHandler::ConnectionState::_set_kRangeMask(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set_kRangeMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/ConnectionState", "kRangeMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kEpochMask
uint MasterServer::MessageHandler::ConnectionState::_get_kEpochMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get_kEpochMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler/ConnectionState", "kEpochMask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kEpochMask
void MasterServer::MessageHandler::ConnectionState::_set_kEpochMask(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set_kEpochMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/ConnectionState", "kEpochMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRequestBufferLength
int MasterServer::MessageHandler::ConnectionState::_get_kRequestBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get_kRequestBufferLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler/ConnectionState", "kRequestBufferLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRequestBufferLength
void MasterServer::MessageHandler::ConnectionState::_set_kRequestBufferLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set_kRequestBufferLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/ConnectionState", "kRequestBufferLength", value));
}
// Autogenerated method: MasterServer.MessageHandler/ConnectionState.get_isEncrypted
bool MasterServer::MessageHandler::ConnectionState::get_isEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::get_isEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/ConnectionState.GetNextRequestId
uint MasterServer::MessageHandler::ConnectionState::GetNextRequestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::GetNextRequestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextRequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/ConnectionState.BeginSession
void MasterServer::MessageHandler::ConnectionState::BeginSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::BeginSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/ConnectionState.IsValidSessionStartRequestId
bool MasterServer::MessageHandler::ConnectionState::IsValidSessionStartRequestId(uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::IsValidSessionStartRequestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidSessionStartRequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, requestId);
}
// Autogenerated method: MasterServer.MessageHandler/ConnectionState.BeginSession
void MasterServer::MessageHandler::ConnectionState::BeginSession(uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::BeginSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, requestId);
}
// Autogenerated method: MasterServer.MessageHandler/ConnectionState.SetEpoch
void MasterServer::MessageHandler::ConnectionState::SetEpoch(uint epoch) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::SetEpoch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEpoch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(epoch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, epoch);
}
// Autogenerated method: MasterServer.MessageHandler/ConnectionState.CanAcceptRequest
bool MasterServer::MessageHandler::ConnectionState::CanAcceptRequest(uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::CanAcceptRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanAcceptRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, requestId);
}
// Autogenerated method: MasterServer.MessageHandler/ConnectionState.SetEncryptionState
void MasterServer::MessageHandler::ConnectionState::SetEncryptionState(GlobalNamespace::PacketEncryptionLayer::IEncryptionState* encryptionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::SetEncryptionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEncryptionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encryptionState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, encryptionState);
}
// Autogenerated method: MasterServer.MessageHandler/ConnectionState.SetIdentity
void MasterServer::MessageHandler::ConnectionState::SetIdentity(uint protocolVersion, ::Il2CppString* userId, ::Il2CppString* userName) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::SetIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, userId, userName);
}
// Autogenerated method: MasterServer.MessageHandler/ConnectionState.VerifyIdentity
bool MasterServer::MessageHandler::ConnectionState::VerifyIdentity(uint protocolVersion, ::Il2CppString* userId, ::Il2CppString* userName) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::VerifyIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, protocolVersion, userId, userName);
}
// Autogenerated method: MasterServer.MessageHandler/ConnectionState.Dispose
void MasterServer::MessageHandler::ConnectionState::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/ConnectionState.LogD
void MasterServer::MessageHandler::ConnectionState::LogD(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::LogD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "MessageHandler/ConnectionState", "LogD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler/RequestWaiterId
#include "MasterServer/MessageHandler.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.MessageHandler/RequestWaiterId.Equals
bool MasterServer::MessageHandler::RequestWaiterId::Equals(MasterServer::MessageHandler::RequestWaiterId other) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestWaiterId::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: MasterServer.MessageHandler/RequestWaiterId.Equals
bool MasterServer::MessageHandler::RequestWaiterId::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestWaiterId::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: MasterServer.MessageHandler/RequestWaiterId.GetHashCode
int MasterServer::MessageHandler::RequestWaiterId::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestWaiterId::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/RequestWaiter
#include "MasterServer/MessageHandler_RequestWaiter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.MessageHandler/RequestWaiter.Dispose
void MasterServer::MessageHandler::RequestWaiter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestWaiter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/SentRequestWaiter
#include "MasterServer/MessageHandler_SentRequestWaiter.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.MessageHandler/SentRequestWaiter.Complete
void MasterServer::MessageHandler::SentRequestWaiter::Complete(bool handled) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handled)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, handled);
}
// Autogenerated method: MasterServer.MessageHandler/SentRequestWaiter.Cancel
void MasterServer::MessageHandler::SentRequestWaiter::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/SentRequestWaiter.get_task
System::Threading::Tasks::Task* MasterServer::MessageHandler::SentRequestWaiter::get_task() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::get_task");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_task", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/SentRequestWaiter.get_isWaiting
bool MasterServer::MessageHandler::SentRequestWaiter::get_isWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::get_isWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/SentRequestWaiter.Dispose
void MasterServer::MessageHandler::SentRequestWaiter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/RequestResponseWaiter
#include "MasterServer/MessageHandler_RequestResponseWaiter.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: MasterServer.IMasterServerMessage
#include "MasterServer/IMasterServerMessage.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.MessageHandler/RequestResponseWaiter.Complete
void MasterServer::MessageHandler::RequestResponseWaiter::Complete(MasterServer::IMasterServerMessage* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: MasterServer.MessageHandler/RequestResponseWaiter.Fail
void MasterServer::MessageHandler::RequestResponseWaiter::Fail(System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::Fail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ex);
}
// Autogenerated method: MasterServer.MessageHandler/RequestResponseWaiter.Cancel
void MasterServer::MessageHandler::RequestResponseWaiter::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/RequestResponseWaiter.get_task
System::Threading::Tasks::Task_1<MasterServer::IMasterServerMessage*>* MasterServer::MessageHandler::RequestResponseWaiter::get_task() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::get_task");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_task", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::IMasterServerMessage*>*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/RequestResponseWaiter.get_isWaiting
bool MasterServer::MessageHandler::RequestResponseWaiter::get_isWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::get_isWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/RequestResponseWaiter.Dispose
void MasterServer::MessageHandler::RequestResponseWaiter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler/MultipartMessageWaiter
#include "MasterServer/MessageHandler_MultipartMessageWaiter.hpp"
// Including type: SmallBufferPool
#include "GlobalNamespace/SmallBufferPool.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: MasterServer.IMasterServerMultipartMessage
#include "MasterServer/IMasterServerMultipartMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.MessageHandler/MultipartMessageWaiter.Append
void MasterServer::MessageHandler::MultipartMessageWaiter::Append(MasterServer::IMasterServerMultipartMessage* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated method: MasterServer.MessageHandler/MultipartMessageWaiter.get_isWaiting
bool MasterServer::MessageHandler::MultipartMessageWaiter::get_isWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::get_isWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MultipartMessageWaiter.get_data
::Array<uint8_t>* MasterServer::MessageHandler::MultipartMessageWaiter::get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::get_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MultipartMessageWaiter.get_length
int MasterServer::MessageHandler::MultipartMessageWaiter::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MultipartMessageWaiter.Dispose
void MasterServer::MessageHandler::MultipartMessageWaiter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/MessageOrigin
#include "MasterServer/MessageHandler.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/HandshakeMessageType
#include "MasterServer/MessageHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/HandshakeMessageType ClientHelloRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_ClientHelloRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_ClientHelloRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "ClientHelloRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/HandshakeMessageType ClientHelloRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_ClientHelloRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_ClientHelloRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "ClientHelloRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/HandshakeMessageType HelloVerifyRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_HelloVerifyRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_HelloVerifyRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "HelloVerifyRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/HandshakeMessageType HelloVerifyRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_HelloVerifyRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_HelloVerifyRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "HelloVerifyRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/HandshakeMessageType ClientHelloWithCookieRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_ClientHelloWithCookieRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_ClientHelloWithCookieRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "ClientHelloWithCookieRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/HandshakeMessageType ClientHelloWithCookieRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_ClientHelloWithCookieRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_ClientHelloWithCookieRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "ClientHelloWithCookieRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/HandshakeMessageType ServerHelloRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_ServerHelloRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_ServerHelloRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "ServerHelloRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/HandshakeMessageType ServerHelloRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_ServerHelloRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_ServerHelloRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "ServerHelloRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/HandshakeMessageType ServerCertificateRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_ServerCertificateRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_ServerCertificateRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "ServerCertificateRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/HandshakeMessageType ServerCertificateRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_ServerCertificateRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_ServerCertificateRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "ServerCertificateRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/HandshakeMessageType ServerCertificateResponse
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_ServerCertificateResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_ServerCertificateResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "ServerCertificateResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/HandshakeMessageType ServerCertificateResponse
void MasterServer::MessageHandler::HandshakeMessageType::_set_ServerCertificateResponse(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_ServerCertificateResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "ServerCertificateResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/HandshakeMessageType ClientKeyExchangeRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_ClientKeyExchangeRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_ClientKeyExchangeRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "ClientKeyExchangeRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/HandshakeMessageType ClientKeyExchangeRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_ClientKeyExchangeRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_ClientKeyExchangeRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "ClientKeyExchangeRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/HandshakeMessageType ChangeCipherSpecRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_ChangeCipherSpecRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_ChangeCipherSpecRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "ChangeCipherSpecRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/HandshakeMessageType ChangeCipherSpecRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_ChangeCipherSpecRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_ChangeCipherSpecRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "ChangeCipherSpecRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/HandshakeMessageType MessageReceivedAcknowledge
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_MessageReceivedAcknowledge() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_MessageReceivedAcknowledge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "MessageReceivedAcknowledge"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/HandshakeMessageType MessageReceivedAcknowledge
void MasterServer::MessageHandler::HandshakeMessageType::_set_MessageReceivedAcknowledge(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_MessageReceivedAcknowledge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "MessageReceivedAcknowledge", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/HandshakeMessageType MultipartMessage
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_MultipartMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_MultipartMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "MultipartMessage"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/HandshakeMessageType MultipartMessage
void MasterServer::MessageHandler::HandshakeMessageType::_set_MultipartMessage(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_MultipartMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "MultipartMessage", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/UserMessageType
#include "MasterServer/MessageHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/UserMessageType AuthenticateUserRequest
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_AuthenticateUserRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_AuthenticateUserRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "AuthenticateUserRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/UserMessageType AuthenticateUserRequest
void MasterServer::MessageHandler::UserMessageType::_set_AuthenticateUserRequest(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_AuthenticateUserRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "AuthenticateUserRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/UserMessageType AuthenticateUserResponse
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_AuthenticateUserResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_AuthenticateUserResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "AuthenticateUserResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/UserMessageType AuthenticateUserResponse
void MasterServer::MessageHandler::UserMessageType::_set_AuthenticateUserResponse(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_AuthenticateUserResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "AuthenticateUserResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/UserMessageType BroadcastServerStatusRequest
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_BroadcastServerStatusRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_BroadcastServerStatusRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "BroadcastServerStatusRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/UserMessageType BroadcastServerStatusRequest
void MasterServer::MessageHandler::UserMessageType::_set_BroadcastServerStatusRequest(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_BroadcastServerStatusRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "BroadcastServerStatusRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/UserMessageType BroadcastServerStatusResponse
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_BroadcastServerStatusResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_BroadcastServerStatusResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "BroadcastServerStatusResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/UserMessageType BroadcastServerStatusResponse
void MasterServer::MessageHandler::UserMessageType::_set_BroadcastServerStatusResponse(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_BroadcastServerStatusResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "BroadcastServerStatusResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/UserMessageType BroadcastServerHeartbeatRequest
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_BroadcastServerHeartbeatRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_BroadcastServerHeartbeatRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "BroadcastServerHeartbeatRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/UserMessageType BroadcastServerHeartbeatRequest
void MasterServer::MessageHandler::UserMessageType::_set_BroadcastServerHeartbeatRequest(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_BroadcastServerHeartbeatRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "BroadcastServerHeartbeatRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/UserMessageType BroadcastServerHeartbeatResponse
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_BroadcastServerHeartbeatResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_BroadcastServerHeartbeatResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "BroadcastServerHeartbeatResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/UserMessageType BroadcastServerHeartbeatResponse
void MasterServer::MessageHandler::UserMessageType::_set_BroadcastServerHeartbeatResponse(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_BroadcastServerHeartbeatResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "BroadcastServerHeartbeatResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/UserMessageType BroadcastServerRemoveRequest
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_BroadcastServerRemoveRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_BroadcastServerRemoveRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "BroadcastServerRemoveRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/UserMessageType BroadcastServerRemoveRequest
void MasterServer::MessageHandler::UserMessageType::_set_BroadcastServerRemoveRequest(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_BroadcastServerRemoveRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "BroadcastServerRemoveRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/UserMessageType ConnectToServerRequest
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_ConnectToServerRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_ConnectToServerRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "ConnectToServerRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/UserMessageType ConnectToServerRequest
void MasterServer::MessageHandler::UserMessageType::_set_ConnectToServerRequest(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_ConnectToServerRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "ConnectToServerRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/UserMessageType ConnectToServerResponse
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_ConnectToServerResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_ConnectToServerResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "ConnectToServerResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/UserMessageType ConnectToServerResponse
void MasterServer::MessageHandler::UserMessageType::_set_ConnectToServerResponse(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_ConnectToServerResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "ConnectToServerResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/UserMessageType ConnectToMatchmakingRequest
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_ConnectToMatchmakingRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_ConnectToMatchmakingRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "ConnectToMatchmakingRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/UserMessageType ConnectToMatchmakingRequest
void MasterServer::MessageHandler::UserMessageType::_set_ConnectToMatchmakingRequest(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_ConnectToMatchmakingRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "ConnectToMatchmakingRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/UserMessageType PrepareForConnectionRequest
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_PrepareForConnectionRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_PrepareForConnectionRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "PrepareForConnectionRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/UserMessageType PrepareForConnectionRequest
void MasterServer::MessageHandler::UserMessageType::_set_PrepareForConnectionRequest(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_PrepareForConnectionRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "PrepareForConnectionRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/UserMessageType GetPublicServersRequest
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_GetPublicServersRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_GetPublicServersRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "GetPublicServersRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/UserMessageType GetPublicServersRequest
void MasterServer::MessageHandler::UserMessageType::_set_GetPublicServersRequest(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_GetPublicServersRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "GetPublicServersRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/UserMessageType GetPublicServersResponse
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_GetPublicServersResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_GetPublicServersResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "GetPublicServersResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/UserMessageType GetPublicServersResponse
void MasterServer::MessageHandler::UserMessageType::_set_GetPublicServersResponse(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_GetPublicServersResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "GetPublicServersResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/UserMessageType MessageReceivedAcknowledge
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_MessageReceivedAcknowledge() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_MessageReceivedAcknowledge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "MessageReceivedAcknowledge"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/UserMessageType MessageReceivedAcknowledge
void MasterServer::MessageHandler::UserMessageType::_set_MessageReceivedAcknowledge(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_MessageReceivedAcknowledge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "MessageReceivedAcknowledge", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/UserMessageType MultipartMessage
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_MultipartMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_MultipartMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "MultipartMessage"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/UserMessageType MultipartMessage
void MasterServer::MessageHandler::UserMessageType::_set_MultipartMessage(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_MultipartMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "MultipartMessage", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/UserMessageType SessionKeepaliveMessage
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_SessionKeepaliveMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_SessionKeepaliveMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "SessionKeepaliveMessage"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/UserMessageType SessionKeepaliveMessage
void MasterServer::MessageHandler::UserMessageType::_set_SessionKeepaliveMessage(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_SessionKeepaliveMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "SessionKeepaliveMessage", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/DedicatedServerMessageType
#include "MasterServer/MessageHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/DedicatedServerMessageType AuthenticateDedicatedServerRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_AuthenticateDedicatedServerRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_AuthenticateDedicatedServerRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "AuthenticateDedicatedServerRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/DedicatedServerMessageType AuthenticateDedicatedServerRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_AuthenticateDedicatedServerRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_AuthenticateDedicatedServerRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "AuthenticateDedicatedServerRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/DedicatedServerMessageType AuthenticateDedicatedServerResponse
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_AuthenticateDedicatedServerResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_AuthenticateDedicatedServerResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "AuthenticateDedicatedServerResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/DedicatedServerMessageType AuthenticateDedicatedServerResponse
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_AuthenticateDedicatedServerResponse(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_AuthenticateDedicatedServerResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "AuthenticateDedicatedServerResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/DedicatedServerMessageType GetAvailableRelayServerRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_GetAvailableRelayServerRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_GetAvailableRelayServerRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "GetAvailableRelayServerRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/DedicatedServerMessageType GetAvailableRelayServerRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_GetAvailableRelayServerRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_GetAvailableRelayServerRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "GetAvailableRelayServerRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/DedicatedServerMessageType GetAvailableRelayServerResponse
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_GetAvailableRelayServerResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_GetAvailableRelayServerResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "GetAvailableRelayServerResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/DedicatedServerMessageType GetAvailableRelayServerResponse
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_GetAvailableRelayServerResponse(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_GetAvailableRelayServerResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "GetAvailableRelayServerResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/DedicatedServerMessageType GetAvailableMatchmakingServerRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_GetAvailableMatchmakingServerRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_GetAvailableMatchmakingServerRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "GetAvailableMatchmakingServerRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/DedicatedServerMessageType GetAvailableMatchmakingServerRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_GetAvailableMatchmakingServerRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_GetAvailableMatchmakingServerRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "GetAvailableMatchmakingServerRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/DedicatedServerMessageType GetAvailableMatchmakingServerResponse
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_GetAvailableMatchmakingServerResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_GetAvailableMatchmakingServerResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "GetAvailableMatchmakingServerResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/DedicatedServerMessageType GetAvailableMatchmakingServerResponse
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_GetAvailableMatchmakingServerResponse(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_GetAvailableMatchmakingServerResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "GetAvailableMatchmakingServerResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/DedicatedServerMessageType DedicatedServerUnavailableRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerUnavailableRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerUnavailableRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerUnavailableRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/DedicatedServerMessageType DedicatedServerUnavailableRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerUnavailableRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerUnavailableRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerUnavailableRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/DedicatedServerMessageType DedicatedServerHeartbeatRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerHeartbeatRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerHeartbeatRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerHeartbeatRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/DedicatedServerMessageType DedicatedServerHeartbeatRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerHeartbeatRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerHeartbeatRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerHeartbeatRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/DedicatedServerMessageType DedicatedServerHeartbeatResponse
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerHeartbeatResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerHeartbeatResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerHeartbeatResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/DedicatedServerMessageType DedicatedServerHeartbeatResponse
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerHeartbeatResponse(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerHeartbeatResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerHeartbeatResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/DedicatedServerMessageType RelayServerStatusUpdateRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_RelayServerStatusUpdateRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_RelayServerStatusUpdateRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "RelayServerStatusUpdateRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/DedicatedServerMessageType RelayServerStatusUpdateRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_RelayServerStatusUpdateRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_RelayServerStatusUpdateRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "RelayServerStatusUpdateRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/DedicatedServerMessageType MatchmakingServerStatusUpdateRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_MatchmakingServerStatusUpdateRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_MatchmakingServerStatusUpdateRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "MatchmakingServerStatusUpdateRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/DedicatedServerMessageType MatchmakingServerStatusUpdateRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_MatchmakingServerStatusUpdateRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_MatchmakingServerStatusUpdateRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "MatchmakingServerStatusUpdateRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/DedicatedServerMessageType DedicatedServerShutDownRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerShutDownRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerShutDownRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerShutDownRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/DedicatedServerMessageType DedicatedServerShutDownRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerShutDownRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerShutDownRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerShutDownRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/DedicatedServerMessageType DedicatedServerPrepareForConnectionRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerPrepareForConnectionRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerPrepareForConnectionRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerPrepareForConnectionRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/DedicatedServerMessageType DedicatedServerPrepareForConnectionRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerPrepareForConnectionRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerPrepareForConnectionRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerPrepareForConnectionRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/DedicatedServerMessageType MessageReceivedAcknowledge
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_MessageReceivedAcknowledge() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_MessageReceivedAcknowledge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "MessageReceivedAcknowledge"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/DedicatedServerMessageType MessageReceivedAcknowledge
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_MessageReceivedAcknowledge(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_MessageReceivedAcknowledge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "MessageReceivedAcknowledge", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/DedicatedServerMessageType MultipartMessage
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_MultipartMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_MultipartMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "MultipartMessage"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/DedicatedServerMessageType MultipartMessage
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_MultipartMessage(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_MultipartMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "MultipartMessage", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/<SendMessageWithRetry>d__95
#include "MasterServer/MessageHandler_-SendMessageWithRetry-d__95.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.MessageHandler/<SendMessageWithRetry>d__95.MoveNext
void MasterServer::MessageHandler::$SendMessageWithRetry$d__95::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__95::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/<SendMessageWithRetry>d__95.SetStateMachine
void MasterServer::MessageHandler::$SendMessageWithRetry$d__95::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__95::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/<>c__DisplayClass97_0
#include "MasterServer/MessageHandler_--c__DisplayClass97_0.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.MessageHandler/<>c__DisplayClass97_0.<SendMultipartMessageWithRetryAsync>b__0
System::Threading::Tasks::Task* MasterServer::MessageHandler::$$c__DisplayClass97_0::$SendMultipartMessageWithRetryAsync$b__0(MasterServer::IMasterServerReliableRequest* mm) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$$c__DisplayClass97_0::<SendMultipartMessageWithRetryAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SendMultipartMessageWithRetryAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mm)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, mm);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler/<SendMultipartMessageWithRetryAsync>d__97
#include "MasterServer/MessageHandler_-SendMultipartMessageWithRetryAsync-d__97.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: System.Func`5
#include "System/Func_5.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: MasterServer.MessageHandler/<>c__DisplayClass97_0
#include "MasterServer/MessageHandler_--c__DisplayClass97_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.MessageHandler/<SendMultipartMessageWithRetryAsync>d__97.MoveNext
void MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__97::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__97::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/<SendMultipartMessageWithRetryAsync>d__97.SetStateMachine
void MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__97::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__97::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler/<SendMessageWithRetryAsyncInternal>d__98
#include "MasterServer/MessageHandler_-SendMessageWithRetryAsyncInternal-d__98.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: System.Func`5
#include "System/Func_5.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: MasterServer.MessageHandler/SentRequestWaiter
#include "MasterServer/MessageHandler_SentRequestWaiter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.MessageHandler/<SendMessageWithRetryAsyncInternal>d__98.MoveNext
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__98::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__98::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/<SendMessageWithRetryAsyncInternal>d__98.SetStateMachine
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__98::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__98::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.UserMessageHandler
#include "MasterServer/UserMessageHandler.hpp"
// Including type: MasterServer.UserMessageHandler/ConnectToClientDelegate
#include "MasterServer/UserMessageHandler_ConnectToClientDelegate.hpp"
// Including type: MasterServer.UserMessageHandler/ConnectToServerDelegate
#include "MasterServer/UserMessageHandler_ConnectToServerDelegate.hpp"
// Including type: MasterServer.UserMessageHandler/<GetAuthenticationRequest>d__28
#include "MasterServer/UserMessageHandler_-GetAuthenticationRequest-d__28.hpp"
// Including type: MasterServer.UserMessageHandler/<HandlePrepareForConnectionRequest>d__30
#include "MasterServer/UserMessageHandler_-HandlePrepareForConnectionRequest-d__30.hpp"
// Including type: MasterServer.UserMessageHandler/<>c__DisplayClass34_0
#include "MasterServer/UserMessageHandler_--c__DisplayClass34_0.hpp"
// Including type: MasterServer.UserMessageHandler/<>c__DisplayClass38_0
#include "MasterServer/UserMessageHandler_--c__DisplayClass38_0.hpp"
// Including type: MasterServer.UserMessageHandler/<>c__DisplayClass39_0
#include "MasterServer/UserMessageHandler_--c__DisplayClass39_0.hpp"
// Including type: MasterServer.UserMessageHandler/<WithFailureHandler>d__40
#include "MasterServer/UserMessageHandler_-WithFailureHandler-d__40.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: IAuthenticationTokenProvider
#include "GlobalNamespace/IAuthenticationTokenProvider.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
// Including type: PacketEncryptionLayer
#include "GlobalNamespace/PacketEncryptionLayer.hpp"
// Including type: MasterServerEndPoint
#include "GlobalNamespace/MasterServerEndPoint.hpp"
// Including type: DiscoveryPolicy
#include "GlobalNamespace/DiscoveryPolicy.hpp"
// Including type: InvitePolicy
#include "GlobalNamespace/InvitePolicy.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: MasterServer.BaseConnectToServerRequest
#include "MasterServer/BaseConnectToServerRequest.hpp"
// Including type: GameplayServerFilter
#include "GlobalNamespace/GameplayServerFilter.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: MasterServer.IUserMessage
#include "MasterServer/IUserMessage.hpp"
// Including type: MasterServer.IMasterServerAuthenticateRequest
#include "MasterServer/IMasterServerAuthenticateRequest.hpp"
// Including type: MasterServer.BroadcastServerHeartbeatResponse
#include "MasterServer/BroadcastServerHeartbeatResponse.hpp"
// Including type: MasterServer.PrepareForConnectionRequest
#include "MasterServer/PrepareForConnectionRequest.hpp"
// Including type: MasterServer.MessageHandler/IMessageSender
#include "MasterServer/MessageHandler_IMessageSender.hpp"
// Including type: MasterServer.MessageHandler/MessageOrigin
#include "MasterServer/MessageHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 kHeartbeatRequestInterval
int64_t MasterServer::UserMessageHandler::_get_kHeartbeatRequestInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get_kHeartbeatRequestInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "UserMessageHandler", "kHeartbeatRequestInterval"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kHeartbeatRequestInterval
void MasterServer::UserMessageHandler::_set_kHeartbeatRequestInterval(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set_kHeartbeatRequestInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "UserMessageHandler", "kHeartbeatRequestInterval", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kHeartbeatResponseTimeout
int64_t MasterServer::UserMessageHandler::_get_kHeartbeatResponseTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get_kHeartbeatResponseTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "UserMessageHandler", "kHeartbeatResponseTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kHeartbeatResponseTimeout
void MasterServer::UserMessageHandler::_set_kHeartbeatResponseTimeout(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set_kHeartbeatResponseTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "UserMessageHandler", "kHeartbeatResponseTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kKeepaliveRequestInterval
int64_t MasterServer::UserMessageHandler::_get_kKeepaliveRequestInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get_kKeepaliveRequestInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "UserMessageHandler", "kKeepaliveRequestInterval"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kKeepaliveRequestInterval
void MasterServer::UserMessageHandler::_set_kKeepaliveRequestInterval(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set_kKeepaliveRequestInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "UserMessageHandler", "kKeepaliveRequestInterval", value));
}
// Autogenerated method: MasterServer.UserMessageHandler.add_connectToClientEvent
void MasterServer::UserMessageHandler::add_connectToClientEvent(MasterServer::UserMessageHandler::ConnectToClientDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::add_connectToClientEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectToClientEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.UserMessageHandler.remove_connectToClientEvent
void MasterServer::UserMessageHandler::remove_connectToClientEvent(MasterServer::UserMessageHandler::ConnectToClientDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::remove_connectToClientEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectToClientEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.UserMessageHandler.add_broadcastingStoppedEvent
void MasterServer::UserMessageHandler::add_broadcastingStoppedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::add_broadcastingStoppedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_broadcastingStoppedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.UserMessageHandler.remove_broadcastingStoppedEvent
void MasterServer::UserMessageHandler::remove_broadcastingStoppedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::remove_broadcastingStoppedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_broadcastingStoppedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.UserMessageHandler.get_authenticationTokenProvider
GlobalNamespace::IAuthenticationTokenProvider* MasterServer::UserMessageHandler::get_authenticationTokenProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::get_authenticationTokenProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_authenticationTokenProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IAuthenticationTokenProvider*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler.UpdateServerHeartbeat
void MasterServer::UserMessageHandler::UpdateServerHeartbeat() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::UpdateServerHeartbeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateServerHeartbeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler.UpdateKeepalive
void MasterServer::UserMessageHandler::UpdateKeepalive() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::UpdateKeepalive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateKeepalive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler.SetCurrentPlayerCount
void MasterServer::UserMessageHandler::SetCurrentPlayerCount(int currentPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::SetCurrentPlayerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCurrentPlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPlayerCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, currentPlayerCount);
}
// Autogenerated method: MasterServer.UserMessageHandler.StartBroadcastingServer
void MasterServer::UserMessageHandler::StartBroadcastingServer(::Il2CppString* serverName, ::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret, ::Il2CppString* password, int currentPlayerCount, int maxPlayerCount, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, GlobalNamespace::GameplayServerConfiguration configuration, System::Action_2<System::Net::IPEndPoint*, ::Il2CppString*>* onSuccess, System::Action_1<GlobalNamespace::ConnectionFailedReason>* onBroadcastFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::StartBroadcastingServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartBroadcastingServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverName), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(currentPlayerCount), ::il2cpp_utils::ExtractType(maxPlayerCount), ::il2cpp_utils::ExtractType(discoveryPolicy), ::il2cpp_utils::ExtractType(invitePolicy), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onBroadcastFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverName, userId, userName, secret, password, currentPlayerCount, maxPlayerCount, discoveryPolicy, invitePolicy, configuration, onSuccess, onBroadcastFailed, cancellationToken);
}
// Autogenerated method: MasterServer.UserMessageHandler.StopBroadcastingServer
void MasterServer::UserMessageHandler::StopBroadcastingServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::StopBroadcastingServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopBroadcastingServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler.ConnectToServer
void MasterServer::UserMessageHandler::ConnectToServer(::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret, ::Il2CppString* code, ::Il2CppString* password, bool useRelay, MasterServer::UserMessageHandler::ConnectToServerDelegate* onSuccess, System::Action_1<GlobalNamespace::ConnectionFailedReason>* onConnectionFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::ConnectToServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(useRelay), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onConnectionFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, userName, secret, code, password, useRelay, onSuccess, onConnectionFailed, cancellationToken);
}
// Autogenerated method: MasterServer.UserMessageHandler.ConnectToMatchmaking
void MasterServer::UserMessageHandler::ConnectToMatchmaking(::Il2CppString* userId, ::Il2CppString* userName, GlobalNamespace::GameplayServerConfiguration configuration, ::Il2CppString* secret, MasterServer::UserMessageHandler::ConnectToServerDelegate* onSuccess, System::Action_1<GlobalNamespace::ConnectionFailedReason>* onConnectionFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::ConnectToMatchmaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToMatchmaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onConnectionFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, userName, configuration, secret, onSuccess, onConnectionFailed, cancellationToken);
}
// Autogenerated method: MasterServer.UserMessageHandler.SendConnectToServerRequest
void MasterServer::UserMessageHandler::SendConnectToServerRequest(MasterServer::BaseConnectToServerRequest* request, MasterServer::UserMessageHandler::ConnectToServerDelegate* onSuccess, System::Action_1<GlobalNamespace::ConnectionFailedReason>* onConnectionFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::SendConnectToServerRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendConnectToServerRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onConnectionFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, request, onSuccess, onConnectionFailed, cancellationToken);
}
// Autogenerated method: MasterServer.UserMessageHandler.GetPublicServers
void MasterServer::UserMessageHandler::GetPublicServers(::Il2CppString* userId, ::Il2CppString* userName, int offset, int count, GlobalNamespace::GameplayServerFilter filter, System::Action_1<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PublicServerInfo>*>* onSuccess, System::Action_1<GlobalNamespace::ConnectionFailedReason>* onFailure, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::GetPublicServers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPublicServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure), ::il2cpp_utils::ExtractType(cancellationToken)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, userName, offset, count, filter, onSuccess, onFailure, cancellationToken);
}
// Autogenerated method: MasterServer.UserMessageHandler.WithFailureHandler
void MasterServer::UserMessageHandler::WithFailureHandler(System::Action_1<GlobalNamespace::ConnectionFailedReason>* onFailure, System::Func_1<System::Threading::Tasks::Task*>* performTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::WithFailureHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithFailureHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFailure), ::il2cpp_utils::ExtractType(performTask)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, onFailure, performTask);
}
// Autogenerated method: MasterServer.UserMessageHandler.GetServerRandom
::Array<uint8_t>* MasterServer::UserMessageHandler::GetServerRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::GetServerRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServerRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler.GetServerKeys
System::Threading::Tasks::Task_1<GlobalNamespace::IDiffieHellmanKeyPair*>* MasterServer::UserMessageHandler::GetServerKeys(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::GetServerKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServerKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::IDiffieHellmanKeyPair*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: MasterServer.UserMessageHandler.ValidateCertificateChainInternal
void MasterServer::UserMessageHandler::ValidateCertificateChainInternal(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::Array<::Array<uint8_t>*>* certificateChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::ValidateCertificateChainInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificateChainInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(certificateChain)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, certificate, certificateChain);
}
// Autogenerated method: MasterServer.UserMessageHandler.PollUpdate
void MasterServer::UserMessageHandler::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler.ShouldHandleUserMessage
bool MasterServer::UserMessageHandler::ShouldHandleUserMessage(MasterServer::IUserMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::ShouldHandleUserMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleUserMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.UserMessageHandler.GetAuthenticationRequest
System::Threading::Tasks::Task_1<MasterServer::IMasterServerAuthenticateRequest*>* MasterServer::UserMessageHandler::GetAuthenticationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::GetAuthenticationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAuthenticationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::IMasterServerAuthenticateRequest*>*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler.HandleBroadcastServerHeartbeatResponse
void MasterServer::UserMessageHandler::HandleBroadcastServerHeartbeatResponse(MasterServer::BroadcastServerHeartbeatResponse* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::HandleBroadcastServerHeartbeatResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBroadcastServerHeartbeatResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.UserMessageHandler.HandlePrepareForConnectionRequest
void MasterServer::UserMessageHandler::HandlePrepareForConnectionRequest(MasterServer::PrepareForConnectionRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::HandlePrepareForConnectionRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePrepareForConnectionRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.UserMessageHandler.ValidateCertificateChain
void MasterServer::UserMessageHandler::ValidateCertificateChain(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::Array<::Array<uint8_t>*>* certificateChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::ValidateCertificateChain");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificateChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(certificateChain)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, certificate, certificateChain);
}
// Autogenerated method: MasterServer.UserMessageHandler.HandshakeLog
void MasterServer::UserMessageHandler::HandshakeLog(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::HandshakeLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandshakeLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.UserMessageHandler/ConnectToClientDelegate
#include "MasterServer/UserMessageHandler_ConnectToClientDelegate.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.UserMessageHandler/ConnectToClientDelegate.Invoke
void MasterServer::UserMessageHandler::ConnectToClientDelegate::Invoke(::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* myRandom, ::Array<uint8_t>* remoteRandom, bool isConnectionOwner, bool isDedicatedServer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::ConnectToClientDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(myRandom), ::il2cpp_utils::ExtractType(remoteRandom), ::il2cpp_utils::ExtractType(isConnectionOwner), ::il2cpp_utils::ExtractType(isDedicatedServer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, userName, remoteEndPoint, preMasterSecret, myRandom, remoteRandom, isConnectionOwner, isDedicatedServer);
}
// Autogenerated method: MasterServer.UserMessageHandler/ConnectToClientDelegate.BeginInvoke
System::IAsyncResult* MasterServer::UserMessageHandler::ConnectToClientDelegate::BeginInvoke(::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* myRandom, ::Array<uint8_t>* remoteRandom, bool isConnectionOwner, bool isDedicatedServer, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::ConnectToClientDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(myRandom), ::il2cpp_utils::ExtractType(remoteRandom), ::il2cpp_utils::ExtractType(isConnectionOwner), ::il2cpp_utils::ExtractType(isDedicatedServer), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, userId, userName, remoteEndPoint, preMasterSecret, myRandom, remoteRandom, isConnectionOwner, isDedicatedServer, callback, object);
}
// Autogenerated method: MasterServer.UserMessageHandler/ConnectToClientDelegate.EndInvoke
void MasterServer::UserMessageHandler::ConnectToClientDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::ConnectToClientDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.UserMessageHandler/ConnectToServerDelegate
#include "MasterServer/UserMessageHandler_ConnectToServerDelegate.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: DiscoveryPolicy
#include "GlobalNamespace/DiscoveryPolicy.hpp"
// Including type: InvitePolicy
#include "GlobalNamespace/InvitePolicy.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.UserMessageHandler/ConnectToServerDelegate.Invoke
void MasterServer::UserMessageHandler::ConnectToServerDelegate::Invoke(::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* remoteEndPoint, ::Il2CppString* secret, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, int maxPlayerCount, GlobalNamespace::GameplayServerConfiguration configuration, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* myRandom, ::Array<uint8_t>* remoteRandom, bool isConnectionOwner, bool isDedicatedServer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::ConnectToServerDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(discoveryPolicy), ::il2cpp_utils::ExtractType(invitePolicy), ::il2cpp_utils::ExtractType(maxPlayerCount), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(myRandom), ::il2cpp_utils::ExtractType(remoteRandom), ::il2cpp_utils::ExtractType(isConnectionOwner), ::il2cpp_utils::ExtractType(isDedicatedServer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, userName, remoteEndPoint, secret, discoveryPolicy, invitePolicy, maxPlayerCount, configuration, preMasterSecret, myRandom, remoteRandom, isConnectionOwner, isDedicatedServer);
}
// Autogenerated method: MasterServer.UserMessageHandler/ConnectToServerDelegate.BeginInvoke
System::IAsyncResult* MasterServer::UserMessageHandler::ConnectToServerDelegate::BeginInvoke(::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* remoteEndPoint, ::Il2CppString* secret, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, int maxPlayerCount, GlobalNamespace::GameplayServerConfiguration configuration, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* myRandom, ::Array<uint8_t>* remoteRandom, bool isConnectionOwner, bool isDedicatedServer, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::ConnectToServerDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(discoveryPolicy), ::il2cpp_utils::ExtractType(invitePolicy), ::il2cpp_utils::ExtractType(maxPlayerCount), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(myRandom), ::il2cpp_utils::ExtractType(remoteRandom), ::il2cpp_utils::ExtractType(isConnectionOwner), ::il2cpp_utils::ExtractType(isDedicatedServer), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, userId, userName, remoteEndPoint, secret, discoveryPolicy, invitePolicy, maxPlayerCount, configuration, preMasterSecret, myRandom, remoteRandom, isConnectionOwner, isDedicatedServer, callback, object);
}
// Autogenerated method: MasterServer.UserMessageHandler/ConnectToServerDelegate.EndInvoke
void MasterServer::UserMessageHandler::ConnectToServerDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::ConnectToServerDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMessageHandler/<GetAuthenticationRequest>d__28
#include "MasterServer/UserMessageHandler_-GetAuthenticationRequest-d__28.hpp"
// Including type: MasterServer.IMasterServerAuthenticateRequest
#include "MasterServer/IMasterServerAuthenticateRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.UserMessageHandler/<GetAuthenticationRequest>d__28.MoveNext
void MasterServer::UserMessageHandler::$GetAuthenticationRequest$d__28::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$GetAuthenticationRequest$d__28::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler/<GetAuthenticationRequest>d__28.SetStateMachine
void MasterServer::UserMessageHandler::$GetAuthenticationRequest$d__28::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$GetAuthenticationRequest$d__28::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.UserMessageHandler/<HandlePrepareForConnectionRequest>d__30
#include "MasterServer/UserMessageHandler_-HandlePrepareForConnectionRequest-d__30.hpp"
// Including type: MasterServer.PrepareForConnectionRequest
#include "MasterServer/PrepareForConnectionRequest.hpp"
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.UserMessageHandler/<HandlePrepareForConnectionRequest>d__30.MoveNext
void MasterServer::UserMessageHandler::$HandlePrepareForConnectionRequest$d__30::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$HandlePrepareForConnectionRequest$d__30::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler/<HandlePrepareForConnectionRequest>d__30.SetStateMachine
void MasterServer::UserMessageHandler::$HandlePrepareForConnectionRequest$d__30::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$HandlePrepareForConnectionRequest$d__30::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.UserMessageHandler/<>c__DisplayClass34_0
#include "MasterServer/UserMessageHandler_--c__DisplayClass34_0.hpp"
// Including type: MasterServer.UserMessageHandler/<>c__DisplayClass34_0/<<StartBroadcastingServer>b__1>d
#include "MasterServer/UserMessageHandler_--c__DisplayClass34_0_--StartBroadcastingServer-b__1-d.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.UserMessageHandler/<>c__DisplayClass34_0.<StartBroadcastingServer>b__0
void MasterServer::UserMessageHandler::$$c__DisplayClass34_0::$StartBroadcastingServer$b__0(GlobalNamespace::ConnectionFailedReason result) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass34_0::<StartBroadcastingServer>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartBroadcastingServer>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: MasterServer.UserMessageHandler/<>c__DisplayClass34_0.<StartBroadcastingServer>b__1
System::Threading::Tasks::Task* MasterServer::UserMessageHandler::$$c__DisplayClass34_0::$StartBroadcastingServer$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass34_0::<StartBroadcastingServer>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartBroadcastingServer>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.UserMessageHandler/<>c__DisplayClass34_0/<<StartBroadcastingServer>b__1>d
#include "MasterServer/UserMessageHandler_--c__DisplayClass34_0_--StartBroadcastingServer-b__1-d.hpp"
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
// Including type: MasterServer.BroadcastServerStatusResponse
#include "MasterServer/BroadcastServerStatusResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.UserMessageHandler/<>c__DisplayClass34_0/<<StartBroadcastingServer>b__1>d.MoveNext
void MasterServer::UserMessageHandler::$$c__DisplayClass34_0::$$StartBroadcastingServer$b__1$d::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass34_0::$$StartBroadcastingServer$b__1$d::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler/<>c__DisplayClass34_0/<<StartBroadcastingServer>b__1>d.SetStateMachine
void MasterServer::UserMessageHandler::$$c__DisplayClass34_0::$$StartBroadcastingServer$b__1$d::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass34_0::$$StartBroadcastingServer$b__1$d::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMessageHandler/<>c__DisplayClass38_0
#include "MasterServer/UserMessageHandler_--c__DisplayClass38_0.hpp"
// Including type: MasterServer.UserMessageHandler/<>c__DisplayClass38_0/<<SendConnectToServerRequest>b__0>d
#include "MasterServer/UserMessageHandler_--c__DisplayClass38_0_--SendConnectToServerRequest-b__0-d.hpp"
// Including type: MasterServer.BaseConnectToServerRequest
#include "MasterServer/BaseConnectToServerRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: MasterServer.UserMessageHandler/ConnectToServerDelegate
#include "MasterServer/UserMessageHandler_ConnectToServerDelegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.UserMessageHandler/<>c__DisplayClass38_0.<SendConnectToServerRequest>b__0
System::Threading::Tasks::Task* MasterServer::UserMessageHandler::$$c__DisplayClass38_0::$SendConnectToServerRequest$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass38_0::<SendConnectToServerRequest>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SendConnectToServerRequest>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.UserMessageHandler/<>c__DisplayClass38_0/<<SendConnectToServerRequest>b__0>d
#include "MasterServer/UserMessageHandler_--c__DisplayClass38_0_--SendConnectToServerRequest-b__0-d.hpp"
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
// Including type: MasterServer.ConnectToServerResponse
#include "MasterServer/ConnectToServerResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.UserMessageHandler/<>c__DisplayClass38_0/<<SendConnectToServerRequest>b__0>d.MoveNext
void MasterServer::UserMessageHandler::$$c__DisplayClass38_0::$$SendConnectToServerRequest$b__0$d::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass38_0::$$SendConnectToServerRequest$b__0$d::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler/<>c__DisplayClass38_0/<<SendConnectToServerRequest>b__0>d.SetStateMachine
void MasterServer::UserMessageHandler::$$c__DisplayClass38_0::$$SendConnectToServerRequest$b__0$d::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass38_0::$$SendConnectToServerRequest$b__0$d::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.UserMessageHandler/<>c__DisplayClass39_0
#include "MasterServer/UserMessageHandler_--c__DisplayClass39_0.hpp"
// Including type: MasterServer.UserMessageHandler/<>c__DisplayClass39_0/<<GetPublicServers>b__0>d
#include "MasterServer/UserMessageHandler_--c__DisplayClass39_0_--GetPublicServers-b__0-d.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.UserMessageHandler/<>c__DisplayClass39_0.<GetPublicServers>b__0
System::Threading::Tasks::Task* MasterServer::UserMessageHandler::$$c__DisplayClass39_0::$GetPublicServers$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass39_0::<GetPublicServers>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetPublicServers>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMessageHandler/<>c__DisplayClass39_0/<<GetPublicServers>b__0>d
#include "MasterServer/UserMessageHandler_--c__DisplayClass39_0_--GetPublicServers-b__0-d.hpp"
// Including type: MasterServer.GetPublicServersResponse
#include "MasterServer/GetPublicServersResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.UserMessageHandler/<>c__DisplayClass39_0/<<GetPublicServers>b__0>d.MoveNext
void MasterServer::UserMessageHandler::$$c__DisplayClass39_0::$$GetPublicServers$b__0$d::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass39_0::$$GetPublicServers$b__0$d::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler/<>c__DisplayClass39_0/<<GetPublicServers>b__0>d.SetStateMachine
void MasterServer::UserMessageHandler::$$c__DisplayClass39_0::$$GetPublicServers$b__0$d::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass39_0::$$GetPublicServers$b__0$d::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMessageHandler/<WithFailureHandler>d__40
#include "MasterServer/UserMessageHandler_-WithFailureHandler-d__40.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.UserMessageHandler/<WithFailureHandler>d__40.MoveNext
void MasterServer::UserMessageHandler::$WithFailureHandler$d__40::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$WithFailureHandler$d__40::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler/<WithFailureHandler>d__40.SetStateMachine
void MasterServer::UserMessageHandler::$WithFailureHandler$d__40::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$WithFailureHandler$d__40::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.IUserClientToServerMessage
#include "MasterServer/IUserClientToServerMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IUserClientToServerMessage.get_userId
::Il2CppString* MasterServer::IUserClientToServerMessage::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IUserClientToServerMessage::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.IUserClientToServerMessage.get_userName
::Il2CppString* MasterServer::IUserClientToServerMessage::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IUserClientToServerMessage::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.AuthenticateUserRequest
#include "MasterServer/AuthenticateUserRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.AuthenticateUserRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::AuthenticateUserRequest*>* MasterServer::AuthenticateUserRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateUserRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "AuthenticateUserRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::AuthenticateUserRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateUserRequest.Init
MasterServer::AuthenticateUserRequest* MasterServer::AuthenticateUserRequest::Init(GlobalNamespace::AuthenticationToken authenticationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateUserRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(authenticationToken)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::AuthenticateUserRequest*, false>(this, ___internal__method, authenticationToken);
}
// Autogenerated method: MasterServer.AuthenticateUserRequest.Serialize
void MasterServer::AuthenticateUserRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateUserRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.AuthenticateUserRequest.Deserialize
void MasterServer::AuthenticateUserRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateUserRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.AuthenticateUserRequest.Release
void MasterServer::AuthenticateUserRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateUserRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.AuthenticateUserResponse
#include "MasterServer/AuthenticateUserResponse.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.AuthenticateUserResponse.get_pool
GlobalNamespace::PacketPool_1<MasterServer::AuthenticateUserResponse*>* MasterServer::AuthenticateUserResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateUserResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "AuthenticateUserResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::AuthenticateUserResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateUserResponse.get_isAuthenticated
bool MasterServer::AuthenticateUserResponse::get_isAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateUserResponse::get_isAuthenticated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateUserResponse.Init
MasterServer::AuthenticateUserResponse* MasterServer::AuthenticateUserResponse::Init(MasterServer::AuthenticateUserResponse::Result result) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateUserResponse::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::AuthenticateUserResponse*, false>(this, ___internal__method, result);
}
// Autogenerated method: MasterServer.AuthenticateUserResponse.get_resultCode
uint8_t MasterServer::AuthenticateUserResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateUserResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateUserResponse.get_resultCodeString
::Il2CppString* MasterServer::AuthenticateUserResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateUserResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateUserResponse.Serialize
void MasterServer::AuthenticateUserResponse::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateUserResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.AuthenticateUserResponse.Deserialize
void MasterServer::AuthenticateUserResponse::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateUserResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.AuthenticateUserResponse.Release
void MasterServer::AuthenticateUserResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateUserResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.AuthenticateUserResponse/Result
#include "MasterServer/AuthenticateUserResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.AuthenticateUserResponse/Result Success
MasterServer::AuthenticateUserResponse::Result MasterServer::AuthenticateUserResponse::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateUserResponse::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AuthenticateUserResponse::Result>("MasterServer", "AuthenticateUserResponse/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AuthenticateUserResponse/Result Success
void MasterServer::AuthenticateUserResponse::Result::_set_Success(MasterServer::AuthenticateUserResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateUserResponse::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AuthenticateUserResponse/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AuthenticateUserResponse/Result Failed
MasterServer::AuthenticateUserResponse::Result MasterServer::AuthenticateUserResponse::Result::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateUserResponse::Result::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AuthenticateUserResponse::Result>("MasterServer", "AuthenticateUserResponse/Result", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AuthenticateUserResponse/Result Failed
void MasterServer::AuthenticateUserResponse::Result::_set_Failed(MasterServer::AuthenticateUserResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateUserResponse::Result::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AuthenticateUserResponse/Result", "Failed", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AuthenticateUserResponse/Result UnknownError
MasterServer::AuthenticateUserResponse::Result MasterServer::AuthenticateUserResponse::Result::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateUserResponse::Result::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AuthenticateUserResponse::Result>("MasterServer", "AuthenticateUserResponse/Result", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AuthenticateUserResponse/Result UnknownError
void MasterServer::AuthenticateUserResponse::Result::_set_UnknownError(MasterServer::AuthenticateUserResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateUserResponse::Result::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AuthenticateUserResponse/Result", "UnknownError", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.BroadcastServerStatusRequest
#include "MasterServer/BroadcastServerStatusRequest.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.BroadcastServerStatusRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::BroadcastServerStatusRequest*>* MasterServer::BroadcastServerStatusRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "BroadcastServerStatusRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::BroadcastServerStatusRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.BroadcastServerStatusRequest.get_userId
::Il2CppString* MasterServer::BroadcastServerStatusRequest::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusRequest::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.BroadcastServerStatusRequest.set_userId
void MasterServer::BroadcastServerStatusRequest::set_userId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusRequest::set_userId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.BroadcastServerStatusRequest.get_userName
::Il2CppString* MasterServer::BroadcastServerStatusRequest::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusRequest::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.BroadcastServerStatusRequest.set_userName
void MasterServer::BroadcastServerStatusRequest::set_userName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusRequest::set_userName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.BroadcastServerStatusRequest.Init
MasterServer::BroadcastServerStatusRequest* MasterServer::BroadcastServerStatusRequest::Init(::Il2CppString* serverName, ::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret, ::Il2CppString* password, ::Array<uint8_t>* random, ::Array<uint8_t>* publicKey, int currentPlayerCount, int maxPlayerCount, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverName), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey), ::il2cpp_utils::ExtractType(currentPlayerCount), ::il2cpp_utils::ExtractType(maxPlayerCount), ::il2cpp_utils::ExtractType(discoveryPolicy), ::il2cpp_utils::ExtractType(invitePolicy), ::il2cpp_utils::ExtractType(configuration)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::BroadcastServerStatusRequest*, false>(this, ___internal__method, serverName, userId, userName, secret, password, random, publicKey, currentPlayerCount, maxPlayerCount, discoveryPolicy, invitePolicy, configuration);
}
// Autogenerated method: MasterServer.BroadcastServerStatusRequest.Serialize
void MasterServer::BroadcastServerStatusRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.BroadcastServerStatusRequest.Deserialize
void MasterServer::BroadcastServerStatusRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.BroadcastServerStatusRequest.Release
void MasterServer::BroadcastServerStatusRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.BroadcastServerStatusResponse
#include "MasterServer/BroadcastServerStatusResponse.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.BroadcastServerStatusResponse.get_pool
GlobalNamespace::PacketPool_1<MasterServer::BroadcastServerStatusResponse*>* MasterServer::BroadcastServerStatusResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "BroadcastServerStatusResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::BroadcastServerStatusResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.BroadcastServerStatusResponse.InitForFailure
MasterServer::BroadcastServerStatusResponse* MasterServer::BroadcastServerStatusResponse::InitForFailure(MasterServer::BroadcastServerStatusResponse::Result result) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusResponse::InitForFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::BroadcastServerStatusResponse*, false>(this, ___internal__method, result);
}
// Autogenerated method: MasterServer.BroadcastServerStatusResponse.InitForSuccess
MasterServer::BroadcastServerStatusResponse* MasterServer::BroadcastServerStatusResponse::InitForSuccess(System::Net::IPEndPoint* remoteEndPoint, ::Il2CppString* code) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusResponse::InitForSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::BroadcastServerStatusResponse*, false>(this, ___internal__method, remoteEndPoint, code);
}
// Autogenerated method: MasterServer.BroadcastServerStatusResponse.get_resultCode
uint8_t MasterServer::BroadcastServerStatusResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.BroadcastServerStatusResponse.get_resultCodeString
::Il2CppString* MasterServer::BroadcastServerStatusResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.BroadcastServerStatusResponse.Serialize
void MasterServer::BroadcastServerStatusResponse::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.BroadcastServerStatusResponse.Deserialize
void MasterServer::BroadcastServerStatusResponse::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.BroadcastServerStatusResponse.Release
void MasterServer::BroadcastServerStatusResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.BroadcastServerStatusResponse/Result
#include "MasterServer/BroadcastServerStatusResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.BroadcastServerStatusResponse/Result Success
MasterServer::BroadcastServerStatusResponse::Result MasterServer::BroadcastServerStatusResponse::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusResponse::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::BroadcastServerStatusResponse::Result>("MasterServer", "BroadcastServerStatusResponse/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.BroadcastServerStatusResponse/Result Success
void MasterServer::BroadcastServerStatusResponse::Result::_set_Success(MasterServer::BroadcastServerStatusResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusResponse::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "BroadcastServerStatusResponse/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.BroadcastServerStatusResponse/Result SecretNotUnique
MasterServer::BroadcastServerStatusResponse::Result MasterServer::BroadcastServerStatusResponse::Result::_get_SecretNotUnique() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusResponse::Result::_get_SecretNotUnique");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::BroadcastServerStatusResponse::Result>("MasterServer", "BroadcastServerStatusResponse/Result", "SecretNotUnique"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.BroadcastServerStatusResponse/Result SecretNotUnique
void MasterServer::BroadcastServerStatusResponse::Result::_set_SecretNotUnique(MasterServer::BroadcastServerStatusResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusResponse::Result::_set_SecretNotUnique");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "BroadcastServerStatusResponse/Result", "SecretNotUnique", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.BroadcastServerStatusResponse/Result UnknownError
MasterServer::BroadcastServerStatusResponse::Result MasterServer::BroadcastServerStatusResponse::Result::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusResponse::Result::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::BroadcastServerStatusResponse::Result>("MasterServer", "BroadcastServerStatusResponse/Result", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.BroadcastServerStatusResponse/Result UnknownError
void MasterServer::BroadcastServerStatusResponse::Result::_set_UnknownError(MasterServer::BroadcastServerStatusResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerStatusResponse::Result::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "BroadcastServerStatusResponse/Result", "UnknownError", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.BroadcastServerHeartbeatRequest
#include "MasterServer/BroadcastServerHeartbeatRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.BroadcastServerHeartbeatRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::BroadcastServerHeartbeatRequest*>* MasterServer::BroadcastServerHeartbeatRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "BroadcastServerHeartbeatRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::BroadcastServerHeartbeatRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.BroadcastServerHeartbeatRequest.get_userId
::Il2CppString* MasterServer::BroadcastServerHeartbeatRequest::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatRequest::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.BroadcastServerHeartbeatRequest.set_userId
void MasterServer::BroadcastServerHeartbeatRequest::set_userId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatRequest::set_userId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.BroadcastServerHeartbeatRequest.get_userName
::Il2CppString* MasterServer::BroadcastServerHeartbeatRequest::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatRequest::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.BroadcastServerHeartbeatRequest.set_userName
void MasterServer::BroadcastServerHeartbeatRequest::set_userName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatRequest::set_userName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.BroadcastServerHeartbeatRequest.Init
MasterServer::BroadcastServerHeartbeatRequest* MasterServer::BroadcastServerHeartbeatRequest::Init(::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret, int currentPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(currentPlayerCount)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::BroadcastServerHeartbeatRequest*, false>(this, ___internal__method, userId, userName, secret, currentPlayerCount);
}
// Autogenerated method: MasterServer.BroadcastServerHeartbeatRequest.Serialize
void MasterServer::BroadcastServerHeartbeatRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.BroadcastServerHeartbeatRequest.Deserialize
void MasterServer::BroadcastServerHeartbeatRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.BroadcastServerHeartbeatRequest.Release
void MasterServer::BroadcastServerHeartbeatRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.BroadcastServerHeartbeatResponse
#include "MasterServer/BroadcastServerHeartbeatResponse.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.BroadcastServerHeartbeatResponse.get_pool
GlobalNamespace::PacketPool_1<MasterServer::BroadcastServerHeartbeatResponse*>* MasterServer::BroadcastServerHeartbeatResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "BroadcastServerHeartbeatResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::BroadcastServerHeartbeatResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.BroadcastServerHeartbeatResponse.Init
MasterServer::BroadcastServerHeartbeatResponse* MasterServer::BroadcastServerHeartbeatResponse::Init(MasterServer::BroadcastServerHeartbeatResponse::Result result) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatResponse::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::BroadcastServerHeartbeatResponse*, false>(this, ___internal__method, result);
}
// Autogenerated method: MasterServer.BroadcastServerHeartbeatResponse.Serialize
void MasterServer::BroadcastServerHeartbeatResponse::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.BroadcastServerHeartbeatResponse.Deserialize
void MasterServer::BroadcastServerHeartbeatResponse::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.BroadcastServerHeartbeatResponse.Release
void MasterServer::BroadcastServerHeartbeatResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.BroadcastServerHeartbeatResponse/Result
#include "MasterServer/BroadcastServerHeartbeatResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.BroadcastServerHeartbeatResponse/Result Success
MasterServer::BroadcastServerHeartbeatResponse::Result MasterServer::BroadcastServerHeartbeatResponse::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatResponse::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::BroadcastServerHeartbeatResponse::Result>("MasterServer", "BroadcastServerHeartbeatResponse/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.BroadcastServerHeartbeatResponse/Result Success
void MasterServer::BroadcastServerHeartbeatResponse::Result::_set_Success(MasterServer::BroadcastServerHeartbeatResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatResponse::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "BroadcastServerHeartbeatResponse/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.BroadcastServerHeartbeatResponse/Result ServerDoesNotExist
MasterServer::BroadcastServerHeartbeatResponse::Result MasterServer::BroadcastServerHeartbeatResponse::Result::_get_ServerDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatResponse::Result::_get_ServerDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::BroadcastServerHeartbeatResponse::Result>("MasterServer", "BroadcastServerHeartbeatResponse/Result", "ServerDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.BroadcastServerHeartbeatResponse/Result ServerDoesNotExist
void MasterServer::BroadcastServerHeartbeatResponse::Result::_set_ServerDoesNotExist(MasterServer::BroadcastServerHeartbeatResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatResponse::Result::_set_ServerDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "BroadcastServerHeartbeatResponse/Result", "ServerDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.BroadcastServerHeartbeatResponse/Result UnknownError
MasterServer::BroadcastServerHeartbeatResponse::Result MasterServer::BroadcastServerHeartbeatResponse::Result::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatResponse::Result::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::BroadcastServerHeartbeatResponse::Result>("MasterServer", "BroadcastServerHeartbeatResponse/Result", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.BroadcastServerHeartbeatResponse/Result UnknownError
void MasterServer::BroadcastServerHeartbeatResponse::Result::_set_UnknownError(MasterServer::BroadcastServerHeartbeatResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatResponse::Result::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "BroadcastServerHeartbeatResponse/Result", "UnknownError", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.BroadcastServerRemoveRequest
#include "MasterServer/BroadcastServerRemoveRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.BroadcastServerRemoveRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::BroadcastServerRemoveRequest*>* MasterServer::BroadcastServerRemoveRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerRemoveRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "BroadcastServerRemoveRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::BroadcastServerRemoveRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.BroadcastServerRemoveRequest.get_userId
::Il2CppString* MasterServer::BroadcastServerRemoveRequest::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerRemoveRequest::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.BroadcastServerRemoveRequest.set_userId
void MasterServer::BroadcastServerRemoveRequest::set_userId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerRemoveRequest::set_userId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.BroadcastServerRemoveRequest.get_userName
::Il2CppString* MasterServer::BroadcastServerRemoveRequest::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerRemoveRequest::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.BroadcastServerRemoveRequest.set_userName
void MasterServer::BroadcastServerRemoveRequest::set_userName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerRemoveRequest::set_userName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.BroadcastServerRemoveRequest.Init
MasterServer::BroadcastServerRemoveRequest* MasterServer::BroadcastServerRemoveRequest::Init(::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerRemoveRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::BroadcastServerRemoveRequest*, false>(this, ___internal__method, userId, userName, secret);
}
// Autogenerated method: MasterServer.BroadcastServerRemoveRequest.Serialize
void MasterServer::BroadcastServerRemoveRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerRemoveRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.BroadcastServerRemoveRequest.Deserialize
void MasterServer::BroadcastServerRemoveRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerRemoveRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.BroadcastServerRemoveRequest.Release
void MasterServer::BroadcastServerRemoveRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerRemoveRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.BaseConnectToServerRequest
#include "MasterServer/BaseConnectToServerRequest.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.BaseConnectToServerRequest.get_userId
::Il2CppString* MasterServer::BaseConnectToServerRequest::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseConnectToServerRequest::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.BaseConnectToServerRequest.set_userId
void MasterServer::BaseConnectToServerRequest::set_userId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseConnectToServerRequest::set_userId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.BaseConnectToServerRequest.get_userName
::Il2CppString* MasterServer::BaseConnectToServerRequest::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseConnectToServerRequest::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.BaseConnectToServerRequest.set_userName
void MasterServer::BaseConnectToServerRequest::set_userName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseConnectToServerRequest::set_userName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.BaseConnectToServerRequest.WithEncryptionParams
MasterServer::BaseConnectToServerRequest* MasterServer::BaseConnectToServerRequest::WithEncryptionParams(::Array<uint8_t>* random, ::Array<uint8_t>* publicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseConnectToServerRequest::WithEncryptionParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithEncryptionParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::BaseConnectToServerRequest*, false>(this, ___internal__method, random, publicKey);
}
// Autogenerated method: MasterServer.BaseConnectToServerRequest.Serialize
void MasterServer::BaseConnectToServerRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseConnectToServerRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.BaseConnectToServerRequest.Deserialize
void MasterServer::BaseConnectToServerRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseConnectToServerRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.BaseConnectToServerRequest.Release
void MasterServer::BaseConnectToServerRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseConnectToServerRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ConnectToServerRequest
#include "MasterServer/ConnectToServerRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.ConnectToServerRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ConnectToServerRequest*>* MasterServer::ConnectToServerRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ConnectToServerRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ConnectToServerRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ConnectToServerRequest.Init
MasterServer::ConnectToServerRequest* MasterServer::ConnectToServerRequest::Init(::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret, ::Il2CppString* code, ::Il2CppString* password, bool useRelay) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(useRelay)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ConnectToServerRequest*, false>(this, ___internal__method, userId, userName, secret, code, password, useRelay);
}
// Autogenerated method: MasterServer.ConnectToServerRequest.Serialize
void MasterServer::ConnectToServerRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.ConnectToServerRequest.Deserialize
void MasterServer::ConnectToServerRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.ConnectToServerRequest.Release
void MasterServer::ConnectToServerRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ConnectToServerResponse
#include "MasterServer/ConnectToServerResponse.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.ConnectToServerResponse.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ConnectToServerResponse*>* MasterServer::ConnectToServerResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ConnectToServerResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ConnectToServerResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ConnectToServerResponse.InitForFailure
MasterServer::ConnectToServerResponse* MasterServer::ConnectToServerResponse::InitForFailure(MasterServer::ConnectToServerResponse::Result result) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::InitForFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ConnectToServerResponse*, false>(this, ___internal__method, result);
}
// Autogenerated method: MasterServer.ConnectToServerResponse.InitForSuccess
MasterServer::ConnectToServerResponse* MasterServer::ConnectToServerResponse::InitForSuccess(::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, int maxPlayerCount, GlobalNamespace::GameplayServerConfiguration configuration, bool isConnectionOwner, bool isDedicatedServer, System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>* random, ::Array<uint8_t>* publicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::InitForSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(discoveryPolicy), ::il2cpp_utils::ExtractType(invitePolicy), ::il2cpp_utils::ExtractType(maxPlayerCount), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(isConnectionOwner), ::il2cpp_utils::ExtractType(isDedicatedServer), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ConnectToServerResponse*, false>(this, ___internal__method, userId, userName, secret, discoveryPolicy, invitePolicy, maxPlayerCount, configuration, isConnectionOwner, isDedicatedServer, remoteEndPoint, random, publicKey);
}
// Autogenerated method: MasterServer.ConnectToServerResponse.get_resultCode
uint8_t MasterServer::ConnectToServerResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.ConnectToServerResponse.get_resultCodeString
::Il2CppString* MasterServer::ConnectToServerResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.ConnectToServerResponse.Serialize
void MasterServer::ConnectToServerResponse::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.ConnectToServerResponse.Deserialize
void MasterServer::ConnectToServerResponse::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.ConnectToServerResponse.Release
void MasterServer::ConnectToServerResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.ConnectToServerResponse/Result
#include "MasterServer/ConnectToServerResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.ConnectToServerResponse/Result Success
MasterServer::ConnectToServerResponse::Result MasterServer::ConnectToServerResponse::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::ConnectToServerResponse::Result>("MasterServer", "ConnectToServerResponse/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.ConnectToServerResponse/Result Success
void MasterServer::ConnectToServerResponse::Result::_set_Success(MasterServer::ConnectToServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "ConnectToServerResponse/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.ConnectToServerResponse/Result InvalidSecret
MasterServer::ConnectToServerResponse::Result MasterServer::ConnectToServerResponse::Result::_get_InvalidSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Result::_get_InvalidSecret");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::ConnectToServerResponse::Result>("MasterServer", "ConnectToServerResponse/Result", "InvalidSecret"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.ConnectToServerResponse/Result InvalidSecret
void MasterServer::ConnectToServerResponse::Result::_set_InvalidSecret(MasterServer::ConnectToServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Result::_set_InvalidSecret");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "ConnectToServerResponse/Result", "InvalidSecret", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.ConnectToServerResponse/Result InvalidCode
MasterServer::ConnectToServerResponse::Result MasterServer::ConnectToServerResponse::Result::_get_InvalidCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Result::_get_InvalidCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::ConnectToServerResponse::Result>("MasterServer", "ConnectToServerResponse/Result", "InvalidCode"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.ConnectToServerResponse/Result InvalidCode
void MasterServer::ConnectToServerResponse::Result::_set_InvalidCode(MasterServer::ConnectToServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Result::_set_InvalidCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "ConnectToServerResponse/Result", "InvalidCode", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.ConnectToServerResponse/Result InvalidPassword
MasterServer::ConnectToServerResponse::Result MasterServer::ConnectToServerResponse::Result::_get_InvalidPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Result::_get_InvalidPassword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::ConnectToServerResponse::Result>("MasterServer", "ConnectToServerResponse/Result", "InvalidPassword"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.ConnectToServerResponse/Result InvalidPassword
void MasterServer::ConnectToServerResponse::Result::_set_InvalidPassword(MasterServer::ConnectToServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Result::_set_InvalidPassword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "ConnectToServerResponse/Result", "InvalidPassword", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.ConnectToServerResponse/Result ServerAtCapacity
MasterServer::ConnectToServerResponse::Result MasterServer::ConnectToServerResponse::Result::_get_ServerAtCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Result::_get_ServerAtCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::ConnectToServerResponse::Result>("MasterServer", "ConnectToServerResponse/Result", "ServerAtCapacity"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.ConnectToServerResponse/Result ServerAtCapacity
void MasterServer::ConnectToServerResponse::Result::_set_ServerAtCapacity(MasterServer::ConnectToServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Result::_set_ServerAtCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "ConnectToServerResponse/Result", "ServerAtCapacity", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.ConnectToServerResponse/Result NoAvailableDedicatedServers
MasterServer::ConnectToServerResponse::Result MasterServer::ConnectToServerResponse::Result::_get_NoAvailableDedicatedServers() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Result::_get_NoAvailableDedicatedServers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::ConnectToServerResponse::Result>("MasterServer", "ConnectToServerResponse/Result", "NoAvailableDedicatedServers"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.ConnectToServerResponse/Result NoAvailableDedicatedServers
void MasterServer::ConnectToServerResponse::Result::_set_NoAvailableDedicatedServers(MasterServer::ConnectToServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Result::_set_NoAvailableDedicatedServers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "ConnectToServerResponse/Result", "NoAvailableDedicatedServers", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.ConnectToServerResponse/Result VersionMismatch
MasterServer::ConnectToServerResponse::Result MasterServer::ConnectToServerResponse::Result::_get_VersionMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Result::_get_VersionMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::ConnectToServerResponse::Result>("MasterServer", "ConnectToServerResponse/Result", "VersionMismatch"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.ConnectToServerResponse/Result VersionMismatch
void MasterServer::ConnectToServerResponse::Result::_set_VersionMismatch(MasterServer::ConnectToServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Result::_set_VersionMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "ConnectToServerResponse/Result", "VersionMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.ConnectToServerResponse/Result ConfigMismatch
MasterServer::ConnectToServerResponse::Result MasterServer::ConnectToServerResponse::Result::_get_ConfigMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Result::_get_ConfigMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::ConnectToServerResponse::Result>("MasterServer", "ConnectToServerResponse/Result", "ConfigMismatch"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.ConnectToServerResponse/Result ConfigMismatch
void MasterServer::ConnectToServerResponse::Result::_set_ConfigMismatch(MasterServer::ConnectToServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Result::_set_ConfigMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "ConnectToServerResponse/Result", "ConfigMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.ConnectToServerResponse/Result UnknownError
MasterServer::ConnectToServerResponse::Result MasterServer::ConnectToServerResponse::Result::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Result::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::ConnectToServerResponse::Result>("MasterServer", "ConnectToServerResponse/Result", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.ConnectToServerResponse/Result UnknownError
void MasterServer::ConnectToServerResponse::Result::_set_UnknownError(MasterServer::ConnectToServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToServerResponse::Result::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "ConnectToServerResponse/Result", "UnknownError", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ConnectToMatchmakingRequest
#include "MasterServer/ConnectToMatchmakingRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.ConnectToMatchmakingRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ConnectToMatchmakingRequest*>* MasterServer::ConnectToMatchmakingRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToMatchmakingRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ConnectToMatchmakingRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ConnectToMatchmakingRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ConnectToMatchmakingRequest.Init
MasterServer::ConnectToMatchmakingRequest* MasterServer::ConnectToMatchmakingRequest::Init(::Il2CppString* userId, ::Il2CppString* userName, GlobalNamespace::GameplayServerConfiguration configuration, ::Il2CppString* secret) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToMatchmakingRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(secret)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ConnectToMatchmakingRequest*, false>(this, ___internal__method, userId, userName, configuration, secret);
}
// Autogenerated method: MasterServer.ConnectToMatchmakingRequest.Serialize
void MasterServer::ConnectToMatchmakingRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToMatchmakingRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.ConnectToMatchmakingRequest.Deserialize
void MasterServer::ConnectToMatchmakingRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToMatchmakingRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.ConnectToMatchmakingRequest.Release
void MasterServer::ConnectToMatchmakingRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ConnectToMatchmakingRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.PrepareForConnectionRequest
#include "MasterServer/PrepareForConnectionRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.PrepareForConnectionRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::PrepareForConnectionRequest*>* MasterServer::PrepareForConnectionRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::PrepareForConnectionRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "PrepareForConnectionRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::PrepareForConnectionRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.PrepareForConnectionRequest.Init
MasterServer::PrepareForConnectionRequest* MasterServer::PrepareForConnectionRequest::Init(::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>* random, ::Array<uint8_t>* publicKey, bool isConnectionOwner, bool isDedicatedServer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::PrepareForConnectionRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey), ::il2cpp_utils::ExtractType(isConnectionOwner), ::il2cpp_utils::ExtractType(isDedicatedServer)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::PrepareForConnectionRequest*, false>(this, ___internal__method, userId, userName, remoteEndPoint, random, publicKey, isConnectionOwner, isDedicatedServer);
}
// Autogenerated method: MasterServer.PrepareForConnectionRequest.Serialize
void MasterServer::PrepareForConnectionRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::PrepareForConnectionRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.PrepareForConnectionRequest.Deserialize
void MasterServer::PrepareForConnectionRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::PrepareForConnectionRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.PrepareForConnectionRequest.Release
void MasterServer::PrepareForConnectionRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::PrepareForConnectionRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.GetPublicServersRequest
#include "MasterServer/GetPublicServersRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.GetPublicServersRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::GetPublicServersRequest*>* MasterServer::GetPublicServersRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "GetPublicServersRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::GetPublicServersRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.GetPublicServersRequest.get_userId
::Il2CppString* MasterServer::GetPublicServersRequest::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersRequest::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.GetPublicServersRequest.set_userId
void MasterServer::GetPublicServersRequest::set_userId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersRequest::set_userId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.GetPublicServersRequest.get_userName
::Il2CppString* MasterServer::GetPublicServersRequest::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersRequest::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.GetPublicServersRequest.set_userName
void MasterServer::GetPublicServersRequest::set_userName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersRequest::set_userName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.GetPublicServersRequest.Init
MasterServer::GetPublicServersRequest* MasterServer::GetPublicServersRequest::Init(::Il2CppString* userId, ::Il2CppString* userName, int offset, int count, GlobalNamespace::GameplayServerFilter filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(filter)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::GetPublicServersRequest*, false>(this, ___internal__method, userId, userName, offset, count, filter);
}
// Autogenerated method: MasterServer.GetPublicServersRequest.Serialize
void MasterServer::GetPublicServersRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.GetPublicServersRequest.Deserialize
void MasterServer::GetPublicServersRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.GetPublicServersRequest.Release
void MasterServer::GetPublicServersRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.GetPublicServersResponse
#include "MasterServer/GetPublicServersResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.GetPublicServersResponse.get_pool
GlobalNamespace::PacketPool_1<MasterServer::GetPublicServersResponse*>* MasterServer::GetPublicServersResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "GetPublicServersResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::GetPublicServersResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.GetPublicServersResponse.InitForFailure
MasterServer::GetPublicServersResponse* MasterServer::GetPublicServersResponse::InitForFailure(MasterServer::GetPublicServersResponse::Result result) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersResponse::InitForFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::GetPublicServersResponse*, false>(this, ___internal__method, result);
}
// Autogenerated method: MasterServer.GetPublicServersResponse.InitForSuccess
MasterServer::GetPublicServersResponse* MasterServer::GetPublicServersResponse::InitForSuccess(System::Collections::Generic::IEnumerable_1<GlobalNamespace::PublicServerInfo>* publicServers) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersResponse::InitForSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(publicServers)})));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::GetPublicServersResponse*, false>(this, ___internal__method, publicServers);
}
// Autogenerated method: MasterServer.GetPublicServersResponse.get_resultCode
uint8_t MasterServer::GetPublicServersResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.GetPublicServersResponse.get_resultCodeString
::Il2CppString* MasterServer::GetPublicServersResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.GetPublicServersResponse.Serialize
void MasterServer::GetPublicServersResponse::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.GetPublicServersResponse.Deserialize
void MasterServer::GetPublicServersResponse::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.GetPublicServersResponse.Release
void MasterServer::GetPublicServersResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.GetPublicServersResponse/Result
#include "MasterServer/GetPublicServersResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.GetPublicServersResponse/Result Success
MasterServer::GetPublicServersResponse::Result MasterServer::GetPublicServersResponse::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersResponse::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::GetPublicServersResponse::Result>("MasterServer", "GetPublicServersResponse/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.GetPublicServersResponse/Result Success
void MasterServer::GetPublicServersResponse::Result::_set_Success(MasterServer::GetPublicServersResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersResponse::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "GetPublicServersResponse/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.GetPublicServersResponse/Result UnknownError
MasterServer::GetPublicServersResponse::Result MasterServer::GetPublicServersResponse::Result::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersResponse::Result::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::GetPublicServersResponse::Result>("MasterServer", "GetPublicServersResponse/Result", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.GetPublicServersResponse/Result UnknownError
void MasterServer::GetPublicServersResponse::Result::_set_UnknownError(MasterServer::GetPublicServersResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::GetPublicServersResponse::Result::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "GetPublicServersResponse/Result", "UnknownError", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMessageReceivedAcknowledge
#include "MasterServer/UserMessageReceivedAcknowledge.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.UserMessageReceivedAcknowledge.get_pool
GlobalNamespace::PacketPool_1<MasterServer::UserMessageReceivedAcknowledge*>* MasterServer::UserMessageReceivedAcknowledge::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageReceivedAcknowledge::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "UserMessageReceivedAcknowledge", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::UserMessageReceivedAcknowledge*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageReceivedAcknowledge.Release
void MasterServer::UserMessageReceivedAcknowledge::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageReceivedAcknowledge::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMultipartMessage
#include "MasterServer/UserMultipartMessage.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.UserMultipartMessage.get_pool
GlobalNamespace::PacketPool_1<MasterServer::UserMultipartMessage*>* MasterServer::UserMultipartMessage::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMultipartMessage::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "UserMultipartMessage", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::UserMultipartMessage*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.UserMultipartMessage.Release
void MasterServer::UserMultipartMessage::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMultipartMessage::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.SessionKeepaliveMessage
#include "MasterServer/SessionKeepaliveMessage.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.SessionKeepaliveMessage.get_pool
GlobalNamespace::PacketPool_1<MasterServer::SessionKeepaliveMessage*>* MasterServer::SessionKeepaliveMessage::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::SessionKeepaliveMessage::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "SessionKeepaliveMessage", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::SessionKeepaliveMessage*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.SessionKeepaliveMessage.Serialize
void MasterServer::SessionKeepaliveMessage::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::SessionKeepaliveMessage::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.SessionKeepaliveMessage.Deserialize
void MasterServer::SessionKeepaliveMessage::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::SessionKeepaliveMessage::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.SessionKeepaliveMessage.Release
void MasterServer::SessionKeepaliveMessage::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::SessionKeepaliveMessage::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Extensions.Logging.ILogger
#include "Microsoft/Extensions/Logging/ILogger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Extensions.Logging.ILogger.LogError
void Microsoft::Extensions::Logging::ILogger::LogError(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Extensions::Logging::ILogger::LogError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: Microsoft.Extensions.Logging.ILogger.LogInformation
void Microsoft::Extensions::Logging::ILogger::LogInformation(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Extensions::Logging::ILogger::LogInformation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: Microsoft.Extensions.Logging.ILogger.LogWarning
void Microsoft::Extensions::Logging::ILogger::LogWarning(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Extensions::Logging::ILogger::LogWarning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.Anssi.AnssiNamedCurves
#include "Org/BouncyCastle/Asn1/Anssi/AnssiNamedCurves.hpp"
// Including type: Org.BouncyCastle.Asn1.Anssi.AnssiNamedCurves/Frp256v1Holder
#include "Org/BouncyCastle/Asn1/Anssi/AnssiNamedCurves_Frp256v1Holder.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECPoint
#include "Org/BouncyCastle/Asn1/X9/X9ECPoint.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECCurve
#include "Org/BouncyCastle/Math/EC/ECCurve.hpp"
// Including type: Org.BouncyCastle.Math.BigInteger
#include "Org/BouncyCastle/Math/BigInteger.hpp"
// Including type: Org.BouncyCastle.Asn1.DerObjectIdentifier
#include "Org/BouncyCastle/Asn1/DerObjectIdentifier.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
#include "Org/BouncyCastle/Asn1/X9/X9ECParametersHolder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.IDictionary objIds
System::Collections::IDictionary* Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::_get_objIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::_get_objIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IDictionary*>("Org.BouncyCastle.Asn1.Anssi", "AnssiNamedCurves", "objIds"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.IDictionary objIds
void Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::_set_objIds(System::Collections::IDictionary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::_set_objIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Anssi", "AnssiNamedCurves", "objIds", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.IDictionary curves
System::Collections::IDictionary* Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::_get_curves() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::_get_curves");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IDictionary*>("Org.BouncyCastle.Asn1.Anssi", "AnssiNamedCurves", "curves"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.IDictionary curves
void Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::_set_curves(System::Collections::IDictionary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::_set_curves");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Anssi", "AnssiNamedCurves", "curves", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.IDictionary names
System::Collections::IDictionary* Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::_get_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::_get_names");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IDictionary*>("Org.BouncyCastle.Asn1.Anssi", "AnssiNamedCurves", "names"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.IDictionary names
void Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::_set_names(System::Collections::IDictionary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::_set_names");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Anssi", "AnssiNamedCurves", "names", value));
}
// Autogenerated method: Org.BouncyCastle.Asn1.Anssi.AnssiNamedCurves.ConfigureBasepoint
Org::BouncyCastle::Asn1::X9::X9ECPoint* Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::ConfigureBasepoint(Org::BouncyCastle::Math::EC::ECCurve* curve, ::Il2CppString* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::ConfigureBasepoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1.Anssi", "AnssiNamedCurves", "ConfigureBasepoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curve), ::il2cpp_utils::ExtractType(encoding)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECPoint*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, curve, encoding);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Anssi.AnssiNamedCurves.ConfigureCurve
Org::BouncyCastle::Math::EC::ECCurve* Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::ConfigureCurve(Org::BouncyCastle::Math::EC::ECCurve* curve) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::ConfigureCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1.Anssi", "AnssiNamedCurves", "ConfigureCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curve)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::EC::ECCurve*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, curve);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Anssi.AnssiNamedCurves.FromHex
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::FromHex(::Il2CppString* hex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::FromHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1.Anssi", "AnssiNamedCurves", "FromHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hex)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hex);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Anssi.AnssiNamedCurves.DefineCurve
void Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::DefineCurve(::Il2CppString* name, Org::BouncyCastle::Asn1::DerObjectIdentifier* oid, Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* holder) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::DefineCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1.Anssi", "AnssiNamedCurves", "DefineCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(oid), ::il2cpp_utils::ExtractType(holder)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, oid, holder);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Anssi.AnssiNamedCurves..cctor
void Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1.Anssi", "AnssiNamedCurves", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Anssi.AnssiNamedCurves.GetByName
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::GetByName(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::GetByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1.Anssi", "AnssiNamedCurves", "GetByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Anssi.AnssiNamedCurves.GetByOid
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::GetByOid(Org::BouncyCastle::Asn1::DerObjectIdentifier* oid) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::GetByOid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1.Anssi", "AnssiNamedCurves", "GetByOid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, oid);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Anssi.AnssiNamedCurves.GetOid
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::GetOid(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::GetOid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1.Anssi", "AnssiNamedCurves", "GetOid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::DerObjectIdentifier*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.Anssi.AnssiNamedCurves/Frp256v1Holder
#include "Org/BouncyCastle/Asn1/Anssi/AnssiNamedCurves_Frp256v1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::Frp256v1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::Frp256v1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Asn1.Anssi", "AnssiNamedCurves/Frp256v1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::Frp256v1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::Frp256v1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Anssi", "AnssiNamedCurves/Frp256v1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Asn1.Anssi.AnssiNamedCurves/Frp256v1Holder..cctor
void Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::Frp256v1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::Frp256v1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1.Anssi", "AnssiNamedCurves/Frp256v1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Anssi.AnssiNamedCurves/Frp256v1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::Frp256v1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiNamedCurves::Frp256v1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
#include "Org/BouncyCastle/Asn1/X9/X9ECParametersHolder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.X9.X9ECParametersHolder.get_Parameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Asn1::X9::X9ECParametersHolder::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ECParametersHolder::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.X9.X9ECParametersHolder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Asn1::X9::X9ECParametersHolder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ECParametersHolder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.Anssi.AnssiObjectIdentifiers
#include "Org/BouncyCastle/Asn1/Anssi/AnssiObjectIdentifiers.hpp"
// Including type: Org.BouncyCastle.Asn1.DerObjectIdentifier
#include "Org/BouncyCastle/Asn1/DerObjectIdentifier.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier FRP256v1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Anssi::AnssiObjectIdentifiers::_get_FRP256v1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiObjectIdentifiers::_get_FRP256v1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Anssi", "AnssiObjectIdentifiers", "FRP256v1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier FRP256v1
void Org::BouncyCastle::Asn1::Anssi::AnssiObjectIdentifiers::_set_FRP256v1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiObjectIdentifiers::_set_FRP256v1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Anssi", "AnssiObjectIdentifiers", "FRP256v1", value));
}
// Autogenerated method: Org.BouncyCastle.Asn1.Anssi.AnssiObjectIdentifiers..cctor
void Org::BouncyCastle::Asn1::Anssi::AnssiObjectIdentifiers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Anssi::AnssiObjectIdentifiers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1.Anssi", "AnssiObjectIdentifiers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers
#include "Org/BouncyCastle/Asn1/BC/BCObjectIdentifiers.hpp"
// Including type: Org.BouncyCastle.Asn1.DerObjectIdentifier
#include "Org/BouncyCastle/Asn1/DerObjectIdentifier.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha1
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha256
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha256"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha256
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha256(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha256", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha384
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha384"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha384
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha384(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha384", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha512
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha512() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha512");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha512"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha512
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha512(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha512");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha512", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha224
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha224() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha224");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha224"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha224
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha224(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha224");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha224", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha1_pkcs5
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha1_pkcs5() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha1_pkcs5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha1_pkcs5"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha1_pkcs5
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha1_pkcs5(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha1_pkcs5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha1_pkcs5", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha1_pkcs12
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha1_pkcs12() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha1_pkcs12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha1_pkcs12"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha1_pkcs12
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha1_pkcs12(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha1_pkcs12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha1_pkcs12", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha256_pkcs5
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha256_pkcs5() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha256_pkcs5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha256_pkcs5"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha256_pkcs5
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha256_pkcs5(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha256_pkcs5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha256_pkcs5", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha256_pkcs12
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha256_pkcs12() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha256_pkcs12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha256_pkcs12"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha256_pkcs12
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha256_pkcs12(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha256_pkcs12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha256_pkcs12", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha1_pkcs12_aes128_cbc
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha1_pkcs12_aes128_cbc() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha1_pkcs12_aes128_cbc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha1_pkcs12_aes128_cbc"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha1_pkcs12_aes128_cbc
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha1_pkcs12_aes128_cbc(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha1_pkcs12_aes128_cbc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha1_pkcs12_aes128_cbc", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha1_pkcs12_aes192_cbc
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha1_pkcs12_aes192_cbc() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha1_pkcs12_aes192_cbc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha1_pkcs12_aes192_cbc"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha1_pkcs12_aes192_cbc
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha1_pkcs12_aes192_cbc(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha1_pkcs12_aes192_cbc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha1_pkcs12_aes192_cbc", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha1_pkcs12_aes256_cbc
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha1_pkcs12_aes256_cbc() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha1_pkcs12_aes256_cbc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha1_pkcs12_aes256_cbc"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha1_pkcs12_aes256_cbc
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha1_pkcs12_aes256_cbc(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha1_pkcs12_aes256_cbc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha1_pkcs12_aes256_cbc", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha256_pkcs12_aes128_cbc
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha256_pkcs12_aes128_cbc() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha256_pkcs12_aes128_cbc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha256_pkcs12_aes128_cbc"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha256_pkcs12_aes128_cbc
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha256_pkcs12_aes128_cbc(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha256_pkcs12_aes128_cbc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha256_pkcs12_aes128_cbc", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha256_pkcs12_aes192_cbc
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha256_pkcs12_aes192_cbc() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha256_pkcs12_aes192_cbc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha256_pkcs12_aes192_cbc"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha256_pkcs12_aes192_cbc
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha256_pkcs12_aes192_cbc(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha256_pkcs12_aes192_cbc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha256_pkcs12_aes192_cbc", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha256_pkcs12_aes256_cbc
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha256_pkcs12_aes256_cbc() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_pbe_sha256_pkcs12_aes256_cbc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha256_pkcs12_aes256_cbc"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_pbe_sha256_pkcs12_aes256_cbc
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha256_pkcs12_aes256_cbc(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_pbe_sha256_pkcs12_aes256_cbc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_pbe_sha256_pkcs12_aes256_cbc", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_sig
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_sig() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_sig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_sig"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_sig
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_sig(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_sig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_sig", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier sphincs256
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_sphincs256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_sphincs256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "sphincs256"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier sphincs256
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_sphincs256(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_sphincs256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "sphincs256", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier sphincs256_with_BLAKE512
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_sphincs256_with_BLAKE512() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_sphincs256_with_BLAKE512");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "sphincs256_with_BLAKE512"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier sphincs256_with_BLAKE512
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_sphincs256_with_BLAKE512(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_sphincs256_with_BLAKE512");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "sphincs256_with_BLAKE512", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier sphincs256_with_SHA512
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_sphincs256_with_SHA512() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_sphincs256_with_SHA512");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "sphincs256_with_SHA512"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier sphincs256_with_SHA512
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_sphincs256_with_SHA512(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_sphincs256_with_SHA512");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "sphincs256_with_SHA512", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier sphincs256_with_SHA3_512
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_sphincs256_with_SHA3_512() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_sphincs256_with_SHA3_512");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "sphincs256_with_SHA3_512"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier sphincs256_with_SHA3_512
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_sphincs256_with_SHA3_512(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_sphincs256_with_SHA3_512");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "sphincs256_with_SHA3_512", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier xmss
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_xmss() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_xmss");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "xmss"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier xmss
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_xmss(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_xmss");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "xmss", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier xmss_with_SHA256
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_xmss_with_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_xmss_with_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "xmss_with_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier xmss_with_SHA256
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_xmss_with_SHA256(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_xmss_with_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "xmss_with_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier xmss_with_SHA512
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_xmss_with_SHA512() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_xmss_with_SHA512");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "xmss_with_SHA512"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier xmss_with_SHA512
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_xmss_with_SHA512(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_xmss_with_SHA512");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "xmss_with_SHA512", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier xmss_with_SHAKE128
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_xmss_with_SHAKE128() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_xmss_with_SHAKE128");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "xmss_with_SHAKE128"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier xmss_with_SHAKE128
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_xmss_with_SHAKE128(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_xmss_with_SHAKE128");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "xmss_with_SHAKE128", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier xmss_with_SHAKE256
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_xmss_with_SHAKE256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_xmss_with_SHAKE256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "xmss_with_SHAKE256"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier xmss_with_SHAKE256
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_xmss_with_SHAKE256(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_xmss_with_SHAKE256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "xmss_with_SHAKE256", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier xmss_mt
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_xmss_mt() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_xmss_mt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "xmss_mt"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier xmss_mt
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_xmss_mt(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_xmss_mt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "xmss_mt", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier xmss_mt_with_SHA256
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_xmss_mt_with_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_xmss_mt_with_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "xmss_mt_with_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier xmss_mt_with_SHA256
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_xmss_mt_with_SHA256(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_xmss_mt_with_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "xmss_mt_with_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier xmss_mt_with_SHA512
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_xmss_mt_with_SHA512() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_xmss_mt_with_SHA512");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "xmss_mt_with_SHA512"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier xmss_mt_with_SHA512
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_xmss_mt_with_SHA512(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_xmss_mt_with_SHA512");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "xmss_mt_with_SHA512", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier xmss_mt_with_SHAKE128
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_xmss_mt_with_SHAKE128() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_xmss_mt_with_SHAKE128");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "xmss_mt_with_SHAKE128"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier xmss_mt_with_SHAKE128
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_xmss_mt_with_SHAKE128(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_xmss_mt_with_SHAKE128");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "xmss_mt_with_SHAKE128", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier xmss_mt_with_SHAKE256
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_xmss_mt_with_SHAKE256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_xmss_mt_with_SHAKE256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "xmss_mt_with_SHAKE256"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier xmss_mt_with_SHAKE256
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_xmss_mt_with_SHAKE256(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_xmss_mt_with_SHAKE256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "xmss_mt_with_SHAKE256", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_exch
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_exch() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_exch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_exch"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_exch
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_exch(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_exch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_exch", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier newHope
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_newHope() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_newHope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "newHope"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier newHope
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_newHope(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_newHope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "newHope", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_ext
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_ext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_bc_ext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_ext"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bc_ext
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_ext(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_bc_ext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "bc_ext", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier linkedCertificate
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_linkedCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_get_linkedCertificate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "linkedCertificate"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier linkedCertificate
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_linkedCertificate(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_set_linkedCertificate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", "linkedCertificate", value));
}
// Autogenerated method: Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers..cctor
void Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BC::BCObjectIdentifiers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1.BC", "BCObjectIdentifiers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.IAsn1Convertible
#include "Org/BouncyCastle/Asn1/IAsn1Convertible.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Object
#include "Org/BouncyCastle/Asn1/Asn1Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.IAsn1Convertible.ToAsn1Object
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::IAsn1Convertible::ToAsn1Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::IAsn1Convertible::ToAsn1Object");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToAsn1Object", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.Asn1Encodable
#include "Org/BouncyCastle/Asn1/Asn1Encodable.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Object
#include "Org/BouncyCastle/Asn1/Asn1Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Encodable.GetEncoded
::Array<uint8_t>* Org::BouncyCastle::Asn1::Asn1Encodable::GetEncoded() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Encodable::GetEncoded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEncoded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Encodable.GetEncoded
::Array<uint8_t>* Org::BouncyCastle::Asn1::Asn1Encodable::GetEncoded(::Il2CppString* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Encodable::GetEncoded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEncoded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encoding)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, encoding);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Encodable.GetDerEncoded
::Array<uint8_t>* Org::BouncyCastle::Asn1::Asn1Encodable::GetDerEncoded() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Encodable::GetDerEncoded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDerEncoded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Encodable.ToAsn1Object
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::Asn1Encodable::ToAsn1Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Encodable::ToAsn1Object");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToAsn1Object", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Encodable.GetHashCode
int Org::BouncyCastle::Asn1::Asn1Encodable::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Encodable::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Encodable.Equals
bool Org::BouncyCastle::Asn1::Asn1Encodable::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Encodable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.Bsi.BsiObjectIdentifiers
#include "Org/BouncyCastle/Asn1/Bsi/BsiObjectIdentifiers.hpp"
// Including type: Org.BouncyCastle.Asn1.DerObjectIdentifier
#include "Org/BouncyCastle/Asn1/DerObjectIdentifier.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bsi_de
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_bsi_de() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_bsi_de");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "bsi_de"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier bsi_de
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_bsi_de(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_bsi_de");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "bsi_de", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier id_ecc
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_id_ecc() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_id_ecc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "id_ecc"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier id_ecc
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_id_ecc(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_id_ecc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "id_ecc", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecdsa_plain_signatures
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecdsa_plain_signatures() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecdsa_plain_signatures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecdsa_plain_signatures"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecdsa_plain_signatures
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecdsa_plain_signatures(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecdsa_plain_signatures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecdsa_plain_signatures", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecdsa_plain_SHA1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecdsa_plain_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecdsa_plain_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecdsa_plain_SHA1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecdsa_plain_SHA1
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecdsa_plain_SHA1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecdsa_plain_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecdsa_plain_SHA1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecdsa_plain_SHA224
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecdsa_plain_SHA224() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecdsa_plain_SHA224");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecdsa_plain_SHA224"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecdsa_plain_SHA224
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecdsa_plain_SHA224(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecdsa_plain_SHA224");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecdsa_plain_SHA224", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecdsa_plain_SHA256
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecdsa_plain_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecdsa_plain_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecdsa_plain_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecdsa_plain_SHA256
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecdsa_plain_SHA256(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecdsa_plain_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecdsa_plain_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecdsa_plain_SHA384
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecdsa_plain_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecdsa_plain_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecdsa_plain_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecdsa_plain_SHA384
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecdsa_plain_SHA384(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecdsa_plain_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecdsa_plain_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecdsa_plain_SHA512
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecdsa_plain_SHA512() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecdsa_plain_SHA512");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecdsa_plain_SHA512"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecdsa_plain_SHA512
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecdsa_plain_SHA512(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecdsa_plain_SHA512");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecdsa_plain_SHA512", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecdsa_plain_RIPEMD160
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecdsa_plain_RIPEMD160() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecdsa_plain_RIPEMD160");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecdsa_plain_RIPEMD160"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecdsa_plain_RIPEMD160
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecdsa_plain_RIPEMD160(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecdsa_plain_RIPEMD160");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecdsa_plain_RIPEMD160", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier algorithm
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_algorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_algorithm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "algorithm"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier algorithm
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_algorithm(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_algorithm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "algorithm", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_X963kdf
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_X963kdf() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_X963kdf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_X963kdf"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_X963kdf
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_X963kdf(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_X963kdf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_X963kdf", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_X963kdf_SHA1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_X963kdf_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_X963kdf_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_X963kdf_SHA1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_X963kdf_SHA1
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_X963kdf_SHA1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_X963kdf_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_X963kdf_SHA1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_X963kdf_SHA224
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_X963kdf_SHA224() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_X963kdf_SHA224");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_X963kdf_SHA224"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_X963kdf_SHA224
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_X963kdf_SHA224(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_X963kdf_SHA224");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_X963kdf_SHA224", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_X963kdf_SHA256
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_X963kdf_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_X963kdf_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_X963kdf_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_X963kdf_SHA256
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_X963kdf_SHA256(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_X963kdf_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_X963kdf_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_X963kdf_SHA384
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_X963kdf_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_X963kdf_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_X963kdf_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_X963kdf_SHA384
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_X963kdf_SHA384(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_X963kdf_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_X963kdf_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_X963kdf_SHA512
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_X963kdf_SHA512() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_X963kdf_SHA512");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_X963kdf_SHA512"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_X963kdf_SHA512
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_X963kdf_SHA512(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_X963kdf_SHA512");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_X963kdf_SHA512", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_X963kdf_RIPEMD160
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_X963kdf_RIPEMD160() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_X963kdf_RIPEMD160");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_X963kdf_RIPEMD160"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_X963kdf_RIPEMD160
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_X963kdf_RIPEMD160(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_X963kdf_RIPEMD160");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_X963kdf_RIPEMD160", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_SessionKDF
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_SessionKDF() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_SessionKDF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_SessionKDF"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_SessionKDF
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_SessionKDF(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_SessionKDF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_SessionKDF", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_SessionKDF_3DES
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_SessionKDF_3DES() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_SessionKDF_3DES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_SessionKDF_3DES"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_SessionKDF_3DES
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_SessionKDF_3DES(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_SessionKDF_3DES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_SessionKDF_3DES", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_SessionKDF_AES128
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_SessionKDF_AES128() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_SessionKDF_AES128");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_SessionKDF_AES128"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_SessionKDF_AES128
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_SessionKDF_AES128(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_SessionKDF_AES128");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_SessionKDF_AES128", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_SessionKDF_AES192
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_SessionKDF_AES192() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_SessionKDF_AES192");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_SessionKDF_AES192"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_SessionKDF_AES192
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_SessionKDF_AES192(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_SessionKDF_AES192");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_SessionKDF_AES192", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_SessionKDF_AES256
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_SessionKDF_AES256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_get_ecka_eg_SessionKDF_AES256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_SessionKDF_AES256"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ecka_eg_SessionKDF_AES256
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_SessionKDF_AES256(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_set_ecka_eg_SessionKDF_AES256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", "ecka_eg_SessionKDF_AES256", value));
}
// Autogenerated method: Org.BouncyCastle.Asn1.Bsi.BsiObjectIdentifiers..cctor
void Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Bsi::BsiObjectIdentifiers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1.Bsi", "BsiObjectIdentifiers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.Asn1Object
#include "Org/BouncyCastle/Asn1/Asn1Object.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Object.FromByteArray
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::Asn1Object::FromByteArray(::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Object::FromByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "Asn1Object", "FromByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Object.FromStream
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::Asn1Object::FromStream(System::IO::Stream* inStr) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Object::FromStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "Asn1Object", "FromStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inStr)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, inStr);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Object.Encode
void Org::BouncyCastle::Asn1::Asn1Object::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Object::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Object.Asn1Equals
bool Org::BouncyCastle::Asn1::Asn1Object::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Object::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Object.Asn1GetHashCode
int Org::BouncyCastle::Asn1::Asn1Object::Asn1GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Object::Asn1GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Object.CallAsn1Equals
bool Org::BouncyCastle::Asn1::Asn1Object::CallAsn1Equals(Org::BouncyCastle::Asn1::Asn1Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Object::CallAsn1Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallAsn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Object.CallAsn1GetHashCode
int Org::BouncyCastle::Asn1::Asn1Object::CallAsn1GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Object::CallAsn1GetHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallAsn1GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Object.ToAsn1Object
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::Asn1Object::ToAsn1Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Object::ToAsn1Object");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToAsn1Object", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.IAsn1String
#include "Org/BouncyCastle/Asn1/IAsn1String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.IAsn1String.GetString
::Il2CppString* Org::BouncyCastle::Asn1::IAsn1String::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::IAsn1String::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerStringBase
#include "Org/BouncyCastle/Asn1/DerStringBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerStringBase.GetString
::Il2CppString* Org::BouncyCastle::Asn1::DerStringBase::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerStringBase::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerStringBase.ToString
::Il2CppString* Org::BouncyCastle::Asn1::DerStringBase::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerStringBase::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerStringBase.Asn1GetHashCode
int Org::BouncyCastle::Asn1::DerStringBase::Asn1GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerStringBase::Asn1GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerBitString
#include "Org/BouncyCastle/Asn1/DerBitString.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1TaggedObject
#include "Org/BouncyCastle/Asn1/Asn1TaggedObject.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] table
::Array<::Il2CppChar>* Org::BouncyCastle::Asn1::DerBitString::_get_table() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBitString::_get_table");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("Org.BouncyCastle.Asn1", "DerBitString", "table"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] table
void Org::BouncyCastle::Asn1::DerBitString::_set_table(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBitString::_set_table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1", "DerBitString", "table", value));
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBitString.GetInstance
Org::BouncyCastle::Asn1::DerBitString* Org::BouncyCastle::Asn1::DerBitString::GetInstance(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBitString::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerBitString", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::DerBitString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBitString.GetInstance
Org::BouncyCastle::Asn1::DerBitString* Org::BouncyCastle::Asn1::DerBitString::GetInstance(Org::BouncyCastle::Asn1::Asn1TaggedObject* obj, bool isExplicit) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBitString::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerBitString", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(isExplicit)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::DerBitString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, isExplicit);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBitString.GetOctets
::Array<uint8_t>* Org::BouncyCastle::Asn1::DerBitString::GetOctets() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBitString::GetOctets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOctets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBitString.GetBytes
::Array<uint8_t>* Org::BouncyCastle::Asn1::DerBitString::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBitString::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBitString.get_PadBits
int Org::BouncyCastle::Asn1::DerBitString::get_PadBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBitString::get_PadBits");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PadBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBitString.FromAsn1Octets
Org::BouncyCastle::Asn1::DerBitString* Org::BouncyCastle::Asn1::DerBitString::FromAsn1Octets(::Array<uint8_t>* octets) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBitString::FromAsn1Octets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerBitString", "FromAsn1Octets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(octets)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::DerBitString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, octets);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBitString..cctor
void Org::BouncyCastle::Asn1::DerBitString::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBitString::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerBitString", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBitString.Encode
void Org::BouncyCastle::Asn1::DerBitString::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBitString::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBitString.Asn1GetHashCode
int Org::BouncyCastle::Asn1::DerBitString::Asn1GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBitString::Asn1GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBitString.Asn1Equals
bool Org::BouncyCastle::Asn1::DerBitString::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBitString::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBitString.GetString
::Il2CppString* Org::BouncyCastle::Asn1::DerBitString::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBitString::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.Cms.ContentInfo
#include "Org/BouncyCastle/Asn1/Cms/ContentInfo.hpp"
// Including type: Org.BouncyCastle.Asn1.DerObjectIdentifier
#include "Org/BouncyCastle/Asn1/DerObjectIdentifier.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Sequence
#include "Org/BouncyCastle/Asn1/Asn1Sequence.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Object
#include "Org/BouncyCastle/Asn1/Asn1Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.Cms.ContentInfo.GetInstance
Org::BouncyCastle::Asn1::Cms::ContentInfo* Org::BouncyCastle::Asn1::Cms::ContentInfo::GetInstance(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Cms::ContentInfo::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1.Cms", "ContentInfo", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Cms::ContentInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Cms.ContentInfo.ToAsn1Object
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::Cms::ContentInfo::ToAsn1Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Cms::ContentInfo::ToAsn1Object");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToAsn1Object", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerInteger
#include "Org/BouncyCastle/Asn1/DerInteger.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1TaggedObject
#include "Org/BouncyCastle/Asn1/Asn1TaggedObject.hpp"
// Including type: Org.BouncyCastle.Math.BigInteger
#include "Org/BouncyCastle/Math/BigInteger.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerInteger.AllowUnsafe
bool Org::BouncyCastle::Asn1::DerInteger::AllowUnsafe() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerInteger::AllowUnsafe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerInteger", "AllowUnsafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerInteger.GetInstance
Org::BouncyCastle::Asn1::DerInteger* Org::BouncyCastle::Asn1::DerInteger::GetInstance(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerInteger::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerInteger", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::DerInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerInteger.GetInstance
Org::BouncyCastle::Asn1::DerInteger* Org::BouncyCastle::Asn1::DerInteger::GetInstance(Org::BouncyCastle::Asn1::Asn1TaggedObject* obj, bool isExplicit) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerInteger::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerInteger", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(isExplicit)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::DerInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, isExplicit);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerInteger.get_PositiveValue
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Asn1::DerInteger::get_PositiveValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerInteger::get_PositiveValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PositiveValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::BigInteger*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerInteger.get_Value
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Asn1::DerInteger::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerInteger::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::BigInteger*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerInteger.get_IntValueExact
int Org::BouncyCastle::Asn1::DerInteger::get_IntValueExact() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerInteger::get_IntValueExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IntValueExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerInteger.IntValue
int Org::BouncyCastle::Asn1::DerInteger::IntValue(::Array<uint8_t>* bytes, int start, int signExt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerInteger::IntValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerInteger", "IntValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(signExt)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes, start, signExt);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerInteger.IsMalformed
bool Org::BouncyCastle::Asn1::DerInteger::IsMalformed(::Array<uint8_t>* bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerInteger::IsMalformed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerInteger", "IsMalformed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerInteger.SignBytesToSkip
int Org::BouncyCastle::Asn1::DerInteger::SignBytesToSkip(::Array<uint8_t>* bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerInteger::SignBytesToSkip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerInteger", "SignBytesToSkip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerInteger.Encode
void Org::BouncyCastle::Asn1::DerInteger::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerInteger::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerInteger.Asn1GetHashCode
int Org::BouncyCastle::Asn1::DerInteger::Asn1GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerInteger::Asn1GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerInteger.Asn1Equals
bool Org::BouncyCastle::Asn1::DerInteger::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerInteger::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerInteger.ToString
::Il2CppString* Org::BouncyCastle::Asn1::DerInteger::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerInteger::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
