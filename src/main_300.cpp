// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TaskExtensions
#include "GlobalNamespace/TaskExtensions.hpp"
// Including type: TaskExtensions/<>c__DisplayClass0_0`1
#include "GlobalNamespace/TaskExtensions_--c__DisplayClass0_0_1.hpp"
// Including type: TaskExtensions/<WaitForTask>d__1`1
#include "GlobalNamespace/TaskExtensions_-WaitForTask-d__1_1.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UpdateConnectionStateReason
#include "GlobalNamespace/UpdateConnectionStateReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason Init
GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_Init");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "Init"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason Init
void GlobalNamespace::UpdateConnectionStateReason::_set_Init(GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_Init");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "Init", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason PlayerOrderChanged
GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_PlayerOrderChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_PlayerOrderChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "PlayerOrderChanged"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason PlayerOrderChanged
void GlobalNamespace::UpdateConnectionStateReason::_set_PlayerOrderChanged(GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_PlayerOrderChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "PlayerOrderChanged", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason Connected
GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason Connected
void GlobalNamespace::UpdateConnectionStateReason::_set_Connected(GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason StartSession
GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_StartSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_StartSession");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "StartSession"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason StartSession
void GlobalNamespace::UpdateConnectionStateReason::_set_StartSession(GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_StartSession");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "StartSession", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason StartDedicatedServer
GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_StartDedicatedServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_StartDedicatedServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "StartDedicatedServer"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason StartDedicatedServer
void GlobalNamespace::UpdateConnectionStateReason::_set_StartDedicatedServer(GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_StartDedicatedServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "StartDedicatedServer", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason SyncTimeInitialized
GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_SyncTimeInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_SyncTimeInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "SyncTimeInitialized"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason SyncTimeInitialized
void GlobalNamespace::UpdateConnectionStateReason::_set_SyncTimeInitialized(GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_SyncTimeInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "SyncTimeInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason ManualDisconnect
GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_ManualDisconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_ManualDisconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "ManualDisconnect"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason ManualDisconnect
void GlobalNamespace::UpdateConnectionStateReason::_set_ManualDisconnect(GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_ManualDisconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "ManualDisconnect", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason RemoteDisconnect
GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_RemoteDisconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_RemoteDisconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "RemoteDisconnect"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason RemoteDisconnect
void GlobalNamespace::UpdateConnectionStateReason::_set_RemoteDisconnect(GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_RemoteDisconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "RemoteDisconnect", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason ConnectionFailed
GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_ConnectionFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_ConnectionFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "ConnectionFailed"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason ConnectionFailed
void GlobalNamespace::UpdateConnectionStateReason::_set_ConnectionFailed(GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_ConnectionFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "ConnectionFailed", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason OnDestroy
GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_OnDestroy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "OnDestroy"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason OnDestroy
void GlobalNamespace::UpdateConnectionStateReason::_set_OnDestroy(GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_OnDestroy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "OnDestroy", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::UpdateConnectionStateReason::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::UpdateConnectionStateReason::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UserServerFilter
#include "GlobalNamespace/UserServerFilter.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean includePasswordProtected
bool GlobalNamespace::UserServerFilter::_get_includePasswordProtected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_get_includePasswordProtected");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includePasswordProtected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean includePasswordProtected
void GlobalNamespace::UserServerFilter::_set_includePasswordProtected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_set_includePasswordProtected");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includePasswordProtected"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean includeEmpty
bool GlobalNamespace::UserServerFilter::_get_includeEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_get_includeEmpty");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeEmpty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean includeEmpty
void GlobalNamespace::UserServerFilter::_set_includeEmpty(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_set_includeEmpty");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeEmpty"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean includeFull
bool GlobalNamespace::UserServerFilter::_get_includeFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_get_includeFull");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeFull"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean includeFull
void GlobalNamespace::UserServerFilter::_set_includeFull(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_set_includeFull");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeFull"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean filterNames
bool GlobalNamespace::UserServerFilter::_get_filterNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_get_filterNames");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filterNames"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean filterNames
void GlobalNamespace::UserServerFilter::_set_filterNames(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_set_filterNames");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filterNames"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String nameFilter
::Il2CppString* GlobalNamespace::UserServerFilter::_get_nameFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_get_nameFilter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameFilter"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.String nameFilter
void GlobalNamespace::UserServerFilter::_set_nameFilter(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_set_nameFilter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameFilter"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean filterDifficulties
bool GlobalNamespace::UserServerFilter::_get_filterDifficulties() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_get_filterDifficulties");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filterDifficulties"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean filterDifficulties
void GlobalNamespace::UserServerFilter::_set_filterDifficulties(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_set_filterDifficulties");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filterDifficulties"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapDifficultyMask difficultyFilter
GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::UserServerFilter::_get_difficultyFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_get_difficultyFilter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "difficultyFilter"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapDifficultyMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly BeatmapDifficultyMask difficultyFilter
void GlobalNamespace::UserServerFilter::_set_difficultyFilter(GlobalNamespace::BeatmapDifficultyMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_set_difficultyFilter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "difficultyFilter"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapDifficultyMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean filterModifiers
bool GlobalNamespace::UserServerFilter::_get_filterModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_get_filterModifiers");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filterModifiers"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean filterModifiers
void GlobalNamespace::UserServerFilter::_set_filterModifiers(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_set_filterModifiers");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filterModifiers"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly GameplayModifierMask modifierFilter
GlobalNamespace::GameplayModifierMask GlobalNamespace::UserServerFilter::_get_modifierFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_get_modifierFilter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifierFilter"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayModifierMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly GameplayModifierMask modifierFilter
void GlobalNamespace::UserServerFilter::_set_modifierFilter(GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_set_modifierFilter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifierFilter"))->offset;
  *reinterpret_cast<GlobalNamespace::GameplayModifierMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean filterSongPacks
bool GlobalNamespace::UserServerFilter::_get_filterSongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_get_filterSongPacks");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filterSongPacks"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean filterSongPacks
void GlobalNamespace::UserServerFilter::_set_filterSongPacks(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_set_filterSongPacks");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filterSongPacks"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly SongPackMask songPackFilter
GlobalNamespace::SongPackMask GlobalNamespace::UserServerFilter::_get_songPackFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_get_songPackFilter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songPackFilter"))->offset;
  return *reinterpret_cast<GlobalNamespace::SongPackMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly SongPackMask songPackFilter
void GlobalNamespace::UserServerFilter::_set_songPackFilter(GlobalNamespace::SongPackMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::_set_songPackFilter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songPackFilter"))->offset;
  *reinterpret_cast<GlobalNamespace::SongPackMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: UserServerFilter.get_defaultFilter
GlobalNamespace::UserServerFilter GlobalNamespace::UserServerFilter::get_defaultFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::get_defaultFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UserServerFilter", "get_defaultFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::UserServerFilter, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UserServerFilter.Equals
bool GlobalNamespace::UserServerFilter::Equals(ByRef<GlobalNamespace::UserServerFilter> other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, byref(other));
}
// Autogenerated method: UserServerFilter.Equals
bool GlobalNamespace::UserServerFilter::Equals_(GlobalNamespace::UserServerFilter other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UserServerFilter.Serialize
void GlobalNamespace::UserServerFilter::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: UserServerFilter.Deserialize
GlobalNamespace::UserServerFilter GlobalNamespace::UserServerFilter::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UserServerFilter", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::UserServerFilter, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: UserServerFilter.CreateFromSerializedData
GlobalNamespace::UserServerFilter GlobalNamespace::UserServerFilter::CreateFromSerializedData(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::CreateFromSerializedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::UserServerFilter, false>(*this, ___internal__method, reader);
}
// Autogenerated method: UserServerFilter.IncludesServerName
bool GlobalNamespace::UserServerFilter::IncludesServerName(::Il2CppString* lowerInvariantName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::IncludesServerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IncludesServerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowerInvariantName)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, lowerInvariantName);
}
// Autogenerated method: UserServerFilter.IncludesPassword
bool GlobalNamespace::UserServerFilter::IncludesPassword(::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::IncludesPassword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IncludesPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, password);
}
// Autogenerated method: UserServerFilter.IncludesPlayerCount
bool GlobalNamespace::UserServerFilter::IncludesPlayerCount(int currentPlayerCount, int maxPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::IncludesPlayerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IncludesPlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPlayerCount), ::il2cpp_utils::ExtractType(maxPlayerCount)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, currentPlayerCount, maxPlayerCount);
}
// Autogenerated method: UserServerFilter.IncludesSelectionMask
bool GlobalNamespace::UserServerFilter::IncludesSelectionMask(GlobalNamespace::BeatmapLevelSelectionMask configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::IncludesSelectionMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IncludesSelectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(configuration)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, configuration);
}
// Autogenerated method: UserServerFilter.WithIncludePasswordProtected
GlobalNamespace::UserServerFilter GlobalNamespace::UserServerFilter::WithIncludePasswordProtected(bool includePasswordProtected) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::WithIncludePasswordProtected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WithIncludePasswordProtected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includePasswordProtected)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::UserServerFilter, false>(*this, ___internal__method, includePasswordProtected);
}
// Autogenerated method: UserServerFilter.WithIncludeEmpty
GlobalNamespace::UserServerFilter GlobalNamespace::UserServerFilter::WithIncludeEmpty(bool includeEmpty) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::WithIncludeEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WithIncludeEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includeEmpty)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::UserServerFilter, false>(*this, ___internal__method, includeEmpty);
}
// Autogenerated method: UserServerFilter.WithIncludeFull
GlobalNamespace::UserServerFilter GlobalNamespace::UserServerFilter::WithIncludeFull(bool includeFull) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::WithIncludeFull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WithIncludeFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includeFull)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::UserServerFilter, false>(*this, ___internal__method, includeFull);
}
// Autogenerated method: UserServerFilter.WithFilterNames
GlobalNamespace::UserServerFilter GlobalNamespace::UserServerFilter::WithFilterNames(bool filterNames, ::Il2CppString* nameFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::WithFilterNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WithFilterNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filterNames), ::il2cpp_utils::ExtractType(nameFilter)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::UserServerFilter, false>(*this, ___internal__method, filterNames, nameFilter);
}
// Autogenerated method: UserServerFilter.WithFilterDifficulties
GlobalNamespace::UserServerFilter GlobalNamespace::UserServerFilter::WithFilterDifficulties(bool filterDifficulties, GlobalNamespace::BeatmapDifficultyMask difficultyFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::WithFilterDifficulties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WithFilterDifficulties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filterDifficulties), ::il2cpp_utils::ExtractType(difficultyFilter)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::UserServerFilter, false>(*this, ___internal__method, filterDifficulties, difficultyFilter);
}
// Autogenerated method: UserServerFilter.WithFilterModifiers
GlobalNamespace::UserServerFilter GlobalNamespace::UserServerFilter::WithFilterModifiers(bool filterModifiers, GlobalNamespace::GameplayModifierMask modifierFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::WithFilterModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WithFilterModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filterModifiers), ::il2cpp_utils::ExtractType(modifierFilter)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::UserServerFilter, false>(*this, ___internal__method, filterModifiers, modifierFilter);
}
// Autogenerated method: UserServerFilter.WithFilterSongPacks
GlobalNamespace::UserServerFilter GlobalNamespace::UserServerFilter::WithFilterSongPacks(bool filterSongPacks, GlobalNamespace::SongPackMask songPackFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::WithFilterSongPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WithFilterSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filterSongPacks), ::il2cpp_utils::ExtractType(songPackFilter)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::UserServerFilter, false>(*this, ___internal__method, filterSongPacks, songPackFilter);
}
// Autogenerated method: UserServerFilter.IEquatableByReference<UserServerFilter>.Equals
bool GlobalNamespace::UserServerFilter::IEquatableByReference$UserServerFilter$_Equals(ByRef<GlobalNamespace::UserServerFilter> other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::IEquatableByReference<UserServerFilter>.Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IEquatableByReference<UserServerFilter>.Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, byref(other));
}
// Autogenerated method: UserServerFilter.Equals
bool GlobalNamespace::UserServerFilter::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: UserServerFilter.GetHashCode
int GlobalNamespace::UserServerFilter::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserServerFilter::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UtcTimeProvider
#include "GlobalNamespace/UtcTimeProvider.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE8931C
// Autogenerated static field getter
// Get static field: static private readonly System.DateTime _epoch
System::DateTime GlobalNamespace::UtcTimeProvider::_get__epoch() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UtcTimeProvider::_get__epoch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTime>("", "UtcTimeProvider", "_epoch"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.DateTime _epoch
void GlobalNamespace::UtcTimeProvider::_set__epoch(System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UtcTimeProvider::_set__epoch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UtcTimeProvider", "_epoch", value));
}
// Autogenerated method: UtcTimeProvider..cctor
void GlobalNamespace::UtcTimeProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UtcTimeProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UtcTimeProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UtcTimeProvider.GetTimeMs
int64_t GlobalNamespace::UtcTimeProvider::GetTimeMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UtcTimeProvider::GetTimeMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTimeMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UtcTimeProvider.DelayMs
System::Threading::Tasks::Task* GlobalNamespace::UtcTimeProvider::DelayMs(int millis, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UtcTimeProvider::DelayMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millis), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, millis, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: X509CertificateUtility
#include "GlobalNamespace/X509CertificateUtility.hpp"
// Including type: X509CertificateUtility/PasswordFinder
#include "GlobalNamespace/X509CertificateUtility_PasswordFinder.hpp"
// Including type: X509CertificateUtility/RSACertificateEncryptionProvider
#include "GlobalNamespace/X509CertificateUtility_RSACertificateEncryptionProvider.hpp"
// Including type: X509CertificateUtility/<>c
#include "GlobalNamespace/X509CertificateUtility_--c.hpp"
// Including type: ICertificateEncryptionProvider
#include "GlobalNamespace/ICertificateEncryptionProvider.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: X509CertificateUtility.GetCertificateEncryptionProvider
GlobalNamespace::ICertificateEncryptionProvider* GlobalNamespace::X509CertificateUtility::GetCertificateEncryptionProvider(::Il2CppString* privateKeyPem, ::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::GetCertificateEncryptionProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility", "GetCertificateEncryptionProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(privateKeyPem), ::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ICertificateEncryptionProvider*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, privateKeyPem, password);
}
// Autogenerated method: X509CertificateUtility.GetRSACertificateEncryptionProvider
GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider* GlobalNamespace::X509CertificateUtility::GetRSACertificateEncryptionProvider(::Il2CppString* privateKeyPem, GlobalNamespace::X509CertificateUtility::PasswordFinder* passwordFinder) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::GetRSACertificateEncryptionProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility", "GetRSACertificateEncryptionProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(privateKeyPem), ::il2cpp_utils::ExtractType(passwordFinder)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, privateKeyPem, passwordFinder);
}
// Autogenerated method: X509CertificateUtility.GetCertificateList
::Array<System::Security::Cryptography::X509Certificates::X509Certificate2*>* GlobalNamespace::X509CertificateUtility::GetCertificateList(::Il2CppString* certificatePem, ::Il2CppString* certificateChainPem) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::GetCertificateList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility", "GetCertificateList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificatePem), ::il2cpp_utils::ExtractType(certificateChainPem)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Security::Cryptography::X509Certificates::X509Certificate2*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, certificatePem, certificateChainPem);
}
// Autogenerated method: X509CertificateUtility.ValidateCertificateChain
void GlobalNamespace::X509CertificateUtility::ValidateCertificateChain(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::Array<::Array<uint8_t>*>* certificateChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::ValidateCertificateChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility", "ValidateCertificateChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(certificateChain)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, certificate, certificateChain);
}
// Autogenerated method: X509CertificateUtility.ValidateCertificateChainUnity
void GlobalNamespace::X509CertificateUtility::ValidateCertificateChainUnity(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::Array<::Array<uint8_t>*>* certificateChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::ValidateCertificateChainUnity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility", "ValidateCertificateChainUnity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(certificateChain)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, certificate, certificateChain);
}
// Autogenerated method: X509CertificateUtility.ValidateCertificateChainDotNet
void GlobalNamespace::X509CertificateUtility::ValidateCertificateChainDotNet(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::Array<::Array<uint8_t>*>* certificateChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::ValidateCertificateChainDotNet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility", "ValidateCertificateChainDotNet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(certificateChain)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, certificate, certificateChain);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: X509CertificateUtility/PasswordFinder
#include "GlobalNamespace/X509CertificateUtility_PasswordFinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Char[] _password
::Array<::Il2CppChar>* GlobalNamespace::X509CertificateUtility::PasswordFinder::_get__password() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::PasswordFinder::_get__password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_password"))->offset;
  return *reinterpret_cast<::Array<::Il2CppChar>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Char[] _password
void GlobalNamespace::X509CertificateUtility::PasswordFinder::_set__password(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::PasswordFinder::_set__password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_password"))->offset;
  *reinterpret_cast<::Array<::Il2CppChar>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: X509CertificateUtility/PasswordFinder.GetPassword
::Array<::Il2CppChar>* GlobalNamespace::X509CertificateUtility::PasswordFinder::GetPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::PasswordFinder::GetPassword");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: X509CertificateUtility/RSACertificateEncryptionProvider
#include "GlobalNamespace/X509CertificateUtility_RSACertificateEncryptionProvider.hpp"
// Including type: Org.BouncyCastle.Crypto.ISigner
#include "Org/BouncyCastle/Crypto/ISigner.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.RsaPrivateCrtKeyParameters
#include "Org/BouncyCastle/Crypto/Parameters/RsaPrivateCrtKeyParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Org.BouncyCastle.Crypto.ISigner _signer
Org::BouncyCastle::Crypto::ISigner* GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider::_get__signer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider::_get__signer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_signer"))->offset;
  return *reinterpret_cast<Org::BouncyCastle::Crypto::ISigner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly Org.BouncyCastle.Crypto.ISigner _signer
void GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider::_set__signer(Org::BouncyCastle::Crypto::ISigner* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider::_set__signer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_signer"))->offset;
  *reinterpret_cast<Org::BouncyCastle::Crypto::ISigner**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: X509CertificateUtility/RSACertificateEncryptionProvider.Dispose
void GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: X509CertificateUtility/RSACertificateEncryptionProvider.SignData
::Array<uint8_t>* GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider::SignData(::Array<uint8_t>* data, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider::SignData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SignData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(___instance_arg, ___internal__method, data, offset, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: X509CertificateUtility/<>c
#include "GlobalNamespace/X509CertificateUtility_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly X509CertificateUtility/<>c <>9
GlobalNamespace::X509CertificateUtility::$$c* GlobalNamespace::X509CertificateUtility::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::X509CertificateUtility::$$c*>("", "X509CertificateUtility/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly X509CertificateUtility/<>c <>9
void GlobalNamespace::X509CertificateUtility::$$c::_set_$$9(GlobalNamespace::X509CertificateUtility::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "X509CertificateUtility/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Security.Cryptography.X509Certificates.X509ChainStatus,System.String> <>9__6_0
System::Func_2<System::Security::Cryptography::X509Certificates::X509ChainStatus, ::Il2CppString*>* GlobalNamespace::X509CertificateUtility::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Security::Cryptography::X509Certificates::X509ChainStatus, ::Il2CppString*>*>("", "X509CertificateUtility/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Security.Cryptography.X509Certificates.X509ChainStatus,System.String> <>9__6_0
void GlobalNamespace::X509CertificateUtility::$$c::_set_$$9__6_0(System::Func_2<System::Security::Cryptography::X509Certificates::X509ChainStatus, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "X509CertificateUtility/<>c", "<>9__6_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Security.Cryptography.X509Certificates.X509ChainStatus,System.String> <>9__7_0
System::Func_2<System::Security::Cryptography::X509Certificates::X509ChainStatus, ::Il2CppString*>* GlobalNamespace::X509CertificateUtility::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Security::Cryptography::X509Certificates::X509ChainStatus, ::Il2CppString*>*>("", "X509CertificateUtility/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Security.Cryptography.X509Certificates.X509ChainStatus,System.String> <>9__7_0
void GlobalNamespace::X509CertificateUtility::$$c::_set_$$9__7_0(System::Func_2<System::Security::Cryptography::X509Certificates::X509ChainStatus, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "X509CertificateUtility/<>c", "<>9__7_0", value)));
}
// Autogenerated method: X509CertificateUtility/<>c..cctor
void GlobalNamespace::X509CertificateUtility::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: X509CertificateUtility/<>c.<ValidateCertificateChainUnity>b__6_0
::Il2CppString* GlobalNamespace::X509CertificateUtility::$$c::$ValidateCertificateChainUnity$b__6_0(System::Security::Cryptography::X509Certificates::X509ChainStatus s) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::$$c::<ValidateCertificateChainUnity>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ValidateCertificateChainUnity>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, s);
}
// Autogenerated method: X509CertificateUtility/<>c.<ValidateCertificateChainDotNet>b__7_0
::Il2CppString* GlobalNamespace::X509CertificateUtility::$$c::$ValidateCertificateChainDotNet$b__7_0(System::Security::Cryptography::X509Certificates::X509ChainStatus s) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::$$c::<ValidateCertificateChainDotNet>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ValidateCertificateChainDotNet>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.ITimeProvider
#include "MasterServer/ITimeProvider.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.ITimeProvider.GetTimeMs
int64_t MasterServer::ITimeProvider::GetTimeMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ITimeProvider::GetTimeMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTimeMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.ITimeProvider.DelayMs
System::Threading::Tasks::Task* MasterServer::ITimeProvider::DelayMs(int millis, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ITimeProvider::DelayMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millis), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, millis, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.BaseClientMessageHandler
#include "MasterServer/BaseClientMessageHandler.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<SendOrderedAuthenticatedRequest>d__18
#include "MasterServer/BaseClientMessageHandler_-SendOrderedAuthenticatedRequest-d__18.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<SendOrderedAuthenticatedRequestAsync>d__19
#include "MasterServer/BaseClientMessageHandler_-SendOrderedAuthenticatedRequestAsync-d__19.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<SendAuthenticatedRequestAsync>d__20`1
#include "MasterServer/BaseClientMessageHandler_-SendAuthenticatedRequestAsync-d__20_1.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<SendAuthenticatedRequestAsync>d__21
#include "MasterServer/BaseClientMessageHandler_-SendAuthenticatedRequestAsync-d__21.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<OnSendFailed>d__22
#include "MasterServer/BaseClientMessageHandler_-OnSendFailed-d__22.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<OnSendFailedAwaitResponse>d__23`1
#include "MasterServer/BaseClientMessageHandler_-OnSendFailedAwaitResponse-d__23_1.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<ReauthenticateWithMasterServer>d__24
#include "MasterServer/BaseClientMessageHandler_-ReauthenticateWithMasterServer-d__24.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServer>d__27
#include "MasterServer/BaseClientMessageHandler_-AuthenticateWithMasterServer-d__27.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServerAsyncInternalVerbose>d__28
#include "MasterServer/BaseClientMessageHandler_-AuthenticateWithMasterServerAsyncInternalVerbose-d__28.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<>c__DisplayClass29_0
#include "MasterServer/BaseClientMessageHandler_--c__DisplayClass29_0.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServerAsyncInternal>d__29
#include "MasterServer/BaseClientMessageHandler_-AuthenticateWithMasterServerAsyncInternal-d__29.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<>c__DisplayClass32_0
#include "MasterServer/BaseClientMessageHandler_--c__DisplayClass32_0.hpp"
// Including type: MasterServerEndPoint
#include "GlobalNamespace/MasterServerEndPoint.hpp"
// Including type: ICertificateValidator
#include "GlobalNamespace/ICertificateValidator.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Security.Authentication.AuthenticationException
#include "System/Security/Authentication/AuthenticationException.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: IUnconnectedSenderReceiver
#include "GlobalNamespace/IUnconnectedSenderReceiver.hpp"
// Including type: MasterServer.ITimeProvider
#include "MasterServer/ITimeProvider.hpp"
// Including type: MasterServer.IAnalyticsManager
#include "MasterServer/IAnalyticsManager.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: MasterServer.IMasterServerReliableResponse
#include "MasterServer/IMasterServerReliableResponse.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: MasterServer.IMasterServerAuthenticateRequest
#include "MasterServer/IMasterServerAuthenticateRequest.hpp"
// Including type: MasterServer.IHandshakeMessage
#include "MasterServer/IHandshakeMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private LiteNetLib.Utils.NetDataWriter _authenticationDataWriter
LiteNetLib::Utils::NetDataWriter* MasterServer::BaseClientMessageHandler::_get__authenticationDataWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::_get__authenticationDataWriter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::Utils::NetDataWriter*>("MasterServer", "BaseClientMessageHandler", "_authenticationDataWriter"));
}
// Autogenerated static field setter
// Set static field: static private LiteNetLib.Utils.NetDataWriter _authenticationDataWriter
void MasterServer::BaseClientMessageHandler::_set__authenticationDataWriter(LiteNetLib::Utils::NetDataWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::_set__authenticationDataWriter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "BaseClientMessageHandler", "_authenticationDataWriter", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly MasterServerEndPoint _endPoint
GlobalNamespace::MasterServerEndPoint* MasterServer::BaseClientMessageHandler::_get__endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::_get__endPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endPoint"))->offset;
  return *reinterpret_cast<GlobalNamespace::MasterServerEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly MasterServerEndPoint _endPoint
void MasterServer::BaseClientMessageHandler::_set__endPoint(GlobalNamespace::MasterServerEndPoint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::_set__endPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endPoint"))->offset;
  *reinterpret_cast<GlobalNamespace::MasterServerEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly ICertificateValidator _certificateValidator
GlobalNamespace::ICertificateValidator* MasterServer::BaseClientMessageHandler::_get__certificateValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::_get__certificateValidator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certificateValidator"))->offset;
  return *reinterpret_cast<GlobalNamespace::ICertificateValidator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly ICertificateValidator _certificateValidator
void MasterServer::BaseClientMessageHandler::_set__certificateValidator(GlobalNamespace::ICertificateValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::_set__certificateValidator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certificateValidator"))->offset;
  *reinterpret_cast<GlobalNamespace::ICertificateValidator**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task _authenticationTask
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::_get__authenticationTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::_get__authenticationTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authenticationTask"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Threading.Tasks.Task _authenticationTask
void MasterServer::BaseClientMessageHandler::_set__authenticationTask(System::Threading::Tasks::Task* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::_set__authenticationTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authenticationTask"))->offset;
  *reinterpret_cast<System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Authentication.AuthenticationException _authenticationException
System::Security::Authentication::AuthenticationException* MasterServer::BaseClientMessageHandler::_get__authenticationException() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::_get__authenticationException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authenticationException"))->offset;
  return *reinterpret_cast<System::Security::Authentication::AuthenticationException**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Security.Authentication.AuthenticationException _authenticationException
void MasterServer::BaseClientMessageHandler::_set__authenticationException(System::Security::Authentication::AuthenticationException* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::_set__authenticationException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authenticationException"))->offset;
  *reinterpret_cast<System::Security::Authentication::AuthenticationException**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disposed
bool MasterServer::BaseClientMessageHandler::_get__disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::_get__disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _disposed
void MasterServer::BaseClientMessageHandler::_set__disposed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::_set__disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposed"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Threading.Tasks.Task> _orderedRequests
System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Threading::Tasks::Task*>* MasterServer::BaseClientMessageHandler::_get__orderedRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::_get__orderedRequests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_orderedRequests"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Threading::Tasks::Task*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Threading.Tasks.Task> _orderedRequests
void MasterServer::BaseClientMessageHandler::_set__orderedRequests(System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Threading::Tasks::Task*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::_set__orderedRequests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_orderedRequests"))->offset;
  *reinterpret_cast<System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Threading::Tasks::Task*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.get_endPoint
GlobalNamespace::MasterServerEndPoint* MasterServer::BaseClientMessageHandler::get_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::get_endPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MasterServerEndPoint*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.get_isAuthenticated
bool MasterServer::BaseClientMessageHandler::get_isAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::get_isAuthenticated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.get_isAuthenticating
bool MasterServer::BaseClientMessageHandler::get_isAuthenticating() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::get_isAuthenticating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAuthenticating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.get_hasAuthenticationFailed
bool MasterServer::BaseClientMessageHandler::get_hasAuthenticationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::get_hasAuthenticationFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasAuthenticationFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.SendOrderedAuthenticatedRequest
void MasterServer::BaseClientMessageHandler::SendOrderedAuthenticatedRequest(::Il2CppString* queue, MasterServer::IMasterServerReliableRequest* message, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::SendOrderedAuthenticatedRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOrderedAuthenticatedRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(queue), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, queue, message, cancellationToken);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.SendOrderedAuthenticatedRequestAsync
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::SendOrderedAuthenticatedRequestAsync(System::Threading::Tasks::Task* previousTask, MasterServer::IMasterServerReliableRequest* message, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::SendOrderedAuthenticatedRequestAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOrderedAuthenticatedRequestAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousTask), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, previousTask, message, cancellationToken);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.SendAuthenticatedRequestAsync
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::SendAuthenticatedRequestAsync(MasterServer::IMasterServerReliableRequest* message, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::SendAuthenticatedRequestAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAuthenticatedRequestAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, message, cancellationToken);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.OnSendFailed
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::OnSendFailed(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* message, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::OnSendFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSendFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, message, cancellationToken);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.ReauthenticateWithMasterServer
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::ReauthenticateWithMasterServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::ReauthenticateWithMasterServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReauthenticateWithMasterServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.UnauthenticateWithMasterServer
void MasterServer::BaseClientMessageHandler::UnauthenticateWithMasterServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::UnauthenticateWithMasterServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnauthenticateWithMasterServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.AuthenticateWithMasterServerAsync
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::AuthenticateWithMasterServerAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::AuthenticateWithMasterServerAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateWithMasterServerAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.AuthenticateWithMasterServer
void MasterServer::BaseClientMessageHandler::AuthenticateWithMasterServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::AuthenticateWithMasterServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateWithMasterServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.AuthenticateWithMasterServerAsyncInternalVerbose
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::AuthenticateWithMasterServerAsyncInternalVerbose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::AuthenticateWithMasterServerAsyncInternalVerbose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateWithMasterServerAsyncInternalVerbose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.AuthenticateWithMasterServerAsyncInternal
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::AuthenticateWithMasterServerAsyncInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::AuthenticateWithMasterServerAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateWithMasterServerAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.GetAuthenticationRequest
System::Threading::Tasks::Task_1<MasterServer::IMasterServerAuthenticateRequest*>* MasterServer::BaseClientMessageHandler::GetAuthenticationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::GetAuthenticationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAuthenticationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::IMasterServerAuthenticateRequest*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.VerifySignature
System::Threading::Tasks::Task_1<bool>* MasterServer::BaseClientMessageHandler::VerifySignature(::Array<uint8_t>* clientRandom, ::Array<uint8_t>* serverRandom, ::Array<uint8_t>* serverKey, ::Array<uint8_t>* signature, ::Array<::Array<uint8_t>*>* certData) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::VerifySignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientRandom), ::il2cpp_utils::ExtractType(serverRandom), ::il2cpp_utils::ExtractType(serverKey), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(certData)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(___instance_arg, ___internal__method, clientRandom, serverRandom, serverKey, signature, certData);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.HandshakeLog
void MasterServer::BaseClientMessageHandler::HandshakeLog(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::HandshakeLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandshakeLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, message);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.Dispose
void MasterServer::BaseClientMessageHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.ShouldHandleHandshakeMessage
bool MasterServer::BaseClientMessageHandler::ShouldHandleHandshakeMessage(MasterServer::IHandshakeMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::ShouldHandleHandshakeMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleHandshakeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.ShouldHandleMessageFromEndPoint
bool MasterServer::BaseClientMessageHandler::ShouldHandleMessageFromEndPoint(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::ShouldHandleMessageFromEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleMessageFromEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, endPoint);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<SendOrderedAuthenticatedRequest>d__18
#include "MasterServer/BaseClientMessageHandler_-SendOrderedAuthenticatedRequest-d__18.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_set_$$t__builder(System::Runtime::CompilerServices::AsyncVoidMethodBuilder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseClientMessageHandler <>4__this
MasterServer::BaseClientMessageHandler* MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.BaseClientMessageHandler <>4__this
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_set_$$4__this(MasterServer::BaseClientMessageHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String queue
::Il2CppString* MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_get_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_get_queue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queue"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String queue
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_set_queue(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_set_queue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queue"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.IMasterServerReliableRequest message
MasterServer::IMasterServerReliableRequest* MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_get_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_get_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.IMasterServerReliableRequest message
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_set_message(MasterServer::IMasterServerReliableRequest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_set_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_get_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_get_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.CancellationToken cancellationToken
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_set_cancellationToken(System::Threading::CancellationToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_set_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task <task>5__2
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_get_$task$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_get_$task$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<task>5__2"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Threading.Tasks.Task <task>5__2
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_set_$task$5__2(System::Threading::Tasks::Task* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_set_$task$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<task>5__2"))->offset;
  *reinterpret_cast<System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<SendOrderedAuthenticatedRequest>d__18.MoveNext
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<SendOrderedAuthenticatedRequest>d__18.SetStateMachine
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<SendOrderedAuthenticatedRequestAsync>d__19
#include "MasterServer/BaseClientMessageHandler_-SendOrderedAuthenticatedRequestAsync-d__19.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.Task previousTask
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_get_previousTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_get_previousTask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousTask"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.Tasks.Task previousTask
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_set_previousTask(System::Threading::Tasks::Task* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_set_previousTask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousTask"))->offset;
  *reinterpret_cast<System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseClientMessageHandler <>4__this
MasterServer::BaseClientMessageHandler* MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.BaseClientMessageHandler <>4__this
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_set_$$4__this(MasterServer::BaseClientMessageHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.IMasterServerReliableRequest message
MasterServer::IMasterServerReliableRequest* MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_get_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_get_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.IMasterServerReliableRequest message
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_set_message(MasterServer::IMasterServerReliableRequest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_set_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_get_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_get_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.CancellationToken cancellationToken
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_set_cancellationToken(System::Threading::CancellationToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_set_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<SendOrderedAuthenticatedRequestAsync>d__19.MoveNext
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<SendOrderedAuthenticatedRequestAsync>d__19.SetStateMachine
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<SendAuthenticatedRequestAsync>d__21
#include "MasterServer/BaseClientMessageHandler_-SendAuthenticatedRequestAsync-d__21.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
void MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseClientMessageHandler <>4__this
MasterServer::BaseClientMessageHandler* MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.BaseClientMessageHandler <>4__this
void MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_set_$$4__this(MasterServer::BaseClientMessageHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.IMasterServerReliableRequest message
MasterServer::IMasterServerReliableRequest* MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_get_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_get_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.IMasterServerReliableRequest message
void MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_set_message(MasterServer::IMasterServerReliableRequest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_set_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_get_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_get_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.CancellationToken cancellationToken
void MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_set_cancellationToken(System::Threading::CancellationToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_set_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
void MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<SendAuthenticatedRequestAsync>d__21.MoveNext
void MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<SendAuthenticatedRequestAsync>d__21.SetStateMachine
void MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<OnSendFailed>d__22
#include "MasterServer/BaseClientMessageHandler_-OnSendFailed-d__22.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
void MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseClientMessageHandler <>4__this
MasterServer::BaseClientMessageHandler* MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.BaseClientMessageHandler <>4__this
void MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_set_$$4__this(MasterServer::BaseClientMessageHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.IMasterServerReliableRequest message
MasterServer::IMasterServerReliableRequest* MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_get_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_get_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.IMasterServerReliableRequest message
void MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_set_message(MasterServer::IMasterServerReliableRequest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_set_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 protocolVersion
uint MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_get_protocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_get_protocolVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.UInt32 protocolVersion
void MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_set_protocolVersion(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_set_protocolVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint remoteEndPoint
System::Net::IPEndPoint* MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_get_remoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_get_remoteEndPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Net.IPEndPoint remoteEndPoint
void MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_set_remoteEndPoint(System::Net::IPEndPoint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_set_remoteEndPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_get_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_get_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.CancellationToken cancellationToken
void MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_set_cancellationToken(System::Threading::CancellationToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_set_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
void MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<OnSendFailed>d__22.MoveNext
void MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<OnSendFailed>d__22.SetStateMachine
void MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<ReauthenticateWithMasterServer>d__24
#include "MasterServer/BaseClientMessageHandler_-ReauthenticateWithMasterServer-d__24.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
void MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseClientMessageHandler <>4__this
MasterServer::BaseClientMessageHandler* MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.BaseClientMessageHandler <>4__this
void MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::_set_$$4__this(MasterServer::BaseClientMessageHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
void MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<ReauthenticateWithMasterServer>d__24.MoveNext
void MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<ReauthenticateWithMasterServer>d__24.SetStateMachine
void MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServer>d__27
#include "MasterServer/BaseClientMessageHandler_-AuthenticateWithMasterServer-d__27.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::_set_$$t__builder(System::Runtime::CompilerServices::AsyncVoidMethodBuilder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseClientMessageHandler <>4__this
MasterServer::BaseClientMessageHandler* MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.BaseClientMessageHandler <>4__this
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::_set_$$4__this(MasterServer::BaseClientMessageHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServer>d__27.MoveNext
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServer>d__27.SetStateMachine
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServerAsyncInternalVerbose>d__28
#include "MasterServer/BaseClientMessageHandler_-AuthenticateWithMasterServerAsyncInternalVerbose-d__28.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseClientMessageHandler <>4__this
MasterServer::BaseClientMessageHandler* MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.BaseClientMessageHandler <>4__this
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::_set_$$4__this(MasterServer::BaseClientMessageHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServerAsyncInternalVerbose>d__28.MoveNext
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServerAsyncInternalVerbose>d__28.SetStateMachine
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<>c__DisplayClass29_0
#include "MasterServer/BaseClientMessageHandler_--c__DisplayClass29_0.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: MasterServer.HelloVerifyRequest
#include "MasterServer/HelloVerifyRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseClientMessageHandler <>4__this
MasterServer::BaseClientMessageHandler* MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0::_get_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.BaseClientMessageHandler <>4__this
void MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0::_set_$$4__this(MasterServer::BaseClientMessageHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0::_set_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] serverPublicKey
::Array<uint8_t>* MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0::_get_serverPublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0::_get_serverPublicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverPublicKey"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Byte[] serverPublicKey
void MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0::_set_serverPublicKey(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0::_set_serverPublicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverPublicKey"))->offset;
  *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<>c__DisplayClass29_0.<AuthenticateWithMasterServerAsyncInternal>b__0
System::Threading::Tasks::Task_1<MasterServer::HelloVerifyRequest*>* MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0::$AuthenticateWithMasterServerAsyncInternal$b__0(uint protocolVersion, System::Net::IPEndPoint* ep, MasterServer::IMasterServerReliableRequest* request, System::Threading::CancellationToken ct) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0::<AuthenticateWithMasterServerAsyncInternal>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AuthenticateWithMasterServerAsyncInternal>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(ep), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(ct)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::HelloVerifyRequest*>*, false>(___instance_arg, ___internal__method, protocolVersion, ep, request, ct);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<>c__DisplayClass29_0.<AuthenticateWithMasterServerAsyncInternal>b__1
System::Threading::Tasks::Task_1<::Array<uint8_t>*>* MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0::$AuthenticateWithMasterServerAsyncInternal$b__1(System::Threading::Tasks::Task_1<GlobalNamespace::IDiffieHellmanKeyPair*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0::<AuthenticateWithMasterServerAsyncInternal>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AuthenticateWithMasterServerAsyncInternal>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<::Array<uint8_t>*>*, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServerAsyncInternal>d__29
#include "MasterServer/BaseClientMessageHandler_-AuthenticateWithMasterServerAsyncInternal-d__29.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: MasterServer.IMasterServerAuthenticateRequest
#include "MasterServer/IMasterServerAuthenticateRequest.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
// Including type: MasterServer.ServerCertificateRequest
#include "MasterServer/ServerCertificateRequest.hpp"
// Including type: MasterServer.HelloVerifyRequest
#include "MasterServer/HelloVerifyRequest.hpp"
// Including type: MasterServer.ServerHelloRequest
#include "MasterServer/ServerHelloRequest.hpp"
// Including type: MasterServer.ChangeCipherSpecRequest
#include "MasterServer/ChangeCipherSpecRequest.hpp"
// Including type: MasterServer.IMasterServerAuthenticateResponse
#include "MasterServer/IMasterServerAuthenticateResponse.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<>c__DisplayClass29_0
#include "MasterServer/BaseClientMessageHandler_--c__DisplayClass29_0.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseClientMessageHandler <>4__this
MasterServer::BaseClientMessageHandler* MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.BaseClientMessageHandler <>4__this
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$4__this(MasterServer::BaseClientMessageHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MasterServer.BaseClientMessageHandler/MasterServer.<>c__DisplayClass29_0 <>8__1
MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0* MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$8__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MasterServer.BaseClientMessageHandler/MasterServer.<>c__DisplayClass29_0 <>8__1
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$8__1(MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$8__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  *reinterpret_cast<MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IPEndPoint <endPoint>5__2
System::Net::IPEndPoint* MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$endPoint$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$endPoint$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<endPoint>5__2"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Net.IPEndPoint <endPoint>5__2
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$endPoint$5__2(System::Net::IPEndPoint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$endPoint$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<endPoint>5__2"))->offset;
  *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MasterServer.IMasterServerAuthenticateRequest <authenticationRequest>5__3
MasterServer::IMasterServerAuthenticateRequest* MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$authenticationRequest$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$authenticationRequest$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<authenticationRequest>5__3"))->offset;
  return *reinterpret_cast<MasterServer::IMasterServerAuthenticateRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MasterServer.IMasterServerAuthenticateRequest <authenticationRequest>5__3
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$authenticationRequest$5__3(MasterServer::IMasterServerAuthenticateRequest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$authenticationRequest$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<authenticationRequest>5__3"))->offset;
  *reinterpret_cast<MasterServer::IMasterServerAuthenticateRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <clientRandom>5__4
::Array<uint8_t>* MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$clientRandom$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$clientRandom$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clientRandom>5__4"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Byte[] <clientRandom>5__4
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$clientRandom$5__4(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$clientRandom$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clientRandom>5__4"))->offset;
  *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<IDiffieHellmanKeyPair> <generateKeysTask>5__5
System::Threading::Tasks::Task_1<GlobalNamespace::IDiffieHellmanKeyPair*>* MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$generateKeysTask$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$generateKeysTask$5__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<generateKeysTask>5__5"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task_1<GlobalNamespace::IDiffieHellmanKeyPair*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Threading.Tasks.Task`1<IDiffieHellmanKeyPair> <generateKeysTask>5__5
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$generateKeysTask$5__5(System::Threading::Tasks::Task_1<GlobalNamespace::IDiffieHellmanKeyPair*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$generateKeysTask$5__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<generateKeysTask>5__5"))->offset;
  *reinterpret_cast<System::Threading::Tasks::Task_1<GlobalNamespace::IDiffieHellmanKeyPair*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<MasterServer.ServerCertificateRequest> <serverCertificateTask>5__6
System::Threading::Tasks::Task_1<MasterServer::ServerCertificateRequest*>* MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$serverCertificateTask$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$serverCertificateTask$5__6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<serverCertificateTask>5__6"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task_1<MasterServer::ServerCertificateRequest*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Threading.Tasks.Task`1<MasterServer.ServerCertificateRequest> <serverCertificateTask>5__6
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$serverCertificateTask$5__6(System::Threading::Tasks::Task_1<MasterServer::ServerCertificateRequest*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$serverCertificateTask$5__6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<serverCertificateTask>5__6"))->offset;
  *reinterpret_cast<System::Threading::Tasks::Task_1<MasterServer::ServerCertificateRequest*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <serverRandom>5__7
::Array<uint8_t>* MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$serverRandom$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$serverRandom$5__7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<serverRandom>5__7"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Byte[] <serverRandom>5__7
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$serverRandom$5__7(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$serverRandom$5__7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<serverRandom>5__7"))->offset;
  *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <signature>5__8
::Array<uint8_t>* MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$signature$5__8() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$signature$5__8");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<signature>5__8"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Byte[] <signature>5__8
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$signature$5__8(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$signature$5__8");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<signature>5__8"))->offset;
  *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <responseId>5__9
uint MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$responseId$5__9() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$responseId$5__9");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<responseId>5__9"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.UInt32 <responseId>5__9
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$responseId$5__9(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$responseId$5__9");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<responseId>5__9"))->offset;
  *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<System.Byte[]> <getPreMasterSecretTask>5__10
System::Threading::Tasks::Task_1<::Array<uint8_t>*>* MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$getPreMasterSecretTask$5__10() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$getPreMasterSecretTask$5__10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<getPreMasterSecretTask>5__10"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task_1<::Array<uint8_t>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Threading.Tasks.Task`1<System.Byte[]> <getPreMasterSecretTask>5__10
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$getPreMasterSecretTask$5__10(System::Threading::Tasks::Task_1<::Array<uint8_t>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$getPreMasterSecretTask$5__10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<getPreMasterSecretTask>5__10"))->offset;
  *reinterpret_cast<System::Threading::Tasks::Task_1<::Array<uint8_t>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<System.Boolean> <verifySignatureTask>5__11
System::Threading::Tasks::Task_1<bool>* MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$verifySignatureTask$5__11() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$verifySignatureTask$5__11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<verifySignatureTask>5__11"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Threading.Tasks.Task`1<System.Boolean> <verifySignatureTask>5__11
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$verifySignatureTask$5__11(System::Threading::Tasks::Task_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$verifySignatureTask$5__11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<verifySignatureTask>5__11"))->offset;
  *reinterpret_cast<System::Threading::Tasks::Task_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private IDiffieHellmanKeyPair <clientKeys>5__12
GlobalNamespace::IDiffieHellmanKeyPair* MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$clientKeys$5__12() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$clientKeys$5__12");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clientKeys>5__12"))->offset;
  return *reinterpret_cast<GlobalNamespace::IDiffieHellmanKeyPair**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private IDiffieHellmanKeyPair <clientKeys>5__12
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$clientKeys$5__12(GlobalNamespace::IDiffieHellmanKeyPair* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$clientKeys$5__12");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clientKeys>5__12"))->offset;
  *reinterpret_cast<GlobalNamespace::IDiffieHellmanKeyPair**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private EncryptionUtility/IEncryptionState <encryptionState>5__13
GlobalNamespace::EncryptionUtility::IEncryptionState* MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$encryptionState$5__13() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$encryptionState$5__13");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<encryptionState>5__13"))->offset;
  return *reinterpret_cast<GlobalNamespace::EncryptionUtility::IEncryptionState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private EncryptionUtility/IEncryptionState <encryptionState>5__13
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$encryptionState$5__13(GlobalNamespace::EncryptionUtility::IEncryptionState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$encryptionState$5__13");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<encryptionState>5__13"))->offset;
  *reinterpret_cast<GlobalNamespace::EncryptionUtility::IEncryptionState**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Net.IPEndPoint> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<System::Net::IPEndPoint*> MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<System::Net::IPEndPoint*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Net.IPEndPoint> <>u__1
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<System::Net::IPEndPoint*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<System::Net::IPEndPoint*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.IMasterServerAuthenticateRequest> <>u__2
System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::IMasterServerAuthenticateRequest*> MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::IMasterServerAuthenticateRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.IMasterServerAuthenticateRequest> <>u__2
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__2(System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::IMasterServerAuthenticateRequest*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::IMasterServerAuthenticateRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.HelloVerifyRequest> <>u__3
System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::HelloVerifyRequest*> MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__3"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::HelloVerifyRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.HelloVerifyRequest> <>u__3
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__3(System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::HelloVerifyRequest*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__3"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::HelloVerifyRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.ServerHelloRequest> <>u__4
System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::ServerHelloRequest*> MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__4"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::ServerHelloRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.ServerHelloRequest> <>u__4
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__4(System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::ServerHelloRequest*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__4"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::ServerHelloRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.ServerCertificateRequest> <>u__5
System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::ServerCertificateRequest*> MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__5"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::ServerCertificateRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.ServerCertificateRequest> <>u__5
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__5(System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::ServerCertificateRequest*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__5"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::ServerCertificateRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IDiffieHellmanKeyPair> <>u__6
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::IDiffieHellmanKeyPair*> MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__6"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::IDiffieHellmanKeyPair*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IDiffieHellmanKeyPair> <>u__6
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__6(System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::IDiffieHellmanKeyPair*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__6"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::IDiffieHellmanKeyPair*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__7
System::Runtime::CompilerServices::TaskAwaiter_1<bool> MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__7"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__7
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__7(System::Runtime::CompilerServices::TaskAwaiter_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__7"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.ChangeCipherSpecRequest> <>u__8
System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::ChangeCipherSpecRequest*> MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__8() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__8");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__8"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::ChangeCipherSpecRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.ChangeCipherSpecRequest> <>u__8
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__8(System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::ChangeCipherSpecRequest*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__8");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__8"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::ChangeCipherSpecRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Byte[]> <>u__9
System::Runtime::CompilerServices::TaskAwaiter_1<::Array<uint8_t>*> MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__9() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__9");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__9"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<::Array<uint8_t>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Byte[]> <>u__9
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__9(System::Runtime::CompilerServices::TaskAwaiter_1<::Array<uint8_t>*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__9");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__9"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<::Array<uint8_t>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<EncryptionUtility/IEncryptionState> <>u__10
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EncryptionUtility::IEncryptionState*> MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__10() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__10"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EncryptionUtility::IEncryptionState*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<EncryptionUtility/IEncryptionState> <>u__10
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__10(System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EncryptionUtility::IEncryptionState*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__10"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EncryptionUtility::IEncryptionState*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.IMasterServerAuthenticateResponse> <>u__11
System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::IMasterServerAuthenticateResponse*> MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__11() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_get_$$u__11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__11"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::IMasterServerAuthenticateResponse*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.IMasterServerAuthenticateResponse> <>u__11
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__11(System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::IMasterServerAuthenticateResponse*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::_set_$$u__11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__11"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::IMasterServerAuthenticateResponse*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServerAsyncInternal>d__29.MoveNext
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServerAsyncInternal>d__29.SetStateMachine
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<>c__DisplayClass32_0
#include "MasterServer/BaseClientMessageHandler_--c__DisplayClass32_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte[] clientRandom
::Array<uint8_t>* MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_get_clientRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_get_clientRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientRandom"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Byte[] clientRandom
void MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_set_clientRandom(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_set_clientRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientRandom"))->offset;
  *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] serverRandom
::Array<uint8_t>* MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_get_serverRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_get_serverRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverRandom"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Byte[] serverRandom
void MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_set_serverRandom(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_set_serverRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverRandom"))->offset;
  *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] serverKey
::Array<uint8_t>* MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_get_serverKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_get_serverKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverKey"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Byte[] serverKey
void MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_set_serverKey(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_set_serverKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverKey"))->offset;
  *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[][] certData
::Array<::Array<uint8_t>*>* MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_get_certData() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_get_certData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certData"))->offset;
  return *reinterpret_cast<::Array<::Array<uint8_t>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Byte[][] certData
void MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_set_certData(::Array<::Array<uint8_t>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_set_certData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certData"))->offset;
  *reinterpret_cast<::Array<::Array<uint8_t>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseClientMessageHandler <>4__this
MasterServer::BaseClientMessageHandler* MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_get_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.BaseClientMessageHandler <>4__this
void MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_set_$$4__this(MasterServer::BaseClientMessageHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_set_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] signature
::Array<uint8_t>* MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_get_signature() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_get_signature");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signature"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Byte[] signature
void MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_set_signature(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::_set_signature");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signature"))->offset;
  *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<>c__DisplayClass32_0.<VerifySignature>b__0
bool MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::$VerifySignature$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::<VerifySignature>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<VerifySignature>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.BaseMasterServerMultipartMessage
#include "MasterServer/BaseMasterServerMultipartMessage.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kDataChunkSize
int MasterServer::BaseMasterServerMultipartMessage::_get_kDataChunkSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::_get_kDataChunkSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "BaseMasterServerMultipartMessage", "kDataChunkSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDataChunkSize
void MasterServer::BaseMasterServerMultipartMessage::_set_kDataChunkSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::_set_kDataChunkSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "BaseMasterServerMultipartMessage", "kDataChunkSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaximumDataSize
int MasterServer::BaseMasterServerMultipartMessage::_get_kMaximumDataSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::_get_kMaximumDataSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "BaseMasterServerMultipartMessage", "kMaximumDataSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaximumDataSize
void MasterServer::BaseMasterServerMultipartMessage::_set_kMaximumDataSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::_set_kMaximumDataSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "BaseMasterServerMultipartMessage", "kMaximumDataSize", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <multipartMessageId>k__BackingField
uint MasterServer::BaseMasterServerMultipartMessage::_get_$multipartMessageId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::_get_$multipartMessageId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<multipartMessageId>k__BackingField"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.UInt32 <multipartMessageId>k__BackingField
void MasterServer::BaseMasterServerMultipartMessage::_set_$multipartMessageId$k__BackingField(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::_set_$multipartMessageId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<multipartMessageId>k__BackingField"))->offset;
  *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <offset>k__BackingField
int MasterServer::BaseMasterServerMultipartMessage::_get_$offset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::_get_$offset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<offset>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <offset>k__BackingField
void MasterServer::BaseMasterServerMultipartMessage::_set_$offset$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::_set_$offset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<offset>k__BackingField"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <length>k__BackingField
int MasterServer::BaseMasterServerMultipartMessage::_get_$length$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::_get_$length$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<length>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <length>k__BackingField
void MasterServer::BaseMasterServerMultipartMessage::_set_$length$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::_set_$length$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<length>k__BackingField"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <totalLength>k__BackingField
int MasterServer::BaseMasterServerMultipartMessage::_get_$totalLength$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::_get_$totalLength$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<totalLength>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <totalLength>k__BackingField
void MasterServer::BaseMasterServerMultipartMessage::_set_$totalLength$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::_set_$totalLength$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<totalLength>k__BackingField"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _data
::Array<uint8_t>* MasterServer::BaseMasterServerMultipartMessage::_get__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::_get__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Byte[] _data
void MasterServer::BaseMasterServerMultipartMessage::_set__data(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::_set__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.get_multipartMessageId
uint MasterServer::BaseMasterServerMultipartMessage::get_multipartMessageId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::get_multipartMessageId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multipartMessageId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.set_multipartMessageId
void MasterServer::BaseMasterServerMultipartMessage::set_multipartMessageId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::set_multipartMessageId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_multipartMessageId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.get_offset
int MasterServer::BaseMasterServerMultipartMessage::get_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::get_offset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.set_offset
void MasterServer::BaseMasterServerMultipartMessage::set_offset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::set_offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.get_length
int MasterServer::BaseMasterServerMultipartMessage::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::get_length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.set_length
void MasterServer::BaseMasterServerMultipartMessage::set_length(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::set_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.get_totalLength
int MasterServer::BaseMasterServerMultipartMessage::get_totalLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::get_totalLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_totalLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.set_totalLength
void MasterServer::BaseMasterServerMultipartMessage::set_totalLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::set_totalLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_totalLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.get_data
::Array<uint8_t>* MasterServer::BaseMasterServerMultipartMessage::get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::get_data");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.Init
MasterServer::BaseMasterServerMultipartMessage* MasterServer::BaseMasterServerMultipartMessage::Init(uint multipartMessageId, ::Array<uint8_t>* data, int offset, int length, int totalLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multipartMessageId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(totalLength)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::BaseMasterServerMultipartMessage*, false>(___instance_arg, ___internal__method, multipartMessageId, data, offset, length, totalLength);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.Serialize
void MasterServer::BaseMasterServerMultipartMessage::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.Deserialize
void MasterServer::BaseMasterServerMultipartMessage::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.IDedicatedServerClientToServerMessage
#include "MasterServer/IDedicatedServerClientToServerMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IDedicatedServerClientToServerMessage.get_dedicatedServerId
::Il2CppString* MasterServer::IDedicatedServerClientToServerMessage::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IDedicatedServerClientToServerMessage::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.IDedicatedServerClientToServerMessage.get_dedicatedServerCreationTime
int64_t MasterServer::IDedicatedServerClientToServerMessage::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IDedicatedServerClientToServerMessage::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.AuthenticateDedicatedServerRequest
#include "MasterServer/AuthenticateDedicatedServerRequest.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
::Il2CppString* MasterServer::AuthenticateDedicatedServerRequest::_get_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::_get_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String <dedicatedServerId>k__BackingField
void MasterServer::AuthenticateDedicatedServerRequest::_set_$dedicatedServerId$k__BackingField(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::_set_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable nonce
GlobalNamespace::ByteArrayNetSerializable* MasterServer::AuthenticateDedicatedServerRequest::_get_nonce() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::_get_nonce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nonce"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable nonce
void MasterServer::AuthenticateDedicatedServerRequest::_set_nonce(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::_set_nonce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nonce"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable hash
GlobalNamespace::ByteArrayNetSerializable* MasterServer::AuthenticateDedicatedServerRequest::_get_hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::_get_hash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable hash
void MasterServer::AuthenticateDedicatedServerRequest::_set_hash(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::_set_hash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 timestamp
int64_t MasterServer::AuthenticateDedicatedServerRequest::_get_timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::_get_timestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timestamp"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int64 timestamp
void MasterServer::AuthenticateDedicatedServerRequest::_set_timestamp(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::_set_timestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timestamp"))->offset;
  *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::AuthenticateDedicatedServerRequest*>* MasterServer::AuthenticateDedicatedServerRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "AuthenticateDedicatedServerRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::AuthenticateDedicatedServerRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerRequest.get_dedicatedServerId
::Il2CppString* MasterServer::AuthenticateDedicatedServerRequest::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::get_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerRequest.set_dedicatedServerId
void MasterServer::AuthenticateDedicatedServerRequest::set_dedicatedServerId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerRequest.Init
MasterServer::AuthenticateDedicatedServerRequest* MasterServer::AuthenticateDedicatedServerRequest::Init(::Il2CppString* dedicatedServerId, ::Array<uint8_t>* nonce, ::Array<uint8_t>* hash, int64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(nonce), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(timestamp)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::AuthenticateDedicatedServerRequest*, false>(___instance_arg, ___internal__method, dedicatedServerId, nonce, hash, timestamp);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerRequest.Serialize
void MasterServer::AuthenticateDedicatedServerRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerRequest.Deserialize
void MasterServer::AuthenticateDedicatedServerRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerRequest.Release
void MasterServer::AuthenticateDedicatedServerRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.AuthenticateDedicatedServerResponse
#include "MasterServer/AuthenticateDedicatedServerResponse.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServer.AuthenticateDedicatedServerResponse/MasterServer.Result result
MasterServer::AuthenticateDedicatedServerResponse::Result MasterServer::AuthenticateDedicatedServerResponse::_get_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::_get_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<MasterServer::AuthenticateDedicatedServerResponse::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.AuthenticateDedicatedServerResponse/MasterServer.Result result
void MasterServer::AuthenticateDedicatedServerResponse::_set_result(MasterServer::AuthenticateDedicatedServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::_set_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  *reinterpret_cast<MasterServer::AuthenticateDedicatedServerResponse::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerResponse.get_pool
GlobalNamespace::PacketPool_1<MasterServer::AuthenticateDedicatedServerResponse*>* MasterServer::AuthenticateDedicatedServerResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "AuthenticateDedicatedServerResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::AuthenticateDedicatedServerResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerResponse.get_isAuthenticated
bool MasterServer::AuthenticateDedicatedServerResponse::get_isAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::get_isAuthenticated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerResponse.Init
MasterServer::AuthenticateDedicatedServerResponse* MasterServer::AuthenticateDedicatedServerResponse::Init(MasterServer::AuthenticateDedicatedServerResponse::Result result) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::AuthenticateDedicatedServerResponse*, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerResponse.get_resultCode
uint8_t MasterServer::AuthenticateDedicatedServerResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerResponse.get_resultCodeString
::Il2CppString* MasterServer::AuthenticateDedicatedServerResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerResponse.Serialize
void MasterServer::AuthenticateDedicatedServerResponse::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerResponse.Deserialize
void MasterServer::AuthenticateDedicatedServerResponse::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerResponse.Release
void MasterServer::AuthenticateDedicatedServerResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.AuthenticateDedicatedServerResponse/MasterServer.Result
#include "MasterServer/AuthenticateDedicatedServerResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.AuthenticateDedicatedServerResponse/MasterServer.Result Success
MasterServer::AuthenticateDedicatedServerResponse::Result MasterServer::AuthenticateDedicatedServerResponse::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AuthenticateDedicatedServerResponse::Result>("MasterServer", "AuthenticateDedicatedServerResponse/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AuthenticateDedicatedServerResponse/MasterServer.Result Success
void MasterServer::AuthenticateDedicatedServerResponse::Result::_set_Success(MasterServer::AuthenticateDedicatedServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AuthenticateDedicatedServerResponse/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AuthenticateDedicatedServerResponse/MasterServer.Result Failed
MasterServer::AuthenticateDedicatedServerResponse::Result MasterServer::AuthenticateDedicatedServerResponse::Result::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Result::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AuthenticateDedicatedServerResponse::Result>("MasterServer", "AuthenticateDedicatedServerResponse/Result", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AuthenticateDedicatedServerResponse/MasterServer.Result Failed
void MasterServer::AuthenticateDedicatedServerResponse::Result::_set_Failed(MasterServer::AuthenticateDedicatedServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Result::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AuthenticateDedicatedServerResponse/Result", "Failed", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AuthenticateDedicatedServerResponse/MasterServer.Result UnknownError
MasterServer::AuthenticateDedicatedServerResponse::Result MasterServer::AuthenticateDedicatedServerResponse::Result::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Result::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AuthenticateDedicatedServerResponse::Result>("MasterServer", "AuthenticateDedicatedServerResponse/Result", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AuthenticateDedicatedServerResponse/MasterServer.Result UnknownError
void MasterServer::AuthenticateDedicatedServerResponse::Result::_set_UnknownError(MasterServer::AuthenticateDedicatedServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Result::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AuthenticateDedicatedServerResponse/Result", "UnknownError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int MasterServer::AuthenticateDedicatedServerResponse::Result::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Result::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void MasterServer::AuthenticateDedicatedServerResponse::Result::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Result::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.CreateRelayServerRequest
#include "MasterServer/CreateRelayServerRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String secret
::Il2CppString* MasterServer::CreateRelayServerRequest::_get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_get_secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String secret
void MasterServer::CreateRelayServerRequest::_set_secret(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_set_secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String ownerUserId
::Il2CppString* MasterServer::CreateRelayServerRequest::_get_ownerUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_get_ownerUserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerUserId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String ownerUserId
void MasterServer::CreateRelayServerRequest::_set_ownerUserId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_set_ownerUserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerUserId"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String ownerUserName
::Il2CppString* MasterServer::CreateRelayServerRequest::_get_ownerUserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_get_ownerUserName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerUserName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String ownerUserName
void MasterServer::CreateRelayServerRequest::_set_ownerUserName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_set_ownerUserName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerUserName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint ownerEndPoint
System::Net::IPEndPoint* MasterServer::CreateRelayServerRequest::_get_ownerEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_get_ownerEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerEndPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Net.IPEndPoint ownerEndPoint
void MasterServer::CreateRelayServerRequest::_set_ownerEndPoint(System::Net::IPEndPoint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_set_ownerEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerEndPoint"))->offset;
  *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable ownerRandom
GlobalNamespace::ByteArrayNetSerializable* MasterServer::CreateRelayServerRequest::_get_ownerRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_get_ownerRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerRandom"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable ownerRandom
void MasterServer::CreateRelayServerRequest::_set_ownerRandom(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_set_ownerRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerRandom"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable ownerPublicKey
GlobalNamespace::ByteArrayNetSerializable* MasterServer::CreateRelayServerRequest::_get_ownerPublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_get_ownerPublicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerPublicKey"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable ownerPublicKey
void MasterServer::CreateRelayServerRequest::_set_ownerPublicKey(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_set_ownerPublicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerPublicKey"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String clientUserId
::Il2CppString* MasterServer::CreateRelayServerRequest::_get_clientUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_get_clientUserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientUserId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String clientUserId
void MasterServer::CreateRelayServerRequest::_set_clientUserId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_set_clientUserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientUserId"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String clientUserName
::Il2CppString* MasterServer::CreateRelayServerRequest::_get_clientUserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_get_clientUserName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientUserName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String clientUserName
void MasterServer::CreateRelayServerRequest::_set_clientUserName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_set_clientUserName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientUserName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint clientEndPoint
System::Net::IPEndPoint* MasterServer::CreateRelayServerRequest::_get_clientEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_get_clientEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientEndPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Net.IPEndPoint clientEndPoint
void MasterServer::CreateRelayServerRequest::_set_clientEndPoint(System::Net::IPEndPoint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_set_clientEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientEndPoint"))->offset;
  *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable clientRandom
GlobalNamespace::ByteArrayNetSerializable* MasterServer::CreateRelayServerRequest::_get_clientRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_get_clientRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientRandom"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable clientRandom
void MasterServer::CreateRelayServerRequest::_set_clientRandom(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_set_clientRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientRandom"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable clientPublicKey
GlobalNamespace::ByteArrayNetSerializable* MasterServer::CreateRelayServerRequest::_get_clientPublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_get_clientPublicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientPublicKey"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable clientPublicKey
void MasterServer::CreateRelayServerRequest::_set_clientPublicKey(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::_set_clientPublicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientPublicKey"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.CreateRelayServerRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::CreateRelayServerRequest*>* MasterServer::CreateRelayServerRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "CreateRelayServerRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::CreateRelayServerRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.CreateRelayServerRequest.Init
MasterServer::CreateRelayServerRequest* MasterServer::CreateRelayServerRequest::Init(::Il2CppString* secret, ::Il2CppString* ownerUserId, ::Il2CppString* ownerUserName, System::Net::IPEndPoint* ownerEndPoint, ::Array<uint8_t>* ownerRandom, ::Array<uint8_t>* ownerPublicKey, ::Il2CppString* clientUserId, ::Il2CppString* clientUserName, System::Net::IPEndPoint* clientEndPoint, ::Array<uint8_t>* clientRandom, ::Array<uint8_t>* clientPublicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(ownerUserId), ::il2cpp_utils::ExtractType(ownerUserName), ::il2cpp_utils::ExtractType(ownerEndPoint), ::il2cpp_utils::ExtractType(ownerRandom), ::il2cpp_utils::ExtractType(ownerPublicKey), ::il2cpp_utils::ExtractType(clientUserId), ::il2cpp_utils::ExtractType(clientUserName), ::il2cpp_utils::ExtractType(clientEndPoint), ::il2cpp_utils::ExtractType(clientRandom), ::il2cpp_utils::ExtractType(clientPublicKey)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::CreateRelayServerRequest*, false>(___instance_arg, ___internal__method, secret, ownerUserId, ownerUserName, ownerEndPoint, ownerRandom, ownerPublicKey, clientUserId, clientUserName, clientEndPoint, clientRandom, clientPublicKey);
}
// Autogenerated method: MasterServer.CreateRelayServerRequest.Serialize
void MasterServer::CreateRelayServerRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.CreateRelayServerRequest.Deserialize
void MasterServer::CreateRelayServerRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.CreateRelayServerRequest.Release
void MasterServer::CreateRelayServerRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.CreateRelayServerResponse
#include "MasterServer/CreateRelayServerResponse.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServer.CreateRelayServerResponse/MasterServer.Result result
MasterServer::CreateRelayServerResponse::Result MasterServer::CreateRelayServerResponse::_get_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::_get_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<MasterServer::CreateRelayServerResponse::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.CreateRelayServerResponse/MasterServer.Result result
void MasterServer::CreateRelayServerResponse::_set_result(MasterServer::CreateRelayServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::_set_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  *reinterpret_cast<MasterServer::CreateRelayServerResponse::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
::Il2CppString* MasterServer::CreateRelayServerResponse::_get_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::_get_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String <dedicatedServerId>k__BackingField
void MasterServer::CreateRelayServerResponse::_set_$dedicatedServerId$k__BackingField(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::_set_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
int64_t MasterServer::CreateRelayServerResponse::_get_$dedicatedServerCreationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::_get_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
void MasterServer::CreateRelayServerResponse::_set_$dedicatedServerCreationTime$k__BackingField(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::_set_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String id
::Il2CppString* MasterServer::CreateRelayServerResponse::_get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::_get_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String id
void MasterServer::CreateRelayServerResponse::_set_id(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::_set_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 port
int MasterServer::CreateRelayServerResponse::_get_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::_get_port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 port
void MasterServer::CreateRelayServerResponse::_set_port(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::_set_port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "port"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable random
GlobalNamespace::ByteArrayNetSerializable* MasterServer::CreateRelayServerResponse::_get_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::_get_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable random
void MasterServer::CreateRelayServerResponse::_set_random(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::_set_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable publicKey
GlobalNamespace::ByteArrayNetSerializable* MasterServer::CreateRelayServerResponse::_get_publicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::_get_publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicKey"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable publicKey
void MasterServer::CreateRelayServerResponse::_set_publicKey(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::_set_publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicKey"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.CreateRelayServerResponse.get_pool
GlobalNamespace::PacketPool_1<MasterServer::CreateRelayServerResponse*>* MasterServer::CreateRelayServerResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "CreateRelayServerResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::CreateRelayServerResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.CreateRelayServerResponse.get_dedicatedServerId
::Il2CppString* MasterServer::CreateRelayServerResponse::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.CreateRelayServerResponse.set_dedicatedServerId
void MasterServer::CreateRelayServerResponse::set_dedicatedServerId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.CreateRelayServerResponse.get_dedicatedServerCreationTime
int64_t MasterServer::CreateRelayServerResponse::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.CreateRelayServerResponse.set_dedicatedServerCreationTime
void MasterServer::CreateRelayServerResponse::set_dedicatedServerCreationTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::set_dedicatedServerCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.CreateRelayServerResponse.InitForFailure
MasterServer::CreateRelayServerResponse* MasterServer::CreateRelayServerResponse::InitForFailure(::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, MasterServer::CreateRelayServerResponse::Result result) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::InitForFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::CreateRelayServerResponse*, false>(___instance_arg, ___internal__method, dedicatedServerId, dedicatedServerCreationTime, result);
}
// Autogenerated method: MasterServer.CreateRelayServerResponse.InitForSuccess
MasterServer::CreateRelayServerResponse* MasterServer::CreateRelayServerResponse::InitForSuccess(::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, ::Il2CppString* id, int port, ::Array<uint8_t>* random, ::Array<uint8_t>* publicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::InitForSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::CreateRelayServerResponse*, false>(___instance_arg, ___internal__method, dedicatedServerId, dedicatedServerCreationTime, id, port, random, publicKey);
}
// Autogenerated method: MasterServer.CreateRelayServerResponse.get_resultCode
uint8_t MasterServer::CreateRelayServerResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.CreateRelayServerResponse.get_resultCodeString
::Il2CppString* MasterServer::CreateRelayServerResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.CreateRelayServerResponse.Serialize
void MasterServer::CreateRelayServerResponse::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.CreateRelayServerResponse.Deserialize
void MasterServer::CreateRelayServerResponse::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.CreateRelayServerResponse.Release
void MasterServer::CreateRelayServerResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.CreateRelayServerResponse/MasterServer.Result
#include "MasterServer/CreateRelayServerResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.CreateRelayServerResponse/MasterServer.Result Success
MasterServer::CreateRelayServerResponse::Result MasterServer::CreateRelayServerResponse::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::CreateRelayServerResponse::Result>("MasterServer", "CreateRelayServerResponse/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.CreateRelayServerResponse/MasterServer.Result Success
void MasterServer::CreateRelayServerResponse::Result::_set_Success(MasterServer::CreateRelayServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "CreateRelayServerResponse/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.CreateRelayServerResponse/MasterServer.Result NoAvailableServerSlots
MasterServer::CreateRelayServerResponse::Result MasterServer::CreateRelayServerResponse::Result::_get_NoAvailableServerSlots() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::Result::_get_NoAvailableServerSlots");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::CreateRelayServerResponse::Result>("MasterServer", "CreateRelayServerResponse/Result", "NoAvailableServerSlots"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.CreateRelayServerResponse/MasterServer.Result NoAvailableServerSlots
void MasterServer::CreateRelayServerResponse::Result::_set_NoAvailableServerSlots(MasterServer::CreateRelayServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::Result::_set_NoAvailableServerSlots");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "CreateRelayServerResponse/Result", "NoAvailableServerSlots", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.CreateRelayServerResponse/MasterServer.Result UnknownError
MasterServer::CreateRelayServerResponse::Result MasterServer::CreateRelayServerResponse::Result::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::Result::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::CreateRelayServerResponse::Result>("MasterServer", "CreateRelayServerResponse/Result", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.CreateRelayServerResponse/MasterServer.Result UnknownError
void MasterServer::CreateRelayServerResponse::Result::_set_UnknownError(MasterServer::CreateRelayServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::Result::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "CreateRelayServerResponse/Result", "UnknownError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int MasterServer::CreateRelayServerResponse::Result::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::Result::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void MasterServer::CreateRelayServerResponse::Result::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateRelayServerResponse::Result::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.CreateMatchmakingServerRequest
#include "MasterServer/CreateMatchmakingServerRequest.hpp"
// Including type: MasterServer.CreateMatchmakingServerRequest/MasterServer.V4
#include "MasterServer/CreateMatchmakingServerRequest_V4.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: IVersionedPacketPool`1
#include "GlobalNamespace/IVersionedPacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String secret
::Il2CppString* MasterServer::CreateMatchmakingServerRequest::_get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::_get_secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String secret
void MasterServer::CreateMatchmakingServerRequest::_set_secret(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::_set_secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
GlobalNamespace::BeatmapLevelSelectionMask MasterServer::CreateMatchmakingServerRequest::_get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::_get_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BeatmapLevelSelectionMask selectionMask
void MasterServer::CreateMatchmakingServerRequest::_set_selectionMask(GlobalNamespace::BeatmapLevelSelectionMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::_set_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
::Il2CppString* MasterServer::CreateMatchmakingServerRequest::_get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::_get_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String userId
void MasterServer::CreateMatchmakingServerRequest::_set_userId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::_set_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
::Il2CppString* MasterServer::CreateMatchmakingServerRequest::_get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::_get_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String userName
void MasterServer::CreateMatchmakingServerRequest::_set_userName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::_set_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint userEndPoint
System::Net::IPEndPoint* MasterServer::CreateMatchmakingServerRequest::_get_userEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::_get_userEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userEndPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Net.IPEndPoint userEndPoint
void MasterServer::CreateMatchmakingServerRequest::_set_userEndPoint(System::Net::IPEndPoint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::_set_userEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userEndPoint"))->offset;
  *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable userRandom
GlobalNamespace::ByteArrayNetSerializable* MasterServer::CreateMatchmakingServerRequest::_get_userRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::_get_userRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userRandom"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable userRandom
void MasterServer::CreateMatchmakingServerRequest::_set_userRandom(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::_set_userRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userRandom"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable userPublicKey
GlobalNamespace::ByteArrayNetSerializable* MasterServer::CreateMatchmakingServerRequest::_get_userPublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::_get_userPublicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userPublicKey"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable userPublicKey
void MasterServer::CreateMatchmakingServerRequest::_set_userPublicKey(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::_set_userPublicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userPublicKey"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
GlobalNamespace::GameplayServerConfiguration MasterServer::CreateMatchmakingServerRequest::_get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::_get_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public GameplayServerConfiguration configuration
void MasterServer::CreateMatchmakingServerRequest::_set_configuration(GlobalNamespace::GameplayServerConfiguration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::_set_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  *reinterpret_cast<GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.CreateMatchmakingServerRequest.get_pool
GlobalNamespace::IVersionedPacketPool_1<MasterServer::CreateMatchmakingServerRequest*>* MasterServer::CreateMatchmakingServerRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "CreateMatchmakingServerRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IVersionedPacketPool_1<MasterServer::CreateMatchmakingServerRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.CreateMatchmakingServerRequest.get_version
uint MasterServer::CreateMatchmakingServerRequest::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::get_version");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.CreateMatchmakingServerRequest.Init
MasterServer::CreateMatchmakingServerRequest* MasterServer::CreateMatchmakingServerRequest::Init(::Il2CppString* secret, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, ::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* userEndPoint, ::Array<uint8_t>* userRandom, ::Array<uint8_t>* userPublicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(userEndPoint), ::il2cpp_utils::ExtractType(userRandom), ::il2cpp_utils::ExtractType(userPublicKey)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::CreateMatchmakingServerRequest*, false>(___instance_arg, ___internal__method, secret, selectionMask, configuration, userId, userName, userEndPoint, userRandom, userPublicKey);
}
// Autogenerated method: MasterServer.CreateMatchmakingServerRequest.Release
void MasterServer::CreateMatchmakingServerRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.CreateMatchmakingServerRequest.Serialize
void MasterServer::CreateMatchmakingServerRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.CreateMatchmakingServerRequest.Deserialize
void MasterServer::CreateMatchmakingServerRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.CreateMatchmakingServerRequest/MasterServer.V4
#include "MasterServer/CreateMatchmakingServerRequest_V4.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.CreateMatchmakingServerRequest/MasterServer.V4.get_version
uint MasterServer::CreateMatchmakingServerRequest::V4::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::V4::get_version");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.CreateMatchmakingServerRequest/MasterServer.V4.Serialize
void MasterServer::CreateMatchmakingServerRequest::V4::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::V4::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.CreateMatchmakingServerRequest/MasterServer.V4.Deserialize
void MasterServer::CreateMatchmakingServerRequest::V4::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerRequest::V4::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.CreateMatchmakingServerResponse
#include "MasterServer/CreateMatchmakingServerResponse.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServer.CreateMatchmakingServerResponse/MasterServer.Result result
MasterServer::CreateMatchmakingServerResponse::Result MasterServer::CreateMatchmakingServerResponse::_get_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::_get_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<MasterServer::CreateMatchmakingServerResponse::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.CreateMatchmakingServerResponse/MasterServer.Result result
void MasterServer::CreateMatchmakingServerResponse::_set_result(MasterServer::CreateMatchmakingServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::_set_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  *reinterpret_cast<MasterServer::CreateMatchmakingServerResponse::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
::Il2CppString* MasterServer::CreateMatchmakingServerResponse::_get_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::_get_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String <dedicatedServerId>k__BackingField
void MasterServer::CreateMatchmakingServerResponse::_set_$dedicatedServerId$k__BackingField(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::_set_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
int64_t MasterServer::CreateMatchmakingServerResponse::_get_$dedicatedServerCreationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::_get_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
void MasterServer::CreateMatchmakingServerResponse::_set_$dedicatedServerCreationTime$k__BackingField(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::_set_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String id
::Il2CppString* MasterServer::CreateMatchmakingServerResponse::_get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::_get_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String id
void MasterServer::CreateMatchmakingServerResponse::_set_id(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::_set_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 port
int MasterServer::CreateMatchmakingServerResponse::_get_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::_get_port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 port
void MasterServer::CreateMatchmakingServerResponse::_set_port(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::_set_port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "port"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxPlayerCount
int MasterServer::CreateMatchmakingServerResponse::_get_maxPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::_get_maxPlayerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxPlayerCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 maxPlayerCount
void MasterServer::CreateMatchmakingServerResponse::_set_maxPlayerCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::_set_maxPlayerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxPlayerCount"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable random
GlobalNamespace::ByteArrayNetSerializable* MasterServer::CreateMatchmakingServerResponse::_get_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::_get_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable random
void MasterServer::CreateMatchmakingServerResponse::_set_random(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::_set_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable publicKey
GlobalNamespace::ByteArrayNetSerializable* MasterServer::CreateMatchmakingServerResponse::_get_publicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::_get_publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicKey"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable publicKey
void MasterServer::CreateMatchmakingServerResponse::_set_publicKey(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::_set_publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicKey"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.CreateMatchmakingServerResponse.get_pool
GlobalNamespace::PacketPool_1<MasterServer::CreateMatchmakingServerResponse*>* MasterServer::CreateMatchmakingServerResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "CreateMatchmakingServerResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::CreateMatchmakingServerResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.CreateMatchmakingServerResponse.get_dedicatedServerId
::Il2CppString* MasterServer::CreateMatchmakingServerResponse::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.CreateMatchmakingServerResponse.set_dedicatedServerId
void MasterServer::CreateMatchmakingServerResponse::set_dedicatedServerId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.CreateMatchmakingServerResponse.get_dedicatedServerCreationTime
int64_t MasterServer::CreateMatchmakingServerResponse::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.CreateMatchmakingServerResponse.set_dedicatedServerCreationTime
void MasterServer::CreateMatchmakingServerResponse::set_dedicatedServerCreationTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::set_dedicatedServerCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.CreateMatchmakingServerResponse.InitForFailure
MasterServer::CreateMatchmakingServerResponse* MasterServer::CreateMatchmakingServerResponse::InitForFailure(::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, MasterServer::CreateMatchmakingServerResponse::Result result) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::InitForFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::CreateMatchmakingServerResponse*, false>(___instance_arg, ___internal__method, dedicatedServerId, dedicatedServerCreationTime, result);
}
// Autogenerated method: MasterServer.CreateMatchmakingServerResponse.InitForSuccess
MasterServer::CreateMatchmakingServerResponse* MasterServer::CreateMatchmakingServerResponse::InitForSuccess(::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, ::Il2CppString* id, int port, ::Array<uint8_t>* random, ::Array<uint8_t>* publicKey, int maxPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::InitForSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey), ::il2cpp_utils::ExtractType(maxPlayerCount)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::CreateMatchmakingServerResponse*, false>(___instance_arg, ___internal__method, dedicatedServerId, dedicatedServerCreationTime, id, port, random, publicKey, maxPlayerCount);
}
// Autogenerated method: MasterServer.CreateMatchmakingServerResponse.get_resultCode
uint8_t MasterServer::CreateMatchmakingServerResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.CreateMatchmakingServerResponse.get_resultCodeString
::Il2CppString* MasterServer::CreateMatchmakingServerResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.CreateMatchmakingServerResponse.Serialize
void MasterServer::CreateMatchmakingServerResponse::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.CreateMatchmakingServerResponse.Deserialize
void MasterServer::CreateMatchmakingServerResponse::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.CreateMatchmakingServerResponse.Release
void MasterServer::CreateMatchmakingServerResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.CreateMatchmakingServerResponse/MasterServer.Result
#include "MasterServer/CreateMatchmakingServerResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.CreateMatchmakingServerResponse/MasterServer.Result Success
MasterServer::CreateMatchmakingServerResponse::Result MasterServer::CreateMatchmakingServerResponse::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::CreateMatchmakingServerResponse::Result>("MasterServer", "CreateMatchmakingServerResponse/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.CreateMatchmakingServerResponse/MasterServer.Result Success
void MasterServer::CreateMatchmakingServerResponse::Result::_set_Success(MasterServer::CreateMatchmakingServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "CreateMatchmakingServerResponse/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.CreateMatchmakingServerResponse/MasterServer.Result NoAvailableServerSlots
MasterServer::CreateMatchmakingServerResponse::Result MasterServer::CreateMatchmakingServerResponse::Result::_get_NoAvailableServerSlots() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::Result::_get_NoAvailableServerSlots");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::CreateMatchmakingServerResponse::Result>("MasterServer", "CreateMatchmakingServerResponse/Result", "NoAvailableServerSlots"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.CreateMatchmakingServerResponse/MasterServer.Result NoAvailableServerSlots
void MasterServer::CreateMatchmakingServerResponse::Result::_set_NoAvailableServerSlots(MasterServer::CreateMatchmakingServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::Result::_set_NoAvailableServerSlots");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "CreateMatchmakingServerResponse/Result", "NoAvailableServerSlots", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.CreateMatchmakingServerResponse/MasterServer.Result UnknownError
MasterServer::CreateMatchmakingServerResponse::Result MasterServer::CreateMatchmakingServerResponse::Result::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::Result::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::CreateMatchmakingServerResponse::Result>("MasterServer", "CreateMatchmakingServerResponse/Result", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.CreateMatchmakingServerResponse/MasterServer.Result UnknownError
void MasterServer::CreateMatchmakingServerResponse::Result::_set_UnknownError(MasterServer::CreateMatchmakingServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::Result::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "CreateMatchmakingServerResponse/Result", "UnknownError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int MasterServer::CreateMatchmakingServerResponse::Result::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::Result::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void MasterServer::CreateMatchmakingServerResponse::Result::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateMatchmakingServerResponse::Result::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.DedicatedServerNoLongerOccupiedRequest
#include "MasterServer/DedicatedServerNoLongerOccupiedRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
::Il2CppString* MasterServer::DedicatedServerNoLongerOccupiedRequest::_get_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerNoLongerOccupiedRequest::_get_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String <dedicatedServerId>k__BackingField
void MasterServer::DedicatedServerNoLongerOccupiedRequest::_set_$dedicatedServerId$k__BackingField(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerNoLongerOccupiedRequest::_set_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
int64_t MasterServer::DedicatedServerNoLongerOccupiedRequest::_get_$dedicatedServerCreationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerNoLongerOccupiedRequest::_get_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
void MasterServer::DedicatedServerNoLongerOccupiedRequest::_set_$dedicatedServerCreationTime$k__BackingField(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerNoLongerOccupiedRequest::_set_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String id
::Il2CppString* MasterServer::DedicatedServerNoLongerOccupiedRequest::_get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerNoLongerOccupiedRequest::_get_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String id
void MasterServer::DedicatedServerNoLongerOccupiedRequest::_set_id(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerNoLongerOccupiedRequest::_set_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.DedicatedServerNoLongerOccupiedRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerNoLongerOccupiedRequest*>* MasterServer::DedicatedServerNoLongerOccupiedRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerNoLongerOccupiedRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerNoLongerOccupiedRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerNoLongerOccupiedRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerNoLongerOccupiedRequest.get_dedicatedServerId
::Il2CppString* MasterServer::DedicatedServerNoLongerOccupiedRequest::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerNoLongerOccupiedRequest::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerNoLongerOccupiedRequest.set_dedicatedServerId
void MasterServer::DedicatedServerNoLongerOccupiedRequest::set_dedicatedServerId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerNoLongerOccupiedRequest::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerNoLongerOccupiedRequest.get_dedicatedServerCreationTime
int64_t MasterServer::DedicatedServerNoLongerOccupiedRequest::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerNoLongerOccupiedRequest::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerNoLongerOccupiedRequest.set_dedicatedServerCreationTime
void MasterServer::DedicatedServerNoLongerOccupiedRequest::set_dedicatedServerCreationTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerNoLongerOccupiedRequest::set_dedicatedServerCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerNoLongerOccupiedRequest.Init
MasterServer::DedicatedServerNoLongerOccupiedRequest* MasterServer::DedicatedServerNoLongerOccupiedRequest::Init(::Il2CppString* dedicatedServerId, ::Il2CppString* id) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerNoLongerOccupiedRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(id)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::DedicatedServerNoLongerOccupiedRequest*, false>(___instance_arg, ___internal__method, dedicatedServerId, id);
}
// Autogenerated method: MasterServer.DedicatedServerNoLongerOccupiedRequest.Serialize
void MasterServer::DedicatedServerNoLongerOccupiedRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerNoLongerOccupiedRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.DedicatedServerNoLongerOccupiedRequest.Deserialize
void MasterServer::DedicatedServerNoLongerOccupiedRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerNoLongerOccupiedRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.DedicatedServerNoLongerOccupiedRequest.Release
void MasterServer::DedicatedServerNoLongerOccupiedRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerNoLongerOccupiedRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.RelayServerStatusUpdateRequest
#include "MasterServer/RelayServerStatusUpdateRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
::Il2CppString* MasterServer::RelayServerStatusUpdateRequest::_get_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::RelayServerStatusUpdateRequest::_get_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String <dedicatedServerId>k__BackingField
void MasterServer::RelayServerStatusUpdateRequest::_set_$dedicatedServerId$k__BackingField(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::RelayServerStatusUpdateRequest::_set_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
int64_t MasterServer::RelayServerStatusUpdateRequest::_get_$dedicatedServerCreationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::RelayServerStatusUpdateRequest::_get_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
void MasterServer::RelayServerStatusUpdateRequest::_set_$dedicatedServerCreationTime$k__BackingField(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::RelayServerStatusUpdateRequest::_set_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String id
::Il2CppString* MasterServer::RelayServerStatusUpdateRequest::_get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::RelayServerStatusUpdateRequest::_get_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String id
void MasterServer::RelayServerStatusUpdateRequest::_set_id(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::RelayServerStatusUpdateRequest::_set_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentPlayerCount
int MasterServer::RelayServerStatusUpdateRequest::_get_currentPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::RelayServerStatusUpdateRequest::_get_currentPlayerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPlayerCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 currentPlayerCount
void MasterServer::RelayServerStatusUpdateRequest::_set_currentPlayerCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::RelayServerStatusUpdateRequest::_set_currentPlayerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPlayerCount"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.RelayServerStatusUpdateRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::RelayServerStatusUpdateRequest*>* MasterServer::RelayServerStatusUpdateRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::RelayServerStatusUpdateRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "RelayServerStatusUpdateRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::RelayServerStatusUpdateRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.RelayServerStatusUpdateRequest.get_dedicatedServerId
::Il2CppString* MasterServer::RelayServerStatusUpdateRequest::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::RelayServerStatusUpdateRequest::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.RelayServerStatusUpdateRequest.set_dedicatedServerId
void MasterServer::RelayServerStatusUpdateRequest::set_dedicatedServerId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::RelayServerStatusUpdateRequest::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.RelayServerStatusUpdateRequest.get_dedicatedServerCreationTime
int64_t MasterServer::RelayServerStatusUpdateRequest::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::RelayServerStatusUpdateRequest::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.RelayServerStatusUpdateRequest.set_dedicatedServerCreationTime
void MasterServer::RelayServerStatusUpdateRequest::set_dedicatedServerCreationTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::RelayServerStatusUpdateRequest::set_dedicatedServerCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.RelayServerStatusUpdateRequest.Init
MasterServer::RelayServerStatusUpdateRequest* MasterServer::RelayServerStatusUpdateRequest::Init(::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, ::Il2CppString* id, int currentPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::RelayServerStatusUpdateRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(currentPlayerCount)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::RelayServerStatusUpdateRequest*, false>(___instance_arg, ___internal__method, dedicatedServerId, dedicatedServerCreationTime, id, currentPlayerCount);
}
// Autogenerated method: MasterServer.RelayServerStatusUpdateRequest.Serialize
void MasterServer::RelayServerStatusUpdateRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::RelayServerStatusUpdateRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.RelayServerStatusUpdateRequest.Deserialize
void MasterServer::RelayServerStatusUpdateRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::RelayServerStatusUpdateRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.RelayServerStatusUpdateRequest.Release
void MasterServer::RelayServerStatusUpdateRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::RelayServerStatusUpdateRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MatchmakingServerStatusUpdateRequest
#include "MasterServer/MatchmakingServerStatusUpdateRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
::Il2CppString* MasterServer::MatchmakingServerStatusUpdateRequest::_get_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MatchmakingServerStatusUpdateRequest::_get_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String <dedicatedServerId>k__BackingField
void MasterServer::MatchmakingServerStatusUpdateRequest::_set_$dedicatedServerId$k__BackingField(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MatchmakingServerStatusUpdateRequest::_set_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
int64_t MasterServer::MatchmakingServerStatusUpdateRequest::_get_$dedicatedServerCreationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MatchmakingServerStatusUpdateRequest::_get_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
void MasterServer::MatchmakingServerStatusUpdateRequest::_set_$dedicatedServerCreationTime$k__BackingField(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MatchmakingServerStatusUpdateRequest::_set_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String id
::Il2CppString* MasterServer::MatchmakingServerStatusUpdateRequest::_get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MatchmakingServerStatusUpdateRequest::_get_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String id
void MasterServer::MatchmakingServerStatusUpdateRequest::_set_id(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MatchmakingServerStatusUpdateRequest::_set_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentPlayerCount
int MasterServer::MatchmakingServerStatusUpdateRequest::_get_currentPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MatchmakingServerStatusUpdateRequest::_get_currentPlayerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPlayerCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 currentPlayerCount
void MasterServer::MatchmakingServerStatusUpdateRequest::_set_currentPlayerCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MatchmakingServerStatusUpdateRequest::_set_currentPlayerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPlayerCount"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public GameStateType gameState
GlobalNamespace::GameStateType MasterServer::MatchmakingServerStatusUpdateRequest::_get_gameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MatchmakingServerStatusUpdateRequest::_get_gameState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameState"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameStateType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public GameStateType gameState
void MasterServer::MatchmakingServerStatusUpdateRequest::_set_gameState(GlobalNamespace::GameStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MatchmakingServerStatusUpdateRequest::_set_gameState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameState"))->offset;
  *reinterpret_cast<GlobalNamespace::GameStateType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.MatchmakingServerStatusUpdateRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::MatchmakingServerStatusUpdateRequest*>* MasterServer::MatchmakingServerStatusUpdateRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MatchmakingServerStatusUpdateRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "MatchmakingServerStatusUpdateRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::MatchmakingServerStatusUpdateRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.MatchmakingServerStatusUpdateRequest.get_dedicatedServerId
::Il2CppString* MasterServer::MatchmakingServerStatusUpdateRequest::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MatchmakingServerStatusUpdateRequest::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MatchmakingServerStatusUpdateRequest.set_dedicatedServerId
void MasterServer::MatchmakingServerStatusUpdateRequest::set_dedicatedServerId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MatchmakingServerStatusUpdateRequest::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.MatchmakingServerStatusUpdateRequest.get_dedicatedServerCreationTime
int64_t MasterServer::MatchmakingServerStatusUpdateRequest::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MatchmakingServerStatusUpdateRequest::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MatchmakingServerStatusUpdateRequest.set_dedicatedServerCreationTime
void MasterServer::MatchmakingServerStatusUpdateRequest::set_dedicatedServerCreationTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MatchmakingServerStatusUpdateRequest::set_dedicatedServerCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.MatchmakingServerStatusUpdateRequest.Init
MasterServer::MatchmakingServerStatusUpdateRequest* MasterServer::MatchmakingServerStatusUpdateRequest::Init(::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, ::Il2CppString* id, GlobalNamespace::GameStateType gameState, int currentPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MatchmakingServerStatusUpdateRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(gameState), ::il2cpp_utils::ExtractType(currentPlayerCount)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::MatchmakingServerStatusUpdateRequest*, false>(___instance_arg, ___internal__method, dedicatedServerId, dedicatedServerCreationTime, id, gameState, currentPlayerCount);
}
// Autogenerated method: MasterServer.MatchmakingServerStatusUpdateRequest.Serialize
void MasterServer::MatchmakingServerStatusUpdateRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MatchmakingServerStatusUpdateRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.MatchmakingServerStatusUpdateRequest.Deserialize
void MasterServer::MatchmakingServerStatusUpdateRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MatchmakingServerStatusUpdateRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.MatchmakingServerStatusUpdateRequest.Release
void MasterServer::MatchmakingServerStatusUpdateRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MatchmakingServerStatusUpdateRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.DedicatedServerHeartbeatRequest
#include "MasterServer/DedicatedServerHeartbeatRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
::Il2CppString* MasterServer::DedicatedServerHeartbeatRequest::_get_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::_get_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String <dedicatedServerId>k__BackingField
void MasterServer::DedicatedServerHeartbeatRequest::_set_$dedicatedServerId$k__BackingField(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::_set_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
int64_t MasterServer::DedicatedServerHeartbeatRequest::_get_$dedicatedServerCreationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::_get_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
void MasterServer::DedicatedServerHeartbeatRequest::_set_$dedicatedServerCreationTime$k__BackingField(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::_set_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 cpuUtilization
int MasterServer::DedicatedServerHeartbeatRequest::_get_cpuUtilization() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::_get_cpuUtilization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cpuUtilization"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 cpuUtilization
void MasterServer::DedicatedServerHeartbeatRequest::_set_cpuUtilization(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::_set_cpuUtilization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cpuUtilization"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 occupiedServerSlots
int MasterServer::DedicatedServerHeartbeatRequest::_get_occupiedServerSlots() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::_get_occupiedServerSlots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "occupiedServerSlots"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 occupiedServerSlots
void MasterServer::DedicatedServerHeartbeatRequest::_set_occupiedServerSlots(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::_set_occupiedServerSlots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "occupiedServerSlots"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 unoccupiedServerSlots
int MasterServer::DedicatedServerHeartbeatRequest::_get_unoccupiedServerSlots() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::_get_unoccupiedServerSlots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unoccupiedServerSlots"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 unoccupiedServerSlots
void MasterServer::DedicatedServerHeartbeatRequest::_set_unoccupiedServerSlots(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::_set_unoccupiedServerSlots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unoccupiedServerSlots"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerHeartbeatRequest*>* MasterServer::DedicatedServerHeartbeatRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerHeartbeatRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerHeartbeatRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.get_dedicatedServerId
::Il2CppString* MasterServer::DedicatedServerHeartbeatRequest::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.set_dedicatedServerId
void MasterServer::DedicatedServerHeartbeatRequest::set_dedicatedServerId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.get_dedicatedServerCreationTime
int64_t MasterServer::DedicatedServerHeartbeatRequest::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.set_dedicatedServerCreationTime
void MasterServer::DedicatedServerHeartbeatRequest::set_dedicatedServerCreationTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::set_dedicatedServerCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.Init
MasterServer::DedicatedServerHeartbeatRequest* MasterServer::DedicatedServerHeartbeatRequest::Init(::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, int cpuUtilization, int occupiedServerSlots, int unoccupiedServerSlots) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(cpuUtilization), ::il2cpp_utils::ExtractType(occupiedServerSlots), ::il2cpp_utils::ExtractType(unoccupiedServerSlots)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::DedicatedServerHeartbeatRequest*, false>(___instance_arg, ___internal__method, dedicatedServerId, dedicatedServerCreationTime, cpuUtilization, occupiedServerSlots, unoccupiedServerSlots);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.Serialize
void MasterServer::DedicatedServerHeartbeatRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.Deserialize
void MasterServer::DedicatedServerHeartbeatRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.Release
void MasterServer::DedicatedServerHeartbeatRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.DedicatedServerHeartbeatResponse
#include "MasterServer/DedicatedServerHeartbeatResponse.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.DedicatedServerHeartbeatResponse.get_pool
GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerHeartbeatResponse*>* MasterServer::DedicatedServerHeartbeatResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerHeartbeatResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerHeartbeatResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatResponse.Serialize
void MasterServer::DedicatedServerHeartbeatResponse::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatResponse.Deserialize
void MasterServer::DedicatedServerHeartbeatResponse::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatResponse.Release
void MasterServer::DedicatedServerHeartbeatResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.DedicatedServerShutDownRequest
#include "MasterServer/DedicatedServerShutDownRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
::Il2CppString* MasterServer::DedicatedServerShutDownRequest::_get_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::_get_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String <dedicatedServerId>k__BackingField
void MasterServer::DedicatedServerShutDownRequest::_set_$dedicatedServerId$k__BackingField(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::_set_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
int64_t MasterServer::DedicatedServerShutDownRequest::_get_$dedicatedServerCreationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::_get_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
void MasterServer::DedicatedServerShutDownRequest::_set_$dedicatedServerCreationTime$k__BackingField(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::_set_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerShutDownRequest*>* MasterServer::DedicatedServerShutDownRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerShutDownRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerShutDownRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.get_dedicatedServerId
::Il2CppString* MasterServer::DedicatedServerShutDownRequest::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.set_dedicatedServerId
void MasterServer::DedicatedServerShutDownRequest::set_dedicatedServerId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.get_dedicatedServerCreationTime
int64_t MasterServer::DedicatedServerShutDownRequest::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.set_dedicatedServerCreationTime
void MasterServer::DedicatedServerShutDownRequest::set_dedicatedServerCreationTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::set_dedicatedServerCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.Init
MasterServer::DedicatedServerShutDownRequest* MasterServer::DedicatedServerShutDownRequest::Init(::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::DedicatedServerShutDownRequest*, false>(___instance_arg, ___internal__method, dedicatedServerId, dedicatedServerCreationTime);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.Serialize
void MasterServer::DedicatedServerShutDownRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.Deserialize
void MasterServer::DedicatedServerShutDownRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.Release
void MasterServer::DedicatedServerShutDownRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.DedicatedServerPrepareForConnectionRequest
#include "MasterServer/DedicatedServerPrepareForConnectionRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String id
::Il2CppString* MasterServer::DedicatedServerPrepareForConnectionRequest::_get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::_get_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String id
void MasterServer::DedicatedServerPrepareForConnectionRequest::_set_id(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::_set_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
::Il2CppString* MasterServer::DedicatedServerPrepareForConnectionRequest::_get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::_get_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String userId
void MasterServer::DedicatedServerPrepareForConnectionRequest::_set_userId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::_set_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
::Il2CppString* MasterServer::DedicatedServerPrepareForConnectionRequest::_get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::_get_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String userName
void MasterServer::DedicatedServerPrepareForConnectionRequest::_set_userName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::_set_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint remoteEndPoint
System::Net::IPEndPoint* MasterServer::DedicatedServerPrepareForConnectionRequest::_get_remoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::_get_remoteEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Net.IPEndPoint remoteEndPoint
void MasterServer::DedicatedServerPrepareForConnectionRequest::_set_remoteEndPoint(System::Net::IPEndPoint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::_set_remoteEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable random
GlobalNamespace::ByteArrayNetSerializable* MasterServer::DedicatedServerPrepareForConnectionRequest::_get_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::_get_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable random
void MasterServer::DedicatedServerPrepareForConnectionRequest::_set_random(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::_set_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable publicKey
GlobalNamespace::ByteArrayNetSerializable* MasterServer::DedicatedServerPrepareForConnectionRequest::_get_publicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::_get_publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicKey"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable publicKey
void MasterServer::DedicatedServerPrepareForConnectionRequest::_set_publicKey(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::_set_publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicKey"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerPrepareForConnectionRequest*>* MasterServer::DedicatedServerPrepareForConnectionRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerPrepareForConnectionRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerPrepareForConnectionRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionRequest.Init
MasterServer::DedicatedServerPrepareForConnectionRequest* MasterServer::DedicatedServerPrepareForConnectionRequest::Init(::Il2CppString* id, ::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>* random, ::Array<uint8_t>* publicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::DedicatedServerPrepareForConnectionRequest*, false>(___instance_arg, ___internal__method, id, userId, userName, remoteEndPoint, random, publicKey);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionRequest.Serialize
void MasterServer::DedicatedServerPrepareForConnectionRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionRequest.Deserialize
void MasterServer::DedicatedServerPrepareForConnectionRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionRequest.Release
void MasterServer::DedicatedServerPrepareForConnectionRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.DedicatedServerPrepareForConnectionResponse
#include "MasterServer/DedicatedServerPrepareForConnectionResponse.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result result
MasterServer::DedicatedServerPrepareForConnectionResponse::Result MasterServer::DedicatedServerPrepareForConnectionResponse::_get_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::_get_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<MasterServer::DedicatedServerPrepareForConnectionResponse::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result result
void MasterServer::DedicatedServerPrepareForConnectionResponse::_set_result(MasterServer::DedicatedServerPrepareForConnectionResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::_set_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  *reinterpret_cast<MasterServer::DedicatedServerPrepareForConnectionResponse::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
::Il2CppString* MasterServer::DedicatedServerPrepareForConnectionResponse::_get_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::_get_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String <dedicatedServerId>k__BackingField
void MasterServer::DedicatedServerPrepareForConnectionResponse::_set_$dedicatedServerId$k__BackingField(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::_set_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
int64_t MasterServer::DedicatedServerPrepareForConnectionResponse::_get_$dedicatedServerCreationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::_get_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
void MasterServer::DedicatedServerPrepareForConnectionResponse::_set_$dedicatedServerCreationTime$k__BackingField(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::_set_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.get_pool
GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerPrepareForConnectionResponse*>* MasterServer::DedicatedServerPrepareForConnectionResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerPrepareForConnectionResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerPrepareForConnectionResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.get_dedicatedServerId
::Il2CppString* MasterServer::DedicatedServerPrepareForConnectionResponse::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.set_dedicatedServerId
void MasterServer::DedicatedServerPrepareForConnectionResponse::set_dedicatedServerId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.get_dedicatedServerCreationTime
int64_t MasterServer::DedicatedServerPrepareForConnectionResponse::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.set_dedicatedServerCreationTime
void MasterServer::DedicatedServerPrepareForConnectionResponse::set_dedicatedServerCreationTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::set_dedicatedServerCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.InitForFailure
MasterServer::DedicatedServerPrepareForConnectionResponse* MasterServer::DedicatedServerPrepareForConnectionResponse::InitForFailure(::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, MasterServer::DedicatedServerPrepareForConnectionResponse::Result result) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::InitForFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::DedicatedServerPrepareForConnectionResponse*, false>(___instance_arg, ___internal__method, dedicatedServerId, dedicatedServerCreationTime, result);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.InitForSuccess
MasterServer::DedicatedServerPrepareForConnectionResponse* MasterServer::DedicatedServerPrepareForConnectionResponse::InitForSuccess(::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::InitForSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::DedicatedServerPrepareForConnectionResponse*, false>(___instance_arg, ___internal__method, dedicatedServerId, dedicatedServerCreationTime);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.get_resultCode
uint8_t MasterServer::DedicatedServerPrepareForConnectionResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.get_resultCodeString
::Il2CppString* MasterServer::DedicatedServerPrepareForConnectionResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.Serialize
void MasterServer::DedicatedServerPrepareForConnectionResponse::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.Deserialize
void MasterServer::DedicatedServerPrepareForConnectionResponse::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.Release
void MasterServer::DedicatedServerPrepareForConnectionResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result
#include "MasterServer/DedicatedServerPrepareForConnectionResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result Success
MasterServer::DedicatedServerPrepareForConnectionResponse::Result MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::DedicatedServerPrepareForConnectionResponse::Result>("MasterServer", "DedicatedServerPrepareForConnectionResponse/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result Success
void MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_set_Success(MasterServer::DedicatedServerPrepareForConnectionResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerPrepareForConnectionResponse/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result UnknownServer
MasterServer::DedicatedServerPrepareForConnectionResponse::Result MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_get_UnknownServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_get_UnknownServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::DedicatedServerPrepareForConnectionResponse::Result>("MasterServer", "DedicatedServerPrepareForConnectionResponse/Result", "UnknownServer"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result UnknownServer
void MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_set_UnknownServer(MasterServer::DedicatedServerPrepareForConnectionResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_set_UnknownServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerPrepareForConnectionResponse/Result", "UnknownServer", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result UnknownError
MasterServer::DedicatedServerPrepareForConnectionResponse::Result MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::DedicatedServerPrepareForConnectionResponse::Result>("MasterServer", "DedicatedServerPrepareForConnectionResponse/Result", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result UnknownError
void MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_set_UnknownError(MasterServer::DedicatedServerPrepareForConnectionResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerPrepareForConnectionResponse/Result", "UnknownError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.DedicatedServerMessageReceivedAcknowledge
#include "MasterServer/DedicatedServerMessageReceivedAcknowledge.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.DedicatedServerMessageReceivedAcknowledge.get_pool
GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerMessageReceivedAcknowledge*>* MasterServer::DedicatedServerMessageReceivedAcknowledge::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerMessageReceivedAcknowledge::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerMessageReceivedAcknowledge", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerMessageReceivedAcknowledge*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerMessageReceivedAcknowledge.Release
void MasterServer::DedicatedServerMessageReceivedAcknowledge::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerMessageReceivedAcknowledge::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.DedicatedServerMultipartMessage
#include "MasterServer/DedicatedServerMultipartMessage.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.DedicatedServerMultipartMessage.get_pool
GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerMultipartMessage*>* MasterServer::DedicatedServerMultipartMessage::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerMultipartMessage::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerMultipartMessage", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerMultipartMessage*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerMultipartMessage.Release
void MasterServer::DedicatedServerMultipartMessage::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerMultipartMessage::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ClientHelloRequest
#include "MasterServer/ClientHelloRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte[] random
::Array<uint8_t>* MasterServer::ClientHelloRequest::_get_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloRequest::_get_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Byte[] random
void MasterServer::ClientHelloRequest::_set_random(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloRequest::_set_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.ClientHelloRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ClientHelloRequest*>* MasterServer::ClientHelloRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ClientHelloRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ClientHelloRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ClientHelloRequest.Init
MasterServer::ClientHelloRequest* MasterServer::ClientHelloRequest::Init(::Array<uint8_t>* random) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(random)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ClientHelloRequest*, false>(___instance_arg, ___internal__method, random);
}
// Autogenerated method: MasterServer.ClientHelloRequest.Serialize
void MasterServer::ClientHelloRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.ClientHelloRequest.Deserialize
void MasterServer::ClientHelloRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.ClientHelloRequest.Release
void MasterServer::ClientHelloRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ClientHelloWithCookieRequest
#include "MasterServer/ClientHelloWithCookieRequest.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 certificateResponseId
uint MasterServer::ClientHelloWithCookieRequest::_get_certificateResponseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::_get_certificateResponseId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificateResponseId"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.UInt32 certificateResponseId
void MasterServer::ClientHelloWithCookieRequest::_set_certificateResponseId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::_set_certificateResponseId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificateResponseId"))->offset;
  *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable random
GlobalNamespace::ByteArrayNetSerializable* MasterServer::ClientHelloWithCookieRequest::_get_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::_get_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable random
void MasterServer::ClientHelloWithCookieRequest::_set_random(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::_set_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable cookie
GlobalNamespace::ByteArrayNetSerializable* MasterServer::ClientHelloWithCookieRequest::_get_cookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::_get_cookie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cookie"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable cookie
void MasterServer::ClientHelloWithCookieRequest::_set_cookie(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::_set_cookie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cookie"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.ClientHelloWithCookieRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ClientHelloWithCookieRequest*>* MasterServer::ClientHelloWithCookieRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ClientHelloWithCookieRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ClientHelloWithCookieRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ClientHelloWithCookieRequest.Init
MasterServer::ClientHelloWithCookieRequest* MasterServer::ClientHelloWithCookieRequest::Init(uint certificateResponseId, ::Array<uint8_t>* random, ::Array<uint8_t>* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificateResponseId), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(cookie)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ClientHelloWithCookieRequest*, false>(___instance_arg, ___internal__method, certificateResponseId, random, cookie);
}
// Autogenerated method: MasterServer.ClientHelloWithCookieRequest.Serialize
void MasterServer::ClientHelloWithCookieRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.ClientHelloWithCookieRequest.Deserialize
void MasterServer::ClientHelloWithCookieRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.ClientHelloWithCookieRequest.Release
void MasterServer::ClientHelloWithCookieRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.HelloVerifyRequest
#include "MasterServer/HelloVerifyRequest.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable cookie
GlobalNamespace::ByteArrayNetSerializable* MasterServer::HelloVerifyRequest::_get_cookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HelloVerifyRequest::_get_cookie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cookie"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable cookie
void MasterServer::HelloVerifyRequest::_set_cookie(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HelloVerifyRequest::_set_cookie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cookie"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.HelloVerifyRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::HelloVerifyRequest*>* MasterServer::HelloVerifyRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HelloVerifyRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "HelloVerifyRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::HelloVerifyRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.HelloVerifyRequest.Init
MasterServer::HelloVerifyRequest* MasterServer::HelloVerifyRequest::Init(::Array<uint8_t>* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HelloVerifyRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::HelloVerifyRequest*, false>(___instance_arg, ___internal__method, cookie);
}
// Autogenerated method: MasterServer.HelloVerifyRequest.Serialize
void MasterServer::HelloVerifyRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HelloVerifyRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.HelloVerifyRequest.Deserialize
void MasterServer::HelloVerifyRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HelloVerifyRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.HelloVerifyRequest.Release
void MasterServer::HelloVerifyRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HelloVerifyRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ServerHelloRequest
#include "MasterServer/ServerHelloRequest.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable random
GlobalNamespace::ByteArrayNetSerializable* MasterServer::ServerHelloRequest::_get_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::_get_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable random
void MasterServer::ServerHelloRequest::_set_random(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::_set_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable publicKey
GlobalNamespace::ByteArrayNetSerializable* MasterServer::ServerHelloRequest::_get_publicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::_get_publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicKey"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable publicKey
void MasterServer::ServerHelloRequest::_set_publicKey(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::_set_publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicKey"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable signature
GlobalNamespace::ByteArrayNetSerializable* MasterServer::ServerHelloRequest::_get_signature() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::_get_signature");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signature"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable signature
void MasterServer::ServerHelloRequest::_set_signature(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::_set_signature");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signature"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.ServerHelloRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ServerHelloRequest*>* MasterServer::ServerHelloRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ServerHelloRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ServerHelloRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ServerHelloRequest.Init
MasterServer::ServerHelloRequest* MasterServer::ServerHelloRequest::Init(::Array<uint8_t>* random, ::Array<uint8_t>* publicKey, ::Array<uint8_t>* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey), ::il2cpp_utils::ExtractType(signature)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ServerHelloRequest*, false>(___instance_arg, ___internal__method, random, publicKey, signature);
}
// Autogenerated method: MasterServer.ServerHelloRequest.Serialize
void MasterServer::ServerHelloRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.ServerHelloRequest.Deserialize
void MasterServer::ServerHelloRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.ServerHelloRequest.Release
void MasterServer::ServerHelloRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ServerCertificateRequest
#include "MasterServer/ServerCertificateRequest.hpp"
// Including type: MasterServer.ServerCertificateRequest/MasterServer.<get_certificateList>d__5
#include "MasterServer/ServerCertificateRequest_-get_certificateList-d__5.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly ByteArrayNetSerializable[] _certificateList
::Array<GlobalNamespace::ByteArrayNetSerializable*>* MasterServer::ServerCertificateRequest::_get__certificateList() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::_get__certificateList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certificateList"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::ByteArrayNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly ByteArrayNetSerializable[] _certificateList
void MasterServer::ServerCertificateRequest::_set__certificateList(::Array<GlobalNamespace::ByteArrayNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::_set__certificateList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certificateList"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::ByteArrayNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _certificateCount
int MasterServer::ServerCertificateRequest::_get__certificateCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::_get__certificateCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certificateCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _certificateCount
void MasterServer::ServerCertificateRequest::_set__certificateCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::_set__certificateCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certificateCount"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.ServerCertificateRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ServerCertificateRequest*>* MasterServer::ServerCertificateRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ServerCertificateRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ServerCertificateRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest.get_certificateList
System::Collections::Generic::IEnumerable_1<::Array<uint8_t>*>* MasterServer::ServerCertificateRequest::get_certificateList() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::get_certificateList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_certificateList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<::Array<uint8_t>*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest.Init
MasterServer::ServerCertificateRequest* MasterServer::ServerCertificateRequest::Init(System::Collections::Generic::IEnumerable_1<::Array<uint8_t>*>* certificateList) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificateList)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ServerCertificateRequest*, false>(___instance_arg, ___internal__method, certificateList);
}
// Autogenerated method: MasterServer.ServerCertificateRequest.Serialize
void MasterServer::ServerCertificateRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.ServerCertificateRequest.Deserialize
void MasterServer::ServerCertificateRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.ServerCertificateRequest.Release
void MasterServer::ServerCertificateRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ServerCertificateRequest/MasterServer.<get_certificateList>d__5
#include "MasterServer/ServerCertificateRequest_-get_certificateList-d__5.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int MasterServer::ServerCertificateRequest::$get_certificateList$d__5::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::_get_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void MasterServer::ServerCertificateRequest::$get_certificateList$d__5::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::_set_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <>2__current
::Array<uint8_t>* MasterServer::ServerCertificateRequest::$get_certificateList$d__5::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::_get_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Byte[] <>2__current
void MasterServer::ServerCertificateRequest::$get_certificateList$d__5::_set_$$2__current(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::_set_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int MasterServer::ServerCertificateRequest::$get_certificateList$d__5::_get_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::_get_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>l__initialThreadId
void MasterServer::ServerCertificateRequest::$get_certificateList$d__5::_set_$$l__initialThreadId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::_set_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.ServerCertificateRequest <>4__this
MasterServer::ServerCertificateRequest* MasterServer::ServerCertificateRequest::$get_certificateList$d__5::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::_get_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::ServerCertificateRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.ServerCertificateRequest <>4__this
void MasterServer::ServerCertificateRequest::$get_certificateList$d__5::_set_$$4__this(MasterServer::ServerCertificateRequest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::_set_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<MasterServer::ServerCertificateRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__2
int MasterServer::ServerCertificateRequest::$get_certificateList$d__5::_get_$i$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::_get_$i$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <i>5__2
void MasterServer::ServerCertificateRequest::$get_certificateList$d__5::_set_$i$5__2(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::_set_$i$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__2"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.ServerCertificateRequest/MasterServer.<get_certificateList>d__5.System.Collections.Generic.IEnumerator<System.Byte[]>.get_Current
::Array<uint8_t>* MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_Generic_IEnumerator$System_Byte$$$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System.Collections.Generic.IEnumerator<System.Byte[]>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Byte[]>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest/MasterServer.<get_certificateList>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest/MasterServer.<get_certificateList>d__5.System.IDisposable.Dispose
void MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest/MasterServer.<get_certificateList>d__5.MoveNext
bool MasterServer::ServerCertificateRequest::$get_certificateList$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest/MasterServer.<get_certificateList>d__5.System.Collections.IEnumerator.Reset
void MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest/MasterServer.<get_certificateList>d__5.System.Collections.Generic.IEnumerable<System.Byte[]>.GetEnumerator
System::Collections::Generic::IEnumerator_1<::Array<uint8_t>*>* MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_Generic_IEnumerable$System_Byte$$$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System.Collections.Generic.IEnumerable<System.Byte[]>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Byte[]>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<::Array<uint8_t>*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest/MasterServer.<get_certificateList>d__5.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ClientKeyExchangeRequest
#include "MasterServer/ClientKeyExchangeRequest.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable clientPublicKey
GlobalNamespace::ByteArrayNetSerializable* MasterServer::ClientKeyExchangeRequest::_get_clientPublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientKeyExchangeRequest::_get_clientPublicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientPublicKey"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly ByteArrayNetSerializable clientPublicKey
void MasterServer::ClientKeyExchangeRequest::_set_clientPublicKey(GlobalNamespace::ByteArrayNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientKeyExchangeRequest::_set_clientPublicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientPublicKey"))->offset;
  *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.ClientKeyExchangeRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ClientKeyExchangeRequest*>* MasterServer::ClientKeyExchangeRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientKeyExchangeRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ClientKeyExchangeRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ClientKeyExchangeRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ClientKeyExchangeRequest.Init
MasterServer::ClientKeyExchangeRequest* MasterServer::ClientKeyExchangeRequest::Init(::Array<uint8_t>* clientPublicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientKeyExchangeRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientPublicKey)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ClientKeyExchangeRequest*, false>(___instance_arg, ___internal__method, clientPublicKey);
}
// Autogenerated method: MasterServer.ClientKeyExchangeRequest.Serialize
void MasterServer::ClientKeyExchangeRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientKeyExchangeRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.ClientKeyExchangeRequest.Deserialize
void MasterServer::ClientKeyExchangeRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientKeyExchangeRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.ClientKeyExchangeRequest.Release
void MasterServer::ClientKeyExchangeRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientKeyExchangeRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.ChangeCipherSpecRequest
#include "MasterServer/ChangeCipherSpecRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.ChangeCipherSpecRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ChangeCipherSpecRequest*>* MasterServer::ChangeCipherSpecRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ChangeCipherSpecRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ChangeCipherSpecRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ChangeCipherSpecRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ChangeCipherSpecRequest.Release
void MasterServer::ChangeCipherSpecRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ChangeCipherSpecRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.HandshakeMessageReceivedAcknowledge
#include "MasterServer/HandshakeMessageReceivedAcknowledge.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.HandshakeMessageReceivedAcknowledge.get_pool
GlobalNamespace::PacketPool_1<MasterServer::HandshakeMessageReceivedAcknowledge*>* MasterServer::HandshakeMessageReceivedAcknowledge::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HandshakeMessageReceivedAcknowledge::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "HandshakeMessageReceivedAcknowledge", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::HandshakeMessageReceivedAcknowledge*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.HandshakeMessageReceivedAcknowledge.Release
void MasterServer::HandshakeMessageReceivedAcknowledge::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HandshakeMessageReceivedAcknowledge::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.HandshakeMultipartMessage
#include "MasterServer/HandshakeMultipartMessage.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.HandshakeMultipartMessage.get_pool
GlobalNamespace::PacketPool_1<MasterServer::HandshakeMultipartMessage*>* MasterServer::HandshakeMultipartMessage::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HandshakeMultipartMessage::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "HandshakeMultipartMessage", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::HandshakeMultipartMessage*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.HandshakeMultipartMessage.Release
void MasterServer::HandshakeMultipartMessage::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HandshakeMultipartMessage::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.AnalyticsMetricUnit
#include "MasterServer/AnalyticsMetricUnit.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit None
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "None"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit None
void MasterServer::AnalyticsMetricUnit::_set_None(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit Count
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "Count"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit Count
void MasterServer::AnalyticsMetricUnit::_set_Count(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "Count", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit Percent
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_Percent() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_Percent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "Percent"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit Percent
void MasterServer::AnalyticsMetricUnit::_set_Percent(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_Percent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "Percent", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit Seconds
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_Seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_Seconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "Seconds"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit Seconds
void MasterServer::AnalyticsMetricUnit::_set_Seconds(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_Seconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "Seconds", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit Milliseconds
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_Milliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_Milliseconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "Milliseconds"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit Milliseconds
void MasterServer::AnalyticsMetricUnit::_set_Milliseconds(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_Milliseconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "Milliseconds", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit Microseconds
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_Microseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_Microseconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "Microseconds"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit Microseconds
void MasterServer::AnalyticsMetricUnit::_set_Microseconds(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_Microseconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "Microseconds", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit Bytes
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_Bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_Bytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "Bytes"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit Bytes
void MasterServer::AnalyticsMetricUnit::_set_Bytes(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_Bytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "Bytes", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int MasterServer::AnalyticsMetricUnit::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void MasterServer::AnalyticsMetricUnit::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.IAnalyticsManager
#include "MasterServer/IAnalyticsManager.hpp"
// Including type: MasterServer.AnalyticsMetricUnit
#include "MasterServer/AnalyticsMetricUnit.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: MasterServer.IMasterServerReliableResponse
#include "MasterServer/IMasterServerReliableResponse.hpp"
// Including type: MasterServer.IMasterServerUnreliableMessage
#include "MasterServer/IMasterServerUnreliableMessage.hpp"
// Including type: MasterServer.IMasterServerResponse
#include "MasterServer/IMasterServerResponse.hpp"
// Including type: DedicatedServerType
#include "GlobalNamespace/DedicatedServerType.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IAnalyticsManager.PollUpdate
void MasterServer::IAnalyticsManager::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.IAnalyticsManager.UpdateState
void MasterServer::IAnalyticsManager::UpdateState(::Il2CppString* metricName, int64_t state, MasterServer::AnalyticsMetricUnit unit, bool alarmMetric) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::UpdateState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(metricName), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(unit), ::il2cpp_utils::ExtractType(alarmMetric)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, metricName, state, unit, alarmMetric);
}
// Autogenerated method: MasterServer.IAnalyticsManager.UpdateAverage
void MasterServer::IAnalyticsManager::UpdateAverage(::Il2CppString* metricName, double value, MasterServer::AnalyticsMetricUnit unit, bool alarmMetric) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::UpdateAverage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAverage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(metricName), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(unit), ::il2cpp_utils::ExtractType(alarmMetric)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, metricName, value, unit, alarmMetric);
}
// Autogenerated method: MasterServer.IAnalyticsManager.IncrementCounter
void MasterServer::IAnalyticsManager::IncrementCounter(::Il2CppString* metricName, int64_t incrementAmount, MasterServer::AnalyticsMetricUnit unit) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::IncrementCounter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementCounter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(metricName), ::il2cpp_utils::ExtractType(incrementAmount), ::il2cpp_utils::ExtractType(unit)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, metricName, incrementAmount, unit);
}
// Autogenerated method: MasterServer.IAnalyticsManager.ReceivedReliableRequestEvent
void MasterServer::IAnalyticsManager::ReceivedReliableRequestEvent(MasterServer::IMasterServerReliableRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::ReceivedReliableRequestEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceivedReliableRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, request);
}
// Autogenerated method: MasterServer.IAnalyticsManager.SentReliableRequestEvent
void MasterServer::IAnalyticsManager::SentReliableRequestEvent(MasterServer::IMasterServerReliableRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::SentReliableRequestEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SentReliableRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, request);
}
// Autogenerated method: MasterServer.IAnalyticsManager.ReceivedReliableResponseEvent
void MasterServer::IAnalyticsManager::ReceivedReliableResponseEvent(MasterServer::IMasterServerReliableResponse* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::ReceivedReliableResponseEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceivedReliableResponseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, request);
}
// Autogenerated method: MasterServer.IAnalyticsManager.SentReliableResponseEvent
void MasterServer::IAnalyticsManager::SentReliableResponseEvent(MasterServer::IMasterServerReliableResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::SentReliableResponseEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SentReliableResponseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, response);
}
// Autogenerated method: MasterServer.IAnalyticsManager.ReceivedUnreliableMessageEvent
void MasterServer::IAnalyticsManager::ReceivedUnreliableMessageEvent(MasterServer::IMasterServerUnreliableMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::ReceivedUnreliableMessageEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceivedUnreliableMessageEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, message);
}
// Autogenerated method: MasterServer.IAnalyticsManager.SentUnreliableMessageEvent
void MasterServer::IAnalyticsManager::SentUnreliableMessageEvent(MasterServer::IMasterServerUnreliableMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::SentUnreliableMessageEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SentUnreliableMessageEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, message);
}
// Autogenerated method: MasterServer.IAnalyticsManager.SentUnreliableResponseEvent
void MasterServer::IAnalyticsManager::SentUnreliableResponseEvent(MasterServer::IMasterServerResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::SentUnreliableResponseEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SentUnreliableResponseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, response);
}
// Autogenerated method: MasterServer.IAnalyticsManager.ReceivedUnreliableResponseEvent
void MasterServer::IAnalyticsManager::ReceivedUnreliableResponseEvent(MasterServer::IMasterServerResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::ReceivedUnreliableResponseEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceivedUnreliableResponseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, response);
}
// Autogenerated method: MasterServer.IAnalyticsManager.DedicatedServerServerConnectedEvent
void MasterServer::IAnalyticsManager::DedicatedServerServerConnectedEvent(GlobalNamespace::DedicatedServerType serverType) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::DedicatedServerServerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DedicatedServerServerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, serverType);
}
// Autogenerated method: MasterServer.IAnalyticsManager.DedicatedServerServerConnectionFailedEvent
void MasterServer::IAnalyticsManager::DedicatedServerServerConnectionFailedEvent(GlobalNamespace::DedicatedServerType serverType, GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::DedicatedServerServerConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DedicatedServerServerConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverType), ::il2cpp_utils::ExtractType(reason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, serverType, reason);
}
// Autogenerated method: MasterServer.IAnalyticsManager.DedicatedServerServerDisconnectedEvent
void MasterServer::IAnalyticsManager::DedicatedServerServerDisconnectedEvent(GlobalNamespace::DedicatedServerType serverType, GlobalNamespace::DisconnectedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::DedicatedServerServerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DedicatedServerServerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverType), ::il2cpp_utils::ExtractType(reason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, serverType, reason);
}
// Autogenerated method: MasterServer.IAnalyticsManager.DedicatedServerPlayerConnectedEvent
void MasterServer::IAnalyticsManager::DedicatedServerPlayerConnectedEvent(GlobalNamespace::DedicatedServerType serverType) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::DedicatedServerPlayerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DedicatedServerPlayerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, serverType);
}
// Autogenerated method: MasterServer.IAnalyticsManager.DedicatedServerPlayerDisconnectedEvent
void MasterServer::IAnalyticsManager::DedicatedServerPlayerDisconnectedEvent(GlobalNamespace::DedicatedServerType serverType, GlobalNamespace::DisconnectedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::DedicatedServerPlayerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DedicatedServerPlayerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverType), ::il2cpp_utils::ExtractType(reason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, serverType, reason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.IMasterServer
#include "MasterServer/IMasterServer.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: AuthenticationToken
#include "GlobalNamespace/AuthenticationToken.hpp"
// Including type: MasterServer.UserServerStatusUpdateResponse
#include "MasterServer/UserServerStatusUpdateResponse.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: MasterServer.UserServerHeartbeatResponse
#include "MasterServer/UserServerHeartbeatResponse.hpp"
// Including type: MasterServer.GetPublicUserServersResponse
#include "MasterServer/GetPublicUserServersResponse.hpp"
// Including type: UserServerFilter
#include "GlobalNamespace/UserServerFilter.hpp"
// Including type: MasterServer.ConnectToServerResponse
#include "MasterServer/ConnectToServerResponse.hpp"
// Including type: GameStateType
#include "GlobalNamespace/GameStateType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServer.ShouldHandleMessageFromEndPoint
bool MasterServer::IMasterServer::ShouldHandleMessageFromEndPoint(System::Net::IPEndPoint* remoteEndPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::ShouldHandleMessageFromEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleMessageFromEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, remoteEndPoint);
}
// Autogenerated method: MasterServer.IMasterServer.ReportExceptionForEndPoint
void MasterServer::IMasterServer::ReportExceptionForEndPoint(System::Net::IPEndPoint* remoteEndPoint, System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::ReportExceptionForEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportExceptionForEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(exception)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, remoteEndPoint, exception);
}
// Autogenerated method: MasterServer.IMasterServer.TryAuthenticateUser
System::Threading::Tasks::Task_1<bool>* MasterServer::IMasterServer::TryAuthenticateUser(uint protocolVersion, System::Net::IPEndPoint* endPoint, GlobalNamespace::AuthenticationToken authenticationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::TryAuthenticateUser");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAuthenticateUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(authenticationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(___instance_arg, ___internal__method, protocolVersion, endPoint, authenticationToken);
}
// Autogenerated method: MasterServer.IMasterServer.UpdateUserServerStatus
System::Threading::Tasks::Task_1<MasterServer::UserServerStatusUpdateResponse*>* MasterServer::IMasterServer::UpdateUserServerStatus(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* serverName, ::Il2CppString* secret, ::Il2CppString* password, ::Array<uint8_t>* random, ::Array<uint8_t>* publicKey, int currentPlayerCount, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::UpdateUserServerStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateUserServerStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(serverName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey), ::il2cpp_utils::ExtractType(currentPlayerCount), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::UserServerStatusUpdateResponse*>*, false>(___instance_arg, ___internal__method, protocolVersion, endPoint, userId, userName, serverName, secret, password, random, publicKey, currentPlayerCount, selectionMask, configuration);
}
// Autogenerated method: MasterServer.IMasterServer.HeartbeatUserServer
System::Threading::Tasks::Task_1<MasterServer::UserServerHeartbeatResponse*>* MasterServer::IMasterServer::HeartbeatUserServer(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret, int currentPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::HeartbeatUserServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HeartbeatUserServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(currentPlayerCount)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::UserServerHeartbeatResponse*>*, false>(___instance_arg, ___internal__method, protocolVersion, endPoint, userId, userName, secret, currentPlayerCount);
}
// Autogenerated method: MasterServer.IMasterServer.RemoveUserServer
void MasterServer::IMasterServer::RemoveUserServer(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::RemoveUserServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveUserServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, endPoint, userId, userName, secret);
}
// Autogenerated method: MasterServer.IMasterServer.GetPublicUserServers
System::Threading::Tasks::Task_1<MasterServer::GetPublicUserServersResponse*>* MasterServer::IMasterServer::GetPublicUserServers(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* userId, ::Il2CppString* userName, int offset, int count, GlobalNamespace::UserServerFilter filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::GetPublicUserServers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPublicUserServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(filter)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::GetPublicUserServersResponse*>*, false>(___instance_arg, ___internal__method, protocolVersion, endPoint, userId, userName, offset, count, filter);
}
// Autogenerated method: MasterServer.IMasterServer.ConnectToUserServer
System::Threading::Tasks::Task_1<MasterServer::ConnectToServerResponse*>* MasterServer::IMasterServer::ConnectToUserServer(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret, ::Il2CppString* code, ::Il2CppString* password, ::Array<uint8_t>* random, ::Array<uint8_t>* publicKey, bool useRelay) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::ConnectToUserServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToUserServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey), ::il2cpp_utils::ExtractType(useRelay)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::ConnectToServerResponse*>*, false>(___instance_arg, ___internal__method, protocolVersion, endPoint, userId, userName, secret, code, password, random, publicKey, useRelay);
}
// Autogenerated method: MasterServer.IMasterServer.ConnectToMatchmakingServer
System::Threading::Tasks::Task_1<MasterServer::ConnectToServerResponse*>* MasterServer::IMasterServer::ConnectToMatchmakingServer(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* userId, ::Il2CppString* userName, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, ::Array<uint8_t>* random, ::Array<uint8_t>* publicKey, ::Il2CppString* secret, ::Il2CppString* code) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::ConnectToMatchmakingServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToMatchmakingServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::ConnectToServerResponse*>*, false>(___instance_arg, ___internal__method, protocolVersion, endPoint, userId, userName, selectionMask, configuration, random, publicKey, secret, code);
}
// Autogenerated method: MasterServer.IMasterServer.TryAuthenticateDedicatedServer
bool MasterServer::IMasterServer::TryAuthenticateDedicatedServer(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* id, ::Array<uint8_t>* nonce, ::Array<uint8_t>* hash, int64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::TryAuthenticateDedicatedServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAuthenticateDedicatedServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(nonce), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(timestamp)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, protocolVersion, endPoint, id, nonce, hash, timestamp);
}
// Autogenerated method: MasterServer.IMasterServer.HeartbeatDedicatedServer
void MasterServer::IMasterServer::HeartbeatDedicatedServer(uint protocolVersion, ::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, System::Net::IPEndPoint* endPoint, int cpuUtilization, int occupiedServerSlotCount, int unoccupiedServerSlotCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::HeartbeatDedicatedServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HeartbeatDedicatedServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(cpuUtilization), ::il2cpp_utils::ExtractType(occupiedServerSlotCount), ::il2cpp_utils::ExtractType(unoccupiedServerSlotCount)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, cpuUtilization, occupiedServerSlotCount, unoccupiedServerSlotCount);
}
// Autogenerated method: MasterServer.IMasterServer.UpdateMatchmakingServerStatus
void MasterServer::IMasterServer::UpdateMatchmakingServerStatus(uint protocolVersion, ::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, System::Net::IPEndPoint* endPoint, ::Il2CppString* id, GlobalNamespace::GameStateType gameState, int currentPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::UpdateMatchmakingServerStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMatchmakingServerStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(gameState), ::il2cpp_utils::ExtractType(currentPlayerCount)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, id, gameState, currentPlayerCount);
}
// Autogenerated method: MasterServer.IMasterServer.UpdateRelayServerStatus
void MasterServer::IMasterServer::UpdateRelayServerStatus(uint protocolVersion, ::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, System::Net::IPEndPoint* endPoint, ::Il2CppString* id, int currentPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::UpdateRelayServerStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRelayServerStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(currentPlayerCount)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, id, currentPlayerCount);
}
// Autogenerated method: MasterServer.IMasterServer.SetDedicatedServerNoLongerOccupied
void MasterServer::IMasterServer::SetDedicatedServerNoLongerOccupied(uint protocolVersion, ::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, System::Net::IPEndPoint* endPoint, ::Il2CppString* id) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::SetDedicatedServerNoLongerOccupied");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDedicatedServerNoLongerOccupied", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(id)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, id);
}
// Autogenerated method: MasterServer.IMasterServer.RemoveDedicatedServer
void MasterServer::IMasterServer::RemoveDedicatedServer(uint protocolVersion, ::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::RemoveDedicatedServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveDedicatedServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(endPoint)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServerReliableRequest.get_requestId
uint MasterServer::IMasterServerReliableRequest::get_requestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerReliableRequest::get_requestId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerReliableRequest.WithRequestId
MasterServer::IMasterServerReliableRequest* MasterServer::IMasterServerReliableRequest::WithRequestId(uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerReliableRequest::WithRequestId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithRequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerReliableRequest*, false>(___instance_arg, ___internal__method, requestId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.IMasterServerResponse
#include "MasterServer/IMasterServerResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServerResponse.get_responseId
uint MasterServer::IMasterServerResponse::get_responseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerResponse::get_responseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_responseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerResponse.get_resultCode
uint8_t MasterServer::IMasterServerResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerResponse.get_resultCodeString
::Il2CppString* MasterServer::IMasterServerResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerResponse.WithResponseId
MasterServer::IMasterServerResponse* MasterServer::IMasterServerResponse::WithResponseId(uint responseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerResponse::WithResponseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithResponseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerResponse*, false>(___instance_arg, ___internal__method, responseId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.IMasterServerReliableResponse
#include "MasterServer/IMasterServerReliableResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServerReliableResponse.WithRequestAndResponseId
MasterServer::IMasterServerReliableResponse* MasterServer::IMasterServerReliableResponse::WithRequestAndResponseId(uint requestId, uint responseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerReliableResponse::WithRequestAndResponseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithRequestAndResponseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(responseId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerReliableResponse*, false>(___instance_arg, ___internal__method, requestId, responseId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.IMasterServerAcknowledgeMessage
#include "MasterServer/IMasterServerAcknowledgeMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServerAcknowledgeMessage.get_messageHandled
bool MasterServer::IMasterServerAcknowledgeMessage::get_messageHandled() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerAcknowledgeMessage::get_messageHandled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_messageHandled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.IMasterServerAuthenticateResponse
#include "MasterServer/IMasterServerAuthenticateResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServerAuthenticateResponse.get_isAuthenticated
bool MasterServer::IMasterServerAuthenticateResponse::get_isAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerAuthenticateResponse::get_isAuthenticated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.IMasterServerMultipartMessage
#include "MasterServer/IMasterServerMultipartMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServerMultipartMessage.get_multipartMessageId
uint MasterServer::IMasterServerMultipartMessage::get_multipartMessageId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerMultipartMessage::get_multipartMessageId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multipartMessageId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerMultipartMessage.get_offset
int MasterServer::IMasterServerMultipartMessage::get_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerMultipartMessage::get_offset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerMultipartMessage.get_length
int MasterServer::IMasterServerMultipartMessage::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerMultipartMessage::get_length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerMultipartMessage.get_totalLength
int MasterServer::IMasterServerMultipartMessage::get_totalLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerMultipartMessage::get_totalLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_totalLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerMultipartMessage.get_data
::Array<uint8_t>* MasterServer::IMasterServerMultipartMessage::get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerMultipartMessage::get_data");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler
#include "MasterServer/MessageHandler.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.ConnectionState
#include "MasterServer/MessageHandler_ConnectionState.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.RequestWaiter
#include "MasterServer/MessageHandler_RequestWaiter.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.SentRequestWaiter
#include "MasterServer/MessageHandler_SentRequestWaiter.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.RequestResponseWaiter
#include "MasterServer/MessageHandler_RequestResponseWaiter.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.MultipartMessageWaiter
#include "MasterServer/MessageHandler_MultipartMessageWaiter.hpp"
// Including type: IUnconnectedSenderReceiver
#include "GlobalNamespace/IUnconnectedSenderReceiver.hpp"
// Including type: MasterServer.IAnalyticsManager
#include "MasterServer/IAnalyticsManager.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<>c__DisplayClass73_0`1
#include "MasterServer/MessageHandler_--c__DisplayClass73_0_1.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<>c__DisplayClass77_0`1
#include "MasterServer/MessageHandler_--c__DisplayClass77_0_1.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<>c__DisplayClass78_0`1
#include "MasterServer/MessageHandler_--c__DisplayClass78_0_1.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<GetAndSendResponse>d__83`2
#include "MasterServer/MessageHandler_-GetAndSendResponse-d__83_2.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<GetAndSendResponseAsync>d__84`2
#include "MasterServer/MessageHandler_-GetAndSendResponseAsync-d__84_2.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<GetAndSendUnreilableResponse>d__85`2
#include "MasterServer/MessageHandler_-GetAndSendUnreilableResponse-d__85_2.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<SendMessageWithRetry>d__98
#include "MasterServer/MessageHandler_-SendMessageWithRetry-d__98.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<>c__DisplayClass100_0
#include "MasterServer/MessageHandler_--c__DisplayClass100_0.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<SendMultipartMessageWithRetryAsync>d__100
#include "MasterServer/MessageHandler_-SendMultipartMessageWithRetryAsync-d__100.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<SendMessageWithRetryAsyncInternal>d__101
#include "MasterServer/MessageHandler_-SendMessageWithRetryAsyncInternal-d__101.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<SendMessageWithRetryAwaitResponseAsync>d__102`1
#include "MasterServer/MessageHandler_-SendMessageWithRetryAwaitResponseAsync-d__102_1.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<>c__DisplayClass103_0`1
#include "MasterServer/MessageHandler_--c__DisplayClass103_0_1.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<AwaitResponseAsync>d__104`1
#include "MasterServer/MessageHandler_-AwaitResponseAsync-d__104_1.hpp"
// Including type: NetworkPacketSerializer`2
#include "GlobalNamespace/NetworkPacketSerializer_2.hpp"
// Including type: MasterServer.ITimeProvider
#include "MasterServer/ITimeProvider.hpp"
// Including type: ExpiringDictionary`2
#include "GlobalNamespace/ExpiringDictionary_2.hpp"
// Including type: SmallBufferPool
#include "GlobalNamespace/SmallBufferPool.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: PacketEncryptionLayer
#include "GlobalNamespace/PacketEncryptionLayer.hpp"
// Including type: MasterServer.IHandshakeMessage
#include "MasterServer/IHandshakeMessage.hpp"
// Including type: MasterServer.ClientHelloRequest
#include "MasterServer/ClientHelloRequest.hpp"
// Including type: MasterServer.HelloVerifyRequest
#include "MasterServer/HelloVerifyRequest.hpp"
// Including type: MasterServer.ClientHelloWithCookieRequest
#include "MasterServer/ClientHelloWithCookieRequest.hpp"
// Including type: MasterServer.IUserMessage
#include "MasterServer/IUserMessage.hpp"
// Including type: MasterServer.UserServerStatusUpdateRequest
#include "MasterServer/UserServerStatusUpdateRequest.hpp"
// Including type: MasterServer.UserServerHeartbeatRequest
#include "MasterServer/UserServerHeartbeatRequest.hpp"
// Including type: MasterServer.UserServerHeartbeatResponse
#include "MasterServer/UserServerHeartbeatResponse.hpp"
// Including type: MasterServer.UserServerRemoveRequest
#include "MasterServer/UserServerRemoveRequest.hpp"
// Including type: MasterServer.ConnectToUserServerRequest
#include "MasterServer/ConnectToUserServerRequest.hpp"
// Including type: MasterServer.ConnectToMatchmakingServerRequest
#include "MasterServer/ConnectToMatchmakingServerRequest.hpp"
// Including type: MasterServer.PrepareForConnectionRequest
#include "MasterServer/PrepareForConnectionRequest.hpp"
// Including type: MasterServer.GetPublicUserServersRequest
#include "MasterServer/GetPublicUserServersRequest.hpp"
// Including type: MasterServer.SessionKeepaliveMessage
#include "MasterServer/SessionKeepaliveMessage.hpp"
// Including type: MasterServer.IDedicatedServerMessage
#include "MasterServer/IDedicatedServerMessage.hpp"
// Including type: MasterServer.CreateRelayServerRequest
#include "MasterServer/CreateRelayServerRequest.hpp"
// Including type: MasterServer.CreateMatchmakingServerRequest
#include "MasterServer/CreateMatchmakingServerRequest.hpp"
// Including type: MasterServer.DedicatedServerNoLongerOccupiedRequest
#include "MasterServer/DedicatedServerNoLongerOccupiedRequest.hpp"
// Including type: MasterServer.DedicatedServerHeartbeatRequest
#include "MasterServer/DedicatedServerHeartbeatRequest.hpp"
// Including type: MasterServer.DedicatedServerHeartbeatResponse
#include "MasterServer/DedicatedServerHeartbeatResponse.hpp"
// Including type: MasterServer.RelayServerStatusUpdateRequest
#include "MasterServer/RelayServerStatusUpdateRequest.hpp"
// Including type: MasterServer.MatchmakingServerStatusUpdateRequest
#include "MasterServer/MatchmakingServerStatusUpdateRequest.hpp"
// Including type: MasterServer.DedicatedServerShutDownRequest
#include "MasterServer/DedicatedServerShutDownRequest.hpp"
// Including type: MasterServer.DedicatedServerPrepareForConnectionRequest
#include "MasterServer/DedicatedServerPrepareForConnectionRequest.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: MasterServer.IMasterServerMessage
#include "MasterServer/IMasterServerMessage.hpp"
// Including type: MasterServer.IMasterServerAcknowledgeMessage
#include "MasterServer/IMasterServerAcknowledgeMessage.hpp"
// Including type: MasterServer.IMasterServerReliableResponse
#include "MasterServer/IMasterServerReliableResponse.hpp"
// Including type: MasterServer.IMasterServerMultipartMessage
#include "MasterServer/IMasterServerMultipartMessage.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MasterServer.IMasterServerUnreliableMessage
#include "MasterServer/IMasterServerUnreliableMessage.hpp"
// Including type: MasterServer.IMasterServerResponse
#include "MasterServer/IMasterServerResponse.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: System.Func`5
#include "System/Func_5.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: INetworkPacketSerializer`1
#include "GlobalNamespace/INetworkPacketSerializer_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt32 kHandshakeMessageType
uint MasterServer::MessageHandler::_get_kHandshakeMessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kHandshakeMessageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler", "kHandshakeMessageType"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kHandshakeMessageType
void MasterServer::MessageHandler::_set_kHandshakeMessageType(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kHandshakeMessageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kHandshakeMessageType", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kUserMessageType
uint MasterServer::MessageHandler::_get_kUserMessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kUserMessageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler", "kUserMessageType"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kUserMessageType
void MasterServer::MessageHandler::_set_kUserMessageType(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kUserMessageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kUserMessageType", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kDedicatedServerMessageType
uint MasterServer::MessageHandler::_get_kDedicatedServerMessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kDedicatedServerMessageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler", "kDedicatedServerMessageType"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kDedicatedServerMessageType
void MasterServer::MessageHandler::_set_kDedicatedServerMessageType(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kDedicatedServerMessageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kDedicatedServerMessageType", value));
}
// Autogenerated static field getter
// Get static field: static protected System.UInt32 kProtocolVersion
uint MasterServer::MessageHandler::_get_kProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kProtocolVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler", "kProtocolVersion"));
}
// Autogenerated static field setter
// Set static field: static protected System.UInt32 kProtocolVersion
void MasterServer::MessageHandler::_set_kProtocolVersion(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kProtocolVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kProtocolVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMinSignatureLength
int MasterServer::MessageHandler::_get_kMinSignatureLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kMinSignatureLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kMinSignatureLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMinSignatureLength
void MasterServer::MessageHandler::_set_kMinSignatureLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kMinSignatureLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kMinSignatureLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxSignatureLength
int MasterServer::MessageHandler::_get_kMaxSignatureLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kMaxSignatureLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kMaxSignatureLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxSignatureLength
void MasterServer::MessageHandler::_set_kMaxSignatureLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kMaxSignatureLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kMaxSignatureLength", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxPacketSize
int MasterServer::MessageHandler::_get_kMaxPacketSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kMaxPacketSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kMaxPacketSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxPacketSize
void MasterServer::MessageHandler::_set_kMaxPacketSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kMaxPacketSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kMaxPacketSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryCount
int MasterServer::MessageHandler::_get_kRetryCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kRetryCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryCount
void MasterServer::MessageHandler::_set_kRetryCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kRetryCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryDelay0Ms
int MasterServer::MessageHandler::_get_kRetryDelay0Ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kRetryDelay0Ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryDelay0Ms"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryDelay0Ms
void MasterServer::MessageHandler::_set_kRetryDelay0Ms(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kRetryDelay0Ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryDelay0Ms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryDelay1Ms
int MasterServer::MessageHandler::_get_kRetryDelay1Ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kRetryDelay1Ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryDelay1Ms"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryDelay1Ms
void MasterServer::MessageHandler::_set_kRetryDelay1Ms(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kRetryDelay1Ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryDelay1Ms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryDelay2Ms
int MasterServer::MessageHandler::_get_kRetryDelay2Ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kRetryDelay2Ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryDelay2Ms"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryDelay2Ms
void MasterServer::MessageHandler::_set_kRetryDelay2Ms(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kRetryDelay2Ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryDelay2Ms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryDelay3Ms
int MasterServer::MessageHandler::_get_kRetryDelay3Ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kRetryDelay3Ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryDelay3Ms"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryDelay3Ms
void MasterServer::MessageHandler::_set_kRetryDelay3Ms(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kRetryDelay3Ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryDelay3Ms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryDelay4Ms
int MasterServer::MessageHandler::_get_kRetryDelay4Ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kRetryDelay4Ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryDelay4Ms"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryDelay4Ms
void MasterServer::MessageHandler::_set_kRetryDelay4Ms(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kRetryDelay4Ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryDelay4Ms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kConnectionStateTimeoutMs
int64_t MasterServer::MessageHandler::_get_kConnectionStateTimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kConnectionStateTimeoutMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "MessageHandler", "kConnectionStateTimeoutMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kConnectionStateTimeoutMs
void MasterServer::MessageHandler::_set_kConnectionStateTimeoutMs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kConnectionStateTimeoutMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kConnectionStateTimeoutMs", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kSentRequestTimeoutMs
int64_t MasterServer::MessageHandler::_get_kSentRequestTimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kSentRequestTimeoutMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "MessageHandler", "kSentRequestTimeoutMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kSentRequestTimeoutMs
void MasterServer::MessageHandler::_set_kSentRequestTimeoutMs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kSentRequestTimeoutMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kSentRequestTimeoutMs", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kSentRequestWithResponseTimeoutMs
int64_t MasterServer::MessageHandler::_get_kSentRequestWithResponseTimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kSentRequestWithResponseTimeoutMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "MessageHandler", "kSentRequestWithResponseTimeoutMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kSentRequestWithResponseTimeoutMs
void MasterServer::MessageHandler::_set_kSentRequestWithResponseTimeoutMs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kSentRequestWithResponseTimeoutMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kSentRequestWithResponseTimeoutMs", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kMultipartMessageTimeoutMs
int64_t MasterServer::MessageHandler::_get_kMultipartMessageTimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kMultipartMessageTimeoutMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "MessageHandler", "kMultipartMessageTimeoutMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kMultipartMessageTimeoutMs
void MasterServer::MessageHandler::_set_kMultipartMessageTimeoutMs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kMultipartMessageTimeoutMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kMultipartMessageTimeoutMs", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly NetworkPacketSerializer`2<MasterServer.MessageHandler/MasterServer.HandshakeMessageType,MasterServer.MessageHandler/MasterServer.MessageOrigin> _handshakeMessageSerializer
GlobalNamespace::NetworkPacketSerializer_2<MasterServer::MessageHandler::HandshakeMessageType, MasterServer::MessageHandler::MessageOrigin>* MasterServer::MessageHandler::_get__handshakeMessageSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get__handshakeMessageSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handshakeMessageSerializer"))->offset;
  return *reinterpret_cast<GlobalNamespace::NetworkPacketSerializer_2<MasterServer::MessageHandler::HandshakeMessageType, MasterServer::MessageHandler::MessageOrigin>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly NetworkPacketSerializer`2<MasterServer.MessageHandler/MasterServer.HandshakeMessageType,MasterServer.MessageHandler/MasterServer.MessageOrigin> _handshakeMessageSerializer
void MasterServer::MessageHandler::_set__handshakeMessageSerializer(GlobalNamespace::NetworkPacketSerializer_2<MasterServer::MessageHandler::HandshakeMessageType, MasterServer::MessageHandler::MessageOrigin>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set__handshakeMessageSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handshakeMessageSerializer"))->offset;
  *reinterpret_cast<GlobalNamespace::NetworkPacketSerializer_2<MasterServer::MessageHandler::HandshakeMessageType, MasterServer::MessageHandler::MessageOrigin>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly NetworkPacketSerializer`2<MasterServer.MessageHandler/MasterServer.UserMessageType,MasterServer.MessageHandler/MasterServer.MessageOrigin> _userMessageSerializer
GlobalNamespace::NetworkPacketSerializer_2<MasterServer::MessageHandler::UserMessageType, MasterServer::MessageHandler::MessageOrigin>* MasterServer::MessageHandler::_get__userMessageSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get__userMessageSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userMessageSerializer"))->offset;
  return *reinterpret_cast<GlobalNamespace::NetworkPacketSerializer_2<MasterServer::MessageHandler::UserMessageType, MasterServer::MessageHandler::MessageOrigin>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly NetworkPacketSerializer`2<MasterServer.MessageHandler/MasterServer.UserMessageType,MasterServer.MessageHandler/MasterServer.MessageOrigin> _userMessageSerializer
void MasterServer::MessageHandler::_set__userMessageSerializer(GlobalNamespace::NetworkPacketSerializer_2<MasterServer::MessageHandler::UserMessageType, MasterServer::MessageHandler::MessageOrigin>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set__userMessageSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userMessageSerializer"))->offset;
  *reinterpret_cast<GlobalNamespace::NetworkPacketSerializer_2<MasterServer::MessageHandler::UserMessageType, MasterServer::MessageHandler::MessageOrigin>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly NetworkPacketSerializer`2<MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType,MasterServer.MessageHandler/MasterServer.MessageOrigin> _dedicatedServerMessageSerializer
GlobalNamespace::NetworkPacketSerializer_2<MasterServer::MessageHandler::DedicatedServerMessageType, MasterServer::MessageHandler::MessageOrigin>* MasterServer::MessageHandler::_get__dedicatedServerMessageSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get__dedicatedServerMessageSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dedicatedServerMessageSerializer"))->offset;
  return *reinterpret_cast<GlobalNamespace::NetworkPacketSerializer_2<MasterServer::MessageHandler::DedicatedServerMessageType, MasterServer::MessageHandler::MessageOrigin>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly NetworkPacketSerializer`2<MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType,MasterServer.MessageHandler/MasterServer.MessageOrigin> _dedicatedServerMessageSerializer
void MasterServer::MessageHandler::_set__dedicatedServerMessageSerializer(GlobalNamespace::NetworkPacketSerializer_2<MasterServer::MessageHandler::DedicatedServerMessageType, MasterServer::MessageHandler::MessageOrigin>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set__dedicatedServerMessageSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dedicatedServerMessageSerializer"))->offset;
  *reinterpret_cast<GlobalNamespace::NetworkPacketSerializer_2<MasterServer::MessageHandler::DedicatedServerMessageType, MasterServer::MessageHandler::MessageOrigin>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.Utils.NetDataWriter _dataWriter
LiteNetLib::Utils::NetDataWriter* MasterServer::MessageHandler::_get__dataWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get__dataWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataWriter"))->offset;
  return *reinterpret_cast<LiteNetLib::Utils::NetDataWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly LiteNetLib.Utils.NetDataWriter _dataWriter
void MasterServer::MessageHandler::_set__dataWriter(LiteNetLib::Utils::NetDataWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set__dataWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataWriter"))->offset;
  *reinterpret_cast<LiteNetLib::Utils::NetDataWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.Utils.NetDataReader _multipartReader
LiteNetLib::Utils::NetDataReader* MasterServer::MessageHandler::_get__multipartReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get__multipartReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multipartReader"))->offset;
  return *reinterpret_cast<LiteNetLib::Utils::NetDataReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly LiteNetLib.Utils.NetDataReader _multipartReader
void MasterServer::MessageHandler::_set__multipartReader(LiteNetLib::Utils::NetDataReader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set__multipartReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multipartReader"))->offset;
  *reinterpret_cast<LiteNetLib::Utils::NetDataReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IUnconnectedSenderReceiver _sender
GlobalNamespace::IUnconnectedSenderReceiver* MasterServer::MessageHandler::_get__sender() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get__sender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sender"))->offset;
  return *reinterpret_cast<GlobalNamespace::IUnconnectedSenderReceiver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IUnconnectedSenderReceiver _sender
void MasterServer::MessageHandler::_set__sender(GlobalNamespace::IUnconnectedSenderReceiver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set__sender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sender"))->offset;
  *reinterpret_cast<GlobalNamespace::IUnconnectedSenderReceiver**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: protected readonly MasterServer.IAnalyticsManager analytics
MasterServer::IAnalyticsManager* MasterServer::MessageHandler::_get_analytics() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_analytics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "analytics"))->offset;
  return *reinterpret_cast<MasterServer::IAnalyticsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: protected readonly MasterServer.IAnalyticsManager analytics
void MasterServer::MessageHandler::_set_analytics(MasterServer::IAnalyticsManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_analytics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "analytics"))->offset;
  *reinterpret_cast<MasterServer::IAnalyticsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly MasterServer.ITimeProvider _timeProvider
MasterServer::ITimeProvider* MasterServer::MessageHandler::_get__timeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get__timeProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeProvider"))->offset;
  return *reinterpret_cast<MasterServer::ITimeProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly MasterServer.ITimeProvider _timeProvider
void MasterServer::MessageHandler::_set__timeProvider(MasterServer::ITimeProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set__timeProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeProvider"))->offset;
  *reinterpret_cast<MasterServer::ITimeProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly ExpiringDictionary`2<MasterServer.MessageHandler/MasterServer.RequestWaiterId,MasterServer.MessageHandler/MasterServer.SentRequestWaiter> _sentRequestWaiters
GlobalNamespace::ExpiringDictionary_2<MasterServer::MessageHandler::RequestWaiterId, MasterServer::MessageHandler::SentRequestWaiter*>* MasterServer::MessageHandler::_get__sentRequestWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get__sentRequestWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sentRequestWaiters"))->offset;
  return *reinterpret_cast<GlobalNamespace::ExpiringDictionary_2<MasterServer::MessageHandler::RequestWaiterId, MasterServer::MessageHandler::SentRequestWaiter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly ExpiringDictionary`2<MasterServer.MessageHandler/MasterServer.RequestWaiterId,MasterServer.MessageHandler/MasterServer.SentRequestWaiter> _sentRequestWaiters
void MasterServer::MessageHandler::_set__sentRequestWaiters(GlobalNamespace::ExpiringDictionary_2<MasterServer::MessageHandler::RequestWaiterId, MasterServer::MessageHandler::SentRequestWaiter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set__sentRequestWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sentRequestWaiters"))->offset;
  *reinterpret_cast<GlobalNamespace::ExpiringDictionary_2<MasterServer::MessageHandler::RequestWaiterId, MasterServer::MessageHandler::SentRequestWaiter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly ExpiringDictionary`2<MasterServer.MessageHandler/MasterServer.RequestWaiterId,MasterServer.MessageHandler/MasterServer.RequestResponseWaiter> _requestResponseWaiters
GlobalNamespace::ExpiringDictionary_2<MasterServer::MessageHandler::RequestWaiterId, MasterServer::MessageHandler::RequestResponseWaiter*>* MasterServer::MessageHandler::_get__requestResponseWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get__requestResponseWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestResponseWaiters"))->offset;
  return *reinterpret_cast<GlobalNamespace::ExpiringDictionary_2<MasterServer::MessageHandler::RequestWaiterId, MasterServer::MessageHandler::RequestResponseWaiter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly ExpiringDictionary`2<MasterServer.MessageHandler/MasterServer.RequestWaiterId,MasterServer.MessageHandler/MasterServer.RequestResponseWaiter> _requestResponseWaiters
void MasterServer::MessageHandler::_set__requestResponseWaiters(GlobalNamespace::ExpiringDictionary_2<MasterServer::MessageHandler::RequestWaiterId, MasterServer::MessageHandler::RequestResponseWaiter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set__requestResponseWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestResponseWaiters"))->offset;
  *reinterpret_cast<GlobalNamespace::ExpiringDictionary_2<MasterServer::MessageHandler::RequestWaiterId, MasterServer::MessageHandler::RequestResponseWaiter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly ExpiringDictionary`2<System.Net.IPEndPoint,MasterServer.MessageHandler/MasterServer.ConnectionState> _connectionStates
GlobalNamespace::ExpiringDictionary_2<System::Net::IPEndPoint*, MasterServer::MessageHandler::ConnectionState*>* MasterServer::MessageHandler::_get__connectionStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get__connectionStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionStates"))->offset;
  return *reinterpret_cast<GlobalNamespace::ExpiringDictionary_2<System::Net::IPEndPoint*, MasterServer::MessageHandler::ConnectionState*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly ExpiringDictionary`2<System.Net.IPEndPoint,MasterServer.MessageHandler/MasterServer.ConnectionState> _connectionStates
void MasterServer::MessageHandler::_set__connectionStates(GlobalNamespace::ExpiringDictionary_2<System::Net::IPEndPoint*, MasterServer::MessageHandler::ConnectionState*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set__connectionStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionStates"))->offset;
  *reinterpret_cast<GlobalNamespace::ExpiringDictionary_2<System::Net::IPEndPoint*, MasterServer::MessageHandler::ConnectionState*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly ExpiringDictionary`2<MasterServer.MessageHandler/MasterServer.RequestWaiterId,MasterServer.MessageHandler/MasterServer.MultipartMessageWaiter> _multipartMessageBuffer
GlobalNamespace::ExpiringDictionary_2<MasterServer::MessageHandler::RequestWaiterId, MasterServer::MessageHandler::MultipartMessageWaiter*>* MasterServer::MessageHandler::_get__multipartMessageBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get__multipartMessageBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multipartMessageBuffer"))->offset;
  return *reinterpret_cast<GlobalNamespace::ExpiringDictionary_2<MasterServer::MessageHandler::RequestWaiterId, MasterServer::MessageHandler::MultipartMessageWaiter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly ExpiringDictionary`2<MasterServer.MessageHandler/MasterServer.RequestWaiterId,MasterServer.MessageHandler/MasterServer.MultipartMessageWaiter> _multipartMessageBuffer
void MasterServer::MessageHandler::_set__multipartMessageBuffer(GlobalNamespace::ExpiringDictionary_2<MasterServer::MessageHandler::RequestWaiterId, MasterServer::MessageHandler::MultipartMessageWaiter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set__multipartMessageBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multipartMessageBuffer"))->offset;
  *reinterpret_cast<GlobalNamespace::ExpiringDictionary_2<MasterServer::MessageHandler::RequestWaiterId, MasterServer::MessageHandler::MultipartMessageWaiter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly SmallBufferPool _bufferPool
GlobalNamespace::SmallBufferPool* MasterServer::MessageHandler::_get__bufferPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get__bufferPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufferPool"))->offset;
  return *reinterpret_cast<GlobalNamespace::SmallBufferPool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly SmallBufferPool _bufferPool
void MasterServer::MessageHandler::_set__bufferPool(GlobalNamespace::SmallBufferPool* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set__bufferPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufferPool"))->offset;
  *reinterpret_cast<GlobalNamespace::SmallBufferPool**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.CancellationTokenSource _disposedTokenSource
System::Threading::CancellationTokenSource* MasterServer::MessageHandler::_get__disposedTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get__disposedTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposedTokenSource"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Threading.CancellationTokenSource _disposedTokenSource
void MasterServer::MessageHandler::_set__disposedTokenSource(System::Threading::CancellationTokenSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set__disposedTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposedTokenSource"))->offset;
  *reinterpret_cast<System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.MessageHandler.get_encryptionLayer
GlobalNamespace::PacketEncryptionLayer* MasterServer::MessageHandler::get_encryptionLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::get_encryptionLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_encryptionLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketEncryptionLayer*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.get_timeProvider
MasterServer::ITimeProvider* MasterServer::MessageHandler::get_timeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::get_timeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ITimeProvider*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.RegisterHandshakeMessageHandlers
void MasterServer::MessageHandler::RegisterHandshakeMessageHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RegisterHandshakeMessageHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterHandshakeMessageHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.ShouldHandleHandshakeMessage
bool MasterServer::MessageHandler::ShouldHandleHandshakeMessage(MasterServer::IHandshakeMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ShouldHandleHandshakeMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleHandshakeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleClientHelloRequest
void MasterServer::MessageHandler::HandleClientHelloRequest(MasterServer::ClientHelloRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleClientHelloRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleClientHelloRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleHelloVerifyRequest
void MasterServer::MessageHandler::HandleHelloVerifyRequest(MasterServer::HelloVerifyRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleHelloVerifyRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHelloVerifyRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleClientHelloWithCookieRequest
void MasterServer::MessageHandler::HandleClientHelloWithCookieRequest(MasterServer::ClientHelloWithCookieRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleClientHelloWithCookieRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleClientHelloWithCookieRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.RegisterUserMessageHandlers
void MasterServer::MessageHandler::RegisterUserMessageHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RegisterUserMessageHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterUserMessageHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.ShouldHandleUserMessage
bool MasterServer::MessageHandler::ShouldHandleUserMessage(MasterServer::IUserMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ShouldHandleUserMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleUserMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleUserServerStatusUpdateRequest
void MasterServer::MessageHandler::HandleUserServerStatusUpdateRequest(MasterServer::UserServerStatusUpdateRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleUserServerStatusUpdateRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUserServerStatusUpdateRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleUserServerHeartbeatRequest
void MasterServer::MessageHandler::HandleUserServerHeartbeatRequest(MasterServer::UserServerHeartbeatRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleUserServerHeartbeatRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUserServerHeartbeatRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleUserServerHeartbeatResponse
void MasterServer::MessageHandler::HandleUserServerHeartbeatResponse(MasterServer::UserServerHeartbeatResponse* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleUserServerHeartbeatResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUserServerHeartbeatResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleUserServerRemoveRequest
void MasterServer::MessageHandler::HandleUserServerRemoveRequest(MasterServer::UserServerRemoveRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleUserServerRemoveRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUserServerRemoveRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleConnectToUserServerRequest
void MasterServer::MessageHandler::HandleConnectToUserServerRequest(MasterServer::ConnectToUserServerRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleConnectToUserServerRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectToUserServerRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleConnectToMatchmakingServerRequest
void MasterServer::MessageHandler::HandleConnectToMatchmakingServerRequest(MasterServer::ConnectToMatchmakingServerRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleConnectToMatchmakingServerRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectToMatchmakingServerRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandlePrepareForConnectionRequest
void MasterServer::MessageHandler::HandlePrepareForConnectionRequest(MasterServer::PrepareForConnectionRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandlePrepareForConnectionRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePrepareForConnectionRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleGetPublicUserServersRequest
void MasterServer::MessageHandler::HandleGetPublicUserServersRequest(MasterServer::GetPublicUserServersRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleGetPublicUserServersRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGetPublicUserServersRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleSessionKeepaliveMessage
void MasterServer::MessageHandler::HandleSessionKeepaliveMessage(MasterServer::SessionKeepaliveMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleSessionKeepaliveMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSessionKeepaliveMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.RegisterDedicatedServerHandlers
void MasterServer::MessageHandler::RegisterDedicatedServerHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RegisterDedicatedServerHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterDedicatedServerHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.ShouldHandleDedicatedServerMessage
bool MasterServer::MessageHandler::ShouldHandleDedicatedServerMessage(MasterServer::IDedicatedServerMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ShouldHandleDedicatedServerMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleDedicatedServerMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleGetAvailableRelayServerRequest
void MasterServer::MessageHandler::HandleGetAvailableRelayServerRequest(MasterServer::CreateRelayServerRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleGetAvailableRelayServerRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGetAvailableRelayServerRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleGetAvailableMatchmakingServerRequest
void MasterServer::MessageHandler::HandleGetAvailableMatchmakingServerRequest(MasterServer::CreateMatchmakingServerRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleGetAvailableMatchmakingServerRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGetAvailableMatchmakingServerRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerNoLongerAvailableRequest
void MasterServer::MessageHandler::HandleDedicatedServerNoLongerAvailableRequest(MasterServer::DedicatedServerNoLongerOccupiedRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleDedicatedServerNoLongerAvailableRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDedicatedServerNoLongerAvailableRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerHeartbeatRequest
void MasterServer::MessageHandler::HandleDedicatedServerHeartbeatRequest(MasterServer::DedicatedServerHeartbeatRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleDedicatedServerHeartbeatRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDedicatedServerHeartbeatRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerHeartbeatResponse
void MasterServer::MessageHandler::HandleDedicatedServerHeartbeatResponse(MasterServer::DedicatedServerHeartbeatResponse* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleDedicatedServerHeartbeatResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDedicatedServerHeartbeatResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleRelayServerStatusUpdateRequest
void MasterServer::MessageHandler::HandleRelayServerStatusUpdateRequest(MasterServer::RelayServerStatusUpdateRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleRelayServerStatusUpdateRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRelayServerStatusUpdateRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleMatchmakingServerStatusUpdateRequest
void MasterServer::MessageHandler::HandleMatchmakingServerStatusUpdateRequest(MasterServer::MatchmakingServerStatusUpdateRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleMatchmakingServerStatusUpdateRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMatchmakingServerStatusUpdateRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerShutDownRequest
void MasterServer::MessageHandler::HandleDedicatedServerShutDownRequest(MasterServer::DedicatedServerShutDownRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleDedicatedServerShutDownRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDedicatedServerShutDownRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerPrepareForConnectionRequest
void MasterServer::MessageHandler::HandleDedicatedServerPrepareForConnectionRequest(MasterServer::DedicatedServerPrepareForConnectionRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleDedicatedServerPrepareForConnectionRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDedicatedServerPrepareForConnectionRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.IsUnhandledMessage
bool MasterServer::MessageHandler::IsUnhandledMessage(MasterServer::IMasterServerReliableRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::IsUnhandledMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsUnhandledMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.CompleteSend
void MasterServer::MessageHandler::CompleteSend(MasterServer::IMasterServerResponse* packet, System::Net::IPEndPoint* remoteEndPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::CompleteSend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteSend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(remoteEndPoint)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, remoteEndPoint);
}
// Autogenerated method: MasterServer.MessageHandler.CompleteRequest
bool MasterServer::MessageHandler::CompleteRequest(MasterServer::IMasterServerReliableResponse* packet, System::Net::IPEndPoint* remoteEndPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::CompleteRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(remoteEndPoint)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, packet, remoteEndPoint);
}
// Autogenerated method: MasterServer.MessageHandler.ShouldHandleMessage
bool MasterServer::MessageHandler::ShouldHandleMessage(MasterServer::IMasterServerMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ShouldHandleMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.SendUnreliableMessage
void MasterServer::MessageHandler::SendUnreliableMessage(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerUnreliableMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendUnreliableMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendUnreliableMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, message);
}
// Autogenerated method: MasterServer.MessageHandler.SendUnreliableResponse
void MasterServer::MessageHandler::SendUnreliableResponse(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* request, MasterServer::IMasterServerResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendUnreliableResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendUnreliableResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(response)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, request, response);
}
// Autogenerated method: MasterServer.MessageHandler.SendUnreliableResponse
void MasterServer::MessageHandler::SendUnreliableResponse(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, uint responseId, MasterServer::IMasterServerResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendUnreliableResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendUnreliableResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(responseId), ::il2cpp_utils::ExtractType(response)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, responseId, response);
}
// Autogenerated method: MasterServer.MessageHandler.SendReliableRequest
void MasterServer::MessageHandler::SendReliableRequest(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* request, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendReliableRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendReliableRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, request, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendReliableRequestAsync
System::Threading::Tasks::Task* MasterServer::MessageHandler::SendReliableRequestAsync(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* request, System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* onSendFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendReliableRequestAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendReliableRequestAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(onSendFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, request, onSendFailed, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendReliableResponse
void MasterServer::MessageHandler::SendReliableResponse(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* request, MasterServer::IMasterServerReliableResponse* response, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendReliableResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendReliableResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, request, response, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendReliableResponse
void MasterServer::MessageHandler::SendReliableResponse(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, uint responseId, MasterServer::IMasterServerReliableResponse* response, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendReliableResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendReliableResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(responseId), ::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, responseId, response, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendReliableResponseAsync
System::Threading::Tasks::Task* MasterServer::MessageHandler::SendReliableResponseAsync(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* request, MasterServer::IMasterServerReliableResponse* response, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendReliableResponseAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendReliableResponseAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, request, response, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendMessage
void MasterServer::MessageHandler::SendMessage(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, message);
}
// Autogenerated method: MasterServer.MessageHandler.SendMessageWithRetry
void MasterServer::MessageHandler::SendMessageWithRetry(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* message, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendMessageWithRetry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessageWithRetry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, message, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendMessageWithRetryAsync
System::Threading::Tasks::Task* MasterServer::MessageHandler::SendMessageWithRetryAsync(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* message, System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* onSendFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendMessageWithRetryAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessageWithRetryAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(onSendFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, message, onSendFailed, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendMultipartMessageWithRetryAsync
System::Threading::Tasks::Task* MasterServer::MessageHandler::SendMultipartMessageWithRetryAsync(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* message, LiteNetLib::Utils::NetDataWriter* data, System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* onSendFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendMultipartMessageWithRetryAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMultipartMessageWithRetryAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(onSendFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, message, data, onSendFailed, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendMessageWithRetryAsyncInternal
System::Threading::Tasks::Task* MasterServer::MessageHandler::SendMessageWithRetryAsyncInternal(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* message, System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* onSendFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendMessageWithRetryAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessageWithRetryAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(onSendFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, message, onSendFailed, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.WaitForRetry
System::Threading::Tasks::Task* MasterServer::MessageHandler::WaitForRetry(int retryAttempt, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::WaitForRetry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForRetry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(retryAttempt), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, retryAttempt, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.Write
LiteNetLib::Utils::NetDataWriter* MasterServer::MessageHandler::Write(uint protocolVersion, LiteNetLib::Utils::INetSerializable* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(message)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::Utils::NetDataWriter*, false>(___instance_arg, ___internal__method, protocolVersion, message);
}
// Autogenerated method: MasterServer.MessageHandler.PollUpdate
void MasterServer::MessageHandler::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.ReceiveMessage
void MasterServer::MessageHandler::ReceiveMessage(System::Net::IPEndPoint* remoteEndPoint, LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ReceiveMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, remoteEndPoint, reader);
}
// Autogenerated method: MasterServer.MessageHandler.ShouldHandleMessageFromEndPoint
bool MasterServer::MessageHandler::ShouldHandleMessageFromEndPoint(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ShouldHandleMessageFromEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleMessageFromEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, endPoint);
}
// Autogenerated method: MasterServer.MessageHandler.ReceivedMessageException
void MasterServer::MessageHandler::ReceivedMessageException(System::Net::IPEndPoint* endPoint, System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ReceivedMessageException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceivedMessageException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(exception)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endPoint, exception);
}
// Autogenerated method: MasterServer.MessageHandler.BeginSession
void MasterServer::MessageHandler::BeginSession(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::BeginSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endPoint);
}
// Autogenerated method: MasterServer.MessageHandler.BeginSession
void MasterServer::MessageHandler::BeginSession(System::Net::IPEndPoint* endPoint, uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::BeginSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(requestId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endPoint, requestId);
}
// Autogenerated method: MasterServer.MessageHandler.GetNextRequestId
uint MasterServer::MessageHandler::GetNextRequestId(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::GetNextRequestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextRequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method, endPoint);
}
// Autogenerated method: MasterServer.MessageHandler.GetConnectionState
MasterServer::MessageHandler::ConnectionState* MasterServer::MessageHandler::GetConnectionState(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::GetConnectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::MessageHandler::ConnectionState*, false>(___instance_arg, ___internal__method, endPoint);
}
// Autogenerated method: MasterServer.MessageHandler.IsValidSessionStartRequestId
bool MasterServer::MessageHandler::IsValidSessionStartRequestId(System::Net::IPEndPoint* endPoint, uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::IsValidSessionStartRequestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidSessionStartRequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(requestId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, endPoint, requestId);
}
// Autogenerated method: MasterServer.MessageHandler.IsConnectionStateEncrypted
bool MasterServer::MessageHandler::IsConnectionStateEncrypted(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::IsConnectionStateEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsConnectionStateEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, endPoint);
}
// Autogenerated method: MasterServer.MessageHandler.GetSerializer
GlobalNamespace::INetworkPacketSerializer_1<MasterServer::MessageHandler::MessageOrigin>* MasterServer::MessageHandler::GetSerializer(uint protocolVersion, uint messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::GetSerializer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(messageType)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::INetworkPacketSerializer_1<MasterServer::MessageHandler::MessageOrigin>*, false>(___instance_arg, ___internal__method, protocolVersion, messageType);
}
// Autogenerated method: MasterServer.MessageHandler.Dispose
void MasterServer::MessageHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.CreateHandshakeHeader
::Array<uint8_t>* MasterServer::MessageHandler::CreateHandshakeHeader(::Array<uint8_t>* packetHeader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::CreateHandshakeHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "MessageHandler", "CreateHandshakeHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packetHeader)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, packetHeader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler/MasterServer.ConnectionState
#include "MasterServer/MessageHandler_ConnectionState.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kEpochBitOffset
int MasterServer::MessageHandler::ConnectionState::_get_kEpochBitOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get_kEpochBitOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler/ConnectionState", "kEpochBitOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kEpochBitOffset
void MasterServer::MessageHandler::ConnectionState::_set_kEpochBitOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set_kEpochBitOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/ConnectionState", "kEpochBitOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kRequestIdRange
uint MasterServer::MessageHandler::ConnectionState::_get_kRequestIdRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get_kRequestIdRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler/ConnectionState", "kRequestIdRange"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kRequestIdRange
void MasterServer::MessageHandler::ConnectionState::_set_kRequestIdRange(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set_kRequestIdRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/ConnectionState", "kRequestIdRange", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kRangeMask
uint MasterServer::MessageHandler::ConnectionState::_get_kRangeMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get_kRangeMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler/ConnectionState", "kRangeMask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kRangeMask
void MasterServer::MessageHandler::ConnectionState::_set_kRangeMask(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set_kRangeMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/ConnectionState", "kRangeMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kEpochMask
uint MasterServer::MessageHandler::ConnectionState::_get_kEpochMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get_kEpochMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler/ConnectionState", "kEpochMask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kEpochMask
void MasterServer::MessageHandler::ConnectionState::_set_kEpochMask(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set_kEpochMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/ConnectionState", "kEpochMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRequestBufferLength
int MasterServer::MessageHandler::ConnectionState::_get_kRequestBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get_kRequestBufferLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler/ConnectionState", "kRequestBufferLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRequestBufferLength
void MasterServer::MessageHandler::ConnectionState::_set_kRequestBufferLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set_kRequestBufferLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/ConnectionState", "kRequestBufferLength", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _userId
::Il2CppString* MasterServer::MessageHandler::ConnectionState::_get__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get__userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _userId
void MasterServer::MessageHandler::ConnectionState::_set__userId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set__userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userId"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _userName
::Il2CppString* MasterServer::MessageHandler::ConnectionState::_get__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get__userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _userName
void MasterServer::MessageHandler::ConnectionState::_set__userName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set__userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _protocolVersion
uint MasterServer::MessageHandler::ConnectionState::_get__protocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get__protocolVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_protocolVersion"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.UInt32 _protocolVersion
void MasterServer::MessageHandler::ConnectionState::_set__protocolVersion(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set__protocolVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_protocolVersion"))->offset;
  *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasIdentity
bool MasterServer::MessageHandler::ConnectionState::_get__hasIdentity() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get__hasIdentity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasIdentity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _hasIdentity
void MasterServer::MessageHandler::ConnectionState::_set__hasIdentity(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set__hasIdentity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasIdentity"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private EncryptionUtility/IEncryptionState _encryptionState
GlobalNamespace::EncryptionUtility::IEncryptionState* MasterServer::MessageHandler::ConnectionState::_get__encryptionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get__encryptionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encryptionState"))->offset;
  return *reinterpret_cast<GlobalNamespace::EncryptionUtility::IEncryptionState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private EncryptionUtility/IEncryptionState _encryptionState
void MasterServer::MessageHandler::ConnectionState::_set__encryptionState(GlobalNamespace::EncryptionUtility::IEncryptionState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set__encryptionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encryptionState"))->offset;
  *reinterpret_cast<GlobalNamespace::EncryptionUtility::IEncryptionState**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastReceivedRequestIndex
int MasterServer::MessageHandler::ConnectionState::_get__lastReceivedRequestIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get__lastReceivedRequestIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastReceivedRequestIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _lastReceivedRequestIndex
void MasterServer::MessageHandler::ConnectionState::_set__lastReceivedRequestIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set__lastReceivedRequestIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastReceivedRequestIndex"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _lastReceivedRequestId
uint MasterServer::MessageHandler::ConnectionState::_get__lastReceivedRequestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get__lastReceivedRequestId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastReceivedRequestId"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.UInt32 _lastReceivedRequestId
void MasterServer::MessageHandler::ConnectionState::_set__lastReceivedRequestId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set__lastReceivedRequestId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastReceivedRequestId"))->offset;
  *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _receivedRequestCount
int MasterServer::MessageHandler::ConnectionState::_get__receivedRequestCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get__receivedRequestCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_receivedRequestCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _receivedRequestCount
void MasterServer::MessageHandler::ConnectionState::_set__receivedRequestCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set__receivedRequestCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_receivedRequestCount"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean[] _receivedRequest
::Array<bool>* MasterServer::MessageHandler::ConnectionState::_get__receivedRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get__receivedRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_receivedRequest"))->offset;
  return *reinterpret_cast<::Array<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Boolean[] _receivedRequest
void MasterServer::MessageHandler::ConnectionState::_set__receivedRequest(::Array<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set__receivedRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_receivedRequest"))->offset;
  *reinterpret_cast<::Array<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _currentRequestId
uint MasterServer::MessageHandler::ConnectionState::_get__currentRequestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get__currentRequestId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentRequestId"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.UInt32 _currentRequestId
void MasterServer::MessageHandler::ConnectionState::_set__currentRequestId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set__currentRequestId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentRequestId"))->offset;
  *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _currentEpoch
uint MasterServer::MessageHandler::ConnectionState::_get__currentEpoch() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get__currentEpoch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentEpoch"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.UInt32 _currentEpoch
void MasterServer::MessageHandler::ConnectionState::_set__currentEpoch(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set__currentEpoch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentEpoch"))->offset;
  *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.get_isEncrypted
bool MasterServer::MessageHandler::ConnectionState::get_isEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::get_isEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.GetNextRequestId
uint MasterServer::MessageHandler::ConnectionState::GetNextRequestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::GetNextRequestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextRequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.BeginSession
void MasterServer::MessageHandler::ConnectionState::BeginSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::BeginSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.IsValidSessionStartRequestId
bool MasterServer::MessageHandler::ConnectionState::IsValidSessionStartRequestId(uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::IsValidSessionStartRequestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidSessionStartRequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, requestId);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.BeginSession
void MasterServer::MessageHandler::ConnectionState::BeginSession(uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::BeginSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, requestId);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.SetEpoch
void MasterServer::MessageHandler::ConnectionState::SetEpoch(uint epoch) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::SetEpoch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEpoch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(epoch)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, epoch);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.CanAcceptRequest
bool MasterServer::MessageHandler::ConnectionState::CanAcceptRequest(uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::CanAcceptRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanAcceptRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, requestId);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.SetEncryptionState
void MasterServer::MessageHandler::ConnectionState::SetEncryptionState(GlobalNamespace::EncryptionUtility::IEncryptionState* encryptionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::SetEncryptionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEncryptionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encryptionState)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, encryptionState);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.SetIdentity
void MasterServer::MessageHandler::ConnectionState::SetIdentity(uint protocolVersion, ::Il2CppString* userId, ::Il2CppString* userName) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::SetIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, userId, userName);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.VerifyIdentity
bool MasterServer::MessageHandler::ConnectionState::VerifyIdentity(uint protocolVersion, ::Il2CppString* userId, ::Il2CppString* userName) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::VerifyIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, protocolVersion, userId, userName);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.Dispose
void MasterServer::MessageHandler::ConnectionState::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.LogD
void MasterServer::MessageHandler::ConnectionState::LogD(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::LogD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "MessageHandler/ConnectionState", "LogD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler/MasterServer.RequestWaiterId
#include "MasterServer/MessageHandler.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Net.IPEndPoint endPoint
System::Net::IPEndPoint* MasterServer::MessageHandler::RequestWaiterId::_get_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestWaiterId::_get_endPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Net.IPEndPoint endPoint
void MasterServer::MessageHandler::RequestWaiterId::_set_endPoint(System::Net::IPEndPoint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestWaiterId::_set_endPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPoint"))->offset;
  *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 requestId
uint MasterServer::MessageHandler::RequestWaiterId::_get_requestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestWaiterId::_get_requestId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestId"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.UInt32 requestId
void MasterServer::MessageHandler::RequestWaiterId::_set_requestId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestWaiterId::_set_requestId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestId"))->offset;
  *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.RequestWaiterId.Equals
bool MasterServer::MessageHandler::RequestWaiterId::Equals(MasterServer::MessageHandler::RequestWaiterId other) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestWaiterId::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.RequestWaiterId.Equals
bool MasterServer::MessageHandler::RequestWaiterId::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestWaiterId::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.RequestWaiterId.GetHashCode
int MasterServer::MessageHandler::RequestWaiterId::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestWaiterId::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/MasterServer.RequestWaiter
#include "MasterServer/MessageHandler_RequestWaiter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.MessageHandler/MasterServer.RequestWaiter.Dispose
void MasterServer::MessageHandler::RequestWaiter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestWaiter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/MasterServer.SentRequestWaiter
#include "MasterServer/MessageHandler_SentRequestWaiter.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> _taskCompletionSource
System::Threading::Tasks::TaskCompletionSource_1<bool>* MasterServer::MessageHandler::SentRequestWaiter::_get__taskCompletionSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::_get__taskCompletionSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_taskCompletionSource"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::TaskCompletionSource_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> _taskCompletionSource
void MasterServer::MessageHandler::SentRequestWaiter::_set__taskCompletionSource(System::Threading::Tasks::TaskCompletionSource_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::_set__taskCompletionSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_taskCompletionSource"))->offset;
  *reinterpret_cast<System::Threading::Tasks::TaskCompletionSource_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.CancellationTokenRegistration _disposedCancellationTokenRegistration
System::Threading::CancellationTokenRegistration MasterServer::MessageHandler::SentRequestWaiter::_get__disposedCancellationTokenRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::_get__disposedCancellationTokenRegistration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposedCancellationTokenRegistration"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenRegistration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Threading.CancellationTokenRegistration _disposedCancellationTokenRegistration
void MasterServer::MessageHandler::SentRequestWaiter::_set__disposedCancellationTokenRegistration(System::Threading::CancellationTokenRegistration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::_set__disposedCancellationTokenRegistration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposedCancellationTokenRegistration"))->offset;
  *reinterpret_cast<System::Threading::CancellationTokenRegistration*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.CancellationTokenRegistration _requestCancellationTokenRegistration
System::Threading::CancellationTokenRegistration MasterServer::MessageHandler::SentRequestWaiter::_get__requestCancellationTokenRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::_get__requestCancellationTokenRegistration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestCancellationTokenRegistration"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenRegistration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Threading.CancellationTokenRegistration _requestCancellationTokenRegistration
void MasterServer::MessageHandler::SentRequestWaiter::_set__requestCancellationTokenRegistration(System::Threading::CancellationTokenRegistration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::_set__requestCancellationTokenRegistration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestCancellationTokenRegistration"))->offset;
  *reinterpret_cast<System::Threading::CancellationTokenRegistration*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.SentRequestWaiter.get_task
System::Threading::Tasks::Task* MasterServer::MessageHandler::SentRequestWaiter::get_task() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::get_task");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_task", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.SentRequestWaiter.get_isWaiting
bool MasterServer::MessageHandler::SentRequestWaiter::get_isWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::get_isWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.SentRequestWaiter.Complete
void MasterServer::MessageHandler::SentRequestWaiter::Complete(bool handled) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handled)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, handled);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.SentRequestWaiter.Cancel
void MasterServer::MessageHandler::SentRequestWaiter::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.SentRequestWaiter.Dispose
void MasterServer::MessageHandler::SentRequestWaiter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/MasterServer.RequestResponseWaiter
#include "MasterServer/MessageHandler_RequestResponseWaiter.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: MasterServer.IMasterServerMessage
#include "MasterServer/IMasterServerMessage.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Tasks.TaskCompletionSource`1<MasterServer.IMasterServerMessage> _taskCompletionSource
System::Threading::Tasks::TaskCompletionSource_1<MasterServer::IMasterServerMessage*>* MasterServer::MessageHandler::RequestResponseWaiter::_get__taskCompletionSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::_get__taskCompletionSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_taskCompletionSource"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::TaskCompletionSource_1<MasterServer::IMasterServerMessage*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Threading.Tasks.TaskCompletionSource`1<MasterServer.IMasterServerMessage> _taskCompletionSource
void MasterServer::MessageHandler::RequestResponseWaiter::_set__taskCompletionSource(System::Threading::Tasks::TaskCompletionSource_1<MasterServer::IMasterServerMessage*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::_set__taskCompletionSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_taskCompletionSource"))->offset;
  *reinterpret_cast<System::Threading::Tasks::TaskCompletionSource_1<MasterServer::IMasterServerMessage*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.CancellationTokenRegistration _disposedCancellationTokenRegistration
System::Threading::CancellationTokenRegistration MasterServer::MessageHandler::RequestResponseWaiter::_get__disposedCancellationTokenRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::_get__disposedCancellationTokenRegistration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposedCancellationTokenRegistration"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenRegistration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Threading.CancellationTokenRegistration _disposedCancellationTokenRegistration
void MasterServer::MessageHandler::RequestResponseWaiter::_set__disposedCancellationTokenRegistration(System::Threading::CancellationTokenRegistration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::_set__disposedCancellationTokenRegistration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposedCancellationTokenRegistration"))->offset;
  *reinterpret_cast<System::Threading::CancellationTokenRegistration*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.CancellationTokenRegistration _requestCancellationTokenRegistration
System::Threading::CancellationTokenRegistration MasterServer::MessageHandler::RequestResponseWaiter::_get__requestCancellationTokenRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::_get__requestCancellationTokenRegistration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestCancellationTokenRegistration"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenRegistration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Threading.CancellationTokenRegistration _requestCancellationTokenRegistration
void MasterServer::MessageHandler::RequestResponseWaiter::_set__requestCancellationTokenRegistration(System::Threading::CancellationTokenRegistration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::_set__requestCancellationTokenRegistration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestCancellationTokenRegistration"))->offset;
  *reinterpret_cast<System::Threading::CancellationTokenRegistration*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.RequestResponseWaiter.get_task
System::Threading::Tasks::Task_1<MasterServer::IMasterServerMessage*>* MasterServer::MessageHandler::RequestResponseWaiter::get_task() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::get_task");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_task", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::IMasterServerMessage*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.RequestResponseWaiter.get_isWaiting
bool MasterServer::MessageHandler::RequestResponseWaiter::get_isWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::get_isWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.RequestResponseWaiter.Complete
void MasterServer::MessageHandler::RequestResponseWaiter::Complete(MasterServer::IMasterServerMessage* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, response);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.RequestResponseWaiter.Fail
void MasterServer::MessageHandler::RequestResponseWaiter::Fail(System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::Fail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, ex);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.RequestResponseWaiter.Cancel
void MasterServer::MessageHandler::RequestResponseWaiter::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.RequestResponseWaiter.Dispose
void MasterServer::MessageHandler::RequestResponseWaiter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler/MasterServer.MultipartMessageWaiter
#include "MasterServer/MessageHandler_MultipartMessageWaiter.hpp"
// Including type: SmallBufferPool
#include "GlobalNamespace/SmallBufferPool.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: MasterServer.IMasterServerMultipartMessage
#include "MasterServer/IMasterServerMultipartMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly SmallBufferPool _bufferPool
GlobalNamespace::SmallBufferPool* MasterServer::MessageHandler::MultipartMessageWaiter::_get__bufferPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::_get__bufferPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufferPool"))->offset;
  return *reinterpret_cast<GlobalNamespace::SmallBufferPool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly SmallBufferPool _bufferPool
void MasterServer::MessageHandler::MultipartMessageWaiter::_set__bufferPool(GlobalNamespace::SmallBufferPool* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::_set__bufferPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufferPool"))->offset;
  *reinterpret_cast<GlobalNamespace::SmallBufferPool**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
::Array<uint8_t>* MasterServer::MessageHandler::MultipartMessageWaiter::_get__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::_get__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Byte[] _buffer
void MasterServer::MessageHandler::MultipartMessageWaiter::_set__buffer(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::_set__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _length
int MasterServer::MessageHandler::MultipartMessageWaiter::_get__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::_get__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _length
void MasterServer::MessageHandler::MultipartMessageWaiter::_set__length(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::_set__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Int32> _ranges
System::Collections::Generic::List_1<int>* MasterServer::MessageHandler::MultipartMessageWaiter::_get__ranges() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::_get__ranges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ranges"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<System.Int32> _ranges
void MasterServer::MessageHandler::MultipartMessageWaiter::_set__ranges(System::Collections::Generic::List_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::_set__ranges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ranges"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isComplete
bool MasterServer::MessageHandler::MultipartMessageWaiter::_get__isComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::_get__isComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isComplete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _isComplete
void MasterServer::MessageHandler::MultipartMessageWaiter::_set__isComplete(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::_set__isComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isComplete"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDisposed
bool MasterServer::MessageHandler::MultipartMessageWaiter::_get__isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::_get__isDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDisposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _isDisposed
void MasterServer::MessageHandler::MultipartMessageWaiter::_set__isDisposed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::_set__isDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDisposed"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.MultipartMessageWaiter.get_isWaiting
bool MasterServer::MessageHandler::MultipartMessageWaiter::get_isWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::get_isWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.MultipartMessageWaiter.get_data
::Array<uint8_t>* MasterServer::MessageHandler::MultipartMessageWaiter::get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::get_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.MultipartMessageWaiter.get_length
int MasterServer::MessageHandler::MultipartMessageWaiter::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.MultipartMessageWaiter.Append
void MasterServer::MessageHandler::MultipartMessageWaiter::Append(MasterServer::IMasterServerMultipartMessage* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.MultipartMessageWaiter.Dispose
void MasterServer::MessageHandler::MultipartMessageWaiter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/MasterServer.MessageOrigin
#include "MasterServer/MessageHandler.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Net.IPEndPoint endPoint
System::Net::IPEndPoint* MasterServer::MessageHandler::MessageOrigin::_get_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MessageOrigin::_get_endPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Net.IPEndPoint endPoint
void MasterServer::MessageHandler::MessageOrigin::_set_endPoint(System::Net::IPEndPoint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MessageOrigin::_set_endPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPoint"))->offset;
  *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 protocolVersion
uint MasterServer::MessageHandler::MessageOrigin::_get_protocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MessageOrigin::_get_protocolVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.UInt32 protocolVersion
void MasterServer::MessageHandler::MessageOrigin::_set_protocolVersion(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MessageOrigin::_set_protocolVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/MasterServer.HandshakeMessageType
#include "MasterServer/MessageHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ClientHelloRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_ClientHelloRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_ClientHelloRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "ClientHelloRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ClientHelloRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_ClientHelloRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_ClientHelloRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "ClientHelloRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType HelloVerifyRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_HelloVerifyRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_HelloVerifyRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "HelloVerifyRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType HelloVerifyRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_HelloVerifyRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_HelloVerifyRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "HelloVerifyRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ClientHelloWithCookieRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_ClientHelloWithCookieRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_ClientHelloWithCookieRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "ClientHelloWithCookieRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ClientHelloWithCookieRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_ClientHelloWithCookieRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_ClientHelloWithCookieRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "ClientHelloWithCookieRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ServerHelloRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_ServerHelloRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_ServerHelloRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "ServerHelloRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ServerHelloRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_ServerHelloRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_ServerHelloRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "ServerHelloRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ServerCertificateRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_ServerCertificateRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_ServerCertificateRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "ServerCertificateRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ServerCertificateRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_ServerCertificateRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_ServerCertificateRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "ServerCertificateRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ServerCertificateResponse
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_ServerCertificateResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_ServerCertificateResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "ServerCertificateResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ServerCertificateResponse
void MasterServer::MessageHandler::HandshakeMessageType::_set_ServerCertificateResponse(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_ServerCertificateResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "ServerCertificateResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ClientKeyExchangeRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_ClientKeyExchangeRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_ClientKeyExchangeRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "ClientKeyExchangeRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ClientKeyExchangeRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_ClientKeyExchangeRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_ClientKeyExchangeRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "ClientKeyExchangeRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ChangeCipherSpecRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_ChangeCipherSpecRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_ChangeCipherSpecRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "ChangeCipherSpecRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ChangeCipherSpecRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_ChangeCipherSpecRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_ChangeCipherSpecRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "ChangeCipherSpecRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType MessageReceivedAcknowledge
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_MessageReceivedAcknowledge() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_MessageReceivedAcknowledge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "MessageReceivedAcknowledge"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType MessageReceivedAcknowledge
void MasterServer::MessageHandler::HandshakeMessageType::_set_MessageReceivedAcknowledge(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_MessageReceivedAcknowledge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "MessageReceivedAcknowledge", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType MultipartMessage
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_MultipartMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_MultipartMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "MultipartMessage"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType MultipartMessage
void MasterServer::MessageHandler::HandshakeMessageType::_set_MultipartMessage(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_MultipartMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "MultipartMessage", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int MasterServer::MessageHandler::HandshakeMessageType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void MasterServer::MessageHandler::HandshakeMessageType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/MasterServer.UserMessageType
#include "MasterServer/MessageHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType AuthenticateUserRequest
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_AuthenticateUserRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_AuthenticateUserRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "AuthenticateUserRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType AuthenticateUserRequest
void MasterServer::MessageHandler::UserMessageType::_set_AuthenticateUserRequest(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_AuthenticateUserRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "AuthenticateUserRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType AuthenticateUserResponse
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_AuthenticateUserResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_AuthenticateUserResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "AuthenticateUserResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType AuthenticateUserResponse
void MasterServer::MessageHandler::UserMessageType::_set_AuthenticateUserResponse(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_AuthenticateUserResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "AuthenticateUserResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType UserServerStatusUpdateRequest
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_UserServerStatusUpdateRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_UserServerStatusUpdateRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "UserServerStatusUpdateRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType UserServerStatusUpdateRequest
void MasterServer::MessageHandler::UserMessageType::_set_UserServerStatusUpdateRequest(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_UserServerStatusUpdateRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "UserServerStatusUpdateRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType UserServerStatusUpdateResponse
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_UserServerStatusUpdateResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_UserServerStatusUpdateResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "UserServerStatusUpdateResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType UserServerStatusUpdateResponse
void MasterServer::MessageHandler::UserMessageType::_set_UserServerStatusUpdateResponse(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_UserServerStatusUpdateResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "UserServerStatusUpdateResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType UserServerHeartbeatRequest
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_UserServerHeartbeatRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_UserServerHeartbeatRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "UserServerHeartbeatRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType UserServerHeartbeatRequest
void MasterServer::MessageHandler::UserMessageType::_set_UserServerHeartbeatRequest(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_UserServerHeartbeatRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "UserServerHeartbeatRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType UserServerHeartbeatResponse
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_UserServerHeartbeatResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_UserServerHeartbeatResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "UserServerHeartbeatResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType UserServerHeartbeatResponse
void MasterServer::MessageHandler::UserMessageType::_set_UserServerHeartbeatResponse(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_UserServerHeartbeatResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "UserServerHeartbeatResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType UserServerRemoveRequest
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_UserServerRemoveRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_UserServerRemoveRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "UserServerRemoveRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType UserServerRemoveRequest
void MasterServer::MessageHandler::UserMessageType::_set_UserServerRemoveRequest(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_UserServerRemoveRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "UserServerRemoveRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType ConnectToUserServerRequest
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_ConnectToUserServerRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_ConnectToUserServerRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "ConnectToUserServerRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType ConnectToUserServerRequest
void MasterServer::MessageHandler::UserMessageType::_set_ConnectToUserServerRequest(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_ConnectToUserServerRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "ConnectToUserServerRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType ConnectToServerResponse
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_ConnectToServerResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_ConnectToServerResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "ConnectToServerResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType ConnectToServerResponse
void MasterServer::MessageHandler::UserMessageType::_set_ConnectToServerResponse(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_ConnectToServerResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "ConnectToServerResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType ConnectToMatchmakingServerRequest
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_ConnectToMatchmakingServerRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_ConnectToMatchmakingServerRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "ConnectToMatchmakingServerRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType ConnectToMatchmakingServerRequest
void MasterServer::MessageHandler::UserMessageType::_set_ConnectToMatchmakingServerRequest(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_ConnectToMatchmakingServerRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "ConnectToMatchmakingServerRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType PrepareForConnectionRequest
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_PrepareForConnectionRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_PrepareForConnectionRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "PrepareForConnectionRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType PrepareForConnectionRequest
void MasterServer::MessageHandler::UserMessageType::_set_PrepareForConnectionRequest(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_PrepareForConnectionRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "PrepareForConnectionRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType GetPublicUserServersRequest
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_GetPublicUserServersRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_GetPublicUserServersRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "GetPublicUserServersRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType GetPublicUserServersRequest
void MasterServer::MessageHandler::UserMessageType::_set_GetPublicUserServersRequest(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_GetPublicUserServersRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "GetPublicUserServersRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType GetPublicUserServersResponse
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_GetPublicUserServersResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_GetPublicUserServersResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "GetPublicUserServersResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType GetPublicUserServersResponse
void MasterServer::MessageHandler::UserMessageType::_set_GetPublicUserServersResponse(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_GetPublicUserServersResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "GetPublicUserServersResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType MessageReceivedAcknowledge
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_MessageReceivedAcknowledge() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_MessageReceivedAcknowledge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "MessageReceivedAcknowledge"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType MessageReceivedAcknowledge
void MasterServer::MessageHandler::UserMessageType::_set_MessageReceivedAcknowledge(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_MessageReceivedAcknowledge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "MessageReceivedAcknowledge", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType MultipartMessage
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_MultipartMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_MultipartMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "MultipartMessage"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType MultipartMessage
void MasterServer::MessageHandler::UserMessageType::_set_MultipartMessage(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_MultipartMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "MultipartMessage", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType SessionKeepaliveMessage
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_SessionKeepaliveMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_SessionKeepaliveMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "SessionKeepaliveMessage"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType SessionKeepaliveMessage
void MasterServer::MessageHandler::UserMessageType::_set_SessionKeepaliveMessage(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_SessionKeepaliveMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "SessionKeepaliveMessage", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int MasterServer::MessageHandler::UserMessageType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void MasterServer::MessageHandler::UserMessageType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType
#include "MasterServer/MessageHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType AuthenticateDedicatedServerRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_AuthenticateDedicatedServerRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_AuthenticateDedicatedServerRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "AuthenticateDedicatedServerRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType AuthenticateDedicatedServerRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_AuthenticateDedicatedServerRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_AuthenticateDedicatedServerRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "AuthenticateDedicatedServerRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType AuthenticateDedicatedServerResponse
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_AuthenticateDedicatedServerResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_AuthenticateDedicatedServerResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "AuthenticateDedicatedServerResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType AuthenticateDedicatedServerResponse
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_AuthenticateDedicatedServerResponse(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_AuthenticateDedicatedServerResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "AuthenticateDedicatedServerResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType CreateRelayServerRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_CreateRelayServerRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_CreateRelayServerRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "CreateRelayServerRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType CreateRelayServerRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_CreateRelayServerRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_CreateRelayServerRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "CreateRelayServerRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType CreateRelayServerResponse
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_CreateRelayServerResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_CreateRelayServerResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "CreateRelayServerResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType CreateRelayServerResponse
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_CreateRelayServerResponse(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_CreateRelayServerResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "CreateRelayServerResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType CreateMatchmakingServerRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_CreateMatchmakingServerRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_CreateMatchmakingServerRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "CreateMatchmakingServerRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType CreateMatchmakingServerRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_CreateMatchmakingServerRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_CreateMatchmakingServerRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "CreateMatchmakingServerRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType CreateMatchmakingServerResponse
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_CreateMatchmakingServerResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_CreateMatchmakingServerResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "CreateMatchmakingServerResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType CreateMatchmakingServerResponse
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_CreateMatchmakingServerResponse(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_CreateMatchmakingServerResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "CreateMatchmakingServerResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerNoLongerAvailableRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerNoLongerAvailableRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerNoLongerAvailableRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerNoLongerAvailableRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerNoLongerAvailableRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerNoLongerAvailableRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerNoLongerAvailableRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerNoLongerAvailableRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerHeartbeatRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerHeartbeatRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerHeartbeatRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerHeartbeatRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerHeartbeatRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerHeartbeatRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerHeartbeatRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerHeartbeatRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerHeartbeatResponse
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerHeartbeatResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerHeartbeatResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerHeartbeatResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerHeartbeatResponse
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerHeartbeatResponse(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerHeartbeatResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerHeartbeatResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType RelayServerStatusUpdateRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_RelayServerStatusUpdateRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_RelayServerStatusUpdateRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "RelayServerStatusUpdateRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType RelayServerStatusUpdateRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_RelayServerStatusUpdateRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_RelayServerStatusUpdateRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "RelayServerStatusUpdateRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType MatchmakingServerStatusUpdateRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_MatchmakingServerStatusUpdateRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_MatchmakingServerStatusUpdateRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "MatchmakingServerStatusUpdateRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType MatchmakingServerStatusUpdateRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_MatchmakingServerStatusUpdateRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_MatchmakingServerStatusUpdateRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "MatchmakingServerStatusUpdateRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerShutDownRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerShutDownRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerShutDownRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerShutDownRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerShutDownRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerShutDownRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerShutDownRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerShutDownRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerPrepareForConnectionRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerPrepareForConnectionRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerPrepareForConnectionRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerPrepareForConnectionRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerPrepareForConnectionRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerPrepareForConnectionRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerPrepareForConnectionRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerPrepareForConnectionRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType MessageReceivedAcknowledge
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_MessageReceivedAcknowledge() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_MessageReceivedAcknowledge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "MessageReceivedAcknowledge"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType MessageReceivedAcknowledge
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_MessageReceivedAcknowledge(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_MessageReceivedAcknowledge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "MessageReceivedAcknowledge", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType MultipartMessage
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_MultipartMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_MultipartMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "MultipartMessage"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType MultipartMessage
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_MultipartMessage(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_MultipartMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "MultipartMessage", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerPrepareForConnectionResponse
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerPrepareForConnectionResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerPrepareForConnectionResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerPrepareForConnectionResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerPrepareForConnectionResponse
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerPrepareForConnectionResponse(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerPrepareForConnectionResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerPrepareForConnectionResponse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int MasterServer::MessageHandler::DedicatedServerMessageType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/MasterServer.<SendMessageWithRetry>d__98
#include "MasterServer/MessageHandler_-SendMessageWithRetry-d__98.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
void MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_set_$$t__builder(System::Runtime::CompilerServices::AsyncVoidMethodBuilder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.MessageHandler <>4__this
MasterServer::MessageHandler* MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::MessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.MessageHandler <>4__this
void MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_set_$$4__this(MasterServer::MessageHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<MasterServer::MessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 protocolVersion
uint MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_get_protocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_get_protocolVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.UInt32 protocolVersion
void MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_set_protocolVersion(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_set_protocolVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint remoteEndPoint
System::Net::IPEndPoint* MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_get_remoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_get_remoteEndPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Net.IPEndPoint remoteEndPoint
void MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_set_remoteEndPoint(System::Net::IPEndPoint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_set_remoteEndPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.IMasterServerReliableRequest message
MasterServer::IMasterServerReliableRequest* MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_get_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_get_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.IMasterServerReliableRequest message
void MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_set_message(MasterServer::IMasterServerReliableRequest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_set_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_get_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_get_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.CancellationToken cancellationToken
void MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_set_cancellationToken(System::Threading::CancellationToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_set_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
void MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__98::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.<SendMessageWithRetry>d__98.MoveNext
void MasterServer::MessageHandler::$SendMessageWithRetry$d__98::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__98::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.<SendMessageWithRetry>d__98.SetStateMachine
void MasterServer::MessageHandler::$SendMessageWithRetry$d__98::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__98::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/MasterServer.<>c__DisplayClass100_0
#include "MasterServer/MessageHandler_--c__DisplayClass100_0.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServer.MessageHandler <>4__this
MasterServer::MessageHandler* MasterServer::MessageHandler::$$c__DisplayClass100_0::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$$c__DisplayClass100_0::_get_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::MessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.MessageHandler <>4__this
void MasterServer::MessageHandler::$$c__DisplayClass100_0::_set_$$4__this(MasterServer::MessageHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$$c__DisplayClass100_0::_set_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<MasterServer::MessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 protocolVersion
uint MasterServer::MessageHandler::$$c__DisplayClass100_0::_get_protocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$$c__DisplayClass100_0::_get_protocolVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.UInt32 protocolVersion
void MasterServer::MessageHandler::$$c__DisplayClass100_0::_set_protocolVersion(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$$c__DisplayClass100_0::_set_protocolVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint remoteEndPoint
System::Net::IPEndPoint* MasterServer::MessageHandler::$$c__DisplayClass100_0::_get_remoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$$c__DisplayClass100_0::_get_remoteEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Net.IPEndPoint remoteEndPoint
void MasterServer::MessageHandler::$$c__DisplayClass100_0::_set_remoteEndPoint(System::Net::IPEndPoint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$$c__DisplayClass100_0::_set_remoteEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken MasterServer::MessageHandler::$$c__DisplayClass100_0::_get_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$$c__DisplayClass100_0::_get_cancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.CancellationToken cancellationToken
void MasterServer::MessageHandler::$$c__DisplayClass100_0::_set_cancellationToken(System::Threading::CancellationToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$$c__DisplayClass100_0::_set_cancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.<>c__DisplayClass100_0.<SendMultipartMessageWithRetryAsync>b__0
System::Threading::Tasks::Task* MasterServer::MessageHandler::$$c__DisplayClass100_0::$SendMultipartMessageWithRetryAsync$b__0(MasterServer::IMasterServerReliableRequest* mm) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$$c__DisplayClass100_0::<SendMultipartMessageWithRetryAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SendMultipartMessageWithRetryAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mm)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, mm);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler/MasterServer.<SendMultipartMessageWithRetryAsync>d__100
#include "MasterServer/MessageHandler_-SendMultipartMessageWithRetryAsync-d__100.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: System.Func`5
#include "System/Func_5.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<>c__DisplayClass100_0
#include "MasterServer/MessageHandler_--c__DisplayClass100_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
void MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.MessageHandler <>4__this
MasterServer::MessageHandler* MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::MessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.MessageHandler <>4__this
void MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_$$4__this(MasterServer::MessageHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<MasterServer::MessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 protocolVersion
uint MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_protocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_protocolVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.UInt32 protocolVersion
void MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_protocolVersion(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_protocolVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint remoteEndPoint
System::Net::IPEndPoint* MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_remoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_remoteEndPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Net.IPEndPoint remoteEndPoint
void MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_remoteEndPoint(System::Net::IPEndPoint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_remoteEndPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.CancellationToken cancellationToken
void MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_cancellationToken(System::Threading::CancellationToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.IMasterServerReliableRequest message
MasterServer::IMasterServerReliableRequest* MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.IMasterServerReliableRequest message
void MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_message(MasterServer::IMasterServerReliableRequest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public LiteNetLib.Utils.NetDataWriter data
LiteNetLib::Utils::NetDataWriter* MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<LiteNetLib::Utils::NetDataWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public LiteNetLib.Utils.NetDataWriter data
void MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_data(LiteNetLib::Utils::NetDataWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  *reinterpret_cast<LiteNetLib::Utils::NetDataWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Func`5<System.UInt32,System.Net.IPEndPoint,MasterServer.IMasterServerReliableRequest,System.Threading.CancellationToken,System.Threading.Tasks.Task> onSendFailed
System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_onSendFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_onSendFailed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSendFailed"))->offset;
  return *reinterpret_cast<System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Func`5<System.UInt32,System.Net.IPEndPoint,MasterServer.IMasterServerReliableRequest,System.Threading.CancellationToken,System.Threading.Tasks.Task> onSendFailed
void MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_onSendFailed(System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_onSendFailed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSendFailed"))->offset;
  *reinterpret_cast<System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MasterServer.MessageHandler/MasterServer.<>c__DisplayClass100_0 <>8__1
MasterServer::MessageHandler::$$c__DisplayClass100_0* MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_$$8__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<MasterServer::MessageHandler::$$c__DisplayClass100_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MasterServer.MessageHandler/MasterServer.<>c__DisplayClass100_0 <>8__1
void MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_$$8__1(MasterServer::MessageHandler::$$c__DisplayClass100_0* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_$$8__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  *reinterpret_cast<MasterServer::MessageHandler::$$c__DisplayClass100_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <shouldReleaseMessage>5__2
bool MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_$shouldReleaseMessage$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_$shouldReleaseMessage$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<shouldReleaseMessage>5__2"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <shouldReleaseMessage>5__2
void MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_$shouldReleaseMessage$5__2(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_$shouldReleaseMessage$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<shouldReleaseMessage>5__2"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>7__wrap2
::Il2CppObject* MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_$$7__wrap2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>7__wrap2
void MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_$$7__wrap2(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_$$7__wrap2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>7__wrap3
int MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_$$7__wrap3() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_$$7__wrap3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>7__wrap3
void MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_$$7__wrap3(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_$$7__wrap3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap3"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
void MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.<SendMultipartMessageWithRetryAsync>d__100.MoveNext
void MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.<SendMultipartMessageWithRetryAsync>d__100.SetStateMachine
void MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__100::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler/MasterServer.<SendMessageWithRetryAsyncInternal>d__101
#include "MasterServer/MessageHandler_-SendMessageWithRetryAsyncInternal-d__101.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: System.Func`5
#include "System/Func_5.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.SentRequestWaiter
#include "MasterServer/MessageHandler_SentRequestWaiter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.MessageHandler <>4__this
MasterServer::MessageHandler* MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::MessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.MessageHandler <>4__this
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$$4__this(MasterServer::MessageHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<MasterServer::MessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.CancellationToken cancellationToken
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_cancellationToken(System::Threading::CancellationToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint remoteEndPoint
System::Net::IPEndPoint* MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_remoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_remoteEndPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Net.IPEndPoint remoteEndPoint
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_remoteEndPoint(System::Net::IPEndPoint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_remoteEndPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.IMasterServerReliableRequest message
MasterServer::IMasterServerReliableRequest* MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MasterServer.IMasterServerReliableRequest message
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_message(MasterServer::IMasterServerReliableRequest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 protocolVersion
uint MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_protocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_protocolVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.UInt32 protocolVersion
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_protocolVersion(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_protocolVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Func`5<System.UInt32,System.Net.IPEndPoint,MasterServer.IMasterServerReliableRequest,System.Threading.CancellationToken,System.Threading.Tasks.Task> onSendFailed
System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_onSendFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_onSendFailed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSendFailed"))->offset;
  return *reinterpret_cast<System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Func`5<System.UInt32,System.Net.IPEndPoint,MasterServer.IMasterServerReliableRequest,System.Threading.CancellationToken,System.Threading.Tasks.Task> onSendFailed
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_onSendFailed(System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_onSendFailed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSendFailed"))->offset;
  *reinterpret_cast<System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MasterServer.MessageHandler/MasterServer.SentRequestWaiter <sentRequest>5__2
MasterServer::MessageHandler::SentRequestWaiter* MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$sentRequest$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$sentRequest$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sentRequest>5__2"))->offset;
  return *reinterpret_cast<MasterServer::MessageHandler::SentRequestWaiter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MasterServer.MessageHandler/MasterServer.SentRequestWaiter <sentRequest>5__2
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$sentRequest$5__2(MasterServer::MessageHandler::SentRequestWaiter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$sentRequest$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sentRequest>5__2"))->offset;
  *reinterpret_cast<MasterServer::MessageHandler::SentRequestWaiter**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MasterServer.MessageHandler/MasterServer.RequestWaiterId <waiterId>5__3
MasterServer::MessageHandler::RequestWaiterId MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$waiterId$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$waiterId$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<waiterId>5__3"))->offset;
  return *reinterpret_cast<MasterServer::MessageHandler::RequestWaiterId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MasterServer.MessageHandler/MasterServer.RequestWaiterId <waiterId>5__3
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$waiterId$5__3(MasterServer::MessageHandler::RequestWaiterId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$waiterId$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<waiterId>5__3"))->offset;
  *reinterpret_cast<MasterServer::MessageHandler::RequestWaiterId*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <shouldReleaseMessage>5__4
bool MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$shouldReleaseMessage$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$shouldReleaseMessage$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<shouldReleaseMessage>5__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <shouldReleaseMessage>5__4
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$shouldReleaseMessage$5__4(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$shouldReleaseMessage$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<shouldReleaseMessage>5__4"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>7__wrap4
::Il2CppObject* MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$$7__wrap4() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$$7__wrap4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap4"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>7__wrap4
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$$7__wrap4(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$$7__wrap4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap4"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>7__wrap5
int MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$$7__wrap5() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$$7__wrap5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap5"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>7__wrap5
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$$7__wrap5(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$$7__wrap5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap5"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__7
int MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$i$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$i$5__7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__7"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <i>5__7
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$i$5__7(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$i$5__7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__7"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Threading.Tasks.Task> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<System::Threading::Tasks::Task*> MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<System::Threading::Tasks::Task*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Threading.Tasks.Task> <>u__1
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<System::Threading::Tasks::Task*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<System::Threading::Tasks::Task*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
System::Runtime::CompilerServices::TaskAwaiter MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_get_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$$u__2(System::Runtime::CompilerServices::TaskAwaiter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::_set_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.<SendMessageWithRetryAsyncInternal>d__101.MoveNext
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.<SendMessageWithRetryAsyncInternal>d__101.SetStateMachine
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__101::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.UserMessageHandler
#include "MasterServer/UserMessageHandler.hpp"
// Including type: MasterServer.UserMessageHandler/MasterServer.ConnectToClientDelegate
#include "MasterServer/UserMessageHandler_ConnectToClientDelegate.hpp"
// Including type: MasterServer.UserMessageHandler/MasterServer.ConnectToServerDelegate
#include "MasterServer/UserMessageHandler_ConnectToServerDelegate.hpp"
// Including type: MasterServer.UserMessageHandler/MasterServer.<GetAuthenticationRequest>d__28
#include "MasterServer/UserMessageHandler_-GetAuthenticationRequest-d__28.hpp"
// Including type: MasterServer.UserMessageHandler/MasterServer.<HandlePrepareForConnectionRequest>d__30
#include "MasterServer/UserMessageHandler_-HandlePrepareForConnectionRequest-d__30.hpp"
// Including type: MasterServer.UserMessageHandler/MasterServer.<>c__DisplayClass34_0
#include "MasterServer/UserMessageHandler_--c__DisplayClass34_0.hpp"
// Including type: MasterServer.UserMessageHandler/MasterServer.<>c__DisplayClass38_0
#include "MasterServer/UserMessageHandler_--c__DisplayClass38_0.hpp"
// Including type: MasterServer.UserMessageHandler/MasterServer.<>c__DisplayClass39_0
#include "MasterServer/UserMessageHandler_--c__DisplayClass39_0.hpp"
// Including type: MasterServer.UserMessageHandler/MasterServer.<WithFailureHandler>d__40
#include "MasterServer/UserMessageHandler_-WithFailureHandler-d__40.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: IAuthenticationTokenProvider
#include "GlobalNamespace/IAuthenticationTokenProvider.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
// Including type: IUnconnectedSenderReceiver
#include "GlobalNamespace/IUnconnectedSenderReceiver.hpp"
// Including type: MasterServerEndPoint
#include "GlobalNamespace/MasterServerEndPoint.hpp"
// Including type: MasterServer.ITimeProvider
#include "MasterServer/ITimeProvider.hpp"
// Including type: ICertificateValidator
#include "GlobalNamespace/ICertificateValidator.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: MasterServer.BaseConnectToServerRequest
#include "MasterServer/BaseConnectToServerRequest.hpp"
// Including type: UserServerFilter
#include "GlobalNamespace/UserServerFilter.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: MasterServer.IUserMessage
#include "MasterServer/IUserMessage.hpp"
// Including type: MasterServer.IMasterServerAuthenticateRequest
#include "MasterServer/IMasterServerAuthenticateRequest.hpp"
// Including type: MasterServer.UserServerHeartbeatResponse
#include "MasterServer/UserServerHeartbeatResponse.hpp"
// Including type: MasterServer.PrepareForConnectionRequest
#include "MasterServer/PrepareForConnectionRequest.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.MessageOrigin
#include "MasterServer/MessageHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 kHeartbeatRequestIntervalMs
int64_t MasterServer::UserMessageHandler::_get_kHeartbeatRequestIntervalMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get_kHeartbeatRequestIntervalMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "UserMessageHandler", "kHeartbeatRequestIntervalMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kHeartbeatRequestIntervalMs
void MasterServer::UserMessageHandler::_set_kHeartbeatRequestIntervalMs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set_kHeartbeatRequestIntervalMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "UserMessageHandler", "kHeartbeatRequestIntervalMs", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kHeartbeatResponseTimeoutMs
int64_t MasterServer::UserMessageHandler::_get_kHeartbeatResponseTimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get_kHeartbeatResponseTimeoutMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "UserMessageHandler", "kHeartbeatResponseTimeoutMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kHeartbeatResponseTimeoutMs
void MasterServer::UserMessageHandler::_set_kHeartbeatResponseTimeoutMs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set_kHeartbeatResponseTimeoutMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "UserMessageHandler", "kHeartbeatResponseTimeoutMs", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kKeepaliveRequestIntervalMs
int64_t MasterServer::UserMessageHandler::_get_kKeepaliveRequestIntervalMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get_kKeepaliveRequestIntervalMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "UserMessageHandler", "kKeepaliveRequestIntervalMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kKeepaliveRequestIntervalMs
void MasterServer::UserMessageHandler::_set_kKeepaliveRequestIntervalMs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set_kKeepaliveRequestIntervalMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "UserMessageHandler", "kKeepaliveRequestIntervalMs", value));
}
// Autogenerated instance field getter
// Get instance field: private MasterServer.UserMessageHandler/MasterServer.ConnectToClientDelegate connectToClientEvent
MasterServer::UserMessageHandler::ConnectToClientDelegate* MasterServer::UserMessageHandler::_get_connectToClientEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get_connectToClientEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectToClientEvent"))->offset;
  return *reinterpret_cast<MasterServer::UserMessageHandler::ConnectToClientDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MasterServer.UserMessageHandler/MasterServer.ConnectToClientDelegate connectToClientEvent
void MasterServer::UserMessageHandler::_set_connectToClientEvent(MasterServer::UserMessageHandler::ConnectToClientDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set_connectToClientEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectToClientEvent"))->offset;
  *reinterpret_cast<MasterServer::UserMessageHandler::ConnectToClientDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action broadcastingStoppedEvent
System::Action* MasterServer::UserMessageHandler::_get_broadcastingStoppedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get_broadcastingStoppedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "broadcastingStoppedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action broadcastingStoppedEvent
void MasterServer::UserMessageHandler::_set_broadcastingStoppedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set_broadcastingStoppedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "broadcastingStoppedEvent"))->offset;
  *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _lastHeartbeatResponseTime
int64_t MasterServer::UserMessageHandler::_get__lastHeartbeatResponseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get__lastHeartbeatResponseTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastHeartbeatResponseTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int64 _lastHeartbeatResponseTime
void MasterServer::UserMessageHandler::_set__lastHeartbeatResponseTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set__lastHeartbeatResponseTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastHeartbeatResponseTime"))->offset;
  *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _lastHeartbeatRequestTime
int64_t MasterServer::UserMessageHandler::_get__lastHeartbeatRequestTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get__lastHeartbeatRequestTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastHeartbeatRequestTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int64 _lastHeartbeatRequestTime
void MasterServer::UserMessageHandler::_set__lastHeartbeatRequestTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set__lastHeartbeatRequestTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastHeartbeatRequestTime"))->offset;
  *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _lastKeepaliveTime
int64_t MasterServer::UserMessageHandler::_get__lastKeepaliveTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get__lastKeepaliveTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastKeepaliveTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int64 _lastKeepaliveTime
void MasterServer::UserMessageHandler::_set__lastKeepaliveTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set__lastKeepaliveTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastKeepaliveTime"))->offset;
  *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly IAuthenticationTokenProvider _authenticationTokenProvider
GlobalNamespace::IAuthenticationTokenProvider* MasterServer::UserMessageHandler::_get__authenticationTokenProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get__authenticationTokenProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authenticationTokenProvider"))->offset;
  return *reinterpret_cast<GlobalNamespace::IAuthenticationTokenProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly IAuthenticationTokenProvider _authenticationTokenProvider
void MasterServer::UserMessageHandler::_set__authenticationTokenProvider(GlobalNamespace::IAuthenticationTokenProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set__authenticationTokenProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authenticationTokenProvider"))->offset;
  *reinterpret_cast<GlobalNamespace::IAuthenticationTokenProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isServerActive
bool MasterServer::UserMessageHandler::_get__isServerActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get__isServerActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isServerActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _isServerActive
void MasterServer::UserMessageHandler::_set__isServerActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set__isServerActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isServerActive"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isServerWaitingForBroadcastResult
bool MasterServer::UserMessageHandler::_get__isServerWaitingForBroadcastResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get__isServerWaitingForBroadcastResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isServerWaitingForBroadcastResult"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _isServerWaitingForBroadcastResult
void MasterServer::UserMessageHandler::_set__isServerWaitingForBroadcastResult(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set__isServerWaitingForBroadcastResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isServerWaitingForBroadcastResult"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _serverUserId
::Il2CppString* MasterServer::UserMessageHandler::_get__serverUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get__serverUserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverUserId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _serverUserId
void MasterServer::UserMessageHandler::_set__serverUserId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set__serverUserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverUserId"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _serverUserName
::Il2CppString* MasterServer::UserMessageHandler::_get__serverUserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get__serverUserName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverUserName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _serverUserName
void MasterServer::UserMessageHandler::_set__serverUserName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set__serverUserName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverUserName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _serverSecret
::Il2CppString* MasterServer::UserMessageHandler::_get__serverSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get__serverSecret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverSecret"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _serverSecret
void MasterServer::UserMessageHandler::_set__serverSecret(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set__serverSecret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverSecret"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _serverCurrentPlayerCount
int MasterServer::UserMessageHandler::_get__serverCurrentPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get__serverCurrentPlayerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverCurrentPlayerCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _serverCurrentPlayerCount
void MasterServer::UserMessageHandler::_set__serverCurrentPlayerCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set__serverCurrentPlayerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverCurrentPlayerCount"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _serverRandom
::Array<uint8_t>* MasterServer::UserMessageHandler::_get__serverRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get__serverRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverRandom"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Byte[] _serverRandom
void MasterServer::UserMessageHandler::_set__serverRandom(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set__serverRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverRandom"))->offset;
  *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<IDiffieHellmanKeyPair> _serverKeysTask
System::Threading::Tasks::Task_1<GlobalNamespace::IDiffieHellmanKeyPair*>* MasterServer::UserMessageHandler::_get__serverKeysTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get__serverKeysTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverKeysTask"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task_1<GlobalNamespace::IDiffieHellmanKeyPair*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Threading.Tasks.Task`1<IDiffieHellmanKeyPair> _serverKeysTask
void MasterServer::UserMessageHandler::_set__serverKeysTask(System::Threading::Tasks::Task_1<GlobalNamespace::IDiffieHellmanKeyPair*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set__serverKeysTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverKeysTask"))->offset;
  *reinterpret_cast<System::Threading::Tasks::Task_1<GlobalNamespace::IDiffieHellmanKeyPair*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MasterServer.UserMessageHandler.get_authenticationTokenProvider
GlobalNamespace::IAuthenticationTokenProvider* MasterServer::UserMessageHandler::get_authenticationTokenProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::get_authenticationTokenProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_authenticationTokenProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IAuthenticationTokenProvider*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler.add_connectToClientEvent
void MasterServer::UserMessageHandler::add_connectToClientEvent(MasterServer::UserMessageHandler::ConnectToClientDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::add_connectToClientEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectToClientEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.UserMessageHandler.remove_connectToClientEvent
void MasterServer::UserMessageHandler::remove_connectToClientEvent(MasterServer::UserMessageHandler::ConnectToClientDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::remove_connectToClientEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectToClientEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.UserMessageHandler.add_broadcastingStoppedEvent
void MasterServer::UserMessageHandler::add_broadcastingStoppedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::add_broadcastingStoppedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_broadcastingStoppedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.UserMessageHandler.remove_broadcastingStoppedEvent
void MasterServer::UserMessageHandler::remove_broadcastingStoppedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::remove_broadcastingStoppedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_broadcastingStoppedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.UserMessageHandler.UpdateServerHeartbeat
void MasterServer::UserMessageHandler::UpdateServerHeartbeat() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::UpdateServerHeartbeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateServerHeartbeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler.UpdateKeepalive
void MasterServer::UserMessageHandler::UpdateKeepalive() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::UpdateKeepalive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateKeepalive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler.SetCurrentPlayerCount
void MasterServer::UserMessageHandler::SetCurrentPlayerCount(int currentPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::SetCurrentPlayerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCurrentPlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPlayerCount)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, currentPlayerCount);
}
// Autogenerated method: MasterServer.UserMessageHandler.StartBroadcastingServer
void MasterServer::UserMessageHandler::StartBroadcastingServer(::Il2CppString* serverName, ::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret, ::Il2CppString* password, int currentPlayerCount, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, System::Action_2<System::Net::IPEndPoint*, ::Il2CppString*>* onSuccess, System::Action_1<GlobalNamespace::ConnectionFailedReason>* onBroadcastFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::StartBroadcastingServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartBroadcastingServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverName), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(currentPlayerCount), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onBroadcastFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, serverName, userId, userName, secret, password, currentPlayerCount, selectionMask, configuration, onSuccess, onBroadcastFailed, cancellationToken);
}
// Autogenerated method: MasterServer.UserMessageHandler.StopBroadcastingServer
void MasterServer::UserMessageHandler::StopBroadcastingServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::StopBroadcastingServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopBroadcastingServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler.ConnectToServer
void MasterServer::UserMessageHandler::ConnectToServer(::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret, ::Il2CppString* code, ::Il2CppString* password, bool useRelay, MasterServer::UserMessageHandler::ConnectToServerDelegate* onSuccess, System::Action_1<GlobalNamespace::ConnectionFailedReason>* onConnectionFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::ConnectToServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(useRelay), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onConnectionFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, userName, secret, code, password, useRelay, onSuccess, onConnectionFailed, cancellationToken);
}
// Autogenerated method: MasterServer.UserMessageHandler.ConnectToMatchmaking
void MasterServer::UserMessageHandler::ConnectToMatchmaking(::Il2CppString* userId, ::Il2CppString* userName, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, ::Il2CppString* secret, ::Il2CppString* code, MasterServer::UserMessageHandler::ConnectToServerDelegate* onSuccess, System::Action_1<GlobalNamespace::ConnectionFailedReason>* onConnectionFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::ConnectToMatchmaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToMatchmaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onConnectionFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, userName, selectionMask, configuration, secret, code, onSuccess, onConnectionFailed, cancellationToken);
}
// Autogenerated method: MasterServer.UserMessageHandler.SendConnectToServerRequest
void MasterServer::UserMessageHandler::SendConnectToServerRequest(MasterServer::BaseConnectToServerRequest* request, MasterServer::UserMessageHandler::ConnectToServerDelegate* onSuccess, System::Action_1<GlobalNamespace::ConnectionFailedReason>* onConnectionFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::SendConnectToServerRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendConnectToServerRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onConnectionFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, request, onSuccess, onConnectionFailed, cancellationToken);
}
// Autogenerated method: MasterServer.UserMessageHandler.GetPublicServers
void MasterServer::UserMessageHandler::GetPublicServers(::Il2CppString* userId, ::Il2CppString* userName, int offset, int count, GlobalNamespace::UserServerFilter filter, System::Action_1<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PublicServerInfo>*>* onSuccess, System::Action_1<GlobalNamespace::ConnectionFailedReason>* onFailure, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::GetPublicServers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPublicServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, userName, offset, count, filter, onSuccess, onFailure, cancellationToken);
}
// Autogenerated method: MasterServer.UserMessageHandler.WithFailureHandler
void MasterServer::UserMessageHandler::WithFailureHandler(System::Action_1<GlobalNamespace::ConnectionFailedReason>* onFailure, System::Func_1<System::Threading::Tasks::Task*>* performTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::WithFailureHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithFailureHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFailure), ::il2cpp_utils::ExtractType(performTask)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, onFailure, performTask);
}
// Autogenerated method: MasterServer.UserMessageHandler.GetServerRandom
::Array<uint8_t>* MasterServer::UserMessageHandler::GetServerRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::GetServerRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServerRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler.GetServerKeys
System::Threading::Tasks::Task_1<GlobalNamespace::IDiffieHellmanKeyPair*>* MasterServer::UserMessageHandler::GetServerKeys(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::GetServerKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServerKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::IDiffieHellmanKeyPair*>*, false>(___instance_arg, ___internal__method, cancellationToken);
}
// Autogenerated method: MasterServer.UserMessageHandler.PollUpdate
void MasterServer::UserMessageHandler::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler.ShouldHandleUserMessage
bool MasterServer::UserMessageHandler::ShouldHandleUserMessage(MasterServer::IUserMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::ShouldHandleUserMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleUserMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.UserMessageHandler.GetAuthenticationRequest
System::Threading::Tasks::Task_1<MasterServer::IMasterServerAuthenticateRequest*>* MasterServer::UserMessageHandler::GetAuthenticationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::GetAuthenticationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAuthenticationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::IMasterServerAuthenticateRequest*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler.HandleUserServerHeartbeatResponse
void MasterServer::UserMessageHandler::HandleUserServerHeartbeatResponse(MasterServer::UserServerHeartbeatResponse* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::HandleUserServerHeartbeatResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUserServerHeartbeatResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.UserMessageHandler.HandlePrepareForConnectionRequest
void MasterServer::UserMessageHandler::HandlePrepareForConnectionRequest(MasterServer::PrepareForConnectionRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::HandlePrepareForConnectionRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePrepareForConnectionRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.UserMessageHandler.HandshakeLog
void MasterServer::UserMessageHandler::HandshakeLog(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::HandshakeLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandshakeLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, message);
}
