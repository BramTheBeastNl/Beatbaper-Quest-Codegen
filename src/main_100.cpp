// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IRemoteProcedureCall
#include "GlobalNamespace/IRemoteProcedureCall.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IRemoteProcedureCall.get_syncTime
float GlobalNamespace::IRemoteProcedureCall::get_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IRemoteProcedureCall::get_syncTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_syncTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IServerBeatmapProvider
#include "GlobalNamespace/IServerBeatmapProvider.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IServerBeatmapProvider.VerifyBeatmapForConfiguration
bool GlobalNamespace::IServerBeatmapProvider::VerifyBeatmapForConfiguration(GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IServerBeatmapProvider::VerifyBeatmapForConfiguration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "VerifyBeatmapForConfiguration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapId, configuration)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, beatmapId, configuration);
}
// Autogenerated method: IServerBeatmapProvider.SelectBeatmapFromSuggestionsConfigurationAndOwnedSongPacks
GlobalNamespace::BeatmapIdentifierNetSerializable* GlobalNamespace::IServerBeatmapProvider::SelectBeatmapFromSuggestionsConfigurationAndOwnedSongPacks(int playerCount, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* beatmapsSuggestedByPlayers, GlobalNamespace::GameplayServerConfiguration configuration, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::SongPackMask>* playerOwnedSongPacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IServerBeatmapProvider::SelectBeatmapFromSuggestionsConfigurationAndOwnedSongPacks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SelectBeatmapFromSuggestionsConfigurationAndOwnedSongPacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playerCount, beatmapsSuggestedByPlayers, configuration, playerOwnedSongPacks)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapIdentifierNetSerializable*, false>(this, ___internal__method, playerCount, beatmapsSuggestedByPlayers, configuration, playerOwnedSongPacks);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IServerBeatmapProviderManager
#include "GlobalNamespace/IServerBeatmapProviderManager.hpp"
// Including type: IServerBeatmapProvider
#include "GlobalNamespace/IServerBeatmapProvider.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IServerBeatmapProviderManager.GetServerBeatmapProvider
GlobalNamespace::IServerBeatmapProvider* GlobalNamespace::IServerBeatmapProviderManager::GetServerBeatmapProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IServerBeatmapProviderManager::GetServerBeatmapProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetServerBeatmapProvider", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IServerBeatmapProvider*, false>(this, ___internal__method);
}
// Autogenerated method: IServerBeatmapProviderManager.RefreshAsync
System::Threading::Tasks::Task* GlobalNamespace::IServerBeatmapProviderManager::RefreshAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IServerBeatmapProviderManager::RefreshAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLibConnectionManager
#include "GlobalNamespace/LiteNetLibConnectionManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: LiteNetLibConnectionManager/LiteNetLibConnectionParamsBase
#include "GlobalNamespace/LiteNetLibConnectionManager_LiteNetLibConnectionParamsBase.hpp"
// Including type: LiteNetLibConnectionManager/StartServerParams
#include "GlobalNamespace/LiteNetLibConnectionManager_StartServerParams.hpp"
// Including type: LiteNetLibConnectionManager/StartRelayParams
#include "GlobalNamespace/LiteNetLibConnectionManager_StartRelayParams.hpp"
// Including type: LiteNetLibConnectionManager/StartClientParams
#include "GlobalNamespace/LiteNetLibConnectionManager_StartClientParams.hpp"
// Including type: LiteNetLibConnectionManager/ConnectToServerParams
#include "GlobalNamespace/LiteNetLibConnectionManager_ConnectToServerParams.hpp"
// Including type: LiteNetLibConnectionManager/NetPeerConnectionRequest
#include "GlobalNamespace/LiteNetLibConnectionManager_NetPeerConnectionRequest.hpp"
// Including type: LiteNetLibConnectionManager/NetPeerConnection
#include "GlobalNamespace/LiteNetLibConnectionManager_NetPeerConnection.hpp"
// Including type: LiteNetLibConnectionManager/StatisticsUpdated
#include "GlobalNamespace/LiteNetLibConnectionManager_StatisticsUpdated.hpp"
// Including type: LiteNetLibConnectionManager/<>c
#include "GlobalNamespace/LiteNetLibConnectionManager_--c.hpp"
// Including type: LiteNetLibConnectionManager/<BackgroundDisconnectSentry>d__126
#include "GlobalNamespace/LiteNetLibConnectionManager_-BackgroundDisconnectSentry-d__126.hpp"
// Including type: LiteNetLibConnectionManager/<BackgroundShutdownSentry>d__127
#include "GlobalNamespace/LiteNetLibConnectionManager_-BackgroundShutdownSentry-d__127.hpp"
// Including type: LiteNetLib.NetManager
#include "LiteNetLib/NetManager.hpp"
// Including type: PacketEncryptionLayer
#include "GlobalNamespace/PacketEncryptionLayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: System.Net.Sockets.SocketError
#include "System/Net/Sockets/SocketError.hpp"
// Including type: LiteNetLib.ConnectionRequest
#include "LiteNetLib/ConnectionRequest.hpp"
// Including type: LiteNetLib.DisconnectInfo
#include "LiteNetLib/DisconnectInfo.hpp"
// Including type: LiteNetLib.NetPacketReader
#include "LiteNetLib/NetPacketReader.hpp"
// Including type: LiteNetLib.UnconnectedMessageType
#include "LiteNetLib/UnconnectedMessageType.hpp"
// Including type: LiteNetLib.DisconnectReason
#include "LiteNetLib/DisconnectReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 kBackgroundDisconnectTimeout
int64_t GlobalNamespace::LiteNetLibConnectionManager::_get_kBackgroundDisconnectTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::_get_kBackgroundDisconnectTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "LiteNetLibConnectionManager", "kBackgroundDisconnectTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kBackgroundDisconnectTimeout
void GlobalNamespace::LiteNetLibConnectionManager::_set_kBackgroundDisconnectTimeout(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::_set_kBackgroundDisconnectTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager", "kBackgroundDisconnectTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kBackgroundShutdownTimeout
int64_t GlobalNamespace::LiteNetLibConnectionManager::_get_kBackgroundShutdownTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::_get_kBackgroundShutdownTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "LiteNetLibConnectionManager", "kBackgroundShutdownTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kBackgroundShutdownTimeout
void GlobalNamespace::LiteNetLibConnectionManager::_set_kBackgroundShutdownTimeout(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::_set_kBackgroundShutdownTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager", "kBackgroundShutdownTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kStatisticsUpdateInterval
int64_t GlobalNamespace::LiteNetLibConnectionManager::_get_kStatisticsUpdateInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::_get_kStatisticsUpdateInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "LiteNetLibConnectionManager", "kStatisticsUpdateInterval"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kStatisticsUpdateInterval
void GlobalNamespace::LiteNetLibConnectionManager::_set_kStatisticsUpdateInterval(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::_set_kStatisticsUpdateInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager", "kStatisticsUpdateInterval", value));
}
// Autogenerated method: LiteNetLibConnectionManager.add_onConnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onConnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::add_onConnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onConnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onDisconnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::add_onDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onDisconnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::remove_onDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onConnectionFailedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onConnectionFailedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onConnectionConnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionConnectedEvent(System::Action_1<GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionConnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onConnectionConnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionConnectedEvent(System::Action_1<GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionConnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onConnectionDisconnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionDisconnectedEvent(System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onConnectionDisconnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionDisconnectedEvent(System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onLatencyUpdatedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onLatencyUpdatedEvent(System::Action_2<GlobalNamespace::IConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::add_onLatencyUpdatedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onLatencyUpdatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onLatencyUpdatedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onLatencyUpdatedEvent(System::Action_2<GlobalNamespace::IConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::remove_onLatencyUpdatedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onLatencyUpdatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onReceivedDataEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onReceivedDataEvent(System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::add_onReceivedDataEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onReceivedDataEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onReceivedDataEvent(System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::remove_onReceivedDataEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onReceiveUnconnectedDataEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onReceiveUnconnectedDataEvent(System::Action_2<System::Net::IPEndPoint*, LiteNetLib::Utils::NetDataReader*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::add_onReceiveUnconnectedDataEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onReceiveUnconnectedDataEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onReceiveUnconnectedDataEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onReceiveUnconnectedDataEvent(System::Action_2<System::Net::IPEndPoint*, LiteNetLib::Utils::NetDataReader*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::remove_onReceiveUnconnectedDataEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onReceiveUnconnectedDataEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onStatisticsUpdatedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onStatisticsUpdatedEvent(GlobalNamespace::LiteNetLibConnectionManager::StatisticsUpdated* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::add_onStatisticsUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onStatisticsUpdatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onStatisticsUpdatedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onStatisticsUpdatedEvent(GlobalNamespace::LiteNetLibConnectionManager::StatisticsUpdated* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::remove_onStatisticsUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onStatisticsUpdatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.get_userId
::Il2CppString* GlobalNamespace::LiteNetLibConnectionManager::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_userId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_userName
::Il2CppString* GlobalNamespace::LiteNetLibConnectionManager::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_userName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isConnected
bool GlobalNamespace::LiteNetLibConnectionManager::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_isConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isConnecting
bool GlobalNamespace::LiteNetLibConnectionManager::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_isConnecting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isDisconnecting
bool GlobalNamespace::LiteNetLibConnectionManager::get_isDisconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_isDisconnecting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isDisconnecting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isConnectionOwner
bool GlobalNamespace::LiteNetLibConnectionManager::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_hasConnectionOwner
bool GlobalNamespace::LiteNetLibConnectionManager::get_hasConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_hasConnectionOwner");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasConnectionOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isRelay
bool GlobalNamespace::LiteNetLibConnectionManager::get_isRelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_isRelay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isRelay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isServer
bool GlobalNamespace::LiteNetLibConnectionManager::get_isServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_isServer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isServer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isClient
bool GlobalNamespace::LiteNetLibConnectionManager::get_isClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_isClient");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isClient", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isDisposed
bool GlobalNamespace::LiteNetLibConnectionManager::get_isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_isDisposed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isDisposed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_connectionCount
int GlobalNamespace::LiteNetLibConnectionManager::get_connectionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_connectionCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_connectionCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_secret
::Il2CppString* GlobalNamespace::LiteNetLibConnectionManager::get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_secret");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_secret", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_port
int GlobalNamespace::LiteNetLibConnectionManager::get_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_port");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_port", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_encryptionLayer
GlobalNamespace::PacketEncryptionLayer* GlobalNamespace::LiteNetLibConnectionManager::get_encryptionLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_encryptionLayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_encryptionLayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketEncryptionLayer*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.SendToAll
void GlobalNamespace::LiteNetLibConnectionManager::SendToAll(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::SendToAll");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer, deliveryMethod)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer, deliveryMethod);
}
// Autogenerated method: LiteNetLibConnectionManager.SendToAll
void GlobalNamespace::LiteNetLibConnectionManager::SendToAll(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod, GlobalNamespace::IConnection* excludingConnection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::SendToAll");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer, deliveryMethod, excludingConnection)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer, deliveryMethod, excludingConnection);
}
// Autogenerated method: LiteNetLibConnectionManager.SendUnconnectedMessage
void GlobalNamespace::LiteNetLibConnectionManager::SendUnconnectedMessage(LiteNetLib::Utils::NetDataWriter* writer, System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::SendUnconnectedMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendUnconnectedMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer, endPoint)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer, endPoint);
}
// Autogenerated method: LiteNetLibConnectionManager.SendUnconnectedMessage
void GlobalNamespace::LiteNetLibConnectionManager::SendUnconnectedMessage(::Array<uint8_t>* message, int offset, int length, System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::SendUnconnectedMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendUnconnectedMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message, offset, length, endPoint)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message, offset, length, endPoint);
}
// Autogenerated method: LiteNetLibConnectionManager.PollUpdate
void GlobalNamespace::LiteNetLibConnectionManager::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::PollUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.SetSecret
void GlobalNamespace::LiteNetLibConnectionManager::SetSecret(::Il2CppString* secret) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::SetSecret");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetSecret", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(secret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, secret);
}
// Autogenerated method: LiteNetLibConnectionManager.ConnectToEndPoint
void GlobalNamespace::LiteNetLibConnectionManager::ConnectToEndPoint(System::Net::IPEndPoint* remoteEndPoint, ::Il2CppString* remoteUserId, ::Il2CppString* remoteUserName, bool remoteUserIsConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectToEndPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConnectToEndPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(remoteEndPoint, remoteUserId, remoteUserName, remoteUserIsConnectionOwner)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, remoteUserId, remoteUserName, remoteUserIsConnectionOwner);
}
// Autogenerated method: LiteNetLibConnectionManager.Dispose
void GlobalNamespace::LiteNetLibConnectionManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.DisposeAsync
System::Threading::Tasks::Task* GlobalNamespace::LiteNetLibConnectionManager::DisposeAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::DisposeAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DisposeAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.DisposeInternal
void GlobalNamespace::LiteNetLibConnectionManager::DisposeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::DisposeInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DisposeInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.Disconnect
void GlobalNamespace::LiteNetLibConnectionManager::Disconnect(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::Disconnect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: LiteNetLibConnectionManager.DisconnectInternal
void GlobalNamespace::LiteNetLibConnectionManager::DisconnectInternal(GlobalNamespace::DisconnectedReason disconnectedReason, GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::DisconnectInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DisconnectInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectedReason, connectionFailedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason, connectionFailedReason);
}
// Autogenerated method: LiteNetLibConnectionManager.TryStartNetManager
bool GlobalNamespace::LiteNetLibConnectionManager::TryStartNetManager(int port, bool enableBackgroundSentry) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::TryStartNetManager");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryStartNetManager", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(port, enableBackgroundSentry)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, port, enableBackgroundSentry);
}
// Autogenerated method: LiteNetLibConnectionManager.StartBackgroundSentry
void GlobalNamespace::LiteNetLibConnectionManager::StartBackgroundSentry() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::StartBackgroundSentry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartBackgroundSentry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.CheckSentryState
void GlobalNamespace::LiteNetLibConnectionManager::CheckSentryState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::CheckSentryState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckSentryState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.UpdateStatistics
void GlobalNamespace::LiteNetLibConnectionManager::UpdateStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::UpdateStatistics");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateStatistics", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.GetConnection
GlobalNamespace::IConnection* GlobalNamespace::LiteNetLibConnectionManager::GetConnection(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::GetConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnection*, false>(this, ___internal__method, index);
}
// Autogenerated method: LiteNetLibConnectionManager.IsConnectedToUser
bool GlobalNamespace::LiteNetLibConnectionManager::IsConnectedToUser(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::IsConnectedToUser");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsConnectedToUser", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, userId);
}
// Autogenerated method: LiteNetLibConnectionManager.HasConnectionToEndPoint
bool GlobalNamespace::LiteNetLibConnectionManager::HasConnectionToEndPoint(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::HasConnectionToEndPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HasConnectionToEndPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, endPoint);
}
// Autogenerated method: LiteNetLibConnectionManager.HasPendingConnectionToEndPoint
bool GlobalNamespace::LiteNetLibConnectionManager::HasPendingConnectionToEndPoint(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::HasPendingConnectionToEndPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HasPendingConnectionToEndPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, endPoint);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnPeerConnected
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnPeerConnected(LiteNetLib::NetPeer* peer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnPeerConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnPeerConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnNetworkError
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnNetworkError(System::Net::IPEndPoint* endPoint, System::Net::Sockets::SocketError socketError) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnNetworkError");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint, socketError)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPoint, socketError);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnNetworkLatencyUpdate
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnNetworkLatencyUpdate(LiteNetLib::NetPeer* peer, int latencyMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnNetworkLatencyUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkLatencyUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer, latencyMs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer, latencyMs);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnConnectionRequest
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnConnectionRequest(LiteNetLib::ConnectionRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnConnectionRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnConnectionRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(request)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnPeerDisconnected
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnPeerDisconnected(LiteNetLib::NetPeer* peer, LiteNetLib::DisconnectInfo disconnectInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnPeerDisconnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnPeerDisconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer, disconnectInfo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer, disconnectInfo);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnNetworkReceive
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnNetworkReceive(LiteNetLib::NetPeer* peer, LiteNetLib::NetPacketReader* reader, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnNetworkReceive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer, reader, deliveryMethod)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer, reader, deliveryMethod);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnNetworkReceiveUnconnected(System::Net::IPEndPoint* remoteEndPoint, LiteNetLib::NetPacketReader* reader, LiteNetLib::UnconnectedMessageType messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(remoteEndPoint, reader, messageType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, reader, messageType);
}
// Autogenerated method: LiteNetLibConnectionManager.GetConnection
GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection* GlobalNamespace::LiteNetLibConnectionManager::GetConnection(LiteNetLib::NetPeer* peer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::GetConnection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*, false>(this, ___internal__method, peer);
}
// Autogenerated method: LiteNetLibConnectionManager.AcceptAllPendingRequests
void GlobalNamespace::LiteNetLibConnectionManager::AcceptAllPendingRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::AcceptAllPendingRequests");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AcceptAllPendingRequests", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.TryAccept
void GlobalNamespace::LiteNetLibConnectionManager::TryAccept(LiteNetLib::ConnectionRequest* request, ::Il2CppString* userId, ::Il2CppString* userName, bool isConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::TryAccept");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryAccept", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(request, userId, userName, isConnectionOwner)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, request, userId, userName, isConnectionOwner);
}
// Autogenerated method: LiteNetLibConnectionManager.CreatePendingConnection
void GlobalNamespace::LiteNetLibConnectionManager::CreatePendingConnection(LiteNetLib::NetPeer* peer, ::Il2CppString* userId, ::Il2CppString* userName, bool isConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::CreatePendingConnection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreatePendingConnection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer, userId, userName, isConnectionOwner)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer, userId, userName, isConnectionOwner);
}
// Autogenerated method: LiteNetLibConnectionManager.RemoveConnection
void GlobalNamespace::LiteNetLibConnectionManager::RemoveConnection(LiteNetLib::NetPeer* netPeer, LiteNetLib::DisconnectReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::RemoveConnection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveConnection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(netPeer, reason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, netPeer, reason);
}
// Autogenerated method: LiteNetLibConnectionManager.TryDisconnect
void GlobalNamespace::LiteNetLibConnectionManager::TryDisconnect(LiteNetLib::DisconnectReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::TryDisconnect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryDisconnect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: LiteNetLibConnectionManager.ToDisconnectedReason
GlobalNamespace::DisconnectedReason GlobalNamespace::LiteNetLibConnectionManager::ToDisconnectedReason(LiteNetLib::DisconnectReason disconnectReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ToDisconnectedReason");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToDisconnectedReason", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectReason)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::DisconnectedReason, false>(this, ___internal__method, disconnectReason);
}
// Autogenerated method: LiteNetLibConnectionManager.ToConnectionFailedReason
GlobalNamespace::ConnectionFailedReason GlobalNamespace::LiteNetLibConnectionManager::ToConnectionFailedReason(LiteNetLib::DisconnectReason disconnectReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ToConnectionFailedReason");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToConnectionFailedReason", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectReason)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ConnectionFailedReason, false>(this, ___internal__method, disconnectReason);
}
// Autogenerated method: LiteNetLibConnectionManager.GetConnectionMessage
LiteNetLib::Utils::NetDataWriter* GlobalNamespace::LiteNetLibConnectionManager::GetConnectionMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::GetConnectionMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConnectionMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::Utils::NetDataWriter*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.ParseConnectionMessage
bool GlobalNamespace::LiteNetLibConnectionManager::ParseConnectionMessage(LiteNetLib::Utils::NetDataReader* reader, ::Il2CppString*& secret, ::Il2CppString*& userId, ::Il2CppString*& userName, bool& isConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ParseConnectionMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ParseConnectionMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader, secret, userId, userName, isConnectionOwner)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, reader, secret, userId, userName, isConnectionOwner);
}
// Autogenerated method: LiteNetLibConnectionManager.BackgroundDisconnectSentry
System::Threading::Tasks::Task* GlobalNamespace::LiteNetLibConnectionManager::BackgroundDisconnectSentry() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::BackgroundDisconnectSentry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BackgroundDisconnectSentry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.BackgroundShutdownSentry
System::Threading::Tasks::Task* GlobalNamespace::LiteNetLibConnectionManager::BackgroundShutdownSentry() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::BackgroundShutdownSentry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BackgroundShutdownSentry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.Log
void GlobalNamespace::LiteNetLibConnectionManager::Log(::Il2CppString* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::Log");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(msg)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: LiteNetLibConnectionManager.LogError
void GlobalNamespace::LiteNetLibConnectionManager::LogError(::Il2CppString* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LogError");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(msg)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: LiteNetLibConnectionManager.<DisposeAsync>b__97_0
void GlobalNamespace::LiteNetLibConnectionManager::$DisposeAsync$b__97_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::<DisposeAsync>b__97_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DisposeAsync>b__97_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/NetworkMode
#include "GlobalNamespace/LiteNetLibConnectionManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/NetworkMode None
GlobalNamespace::LiteNetLibConnectionManager::NetworkMode GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LiteNetLibConnectionManager::NetworkMode>("", "LiteNetLibConnectionManager/NetworkMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/NetworkMode None
void GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_set_None(GlobalNamespace::LiteNetLibConnectionManager::NetworkMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/NetworkMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/NetworkMode Client
GlobalNamespace::LiteNetLibConnectionManager::NetworkMode GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_get_Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_get_Client");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LiteNetLibConnectionManager::NetworkMode>("", "LiteNetLibConnectionManager/NetworkMode", "Client"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/NetworkMode Client
void GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_set_Client(GlobalNamespace::LiteNetLibConnectionManager::NetworkMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_set_Client");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/NetworkMode", "Client", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/NetworkMode Server
GlobalNamespace::LiteNetLibConnectionManager::NetworkMode GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_get_Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_get_Server");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LiteNetLibConnectionManager::NetworkMode>("", "LiteNetLibConnectionManager/NetworkMode", "Server"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/NetworkMode Server
void GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_set_Server(GlobalNamespace::LiteNetLibConnectionManager::NetworkMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_set_Server");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/NetworkMode", "Server", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/NetworkMode Relay
GlobalNamespace::LiteNetLibConnectionManager::NetworkMode GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_get_Relay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_get_Relay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LiteNetLibConnectionManager::NetworkMode>("", "LiteNetLibConnectionManager/NetworkMode", "Relay"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/NetworkMode Relay
void GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_set_Relay(GlobalNamespace::LiteNetLibConnectionManager::NetworkMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_set_Relay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/NetworkMode", "Relay", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/ConnectionState
#include "GlobalNamespace/LiteNetLibConnectionManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/ConnectionState Unconnected
GlobalNamespace::LiteNetLibConnectionManager::ConnectionState GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Unconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Unconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LiteNetLibConnectionManager::ConnectionState>("", "LiteNetLibConnectionManager/ConnectionState", "Unconnected"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/ConnectionState Unconnected
void GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Unconnected(GlobalNamespace::LiteNetLibConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Unconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/ConnectionState", "Unconnected", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/ConnectionState Connecting
GlobalNamespace::LiteNetLibConnectionManager::ConnectionState GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LiteNetLibConnectionManager::ConnectionState>("", "LiteNetLibConnectionManager/ConnectionState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/ConnectionState Connecting
void GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Connecting(GlobalNamespace::LiteNetLibConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/ConnectionState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/ConnectionState Connected
GlobalNamespace::LiteNetLibConnectionManager::ConnectionState GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LiteNetLibConnectionManager::ConnectionState>("", "LiteNetLibConnectionManager/ConnectionState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/ConnectionState Connected
void GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Connected(GlobalNamespace::LiteNetLibConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/ConnectionState", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/ConnectionState Disconnecting
GlobalNamespace::LiteNetLibConnectionManager::ConnectionState GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Disconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Disconnecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LiteNetLibConnectionManager::ConnectionState>("", "LiteNetLibConnectionManager/ConnectionState", "Disconnecting"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/ConnectionState Disconnecting
void GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Disconnecting(GlobalNamespace::LiteNetLibConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Disconnecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/ConnectionState", "Disconnecting", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLibConnectionManager/LiteNetLibConnectionParamsBase
#include "GlobalNamespace/LiteNetLibConnectionManager_LiteNetLibConnectionParamsBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/StartServerParams
#include "GlobalNamespace/LiteNetLibConnectionManager_StartServerParams.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/StartRelayParams
#include "GlobalNamespace/LiteNetLibConnectionManager_StartRelayParams.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/StartClientParams
#include "GlobalNamespace/LiteNetLibConnectionManager_StartClientParams.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLibConnectionManager/ConnectToServerParams
#include "GlobalNamespace/LiteNetLibConnectionManager_ConnectToServerParams.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLibConnectionManager/NetPeerConnectionRequest
#include "GlobalNamespace/LiteNetLibConnectionManager_NetPeerConnectionRequest.hpp"
// Including type: LiteNetLib.ConnectionRequest
#include "LiteNetLib/ConnectionRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnectionRequest.get_userId
::Il2CppString* GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_userId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnectionRequest.get_userName
::Il2CppString* GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_userName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnectionRequest.get_isConnectionOwner
bool GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_isConnectionOwner");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnectionRequest.get_endPoint
System::Net::IPEndPoint* GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_endPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_endPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnectionRequest.Accept
LiteNetLib::NetPeer* GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::Accept() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::Accept");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::NetPeer*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLibConnectionManager/NetPeerConnection
#include "GlobalNamespace/LiteNetLibConnectionManager_NetPeerConnection.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.DeliveryMethod
#include "LiteNetLib/DeliveryMethod.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.get_userId
::Il2CppString* GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::get_userId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.get_userName
::Il2CppString* GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::get_userName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.get_isConnectionOwner
bool GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.Send
void GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Send(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer, deliveryMethod)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer, deliveryMethod);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.Equals
bool GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Equals(GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.Disconnect
void GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Disconnect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.Equals
bool GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.GetHashCode
int GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLibConnectionManager/StatisticsUpdated
#include "GlobalNamespace/LiteNetLibConnectionManager_StatisticsUpdated.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLibConnectionManager/StatisticsUpdated.Invoke
void GlobalNamespace::LiteNetLibConnectionManager::StatisticsUpdated::Invoke(int64_t packetsSent, int64_t packetsReceived, int64_t bytesSent, int64_t bytesReceived, int64_t packetsLost, int64_t packetsSentEncrypted, int64_t packetsSentPlaintext, int64_t packetsSentRejected, int64_t packetsReceivedEncrypted, int64_t packetsReceivedPlaintext, int64_t packetsReceivedRejected, int64_t encryptionProcessingTime, int64_t decryptionProcessingTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::StatisticsUpdated::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packetsSent, packetsReceived, bytesSent, bytesReceived, packetsLost, packetsSentEncrypted, packetsSentPlaintext, packetsSentRejected, packetsReceivedEncrypted, packetsReceivedPlaintext, packetsReceivedRejected, encryptionProcessingTime, decryptionProcessingTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packetsSent, packetsReceived, bytesSent, bytesReceived, packetsLost, packetsSentEncrypted, packetsSentPlaintext, packetsSentRejected, packetsReceivedEncrypted, packetsReceivedPlaintext, packetsReceivedRejected, encryptionProcessingTime, decryptionProcessingTime);
}
// Autogenerated method: LiteNetLibConnectionManager/StatisticsUpdated.BeginInvoke
System::IAsyncResult* GlobalNamespace::LiteNetLibConnectionManager::StatisticsUpdated::BeginInvoke(int64_t packetsSent, int64_t packetsReceived, int64_t bytesSent, int64_t bytesReceived, int64_t packetsLost, int64_t packetsSentEncrypted, int64_t packetsSentPlaintext, int64_t packetsSentRejected, int64_t packetsReceivedEncrypted, int64_t packetsReceivedPlaintext, int64_t packetsReceivedRejected, int64_t encryptionProcessingTime, int64_t decryptionProcessingTime, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::StatisticsUpdated::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packetsSent, packetsReceived, bytesSent, bytesReceived, packetsLost, packetsSentEncrypted, packetsSentPlaintext, packetsSentRejected, packetsReceivedEncrypted, packetsReceivedPlaintext, packetsReceivedRejected, encryptionProcessingTime, decryptionProcessingTime, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, packetsSent, packetsReceived, bytesSent, bytesReceived, packetsLost, packetsSentEncrypted, packetsSentPlaintext, packetsSentRejected, packetsReceivedEncrypted, packetsReceivedPlaintext, packetsReceivedRejected, encryptionProcessingTime, decryptionProcessingTime, callback, object);
}
// Autogenerated method: LiteNetLibConnectionManager/StatisticsUpdated.EndInvoke
void GlobalNamespace::LiteNetLibConnectionManager::StatisticsUpdated::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::StatisticsUpdated::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/<>c
#include "GlobalNamespace/LiteNetLibConnectionManager_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: LiteNetLibConnectionManager/NetPeerConnection
#include "GlobalNamespace/LiteNetLibConnectionManager_NetPeerConnection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly LiteNetLibConnectionManager/<>c <>9
GlobalNamespace::LiteNetLibConnectionManager::$$c* GlobalNamespace::LiteNetLibConnectionManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::LiteNetLibConnectionManager::$$c*>("", "LiteNetLibConnectionManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly LiteNetLibConnectionManager/<>c <>9
void GlobalNamespace::LiteNetLibConnectionManager::$$c::_set_$$9(GlobalNamespace::LiteNetLibConnectionManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<LiteNetLibConnectionManager/NetPeerConnection> <>9__70_0
System::Predicate_1<GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*>* GlobalNamespace::LiteNetLibConnectionManager::$$c::_get_$$9__70_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$$c::_get_$$9__70_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Predicate_1<GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*>*>("", "LiteNetLibConnectionManager/<>c", "<>9__70_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<LiteNetLibConnectionManager/NetPeerConnection> <>9__70_0
void GlobalNamespace::LiteNetLibConnectionManager::$$c::_set_$$9__70_0(System::Predicate_1<GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$$c::_set_$$9__70_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/<>c", "<>9__70_0", value)));
}
// Autogenerated method: LiteNetLibConnectionManager/<>c..cctor
void GlobalNamespace::LiteNetLibConnectionManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LiteNetLibConnectionManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/<>c.<get_hasConnectionOwner>b__70_0
bool GlobalNamespace::LiteNetLibConnectionManager::$$c::$get_hasConnectionOwner$b__70_0(GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$$c::<get_hasConnectionOwner>b__70_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_hasConnectionOwner>b__70_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/<BackgroundDisconnectSentry>d__126
#include "GlobalNamespace/LiteNetLibConnectionManager_-BackgroundDisconnectSentry-d__126.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLibConnectionManager/<BackgroundDisconnectSentry>d__126.MoveNext
void GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__126::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__126::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/<BackgroundDisconnectSentry>d__126.SetStateMachine
void GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__126::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__126::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/<BackgroundShutdownSentry>d__127
#include "GlobalNamespace/LiteNetLibConnectionManager_-BackgroundShutdownSentry-d__127.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLibConnectionManager/<BackgroundShutdownSentry>d__127.MoveNext
void GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__127::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__127::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/<BackgroundShutdownSentry>d__127.SetStateMachine
void GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__127::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__127::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseMasterServerAcknowledgeMessage
#include "GlobalNamespace/BaseMasterServerAcknowledgeMessage.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BaseMasterServerAcknowledgeMessage.get_messageHandled
bool GlobalNamespace::BaseMasterServerAcknowledgeMessage::get_messageHandled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerAcknowledgeMessage::get_messageHandled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_messageHandled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerAcknowledgeMessage.set_messageHandled
void GlobalNamespace::BaseMasterServerAcknowledgeMessage::set_messageHandled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerAcknowledgeMessage::set_messageHandled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_messageHandled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseMasterServerAcknowledgeMessage.Init
GlobalNamespace::BaseMasterServerAcknowledgeMessage* GlobalNamespace::BaseMasterServerAcknowledgeMessage::Init(bool messageHandled) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerAcknowledgeMessage::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(messageHandled)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseMasterServerAcknowledgeMessage*, false>(this, ___internal__method, messageHandled);
}
// Autogenerated method: BaseMasterServerAcknowledgeMessage.get_resultCode
uint8_t GlobalNamespace::BaseMasterServerAcknowledgeMessage::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerAcknowledgeMessage::get_resultCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerAcknowledgeMessage.get_resultCodeString
::Il2CppString* GlobalNamespace::BaseMasterServerAcknowledgeMessage::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerAcknowledgeMessage::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerAcknowledgeMessage.Serialize
void GlobalNamespace::BaseMasterServerAcknowledgeMessage::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerAcknowledgeMessage::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: BaseMasterServerAcknowledgeMessage.Deserialize
void GlobalNamespace::BaseMasterServerAcknowledgeMessage::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerAcknowledgeMessage::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseMasterServerReliableRequest
#include "GlobalNamespace/BaseMasterServerReliableRequest.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BaseMasterServerReliableRequest.get_requestId
uint GlobalNamespace::BaseMasterServerReliableRequest::get_requestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableRequest::get_requestId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_requestId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableRequest.set_requestId
void GlobalNamespace::BaseMasterServerReliableRequest::set_requestId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableRequest::set_requestId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_requestId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseMasterServerReliableRequest.Serialize
void GlobalNamespace::BaseMasterServerReliableRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: BaseMasterServerReliableRequest.Deserialize
void GlobalNamespace::BaseMasterServerReliableRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: BaseMasterServerReliableRequest.Release
void GlobalNamespace::BaseMasterServerReliableRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableRequest::Release");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableRequest.MasterServer.IMasterServerReliableRequest.WithRequestId
MasterServer::IMasterServerReliableRequest* GlobalNamespace::BaseMasterServerReliableRequest::MasterServer_IMasterServerReliableRequest_WithRequestId(uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableRequest::MasterServer.IMasterServerReliableRequest.WithRequestId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MasterServer.IMasterServerReliableRequest.WithRequestId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(requestId)));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerReliableRequest*, false>(this, ___internal__method, requestId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseMasterServerReliableResponse
#include "GlobalNamespace/BaseMasterServerReliableResponse.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BaseMasterServerReliableResponse.get_requestId
uint GlobalNamespace::BaseMasterServerReliableResponse::get_requestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::get_requestId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_requestId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableResponse.set_requestId
void GlobalNamespace::BaseMasterServerReliableResponse::set_requestId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::set_requestId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_requestId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseMasterServerReliableResponse.get_responseId
uint GlobalNamespace::BaseMasterServerReliableResponse::get_responseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::get_responseId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_responseId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableResponse.set_responseId
void GlobalNamespace::BaseMasterServerReliableResponse::set_responseId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::set_responseId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_responseId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseMasterServerReliableResponse.get_resultCode
uint8_t GlobalNamespace::BaseMasterServerReliableResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableResponse.get_resultCodeString
::Il2CppString* GlobalNamespace::BaseMasterServerReliableResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableResponse.Serialize
void GlobalNamespace::BaseMasterServerReliableResponse::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: BaseMasterServerReliableResponse.Deserialize
void GlobalNamespace::BaseMasterServerReliableResponse::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: BaseMasterServerReliableResponse.Release
void GlobalNamespace::BaseMasterServerReliableResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::Release");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableResponse.MasterServer.IMasterServerReliableRequest.WithRequestId
MasterServer::IMasterServerReliableRequest* GlobalNamespace::BaseMasterServerReliableResponse::MasterServer_IMasterServerReliableRequest_WithRequestId(uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::MasterServer.IMasterServerReliableRequest.WithRequestId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MasterServer.IMasterServerReliableRequest.WithRequestId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(requestId)));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerReliableRequest*, false>(this, ___internal__method, requestId);
}
// Autogenerated method: BaseMasterServerReliableResponse.MasterServer.IMasterServerResponse.WithResponseId
MasterServer::IMasterServerResponse* GlobalNamespace::BaseMasterServerReliableResponse::MasterServer_IMasterServerResponse_WithResponseId(uint responseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::MasterServer.IMasterServerResponse.WithResponseId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MasterServer.IMasterServerResponse.WithResponseId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(responseId)));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerResponse*, false>(this, ___internal__method, responseId);
}
// Autogenerated method: BaseMasterServerReliableResponse.MasterServer.IMasterServerReliableResponse.WithRequestAndResponseId
MasterServer::IMasterServerReliableResponse* GlobalNamespace::BaseMasterServerReliableResponse::MasterServer_IMasterServerReliableResponse_WithRequestAndResponseId(uint requestId, uint responseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::MasterServer.IMasterServerReliableResponse.WithRequestAndResponseId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MasterServer.IMasterServerReliableResponse.WithRequestAndResponseId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(requestId, responseId)));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerReliableResponse*, false>(this, ___internal__method, requestId, responseId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseMasterServerResponse
#include "GlobalNamespace/BaseMasterServerResponse.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BaseMasterServerResponse.get_responseId
uint GlobalNamespace::BaseMasterServerResponse::get_responseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerResponse::get_responseId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_responseId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerResponse.set_responseId
void GlobalNamespace::BaseMasterServerResponse::set_responseId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerResponse::set_responseId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_responseId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseMasterServerResponse.get_resultCode
uint8_t GlobalNamespace::BaseMasterServerResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerResponse.get_resultCodeString
::Il2CppString* GlobalNamespace::BaseMasterServerResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerResponse.Serialize
void GlobalNamespace::BaseMasterServerResponse::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: BaseMasterServerResponse.Deserialize
void GlobalNamespace::BaseMasterServerResponse::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: BaseMasterServerResponse.Release
void GlobalNamespace::BaseMasterServerResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerResponse::Release");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerResponse.MasterServer.IMasterServerResponse.WithResponseId
MasterServer::IMasterServerResponse* GlobalNamespace::BaseMasterServerResponse::MasterServer_IMasterServerResponse_WithResponseId(uint responseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerResponse::MasterServer.IMasterServerResponse.WithResponseId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MasterServer.IMasterServerResponse.WithResponseId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(responseId)));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerResponse*, false>(this, ___internal__method, responseId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DedicatedServerType
#include "GlobalNamespace/DedicatedServerType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public DedicatedServerType RelayServer
GlobalNamespace::DedicatedServerType GlobalNamespace::DedicatedServerType::_get_RelayServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DedicatedServerType::_get_RelayServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DedicatedServerType>("", "DedicatedServerType", "RelayServer"));
}
// Autogenerated static field setter
// Set static field: static public DedicatedServerType RelayServer
void GlobalNamespace::DedicatedServerType::_set_RelayServer(GlobalNamespace::DedicatedServerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DedicatedServerType::_set_RelayServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DedicatedServerType", "RelayServer", value));
}
// Autogenerated static field getter
// Get static field: static public DedicatedServerType MatchmakingServer
GlobalNamespace::DedicatedServerType GlobalNamespace::DedicatedServerType::_get_MatchmakingServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DedicatedServerType::_get_MatchmakingServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DedicatedServerType>("", "DedicatedServerType", "MatchmakingServer"));
}
// Autogenerated static field setter
// Set static field: static public DedicatedServerType MatchmakingServer
void GlobalNamespace::DedicatedServerType::_set_MatchmakingServer(GlobalNamespace::DedicatedServerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DedicatedServerType::_set_MatchmakingServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DedicatedServerType", "MatchmakingServer", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DiscoveryPolicy
#include "GlobalNamespace/DiscoveryPolicy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public DiscoveryPolicy Hidden
GlobalNamespace::DiscoveryPolicy GlobalNamespace::DiscoveryPolicy::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DiscoveryPolicy::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DiscoveryPolicy>("", "DiscoveryPolicy", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public DiscoveryPolicy Hidden
void GlobalNamespace::DiscoveryPolicy::_set_Hidden(GlobalNamespace::DiscoveryPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DiscoveryPolicy::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DiscoveryPolicy", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public DiscoveryPolicy WithCode
GlobalNamespace::DiscoveryPolicy GlobalNamespace::DiscoveryPolicy::_get_WithCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DiscoveryPolicy::_get_WithCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DiscoveryPolicy>("", "DiscoveryPolicy", "WithCode"));
}
// Autogenerated static field setter
// Set static field: static public DiscoveryPolicy WithCode
void GlobalNamespace::DiscoveryPolicy::_set_WithCode(GlobalNamespace::DiscoveryPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DiscoveryPolicy::_set_WithCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DiscoveryPolicy", "WithCode", value));
}
// Autogenerated static field getter
// Get static field: static public DiscoveryPolicy Public
GlobalNamespace::DiscoveryPolicy GlobalNamespace::DiscoveryPolicy::_get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DiscoveryPolicy::_get_Public");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DiscoveryPolicy>("", "DiscoveryPolicy", "Public"));
}
// Autogenerated static field setter
// Set static field: static public DiscoveryPolicy Public
void GlobalNamespace::DiscoveryPolicy::_set_Public(GlobalNamespace::DiscoveryPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DiscoveryPolicy::_set_Public");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DiscoveryPolicy", "Public", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InvitePolicy
#include "GlobalNamespace/InvitePolicy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public InvitePolicy OnlyConnectionOwnerCanInvite
GlobalNamespace::InvitePolicy GlobalNamespace::InvitePolicy::_get_OnlyConnectionOwnerCanInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InvitePolicy::_get_OnlyConnectionOwnerCanInvite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::InvitePolicy>("", "InvitePolicy", "OnlyConnectionOwnerCanInvite"));
}
// Autogenerated static field setter
// Set static field: static public InvitePolicy OnlyConnectionOwnerCanInvite
void GlobalNamespace::InvitePolicy::_set_OnlyConnectionOwnerCanInvite(GlobalNamespace::InvitePolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InvitePolicy::_set_OnlyConnectionOwnerCanInvite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InvitePolicy", "OnlyConnectionOwnerCanInvite", value));
}
// Autogenerated static field getter
// Get static field: static public InvitePolicy AnyoneCanInvite
GlobalNamespace::InvitePolicy GlobalNamespace::InvitePolicy::_get_AnyoneCanInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InvitePolicy::_get_AnyoneCanInvite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::InvitePolicy>("", "InvitePolicy", "AnyoneCanInvite"));
}
// Autogenerated static field setter
// Set static field: static public InvitePolicy AnyoneCanInvite
void GlobalNamespace::InvitePolicy::_set_AnyoneCanInvite(GlobalNamespace::InvitePolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InvitePolicy::_set_AnyoneCanInvite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InvitePolicy", "AnyoneCanInvite", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerConnectionManager
#include "GlobalNamespace/MasterServerConnectionManager.hpp"
// Including type: MasterServer.UserMessageHandler
#include "MasterServer/UserMessageHandler.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: MasterServerConnectionManager/MasterServerConnectionManagerParamsBase
#include "GlobalNamespace/MasterServerConnectionManager_MasterServerConnectionManagerParamsBase.hpp"
// Including type: MasterServerConnectionManager/StartServerParams
#include "GlobalNamespace/MasterServerConnectionManager_StartServerParams.hpp"
// Including type: MasterServerConnectionManager/ConnectToServerParams
#include "GlobalNamespace/MasterServerConnectionManager_ConnectToServerParams.hpp"
// Including type: MasterServerConnectionManager/ConnectToMatchmakingParams
#include "GlobalNamespace/MasterServerConnectionManager_ConnectToMatchmakingParams.hpp"
// Including type: MasterServerConnectionManager/StartClientParams
#include "GlobalNamespace/MasterServerConnectionManager_StartClientParams.hpp"
// Including type: LiteNetLibConnectionManager
#include "GlobalNamespace/LiteNetLibConnectionManager.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: MasterServerEndPoint
#include "GlobalNamespace/MasterServerEndPoint.hpp"
// Including type: IAuthenticationTokenProvider
#include "GlobalNamespace/IAuthenticationTokenProvider.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: GameplayServerFilter
#include "GlobalNamespace/GameplayServerFilter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServerConnectionManager.add_onConnectedEvent
void GlobalNamespace::MasterServerConnectionManager::add_onConnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::add_onConnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.remove_onConnectedEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onConnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::remove_onConnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.add_onDisconnectedEvent
void GlobalNamespace::MasterServerConnectionManager::add_onDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::add_onDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.remove_onDisconnectedEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::remove_onDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.add_onConnectionFailedEvent
void GlobalNamespace::MasterServerConnectionManager::add_onConnectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::add_onConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.remove_onConnectionFailedEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onConnectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::remove_onConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.add_onConnectionConnectedEvent
void GlobalNamespace::MasterServerConnectionManager::add_onConnectionConnectedEvent(System::Action_1<GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::add_onConnectionConnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.remove_onConnectionConnectedEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onConnectionConnectedEvent(System::Action_1<GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::remove_onConnectionConnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.add_onConnectionDisconnectedEvent
void GlobalNamespace::MasterServerConnectionManager::add_onConnectionDisconnectedEvent(System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::add_onConnectionDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.remove_onConnectionDisconnectedEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onConnectionDisconnectedEvent(System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::remove_onConnectionDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.add_onLatencyUpdatedEvent
void GlobalNamespace::MasterServerConnectionManager::add_onLatencyUpdatedEvent(System::Action_2<GlobalNamespace::IConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::add_onLatencyUpdatedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onLatencyUpdatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.remove_onLatencyUpdatedEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onLatencyUpdatedEvent(System::Action_2<GlobalNamespace::IConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::remove_onLatencyUpdatedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onLatencyUpdatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.add_onReceivedDataEvent
void GlobalNamespace::MasterServerConnectionManager::add_onReceivedDataEvent(System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::add_onReceivedDataEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.remove_onReceivedDataEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onReceivedDataEvent(System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::remove_onReceivedDataEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.get_userId
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_userId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_userName
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_userName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_isConnected
bool GlobalNamespace::MasterServerConnectionManager::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_isConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_isConnecting
bool GlobalNamespace::MasterServerConnectionManager::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_isConnecting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_isDisconnecting
bool GlobalNamespace::MasterServerConnectionManager::get_isDisconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_isDisconnecting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isDisconnecting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_connectionCount
int GlobalNamespace::MasterServerConnectionManager::get_connectionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_connectionCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_connectionCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_isConnectionOwner
bool GlobalNamespace::MasterServerConnectionManager::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_isDisposed
bool GlobalNamespace::MasterServerConnectionManager::get_isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_isDisposed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isDisposed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_port
int GlobalNamespace::MasterServerConnectionManager::get_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_port");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_port", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_secret
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_secret");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_secret", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_serverName
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_serverName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_serverName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_serverName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_serverPassword
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_serverPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_serverPassword");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_serverPassword", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_maxPlayerCount
int GlobalNamespace::MasterServerConnectionManager::get_maxPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_maxPlayerCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_maxPlayerCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_discoveryPolicy
GlobalNamespace::DiscoveryPolicy GlobalNamespace::MasterServerConnectionManager::get_discoveryPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_discoveryPolicy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_discoveryPolicy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::DiscoveryPolicy, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_invitePolicy
GlobalNamespace::InvitePolicy GlobalNamespace::MasterServerConnectionManager::get_invitePolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_invitePolicy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_invitePolicy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::InvitePolicy, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::MasterServerConnectionManager::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_configuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_code
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_code");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_code", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_serverEndPoint
System::Net::IPEndPoint* GlobalNamespace::MasterServerConnectionManager::get_serverEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_serverEndPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_serverEndPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_serverUserId
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_serverUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_serverUserId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_serverUserId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_serverUserName
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_serverUserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_serverUserName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_serverUserName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.SendToAll
void GlobalNamespace::MasterServerConnectionManager::SendToAll(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::SendToAll");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer, deliveryMethod)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer, deliveryMethod);
}
// Autogenerated method: MasterServerConnectionManager.SendToAll
void GlobalNamespace::MasterServerConnectionManager::SendToAll(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod, GlobalNamespace::IConnection* excludingConnection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::SendToAll");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer, deliveryMethod, excludingConnection)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer, deliveryMethod, excludingConnection);
}
// Autogenerated method: MasterServerConnectionManager.PollUpdate
void GlobalNamespace::MasterServerConnectionManager::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::PollUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.InitMasterServerHandler
void GlobalNamespace::MasterServerConnectionManager::InitMasterServerHandler(GlobalNamespace::MasterServerEndPoint* masterServerEndPoint, GlobalNamespace::IAuthenticationTokenProvider* authenticationTokenProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::InitMasterServerHandler");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitMasterServerHandler", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(masterServerEndPoint, authenticationTokenProvider)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, masterServerEndPoint, authenticationTokenProvider);
}
// Autogenerated method: MasterServerConnectionManager.DisposeMasterServerHandler
void GlobalNamespace::MasterServerConnectionManager::DisposeMasterServerHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::DisposeMasterServerHandler");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DisposeMasterServerHandler", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.SetServerStatus
void GlobalNamespace::MasterServerConnectionManager::SetServerStatus(::Il2CppString* serverName, ::Il2CppString* serverPassword, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, int maxPlayerCount, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::SetServerStatus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetServerStatus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serverName, serverPassword, discoveryPolicy, invitePolicy, maxPlayerCount, configuration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverName, serverPassword, discoveryPolicy, invitePolicy, maxPlayerCount, configuration);
}
// Autogenerated method: MasterServerConnectionManager.SetCurrentPlayerCount
void GlobalNamespace::MasterServerConnectionManager::SetCurrentPlayerCount(int currentPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::SetCurrentPlayerCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCurrentPlayerCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(currentPlayerCount)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, currentPlayerCount);
}
// Autogenerated method: MasterServerConnectionManager.Dispose
void GlobalNamespace::MasterServerConnectionManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.Disconnect
void GlobalNamespace::MasterServerConnectionManager::Disconnect(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::Disconnect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: MasterServerConnectionManager.DisconnectInternal
void GlobalNamespace::MasterServerConnectionManager::DisconnectInternal(GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::DisconnectInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DisconnectInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connectionFailedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectionFailedReason);
}
// Autogenerated method: MasterServerConnectionManager.DisconnectInternal
void GlobalNamespace::MasterServerConnectionManager::DisconnectInternal(GlobalNamespace::DisconnectedReason disconnectedReason, GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::DisconnectInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DisconnectInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectedReason, connectionFailedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason, connectionFailedReason);
}
// Autogenerated method: MasterServerConnectionManager.GetConnection
GlobalNamespace::IConnection* GlobalNamespace::MasterServerConnectionManager::GetConnection(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::GetConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnection*, false>(this, ___internal__method, index);
}
// Autogenerated method: MasterServerConnectionManager.HandleConnected
void GlobalNamespace::MasterServerConnectionManager::HandleConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::HandleConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.HandleConnectionConnected
void GlobalNamespace::MasterServerConnectionManager::HandleConnectionConnected(GlobalNamespace::IConnection* connection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::HandleConnectionConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleConnectionConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connection)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connection);
}
// Autogenerated method: MasterServerConnectionManager.HandleConnectionDisconnected
void GlobalNamespace::MasterServerConnectionManager::HandleConnectionDisconnected(GlobalNamespace::IConnection* connection, GlobalNamespace::DisconnectedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::HandleConnectionDisconnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleConnectionDisconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connection, reason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connection, reason);
}
// Autogenerated method: MasterServerConnectionManager.HandleConnectionFailed
void GlobalNamespace::MasterServerConnectionManager::HandleConnectionFailed(GlobalNamespace::ConnectionFailedReason failedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::HandleConnectionFailed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleConnectionFailed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(failedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, failedReason);
}
// Autogenerated method: MasterServerConnectionManager.HandleLatencyUpdate
void GlobalNamespace::MasterServerConnectionManager::HandleLatencyUpdate(GlobalNamespace::IConnection* connection, float latency) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::HandleLatencyUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleLatencyUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connection, latency)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connection, latency);
}
// Autogenerated method: MasterServerConnectionManager.HandleReceivedData
void GlobalNamespace::MasterServerConnectionManager::HandleReceivedData(GlobalNamespace::IConnection* connection, LiteNetLib::Utils::NetDataReader* reader, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::HandleReceivedData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleReceivedData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connection, reader, deliveryMethod)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connection, reader, deliveryMethod);
}
// Autogenerated method: MasterServerConnectionManager.HandleConnectToClient
void GlobalNamespace::MasterServerConnectionManager::HandleConnectToClient(::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* myRandom, ::Array<uint8_t>* remoteRandom, bool isConnectionOwner, bool isDedicatedServer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::HandleConnectToClient");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleConnectToClient", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, userName, remoteEndPoint, preMasterSecret, myRandom, remoteRandom, isConnectionOwner, isDedicatedServer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, userName, remoteEndPoint, preMasterSecret, myRandom, remoteRandom, isConnectionOwner, isDedicatedServer);
}
// Autogenerated method: MasterServerConnectionManager.HandleBroadcastingStopped
void GlobalNamespace::MasterServerConnectionManager::HandleBroadcastingStopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::HandleBroadcastingStopped");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBroadcastingStopped", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.AttemptConnection
bool GlobalNamespace::MasterServerConnectionManager::AttemptConnection(::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* endPoint, ::Il2CppString* secret, ::Il2CppString* code, ::Il2CppString* password, ::Il2CppString* serverUserId, ::Il2CppString* serverUserName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::AttemptConnection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AttemptConnection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, userName, endPoint, secret, code, password, serverUserId, serverUserName)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, userId, userName, endPoint, secret, code, password, serverUserId, serverUserName);
}
// Autogenerated method: MasterServerConnectionManager.SetConnectionAttempt
void GlobalNamespace::MasterServerConnectionManager::SetConnectionAttempt(GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt connectionAttempt) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::SetConnectionAttempt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetConnectionAttempt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connectionAttempt)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectionAttempt);
}
// Autogenerated method: MasterServerConnectionManager.MasterServerConnectToMatchmaking
void GlobalNamespace::MasterServerConnectionManager::MasterServerConnectToMatchmaking(::Il2CppString* userId, ::Il2CppString* userName, GlobalNamespace::GameplayServerConfiguration configuration, ::Il2CppString* secret) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::MasterServerConnectToMatchmaking");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MasterServerConnectToMatchmaking", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, userName, configuration, secret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, userName, configuration, secret);
}
// Autogenerated method: MasterServerConnectionManager.MasterServerConnectToServer
void GlobalNamespace::MasterServerConnectionManager::MasterServerConnectToServer(::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret, ::Il2CppString* code, ::Il2CppString* password, bool useRelay) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::MasterServerConnectToServer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MasterServerConnectToServer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, userName, secret, code, password, useRelay)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, userName, secret, code, password, useRelay);
}
// Autogenerated method: MasterServerConnectionManager.StartBroadcastingServer
void GlobalNamespace::MasterServerConnectionManager::StartBroadcastingServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::StartBroadcastingServer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartBroadcastingServer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.HandleConnectToServerSuccess
void GlobalNamespace::MasterServerConnectionManager::HandleConnectToServerSuccess(::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* remoteEndPoint, ::Il2CppString* secret, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, int maxPlayerCount, GlobalNamespace::GameplayServerConfiguration configuration, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* myRandom, ::Array<uint8_t>* remoteRandom, bool isConnectionOwner, bool isDedicatedServer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::HandleConnectToServerSuccess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleConnectToServerSuccess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, userName, remoteEndPoint, secret, discoveryPolicy, invitePolicy, maxPlayerCount, configuration, preMasterSecret, myRandom, remoteRandom, isConnectionOwner, isDedicatedServer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, userName, remoteEndPoint, secret, discoveryPolicy, invitePolicy, maxPlayerCount, configuration, preMasterSecret, myRandom, remoteRandom, isConnectionOwner, isDedicatedServer);
}
// Autogenerated method: MasterServerConnectionManager.ConnectToEndPoint
void GlobalNamespace::MasterServerConnectionManager::ConnectToEndPoint(System::Net::IPEndPoint* remoteEndPoint, ::Il2CppString* userId, ::Il2CppString* userName, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* myRandom, ::Array<uint8_t>* remoteRandom, bool remoteUserIsConnectionOwner, bool isDedicatedServer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectToEndPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConnectToEndPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(remoteEndPoint, userId, userName, preMasterSecret, myRandom, remoteRandom, remoteUserIsConnectionOwner, isDedicatedServer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, userId, userName, preMasterSecret, myRandom, remoteRandom, remoteUserIsConnectionOwner, isDedicatedServer);
}
// Autogenerated method: MasterServerConnectionManager.GetPublicServers
void GlobalNamespace::MasterServerConnectionManager::GetPublicServers(System::Action_1<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PublicServerInfo>*>* onSuccess, System::Action_1<GlobalNamespace::ConnectionFailedReason>* onFailure, int offset, int count, GlobalNamespace::GameplayServerFilter filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::GetPublicServers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPublicServers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(onSuccess, onFailure, offset, count, filter)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, onSuccess, onFailure, offset, count, filter);
}
// Autogenerated method: MasterServerConnectionManager.MasterServer.MessageHandler.IMessageSender.SendMessage
void GlobalNamespace::MasterServerConnectionManager::MasterServer_MessageHandler_IMessageSender_SendMessage(LiteNetLib::Utils::NetDataWriter* writer, System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::MasterServer.MessageHandler.IMessageSender.SendMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MasterServer.MessageHandler.IMessageSender.SendMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer, endPoint)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer, endPoint);
}
// Autogenerated method: MasterServerConnectionManager.<StartBroadcastingServer>b__110_0
void GlobalNamespace::MasterServerConnectionManager::$StartBroadcastingServer$b__110_0(System::Net::IPEndPoint* remoteEndPoint, ::Il2CppString* code) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::<StartBroadcastingServer>b__110_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartBroadcastingServer>b__110_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(remoteEndPoint, code))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, code);
}
// Autogenerated method: MasterServerConnectionManager.<StartBroadcastingServer>b__110_1
void GlobalNamespace::MasterServerConnectionManager::$StartBroadcastingServer$b__110_1(GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::<StartBroadcastingServer>b__110_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartBroadcastingServer>b__110_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reason))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServerConnectionManager/ConnectionAttempt
#include "GlobalNamespace/MasterServerConnectionManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServerConnectionManager/ConnectionAttempt None
GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt>("", "MasterServerConnectionManager/ConnectionAttempt", "None"));
}
// Autogenerated static field setter
// Set static field: static public MasterServerConnectionManager/ConnectionAttempt None
void GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt::_set_None(GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerConnectionManager/ConnectionAttempt", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServerConnectionManager/ConnectionAttempt NatPunchthrough
GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt::_get_NatPunchthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt::_get_NatPunchthrough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt>("", "MasterServerConnectionManager/ConnectionAttempt", "NatPunchthrough"));
}
// Autogenerated static field setter
// Set static field: static public MasterServerConnectionManager/ConnectionAttempt NatPunchthrough
void GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt::_set_NatPunchthrough(GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt::_set_NatPunchthrough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerConnectionManager/ConnectionAttempt", "NatPunchthrough", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServerConnectionManager/ConnectionAttempt DedicatedServer
GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt::_get_DedicatedServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt::_get_DedicatedServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt>("", "MasterServerConnectionManager/ConnectionAttempt", "DedicatedServer"));
}
// Autogenerated static field setter
// Set static field: static public MasterServerConnectionManager/ConnectionAttempt DedicatedServer
void GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt::_set_DedicatedServer(GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt::_set_DedicatedServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerConnectionManager/ConnectionAttempt", "DedicatedServer", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServerConnectionManager/ConnectionState
#include "GlobalNamespace/MasterServerConnectionManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServerConnectionManager/ConnectionState Unconnected
GlobalNamespace::MasterServerConnectionManager::ConnectionState GlobalNamespace::MasterServerConnectionManager::ConnectionState::_get_Unconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionState::_get_Unconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MasterServerConnectionManager::ConnectionState>("", "MasterServerConnectionManager/ConnectionState", "Unconnected"));
}
// Autogenerated static field setter
// Set static field: static public MasterServerConnectionManager/ConnectionState Unconnected
void GlobalNamespace::MasterServerConnectionManager::ConnectionState::_set_Unconnected(GlobalNamespace::MasterServerConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionState::_set_Unconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerConnectionManager/ConnectionState", "Unconnected", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServerConnectionManager/ConnectionState Connecting
GlobalNamespace::MasterServerConnectionManager::ConnectionState GlobalNamespace::MasterServerConnectionManager::ConnectionState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MasterServerConnectionManager::ConnectionState>("", "MasterServerConnectionManager/ConnectionState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public MasterServerConnectionManager/ConnectionState Connecting
void GlobalNamespace::MasterServerConnectionManager::ConnectionState::_set_Connecting(GlobalNamespace::MasterServerConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerConnectionManager/ConnectionState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServerConnectionManager/ConnectionState Connected
GlobalNamespace::MasterServerConnectionManager::ConnectionState GlobalNamespace::MasterServerConnectionManager::ConnectionState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MasterServerConnectionManager::ConnectionState>("", "MasterServerConnectionManager/ConnectionState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public MasterServerConnectionManager/ConnectionState Connected
void GlobalNamespace::MasterServerConnectionManager::ConnectionState::_set_Connected(GlobalNamespace::MasterServerConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerConnectionManager/ConnectionState", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServerConnectionManager/ConnectionState Disconnecting
GlobalNamespace::MasterServerConnectionManager::ConnectionState GlobalNamespace::MasterServerConnectionManager::ConnectionState::_get_Disconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionState::_get_Disconnecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MasterServerConnectionManager::ConnectionState>("", "MasterServerConnectionManager/ConnectionState", "Disconnecting"));
}
// Autogenerated static field setter
// Set static field: static public MasterServerConnectionManager/ConnectionState Disconnecting
void GlobalNamespace::MasterServerConnectionManager::ConnectionState::_set_Disconnecting(GlobalNamespace::MasterServerConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionState::_set_Disconnecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerConnectionManager/ConnectionState", "Disconnecting", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerConnectionManager/MasterServerConnectionManagerParamsBase
#include "GlobalNamespace/MasterServerConnectionManager_MasterServerConnectionManagerParamsBase.hpp"
// Including type: MasterServerEndPoint
#include "GlobalNamespace/MasterServerEndPoint.hpp"
// Including type: IAuthenticationTokenProvider
#include "GlobalNamespace/IAuthenticationTokenProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerConnectionManager/StartServerParams
#include "GlobalNamespace/MasterServerConnectionManager_StartServerParams.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerConnectionManager/ConnectToServerParams
#include "GlobalNamespace/MasterServerConnectionManager_ConnectToServerParams.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerConnectionManager/ConnectToMatchmakingParams
#include "GlobalNamespace/MasterServerConnectionManager_ConnectToMatchmakingParams.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServerConnectionManager/StartClientParams
#include "GlobalNamespace/MasterServerConnectionManager_StartClientParams.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerEndPoint
#include "GlobalNamespace/MasterServerEndPoint.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServerEndPoint.get_endPoint
System::Net::IPEndPoint* GlobalNamespace::MasterServerEndPoint::get_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerEndPoint::get_endPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_endPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerEndPoint.GetEndPointAsync
System::Threading::Tasks::Task_1<System::Net::IPEndPoint*>* GlobalNamespace::MasterServerEndPoint::GetEndPointAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerEndPoint::GetEndPointAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEndPointAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Net::IPEndPoint*>*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerEndPoint.GetEndPoint
System::Net::IPEndPoint* GlobalNamespace::MasterServerEndPoint::GetEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerEndPoint::GetEndPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEndPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerEndPoint.GetEndPointInternal
System::Net::IPEndPoint* GlobalNamespace::MasterServerEndPoint::GetEndPointInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerEndPoint::GetEndPointInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEndPointInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerEndPoint.Equals
bool GlobalNamespace::MasterServerEndPoint::Equals(GlobalNamespace::MasterServerEndPoint* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerEndPoint::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: MasterServerEndPoint.ToString
::Il2CppString* GlobalNamespace::MasterServerEndPoint::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerEndPoint::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerEndPoint.Equals
bool GlobalNamespace::MasterServerEndPoint::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerEndPoint::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: MasterServerEndPoint.GetHashCode
int GlobalNamespace::MasterServerEndPoint::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerEndPoint::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PublicServerInfo
#include "GlobalNamespace/PublicServerInfo.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PublicServerInfo.Serialize
void GlobalNamespace::PublicServerInfo::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PublicServerInfo::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: PublicServerInfo.CreateFromSerializedData
GlobalNamespace::PublicServerInfo GlobalNamespace::PublicServerInfo::CreateFromSerializedData(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PublicServerInfo::CreateFromSerializedData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PublicServerInfo, false>(*this, ___internal__method, reader);
}
// Autogenerated method: PublicServerInfo.Deserialize
GlobalNamespace::PublicServerInfo GlobalNamespace::PublicServerInfo::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PublicServerInfo::Deserialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PublicServerInfo", "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PublicServerInfo, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuRpcManager
#include "GlobalNamespace/MenuRpcManager.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MenuRpcManager/GetIsEntitledToLevelRpc
#include "GlobalNamespace/MenuRpcManager_GetIsEntitledToLevelRpc.hpp"
// Including type: MenuRpcManager/SetIsEntitledToLevelRpc
#include "GlobalNamespace/MenuRpcManager_SetIsEntitledToLevelRpc.hpp"
// Including type: MenuRpcManager/InvalidateLevelEntitlementStatusesRpc
#include "GlobalNamespace/MenuRpcManager_InvalidateLevelEntitlementStatusesRpc.hpp"
// Including type: MenuRpcManager/SelectLevelPackRpc
#include "GlobalNamespace/MenuRpcManager_SelectLevelPackRpc.hpp"
// Including type: MenuRpcManager/SelectBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_SelectBeatmapRpc.hpp"
// Including type: MenuRpcManager/ClearSelectedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_ClearSelectedBeatmapRpc.hpp"
// Including type: MenuRpcManager/GetSelectedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_GetSelectedBeatmapRpc.hpp"
// Including type: MenuRpcManager/SelectGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_SelectGameplayModifiersRpc.hpp"
// Including type: MenuRpcManager/ClearSelectedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_ClearSelectedGameplayModifiersRpc.hpp"
// Including type: MenuRpcManager/GetSelectedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_GetSelectedGameplayModifiersRpc.hpp"
// Including type: MenuRpcManager/LevelLoadErrorRpc
#include "GlobalNamespace/MenuRpcManager_LevelLoadErrorRpc.hpp"
// Including type: MenuRpcManager/LevelLoadSuccessRpc
#include "GlobalNamespace/MenuRpcManager_LevelLoadSuccessRpc.hpp"
// Including type: MenuRpcManager/StartLevelRpc
#include "GlobalNamespace/MenuRpcManager_StartLevelRpc.hpp"
// Including type: MenuRpcManager/GetStartedLevelRpc
#include "GlobalNamespace/MenuRpcManager_GetStartedLevelRpc.hpp"
// Including type: MenuRpcManager/GetMultiplayerGameStateRpc
#include "GlobalNamespace/MenuRpcManager_GetMultiplayerGameStateRpc.hpp"
// Including type: MenuRpcManager/SetMultiplayerGameStateRpc
#include "GlobalNamespace/MenuRpcManager_SetMultiplayerGameStateRpc.hpp"
// Including type: MenuRpcManager/CancelCountdownRpc
#include "GlobalNamespace/MenuRpcManager_CancelCountdownRpc.hpp"
// Including type: MenuRpcManager/SetCountdownEndTimeRpc
#include "GlobalNamespace/MenuRpcManager_SetCountdownEndTimeRpc.hpp"
// Including type: MenuRpcManager/GetCountdownEndTimeRpc
#include "GlobalNamespace/MenuRpcManager_GetCountdownEndTimeRpc.hpp"
// Including type: MenuRpcManager/CancelLevelStartRpc
#include "GlobalNamespace/MenuRpcManager_CancelLevelStartRpc.hpp"
// Including type: MenuRpcManager/GetIsReadyRpc
#include "GlobalNamespace/MenuRpcManager_GetIsReadyRpc.hpp"
// Including type: MenuRpcManager/SetIsReadyRpc
#include "GlobalNamespace/MenuRpcManager_SetIsReadyRpc.hpp"
// Including type: MenuRpcManager/SetStartGameTimeRpc
#include "GlobalNamespace/MenuRpcManager_SetStartGameTimeRpc.hpp"
// Including type: MenuRpcManager/CancelStartGameTimeRpc
#include "GlobalNamespace/MenuRpcManager_CancelStartGameTimeRpc.hpp"
// Including type: MenuRpcManager/GetIsInLobbyRpc
#include "GlobalNamespace/MenuRpcManager_GetIsInLobbyRpc.hpp"
// Including type: MenuRpcManager/SetIsInLobbyRpc
#include "GlobalNamespace/MenuRpcManager_SetIsInLobbyRpc.hpp"
// Including type: MenuRpcManager/GetOwnedSongPacksRpc
#include "GlobalNamespace/MenuRpcManager_GetOwnedSongPacksRpc.hpp"
// Including type: MenuRpcManager/SetOwnedSongPacksRpc
#include "GlobalNamespace/MenuRpcManager_SetOwnedSongPacksRpc.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: RpcHandler`1
#include "GlobalNamespace/RpcHandler_1.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kMenuState
::Il2CppString* GlobalNamespace::MenuRpcManager::_get_kMenuState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::_get_kMenuState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MenuRpcManager", "kMenuState"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMenuState
void GlobalNamespace::MenuRpcManager::_set_kMenuState(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::_set_kMenuState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager", "kMenuState", value));
}
// Autogenerated method: MenuRpcManager.get_multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager* GlobalNamespace::MenuRpcManager::get_multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::get_multiplayerSessionManager");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_multiplayerSessionManager", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IMultiplayerSessionManager*, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.get_enabled
bool GlobalNamespace::MenuRpcManager::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::get_enabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_enabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.set_enabled
void GlobalNamespace::MenuRpcManager::set_enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::set_enabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_enabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.get_enabledForAllPlayers
bool GlobalNamespace::MenuRpcManager::get_enabledForAllPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::get_enabledForAllPlayers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_enabledForAllPlayers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.get_syncTime
float GlobalNamespace::MenuRpcManager::get_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::get_syncTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_syncTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.Dispose
void GlobalNamespace::MenuRpcManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.EnabledForPlayer
bool GlobalNamespace::MenuRpcManager::EnabledForPlayer(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::EnabledForPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnabledForPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(player)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, player);
}
// Autogenerated method: MenuRpcManager.add_getIsEntitledToLevelEvent
void GlobalNamespace::MenuRpcManager::add_getIsEntitledToLevelEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getIsEntitledToLevelEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_getIsEntitledToLevelEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getIsEntitledToLevelEvent
void GlobalNamespace::MenuRpcManager::remove_getIsEntitledToLevelEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getIsEntitledToLevelEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_getIsEntitledToLevelEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.GetIsEntitledToLevel
void GlobalNamespace::MenuRpcManager::GetIsEntitledToLevel(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetIsEntitledToLevel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetIsEntitledToLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelId);
}
// Autogenerated method: MenuRpcManager.InvokeGetIsEntitledToLevel
void GlobalNamespace::MenuRpcManager::InvokeGetIsEntitledToLevel(::Il2CppString* userId, ::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetIsEntitledToLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeGetIsEntitledToLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, levelId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, levelId);
}
// Autogenerated method: MenuRpcManager.add_setIsEntitledToLevelEvent
void GlobalNamespace::MenuRpcManager::add_setIsEntitledToLevelEvent(System::Action_3<::Il2CppString*, ::Il2CppString*, GlobalNamespace::EntitlementsStatus>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_setIsEntitledToLevelEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_setIsEntitledToLevelEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setIsEntitledToLevelEvent
void GlobalNamespace::MenuRpcManager::remove_setIsEntitledToLevelEvent(System::Action_3<::Il2CppString*, ::Il2CppString*, GlobalNamespace::EntitlementsStatus>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_setIsEntitledToLevelEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_setIsEntitledToLevelEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.SetIsEntitledToLevel
void GlobalNamespace::MenuRpcManager::SetIsEntitledToLevel(::Il2CppString* levelId, GlobalNamespace::EntitlementsStatus entitlementStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SetIsEntitledToLevel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetIsEntitledToLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelId, entitlementStatus)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelId, entitlementStatus);
}
// Autogenerated method: MenuRpcManager.InvokeSetIsEntitledToLevel
void GlobalNamespace::MenuRpcManager::InvokeSetIsEntitledToLevel(::Il2CppString* userId, ::Il2CppString* levelId, int entitlementStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeSetIsEntitledToLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeSetIsEntitledToLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, levelId, entitlementStatus)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, levelId, entitlementStatus);
}
// Autogenerated method: MenuRpcManager.add_levelEntitlementStatusesInvalidatedEvent
void GlobalNamespace::MenuRpcManager::add_levelEntitlementStatusesInvalidatedEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_levelEntitlementStatusesInvalidatedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_levelEntitlementStatusesInvalidatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_levelEntitlementStatusesInvalidatedEvent
void GlobalNamespace::MenuRpcManager::remove_levelEntitlementStatusesInvalidatedEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_levelEntitlementStatusesInvalidatedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_levelEntitlementStatusesInvalidatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.InvalidateLevelEntitlementStatuses
void GlobalNamespace::MenuRpcManager::InvalidateLevelEntitlementStatuses() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvalidateLevelEntitlementStatuses");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvalidateLevelEntitlementStatuses", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeLevelEntitlementStatusesInvalidated
void GlobalNamespace::MenuRpcManager::InvokeLevelEntitlementStatusesInvalidated(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeLevelEntitlementStatusesInvalidated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeLevelEntitlementStatusesInvalidated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.add_selectedLevelPackEvent
void GlobalNamespace::MenuRpcManager::add_selectedLevelPackEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_selectedLevelPackEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_selectedLevelPackEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_selectedLevelPackEvent
void GlobalNamespace::MenuRpcManager::remove_selectedLevelPackEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_selectedLevelPackEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_selectedLevelPackEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.SelectLevelPack
void GlobalNamespace::MenuRpcManager::SelectLevelPack(::Il2CppString* levelPackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SelectLevelPack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SelectLevelPack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelPackId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelPackId);
}
// Autogenerated method: MenuRpcManager.InvokeOnSelectedLevelPackEvent
void GlobalNamespace::MenuRpcManager::InvokeOnSelectedLevelPackEvent(::Il2CppString* userId, ::Il2CppString* levelPackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeOnSelectedLevelPackEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeOnSelectedLevelPackEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, levelPackId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, levelPackId);
}
// Autogenerated method: MenuRpcManager.add_selectedBeatmapEvent
void GlobalNamespace::MenuRpcManager::add_selectedBeatmapEvent(System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_selectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_selectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_selectedBeatmapEvent
void GlobalNamespace::MenuRpcManager::remove_selectedBeatmapEvent(System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_selectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_selectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.SelectBeatmap
void GlobalNamespace::MenuRpcManager::SelectBeatmap(GlobalNamespace::BeatmapIdentifierNetSerializable* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SelectBeatmap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SelectBeatmap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(identifier)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, identifier);
}
// Autogenerated method: MenuRpcManager.InvokeSelectedBeatmap
void GlobalNamespace::MenuRpcManager::InvokeSelectedBeatmap(::Il2CppString* userId, GlobalNamespace::BeatmapIdentifierNetSerializable* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeSelectedBeatmap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeSelectedBeatmap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, identifier)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, identifier);
}
// Autogenerated method: MenuRpcManager.add_clearSelectedBeatmapEvent
void GlobalNamespace::MenuRpcManager::add_clearSelectedBeatmapEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_clearSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_clearSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_clearSelectedBeatmapEvent
void GlobalNamespace::MenuRpcManager::remove_clearSelectedBeatmapEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_clearSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_clearSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.ClearSelectedBeatmap
void GlobalNamespace::MenuRpcManager::ClearSelectedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::ClearSelectedBeatmap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearSelectedBeatmap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeClearSelectedBeatmap
void GlobalNamespace::MenuRpcManager::InvokeClearSelectedBeatmap(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeClearSelectedBeatmap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeClearSelectedBeatmap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.add_getSelectedBeatmapEvent
void GlobalNamespace::MenuRpcManager::add_getSelectedBeatmapEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_getSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getSelectedBeatmapEvent
void GlobalNamespace::MenuRpcManager::remove_getSelectedBeatmapEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_getSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.GetSelectedBeatmap
void GlobalNamespace::MenuRpcManager::GetSelectedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetSelectedBeatmap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSelectedBeatmap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetSelectedBeatmap
void GlobalNamespace::MenuRpcManager::InvokeGetSelectedBeatmap(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetSelectedBeatmap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeGetSelectedBeatmap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.add_selectedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::add_selectedGameplayModifiersEvent(System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_selectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_selectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_selectedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::remove_selectedGameplayModifiersEvent(System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_selectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_selectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.SelectGameplayModifiers
void GlobalNamespace::MenuRpcManager::SelectGameplayModifiers(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SelectGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SelectGameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameplayModifiers)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: MenuRpcManager.InvokeOnSelectedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::InvokeOnSelectedGameplayModifiersEvent(::Il2CppString* userId, GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeOnSelectedGameplayModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeOnSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, gameplayModifiers)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, gameplayModifiers);
}
// Autogenerated method: MenuRpcManager.add_clearSelectedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::add_clearSelectedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_clearSelectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_clearSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_clearSelectedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::remove_clearSelectedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_clearSelectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_clearSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.ClearSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::ClearSelectedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::ClearSelectedGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeClearSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::InvokeClearSelectedGameplayModifiers(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeClearSelectedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeClearSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.add_getSelectedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::add_getSelectedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getSelectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_getSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getSelectedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::remove_getSelectedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getSelectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_getSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.GetSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::GetSelectedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetSelectedGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::InvokeGetSelectedGameplayModifiers(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetSelectedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeGetSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.add_levelLoadErrorEvent
void GlobalNamespace::MenuRpcManager::add_levelLoadErrorEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_levelLoadErrorEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_levelLoadErrorEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_levelLoadErrorEvent
void GlobalNamespace::MenuRpcManager::remove_levelLoadErrorEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_levelLoadErrorEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_levelLoadErrorEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.LevelLoadError
void GlobalNamespace::MenuRpcManager::LevelLoadError(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::LevelLoadError");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LevelLoadError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelId);
}
// Autogenerated method: MenuRpcManager.InvokeLevelLoadError
void GlobalNamespace::MenuRpcManager::InvokeLevelLoadError(::Il2CppString* userId, ::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeLevelLoadError");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeLevelLoadError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, levelId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, levelId);
}
// Autogenerated method: MenuRpcManager.add_levelLoadSuccessEvent
void GlobalNamespace::MenuRpcManager::add_levelLoadSuccessEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_levelLoadSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_levelLoadSuccessEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_levelLoadSuccessEvent
void GlobalNamespace::MenuRpcManager::remove_levelLoadSuccessEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_levelLoadSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_levelLoadSuccessEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.LevelLoadSuccess
void GlobalNamespace::MenuRpcManager::LevelLoadSuccess(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::LevelLoadSuccess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LevelLoadSuccess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelId);
}
// Autogenerated method: MenuRpcManager.InvokeLevelLoadSuccess
void GlobalNamespace::MenuRpcManager::InvokeLevelLoadSuccess(::Il2CppString* userId, ::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeLevelLoadSuccess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeLevelLoadSuccess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, levelId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, levelId);
}
// Autogenerated method: MenuRpcManager.add_startedLevelEvent
void GlobalNamespace::MenuRpcManager::add_startedLevelEvent(System::Action_4<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*, GlobalNamespace::GameplayModifiers*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_startedLevelEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_startedLevelEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_startedLevelEvent
void GlobalNamespace::MenuRpcManager::remove_startedLevelEvent(System::Action_4<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*, GlobalNamespace::GameplayModifiers*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_startedLevelEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_startedLevelEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.StartLevel
void GlobalNamespace::MenuRpcManager::StartLevel(GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, GlobalNamespace::GameplayModifiers* gameplayModifiers, float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::StartLevel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapId, gameplayModifiers, startTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapId, gameplayModifiers, startTime);
}
// Autogenerated method: MenuRpcManager.InvokeStartLevel
void GlobalNamespace::MenuRpcManager::InvokeStartLevel(::Il2CppString* userId, GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, GlobalNamespace::GameplayModifiers* gameplayModifiers, float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeStartLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeStartLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, beatmapId, gameplayModifiers, startTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, beatmapId, gameplayModifiers, startTime);
}
// Autogenerated method: MenuRpcManager.add_getStartedLevelEvent
void GlobalNamespace::MenuRpcManager::add_getStartedLevelEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getStartedLevelEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_getStartedLevelEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getStartedLevelEvent
void GlobalNamespace::MenuRpcManager::remove_getStartedLevelEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getStartedLevelEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_getStartedLevelEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.GetStartedLevel
void GlobalNamespace::MenuRpcManager::GetStartedLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetStartedLevel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetStartedLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetStartedLevel
void GlobalNamespace::MenuRpcManager::InvokeGetStartedLevel(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetStartedLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeGetStartedLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.add_getMultiplayerGameStateEvent
void GlobalNamespace::MenuRpcManager::add_getMultiplayerGameStateEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getMultiplayerGameStateEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_getMultiplayerGameStateEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getMultiplayerGameStateEvent
void GlobalNamespace::MenuRpcManager::remove_getMultiplayerGameStateEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getMultiplayerGameStateEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_getMultiplayerGameStateEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.GetMultiplayerGameState
void GlobalNamespace::MenuRpcManager::GetMultiplayerGameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetMultiplayerGameState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMultiplayerGameState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetMultiplayerGameState
void GlobalNamespace::MenuRpcManager::InvokeGetMultiplayerGameState(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetMultiplayerGameState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeGetMultiplayerGameState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.add_setMultiplayerGameStateEvent
void GlobalNamespace::MenuRpcManager::add_setMultiplayerGameStateEvent(System::Action_2<::Il2CppString*, GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_setMultiplayerGameStateEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_setMultiplayerGameStateEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setMultiplayerGameStateEvent
void GlobalNamespace::MenuRpcManager::remove_setMultiplayerGameStateEvent(System::Action_2<::Il2CppString*, GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_setMultiplayerGameStateEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_setMultiplayerGameStateEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.SetMultiplayerGameState
void GlobalNamespace::MenuRpcManager::SetMultiplayerGameState(GlobalNamespace::MultiplayerGameState lobbyState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SetMultiplayerGameState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetMultiplayerGameState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lobbyState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lobbyState);
}
// Autogenerated method: MenuRpcManager.InvokeSetMultiplayerGameState
void GlobalNamespace::MenuRpcManager::InvokeSetMultiplayerGameState(::Il2CppString* userId, GlobalNamespace::MultiplayerGameState lobbyState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeSetMultiplayerGameState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeSetMultiplayerGameState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, lobbyState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, lobbyState);
}
// Autogenerated method: MenuRpcManager.add_cancelCountdownEvent
void GlobalNamespace::MenuRpcManager::add_cancelCountdownEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_cancelCountdownEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_cancelCountdownEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_cancelCountdownEvent
void GlobalNamespace::MenuRpcManager::remove_cancelCountdownEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_cancelCountdownEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_cancelCountdownEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.CancelCountdown
void GlobalNamespace::MenuRpcManager::CancelCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::CancelCountdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CancelCountdown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeCancelCountdown
void GlobalNamespace::MenuRpcManager::InvokeCancelCountdown(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeCancelCountdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeCancelCountdown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.add_setCountdownEndTimeEvent
void GlobalNamespace::MenuRpcManager::add_setCountdownEndTimeEvent(System::Action_2<::Il2CppString*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_setCountdownEndTimeEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_setCountdownEndTimeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setCountdownEndTimeEvent
void GlobalNamespace::MenuRpcManager::remove_setCountdownEndTimeEvent(System::Action_2<::Il2CppString*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_setCountdownEndTimeEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_setCountdownEndTimeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.SetCountdownEndTime
void GlobalNamespace::MenuRpcManager::SetCountdownEndTime(float newTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SetCountdownEndTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCountdownEndTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newTime);
}
// Autogenerated method: MenuRpcManager.InvokeSetCountdownEndTime
void GlobalNamespace::MenuRpcManager::InvokeSetCountdownEndTime(::Il2CppString* userId, float newTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeSetCountdownEndTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeSetCountdownEndTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, newTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, newTime);
}
// Autogenerated method: MenuRpcManager.add_getCountdownEndTimeEvent
void GlobalNamespace::MenuRpcManager::add_getCountdownEndTimeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getCountdownEndTimeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_getCountdownEndTimeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getCountdownEndTimeEvent
void GlobalNamespace::MenuRpcManager::remove_getCountdownEndTimeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getCountdownEndTimeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_getCountdownEndTimeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.GetCountdownEndTime
void GlobalNamespace::MenuRpcManager::GetCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetCountdownEndTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCountdownEndTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetCountdownEndTime
void GlobalNamespace::MenuRpcManager::InvokeGetCountdownEndTime(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetCountdownEndTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeGetCountdownEndTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.add_cancelledLevelStartEvent
void GlobalNamespace::MenuRpcManager::add_cancelledLevelStartEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_cancelledLevelStartEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_cancelledLevelStartEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_cancelledLevelStartEvent
void GlobalNamespace::MenuRpcManager::remove_cancelledLevelStartEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_cancelledLevelStartEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_cancelledLevelStartEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.CancelLevelStart
void GlobalNamespace::MenuRpcManager::CancelLevelStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::CancelLevelStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CancelLevelStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeCancelLevelStart
void GlobalNamespace::MenuRpcManager::InvokeCancelLevelStart(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeCancelLevelStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeCancelLevelStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.add_getIsReadyEvent
void GlobalNamespace::MenuRpcManager::add_getIsReadyEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getIsReadyEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_getIsReadyEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getIsReadyEvent
void GlobalNamespace::MenuRpcManager::remove_getIsReadyEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getIsReadyEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_getIsReadyEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.GetIsReady
void GlobalNamespace::MenuRpcManager::GetIsReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetIsReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetIsReady", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetIsReady
void GlobalNamespace::MenuRpcManager::InvokeGetIsReady(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetIsReady");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeGetIsReady", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.add_setIsReadyEvent
void GlobalNamespace::MenuRpcManager::add_setIsReadyEvent(System::Action_2<::Il2CppString*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_setIsReadyEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_setIsReadyEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setIsReadyEvent
void GlobalNamespace::MenuRpcManager::remove_setIsReadyEvent(System::Action_2<::Il2CppString*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_setIsReadyEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_setIsReadyEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.SetIsReady
void GlobalNamespace::MenuRpcManager::SetIsReady(bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SetIsReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetIsReady", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isReady)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isReady);
}
// Autogenerated method: MenuRpcManager.InvokeSetIsReady
void GlobalNamespace::MenuRpcManager::InvokeSetIsReady(::Il2CppString* userId, bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeSetIsReady");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeSetIsReady", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, isReady)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, isReady);
}
// Autogenerated method: MenuRpcManager.add_setStartGameTimeEvent
void GlobalNamespace::MenuRpcManager::add_setStartGameTimeEvent(System::Action_2<::Il2CppString*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_setStartGameTimeEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_setStartGameTimeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setStartGameTimeEvent
void GlobalNamespace::MenuRpcManager::remove_setStartGameTimeEvent(System::Action_2<::Il2CppString*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_setStartGameTimeEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_setStartGameTimeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.SetStartGameTime
void GlobalNamespace::MenuRpcManager::SetStartGameTime(float newTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SetStartGameTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetStartGameTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newTime);
}
// Autogenerated method: MenuRpcManager.InvokeSetStartGameCountdown
void GlobalNamespace::MenuRpcManager::InvokeSetStartGameCountdown(::Il2CppString* userId, float newTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeSetStartGameCountdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeSetStartGameCountdown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, newTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, newTime);
}
// Autogenerated method: MenuRpcManager.add_cancelStartGameTimeEvent
void GlobalNamespace::MenuRpcManager::add_cancelStartGameTimeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_cancelStartGameTimeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_cancelStartGameTimeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_cancelStartGameTimeEvent
void GlobalNamespace::MenuRpcManager::remove_cancelStartGameTimeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_cancelStartGameTimeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_cancelStartGameTimeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.CancelStartGameTime
void GlobalNamespace::MenuRpcManager::CancelStartGameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::CancelStartGameTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CancelStartGameTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeCancelStartGameCountdown
void GlobalNamespace::MenuRpcManager::InvokeCancelStartGameCountdown(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeCancelStartGameCountdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeCancelStartGameCountdown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.add_getIsInLobbyEvent
void GlobalNamespace::MenuRpcManager::add_getIsInLobbyEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getIsInLobbyEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_getIsInLobbyEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getIsInLobbyEvent
void GlobalNamespace::MenuRpcManager::remove_getIsInLobbyEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getIsInLobbyEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_getIsInLobbyEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.GetIsInLobby
void GlobalNamespace::MenuRpcManager::GetIsInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetIsInLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetIsInLobby", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetIsInLobby
void GlobalNamespace::MenuRpcManager::InvokeGetIsInLobby(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetIsInLobby");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeGetIsInLobby", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.add_setIsInLobbyEvent
void GlobalNamespace::MenuRpcManager::add_setIsInLobbyEvent(System::Action_2<::Il2CppString*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_setIsInLobbyEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_setIsInLobbyEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setIsInLobbyEvent
void GlobalNamespace::MenuRpcManager::remove_setIsInLobbyEvent(System::Action_2<::Il2CppString*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_setIsInLobbyEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_setIsInLobbyEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.SetIsInLobby
void GlobalNamespace::MenuRpcManager::SetIsInLobby(bool isBack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SetIsInLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetIsInLobby", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isBack)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isBack);
}
// Autogenerated method: MenuRpcManager.InvokeSetIsInLobby
void GlobalNamespace::MenuRpcManager::InvokeSetIsInLobby(::Il2CppString* userId, bool isBack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeSetIsInLobby");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeSetIsInLobby", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, isBack)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, isBack);
}
// Autogenerated method: MenuRpcManager.add_getOwnedSongPacksEvent
void GlobalNamespace::MenuRpcManager::add_getOwnedSongPacksEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getOwnedSongPacksEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_getOwnedSongPacksEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getOwnedSongPacksEvent
void GlobalNamespace::MenuRpcManager::remove_getOwnedSongPacksEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getOwnedSongPacksEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_getOwnedSongPacksEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.GetOwnedSongPacks
void GlobalNamespace::MenuRpcManager::GetOwnedSongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetOwnedSongPacks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetOwnedSongPacks
void GlobalNamespace::MenuRpcManager::InvokeGetOwnedSongPacks(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetOwnedSongPacks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeGetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.add_setOwnedSongPacksEvent
void GlobalNamespace::MenuRpcManager::add_setOwnedSongPacksEvent(System::Action_2<::Il2CppString*, GlobalNamespace::SongPackMask>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_setOwnedSongPacksEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_setOwnedSongPacksEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setOwnedSongPacksEvent
void GlobalNamespace::MenuRpcManager::remove_setOwnedSongPacksEvent(System::Action_2<::Il2CppString*, GlobalNamespace::SongPackMask>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_setOwnedSongPacksEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_setOwnedSongPacksEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.SetOwnedSongPacks
void GlobalNamespace::MenuRpcManager::SetOwnedSongPacks(GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SetOwnedSongPacks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(songPackMask)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, songPackMask);
}
// Autogenerated method: MenuRpcManager.InvokeSetOwnedSongPacks
void GlobalNamespace::MenuRpcManager::InvokeSetOwnedSongPacks(::Il2CppString* userId, GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeSetOwnedSongPacks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeSetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, songPackMask)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, songPackMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/RpcType
#include "GlobalNamespace/MenuRpcManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetIsEntitledToLevel
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsEntitledToLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsEntitledToLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetIsEntitledToLevel"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetIsEntitledToLevel
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsEntitledToLevel(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsEntitledToLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetIsEntitledToLevel", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetIsEntitledToLevel
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsEntitledToLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsEntitledToLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetIsEntitledToLevel"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetIsEntitledToLevel
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsEntitledToLevel(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsEntitledToLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetIsEntitledToLevel", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType InvalidateLevelEntitlementStatuses
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_InvalidateLevelEntitlementStatuses() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_InvalidateLevelEntitlementStatuses");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "InvalidateLevelEntitlementStatuses"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType InvalidateLevelEntitlementStatuses
void GlobalNamespace::MenuRpcManager::RpcType::_set_InvalidateLevelEntitlementStatuses(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_InvalidateLevelEntitlementStatuses");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "InvalidateLevelEntitlementStatuses", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SelectLevelPack
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SelectLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SelectLevelPack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SelectLevelPack"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SelectLevelPack
void GlobalNamespace::MenuRpcManager::RpcType::_set_SelectLevelPack(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SelectLevelPack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SelectLevelPack", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SelectBeatmap
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SelectBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SelectBeatmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SelectBeatmap"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SelectBeatmap
void GlobalNamespace::MenuRpcManager::RpcType::_set_SelectBeatmap(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SelectBeatmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SelectBeatmap", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType ClearSelectedBeatmap
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_ClearSelectedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_ClearSelectedBeatmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "ClearSelectedBeatmap"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType ClearSelectedBeatmap
void GlobalNamespace::MenuRpcManager::RpcType::_set_ClearSelectedBeatmap(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_ClearSelectedBeatmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "ClearSelectedBeatmap", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetSelectedBeatmap
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetSelectedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetSelectedBeatmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetSelectedBeatmap"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetSelectedBeatmap
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetSelectedBeatmap(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetSelectedBeatmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetSelectedBeatmap", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SelectGameplayModifiers
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SelectGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SelectGameplayModifiers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SelectGameplayModifiers"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SelectGameplayModifiers
void GlobalNamespace::MenuRpcManager::RpcType::_set_SelectGameplayModifiers(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SelectGameplayModifiers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SelectGameplayModifiers", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType ClearSelectedGameplayModifiers
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_ClearSelectedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_ClearSelectedGameplayModifiers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "ClearSelectedGameplayModifiers"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType ClearSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::RpcType::_set_ClearSelectedGameplayModifiers(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_ClearSelectedGameplayModifiers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "ClearSelectedGameplayModifiers", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetSelectedGameplayModifiers
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetSelectedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetSelectedGameplayModifiers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetSelectedGameplayModifiers"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetSelectedGameplayModifiers(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetSelectedGameplayModifiers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetSelectedGameplayModifiers", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType LevelLoadError
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_LevelLoadError() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_LevelLoadError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "LevelLoadError"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType LevelLoadError
void GlobalNamespace::MenuRpcManager::RpcType::_set_LevelLoadError(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_LevelLoadError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "LevelLoadError", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType LevelLoadSuccess
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_LevelLoadSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_LevelLoadSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "LevelLoadSuccess"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType LevelLoadSuccess
void GlobalNamespace::MenuRpcManager::RpcType::_set_LevelLoadSuccess(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_LevelLoadSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "LevelLoadSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType StartLevel
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_StartLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_StartLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "StartLevel"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType StartLevel
void GlobalNamespace::MenuRpcManager::RpcType::_set_StartLevel(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_StartLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "StartLevel", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetStartedLevel
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetStartedLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetStartedLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetStartedLevel"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetStartedLevel
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetStartedLevel(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetStartedLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetStartedLevel", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType CancelLevelStart
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_CancelLevelStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_CancelLevelStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "CancelLevelStart"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType CancelLevelStart
void GlobalNamespace::MenuRpcManager::RpcType::_set_CancelLevelStart(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_CancelLevelStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "CancelLevelStart", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetMultiplayerGameState
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetMultiplayerGameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetMultiplayerGameState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetMultiplayerGameState"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetMultiplayerGameState
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetMultiplayerGameState(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetMultiplayerGameState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetMultiplayerGameState", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetMultiplayerGameState
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetMultiplayerGameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SetMultiplayerGameState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetMultiplayerGameState"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetMultiplayerGameState
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetMultiplayerGameState(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SetMultiplayerGameState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetMultiplayerGameState", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetIsReady
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetIsReady"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetIsReady
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsReady(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetIsReady", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetIsReady
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetIsReady"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetIsReady
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsReady(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetIsReady", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetStartGameTime
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetStartGameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SetStartGameTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetStartGameTime"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetStartGameTime
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetStartGameTime(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SetStartGameTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetStartGameTime", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType CancelStartGameTime
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_CancelStartGameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_CancelStartGameTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "CancelStartGameTime"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType CancelStartGameTime
void GlobalNamespace::MenuRpcManager::RpcType::_set_CancelStartGameTime(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_CancelStartGameTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "CancelStartGameTime", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetIsInLobby
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsInLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetIsInLobby"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetIsInLobby
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsInLobby(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsInLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetIsInLobby", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetIsInLobby
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsInLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetIsInLobby"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetIsInLobby
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsInLobby(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsInLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetIsInLobby", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetCountdownEndTime
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetCountdownEndTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetCountdownEndTime"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetCountdownEndTime
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetCountdownEndTime(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetCountdownEndTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetCountdownEndTime", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetCountdownEndTime
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SetCountdownEndTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetCountdownEndTime"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetCountdownEndTime
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetCountdownEndTime(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SetCountdownEndTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetCountdownEndTime", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType CancelCountdown
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_CancelCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_CancelCountdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "CancelCountdown"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType CancelCountdown
void GlobalNamespace::MenuRpcManager::RpcType::_set_CancelCountdown(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_CancelCountdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "CancelCountdown", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetOwnedSongPacks
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetOwnedSongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetOwnedSongPacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetOwnedSongPacks"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetOwnedSongPacks
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetOwnedSongPacks(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetOwnedSongPacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetOwnedSongPacks", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetOwnedSongPacks
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetOwnedSongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SetOwnedSongPacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetOwnedSongPacks"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetOwnedSongPacks
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetOwnedSongPacks(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SetOwnedSongPacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetOwnedSongPacks", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuRpcManager/GetIsEntitledToLevelRpc
#include "GlobalNamespace/MenuRpcManager_GetIsEntitledToLevelRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuRpcManager/SetIsEntitledToLevelRpc
#include "GlobalNamespace/MenuRpcManager_SetIsEntitledToLevelRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/InvalidateLevelEntitlementStatusesRpc
#include "GlobalNamespace/MenuRpcManager_InvalidateLevelEntitlementStatusesRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuRpcManager/SelectLevelPackRpc
#include "GlobalNamespace/MenuRpcManager_SelectLevelPackRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SelectBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_SelectBeatmapRpc.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/ClearSelectedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_ClearSelectedBeatmapRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetSelectedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_GetSelectedBeatmapRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SelectGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_SelectGameplayModifiersRpc.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/ClearSelectedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_ClearSelectedGameplayModifiersRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetSelectedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_GetSelectedGameplayModifiersRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuRpcManager/LevelLoadErrorRpc
#include "GlobalNamespace/MenuRpcManager_LevelLoadErrorRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuRpcManager/LevelLoadSuccessRpc
#include "GlobalNamespace/MenuRpcManager_LevelLoadSuccessRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/StartLevelRpc
#include "GlobalNamespace/MenuRpcManager_StartLevelRpc.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetStartedLevelRpc
#include "GlobalNamespace/MenuRpcManager_GetStartedLevelRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetMultiplayerGameStateRpc
#include "GlobalNamespace/MenuRpcManager_GetMultiplayerGameStateRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetMultiplayerGameStateRpc
#include "GlobalNamespace/MenuRpcManager_SetMultiplayerGameStateRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/CancelCountdownRpc
#include "GlobalNamespace/MenuRpcManager_CancelCountdownRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetCountdownEndTimeRpc
#include "GlobalNamespace/MenuRpcManager_SetCountdownEndTimeRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetCountdownEndTimeRpc
#include "GlobalNamespace/MenuRpcManager_GetCountdownEndTimeRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/CancelLevelStartRpc
#include "GlobalNamespace/MenuRpcManager_CancelLevelStartRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetIsReadyRpc
#include "GlobalNamespace/MenuRpcManager_GetIsReadyRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetIsReadyRpc
#include "GlobalNamespace/MenuRpcManager_SetIsReadyRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetStartGameTimeRpc
#include "GlobalNamespace/MenuRpcManager_SetStartGameTimeRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/CancelStartGameTimeRpc
#include "GlobalNamespace/MenuRpcManager_CancelStartGameTimeRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetIsInLobbyRpc
#include "GlobalNamespace/MenuRpcManager_GetIsInLobbyRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetIsInLobbyRpc
#include "GlobalNamespace/MenuRpcManager_SetIsInLobbyRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetOwnedSongPacksRpc
#include "GlobalNamespace/MenuRpcManager_GetOwnedSongPacksRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetOwnedSongPacksRpc
#include "GlobalNamespace/MenuRpcManager_SetOwnedSongPacksRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerGameType
#include "GlobalNamespace/MultiplayerGameType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerGameType None
GlobalNamespace::MultiplayerGameType GlobalNamespace::MultiplayerGameType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerGameType>("", "MultiplayerGameType", "None"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerGameType None
void GlobalNamespace::MultiplayerGameType::_set_None(GlobalNamespace::MultiplayerGameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerGameType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerGameType QuickPlay
GlobalNamespace::MultiplayerGameType GlobalNamespace::MultiplayerGameType::_get_QuickPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameType::_get_QuickPlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerGameType>("", "MultiplayerGameType", "QuickPlay"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerGameType QuickPlay
void GlobalNamespace::MultiplayerGameType::_set_QuickPlay(GlobalNamespace::MultiplayerGameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameType::_set_QuickPlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerGameType", "QuickPlay", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerGameType Private
GlobalNamespace::MultiplayerGameType GlobalNamespace::MultiplayerGameType::_get_Private() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameType::_get_Private");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerGameType>("", "MultiplayerGameType", "Private"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerGameType Private
void GlobalNamespace::MultiplayerGameType::_set_Private(GlobalNamespace::MultiplayerGameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameType::_set_Private");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerGameType", "Private", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyState
#include "GlobalNamespace/MultiplayerLobbyState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState None
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "None"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState None
void GlobalNamespace::MultiplayerLobbyState::_set_None(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState LobbySetup
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_LobbySetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_get_LobbySetup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "LobbySetup"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState LobbySetup
void GlobalNamespace::MultiplayerLobbyState::_set_LobbySetup(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_set_LobbySetup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "LobbySetup", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState GameStarting
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_GameStarting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_get_GameStarting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "GameStarting"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState GameStarting
void GlobalNamespace::MultiplayerLobbyState::_set_GameStarting(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_set_GameStarting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "GameStarting", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState GameRunning
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_GameRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_get_GameRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "GameRunning"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState GameRunning
void GlobalNamespace::MultiplayerLobbyState::_set_GameRunning(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_set_GameRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "GameRunning", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState Error
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState Error
void GlobalNamespace::MultiplayerLobbyState::_set_Error(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "Error", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerGameState
#include "GlobalNamespace/MultiplayerGameState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerGameState None
GlobalNamespace::MultiplayerGameState GlobalNamespace::MultiplayerGameState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerGameState>("", "MultiplayerGameState", "None"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerGameState None
void GlobalNamespace::MultiplayerGameState::_set_None(GlobalNamespace::MultiplayerGameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerGameState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerGameState Lobby
GlobalNamespace::MultiplayerGameState GlobalNamespace::MultiplayerGameState::_get_Lobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::_get_Lobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerGameState>("", "MultiplayerGameState", "Lobby"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerGameState Lobby
void GlobalNamespace::MultiplayerGameState::_set_Lobby(GlobalNamespace::MultiplayerGameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::_set_Lobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerGameState", "Lobby", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerGameState Game
GlobalNamespace::MultiplayerGameState GlobalNamespace::MultiplayerGameState::_get_Game() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::_get_Game");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerGameState>("", "MultiplayerGameState", "Game"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerGameState Game
void GlobalNamespace::MultiplayerGameState::_set_Game(GlobalNamespace::MultiplayerGameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::_set_Game");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerGameState", "Game", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerSessionManager
#include "GlobalNamespace/MultiplayerSessionManager.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: MultiplayerSessionManager/<>c__DisplayClass92_0
#include "GlobalNamespace/MultiplayerSessionManager_--c__DisplayClass92_0.hpp"
// Including type: MultiplayerSessionManager/<>c
#include "GlobalNamespace/MultiplayerSessionManager_--c.hpp"
// Including type: NetworkPacketSerializer`2
#include "GlobalNamespace/NetworkPacketSerializer_2.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: SynchronizedActionQueue
#include "GlobalNamespace/SynchronizedActionQueue.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: INetworkPacketSubSerializer`1
#include "GlobalNamespace/INetworkPacketSubSerializer_1.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: IConnectionManager
#include "GlobalNamespace/IConnectionManager.hpp"
// Including type: UpdateConnectionStateReason
#include "GlobalNamespace/UpdateConnectionStateReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerSessionState
::Il2CppString* GlobalNamespace::MultiplayerSessionManager::_get_kMultiplayerSessionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get_kMultiplayerSessionState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerSessionManager", "kMultiplayerSessionState"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerSessionState
void GlobalNamespace::MultiplayerSessionManager::_set_kMultiplayerSessionState(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set_kMultiplayerSessionState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager", "kMultiplayerSessionState", value));
}
// Autogenerated method: MultiplayerSessionManager.add_connectedEvent
void GlobalNamespace::MultiplayerSessionManager::add_connectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_connectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_connectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_connectedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_connectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_connectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_connectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_connectionFailedEvent
void GlobalNamespace::MultiplayerSessionManager::add_connectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_connectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_connectionFailedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_connectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_connectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_playerConnectedEvent
void GlobalNamespace::MultiplayerSessionManager::add_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_playerConnectedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_playerDisconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::add_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_playerDisconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_playerStateChangedEvent
void GlobalNamespace::MultiplayerSessionManager::add_playerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_playerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_playerStateChangedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_playerStateChangedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_playerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_playerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_playerStateChangedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_disconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::add_disconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_disconnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_disconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_disconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_disconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_disconnectedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_disconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.get_isConnectionOwner
bool GlobalNamespace::MultiplayerSessionManager::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_connectionOwner
GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::get_connectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_connectionOwner");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_connectionOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.set_connectionOwner
void GlobalNamespace::MultiplayerSessionManager::set_connectionOwner(GlobalNamespace::IConnectedPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::set_connectionOwner");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_connectionOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.get_isSpectating
bool GlobalNamespace::MultiplayerSessionManager::get_isSpectating() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isSpectating");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isSpectating", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_isConnectingOrConnected
bool GlobalNamespace::MultiplayerSessionManager::get_isConnectingOrConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isConnectingOrConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnectingOrConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_isConnected
bool GlobalNamespace::MultiplayerSessionManager::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_isConnecting
bool GlobalNamespace::MultiplayerSessionManager::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isConnecting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_isDisconnecting
bool GlobalNamespace::MultiplayerSessionManager::get_isDisconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isDisconnecting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isDisconnecting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_connectedPlayers
System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::MultiplayerSessionManager::get_connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_connectedPlayers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_connectedPlayers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_connectedPlayerCount
int GlobalNamespace::MultiplayerSessionManager::get_connectedPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_connectedPlayerCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_connectedPlayerCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_syncTime
float GlobalNamespace::MultiplayerSessionManager::get_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_syncTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_syncTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_isSyncTimeInitialized
bool GlobalNamespace::MultiplayerSessionManager::get_isSyncTimeInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isSyncTimeInitialized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isSyncTimeInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_syncTimeDelay
float GlobalNamespace::MultiplayerSessionManager::get_syncTimeDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_syncTimeDelay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_syncTimeDelay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_localPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_localPlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_connectedPlayerManager
GlobalNamespace::ConnectedPlayerManager* GlobalNamespace::MultiplayerSessionManager::get_connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_connectedPlayerManager");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_connectedPlayerManager", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ConnectedPlayerManager*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_maxPlayerCount
int GlobalNamespace::MultiplayerSessionManager::get_maxPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_maxPlayerCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_maxPlayerCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.RegisterSerializer
void GlobalNamespace::MultiplayerSessionManager::RegisterSerializer(GlobalNamespace::MultiplayerSessionManager_MessageType serializerType, GlobalNamespace::INetworkPacketSubSerializer_1<GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::RegisterSerializer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RegisterSerializer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serializerType, subSerializer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializerType, subSerializer);
}
// Autogenerated method: MultiplayerSessionManager.UnregisterSerializer
void GlobalNamespace::MultiplayerSessionManager::UnregisterSerializer(GlobalNamespace::MultiplayerSessionManager_MessageType serializerType, GlobalNamespace::INetworkPacketSubSerializer_1<GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::UnregisterSerializer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnregisterSerializer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serializerType, subSerializer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializerType, subSerializer);
}
// Autogenerated method: MultiplayerSessionManager.StartSession
void GlobalNamespace::MultiplayerSessionManager::StartSession(GlobalNamespace::ConnectedPlayerManager* connectedPlayerManager) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::StartSession");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartSession", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connectedPlayerManager)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayerManager);
}
// Autogenerated method: MultiplayerSessionManager.SetMaxPlayerCount
void GlobalNamespace::MultiplayerSessionManager::SetMaxPlayerCount(int maxPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SetMaxPlayerCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetMaxPlayerCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(maxPlayerCount)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, maxPlayerCount);
}
// Autogenerated method: MultiplayerSessionManager.InitInternal
void GlobalNamespace::MultiplayerSessionManager::InitInternal(GlobalNamespace::MultiplayerSessionManager::SessionType sessionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::InitInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sessionType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sessionType);
}
// Autogenerated method: MultiplayerSessionManager.EndSession
void GlobalNamespace::MultiplayerSessionManager::EndSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::EndSession");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndSession", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.Disconnect
void GlobalNamespace::MultiplayerSessionManager::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::Disconnect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.PerformAtSyncTime
void GlobalNamespace::MultiplayerSessionManager::PerformAtSyncTime(float syncTime, System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::PerformAtSyncTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PerformAtSyncTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(syncTime, action)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, syncTime, action);
}
// Autogenerated method: MultiplayerSessionManager.UpdateSynchronizedActions
void GlobalNamespace::MultiplayerSessionManager::UpdateSynchronizedActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::UpdateSynchronizedActions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateSynchronizedActions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.HandleReinitialized
void GlobalNamespace::MultiplayerSessionManager::HandleReinitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandleReinitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleReinitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.HandleConnected
void GlobalNamespace::MultiplayerSessionManager::HandleConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandleConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.HandleDisconnected
void GlobalNamespace::MultiplayerSessionManager::HandleDisconnected(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandleDisconnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleDisconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: MultiplayerSessionManager.HandleConnectionFailed
void GlobalNamespace::MultiplayerSessionManager::HandleConnectionFailed(GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandleConnectionFailed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleConnectionFailed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: MultiplayerSessionManager.HandleSyncTimeInitialized
void GlobalNamespace::MultiplayerSessionManager::HandleSyncTimeInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandleSyncTimeInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleSyncTimeInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerConnected
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerConnected(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandlePlayerConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandlePlayerConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(player)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerDisconnected
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerDisconnected(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandlePlayerDisconnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandlePlayerDisconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(player)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerStateChanged
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerStateChanged(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandlePlayerStateChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandlePlayerStateChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(player)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerOrderChanged
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerOrderChanged(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandlePlayerOrderChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandlePlayerOrderChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(player)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: MultiplayerSessionManager.GetPlayerByUserId
GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::GetPlayerByUserId(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::GetPlayerByUserId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayerByUserId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated method: MultiplayerSessionManager.GetConnectedPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::GetConnectedPlayer(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::GetConnectedPlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConnectedPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method, i);
}
// Autogenerated method: MultiplayerSessionManager.GetConnectedPlayerByUserId
GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::GetConnectedPlayerByUserId(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::GetConnectedPlayerByUserId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConnectedPlayerByUserId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated method: MultiplayerSessionManager.SetLocalPlayerState
void GlobalNamespace::MultiplayerSessionManager::SetLocalPlayerState(::Il2CppString* state, bool hasState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SetLocalPlayerState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalPlayerState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state, hasState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state, hasState);
}
// Autogenerated method: MultiplayerSessionManager.LocalPlayerHasState
bool GlobalNamespace::MultiplayerSessionManager::LocalPlayerHasState(::Il2CppString* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::LocalPlayerHasState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LocalPlayerHasState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, state);
}
// Autogenerated method: MultiplayerSessionManager.UpdateConnectionState
void GlobalNamespace::MultiplayerSessionManager::UpdateConnectionState(GlobalNamespace::UpdateConnectionStateReason updateReason, GlobalNamespace::DisconnectedReason disconnectedReason, GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::UpdateConnectionState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateConnectionState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(updateReason, disconnectedReason, connectionFailedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, updateReason, disconnectedReason, connectionFailedReason);
}
// Autogenerated method: MultiplayerSessionManager.TryUpdateConnectedPlayer
bool GlobalNamespace::MultiplayerSessionManager::TryUpdateConnectedPlayer(GlobalNamespace::IConnectedPlayer* player, bool isPlayerConnected) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::TryUpdateConnectedPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryUpdateConnectedPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(player, isPlayerConnected)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, player, isPlayerConnected);
}
// Autogenerated method: MultiplayerSessionManager.GetNextAvailableSortIndex
int GlobalNamespace::MultiplayerSessionManager::GetNextAvailableSortIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::GetNextAvailableSortIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNextAvailableSortIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.Start
void GlobalNamespace::MultiplayerSessionManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.Update
void GlobalNamespace::MultiplayerSessionManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.OnDestroy
void GlobalNamespace::MultiplayerSessionManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.OnApplicationPause
void GlobalNamespace::MultiplayerSessionManager::OnApplicationPause(bool pauseStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::OnApplicationPause");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pauseStatus)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pauseStatus);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerSessionManager/SessionType
#include "GlobalNamespace/MultiplayerSessionManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/SessionType Player
GlobalNamespace::MultiplayerSessionManager::SessionType GlobalNamespace::MultiplayerSessionManager::SessionType::_get_Player() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::_get_Player");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::SessionType>("", "MultiplayerSessionManager/SessionType", "Player"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/SessionType Player
void GlobalNamespace::MultiplayerSessionManager::SessionType::_set_Player(GlobalNamespace::MultiplayerSessionManager::SessionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::_set_Player");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/SessionType", "Player", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/SessionType Spectator
GlobalNamespace::MultiplayerSessionManager::SessionType GlobalNamespace::MultiplayerSessionManager::SessionType::_get_Spectator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::_get_Spectator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::SessionType>("", "MultiplayerSessionManager/SessionType", "Spectator"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/SessionType Spectator
void GlobalNamespace::MultiplayerSessionManager::SessionType::_set_Spectator(GlobalNamespace::MultiplayerSessionManager::SessionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::_set_Spectator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/SessionType", "Spectator", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/SessionType DedicatedServer
GlobalNamespace::MultiplayerSessionManager::SessionType GlobalNamespace::MultiplayerSessionManager::SessionType::_get_DedicatedServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::_get_DedicatedServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::SessionType>("", "MultiplayerSessionManager/SessionType", "DedicatedServer"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/SessionType DedicatedServer
void GlobalNamespace::MultiplayerSessionManager::SessionType::_set_DedicatedServer(GlobalNamespace::MultiplayerSessionManager::SessionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::_set_DedicatedServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/SessionType", "DedicatedServer", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerSessionManager/ConnectionState
#include "GlobalNamespace/MultiplayerSessionManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/ConnectionState Disconnected
GlobalNamespace::MultiplayerSessionManager::ConnectionState GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::ConnectionState>("", "MultiplayerSessionManager/ConnectionState", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/ConnectionState Disconnected
void GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Disconnected(GlobalNamespace::MultiplayerSessionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/ConnectionState", "Disconnected", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/ConnectionState Connecting
GlobalNamespace::MultiplayerSessionManager::ConnectionState GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::ConnectionState>("", "MultiplayerSessionManager/ConnectionState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/ConnectionState Connecting
void GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Connecting(GlobalNamespace::MultiplayerSessionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/ConnectionState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/ConnectionState Connected
GlobalNamespace::MultiplayerSessionManager::ConnectionState GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::ConnectionState>("", "MultiplayerSessionManager/ConnectionState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/ConnectionState Connected
void GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Connected(GlobalNamespace::MultiplayerSessionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/ConnectionState", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/ConnectionState Disconnecting
GlobalNamespace::MultiplayerSessionManager::ConnectionState GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Disconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Disconnecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::ConnectionState>("", "MultiplayerSessionManager/ConnectionState", "Disconnecting"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/ConnectionState Disconnecting
void GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Disconnecting(GlobalNamespace::MultiplayerSessionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Disconnecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/ConnectionState", "Disconnecting", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerSessionManager/<>c__DisplayClass92_0
#include "GlobalNamespace/MultiplayerSessionManager_--c__DisplayClass92_0.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerSessionManager/<>c__DisplayClass92_0.<GetConnectedPlayerByUserId>b__0
bool GlobalNamespace::MultiplayerSessionManager::$$c__DisplayClass92_0::$GetConnectedPlayerByUserId$b__0(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c__DisplayClass92_0::<GetConnectedPlayerByUserId>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetConnectedPlayerByUserId>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(player))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, player);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerSessionManager/<>c
#include "GlobalNamespace/MultiplayerSessionManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly MultiplayerSessionManager/<>c <>9
GlobalNamespace::MultiplayerSessionManager::$$c* GlobalNamespace::MultiplayerSessionManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::$$c*>("", "MultiplayerSessionManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly MultiplayerSessionManager/<>c <>9
void GlobalNamespace::MultiplayerSessionManager::$$c::_set_$$9(GlobalNamespace::MultiplayerSessionManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IConnectedPlayer,System.Int32> <>9__96_0
System::Func_2<GlobalNamespace::IConnectedPlayer*, int>* GlobalNamespace::MultiplayerSessionManager::$$c::_get_$$9__96_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c::_get_$$9__96_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::IConnectedPlayer*, int>*>("", "MultiplayerSessionManager/<>c", "<>9__96_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IConnectedPlayer,System.Int32> <>9__96_0
void GlobalNamespace::MultiplayerSessionManager::$$c::_set_$$9__96_0(System::Func_2<GlobalNamespace::IConnectedPlayer*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c::_set_$$9__96_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/<>c", "<>9__96_0", value)));
}
// Autogenerated method: MultiplayerSessionManager/<>c..cctor
void GlobalNamespace::MultiplayerSessionManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerSessionManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager/<>c.<TryUpdateConnectedPlayer>b__96_0
int GlobalNamespace::MultiplayerSessionManager::$$c::$TryUpdateConnectedPlayer$b__96_0(GlobalNamespace::IConnectedPlayer* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c::<TryUpdateConnectedPlayer>b__96_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryUpdateConnectedPlayer>b__96_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(p))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkConstants
#include "GlobalNamespace/NetworkConstants.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String dedicatedServerState
::Il2CppString* GlobalNamespace::NetworkConstants::_get_dedicatedServerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_dedicatedServerState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "dedicatedServerState"));
}
// Autogenerated static field setter
// Set static field: static public System.String dedicatedServerState
void GlobalNamespace::NetworkConstants::_set_dedicatedServerState(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_dedicatedServerState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "dedicatedServerState", value));
}
// Autogenerated static field getter
// Get static field: static public System.String playerState
::Il2CppString* GlobalNamespace::NetworkConstants::_get_playerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_playerState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "playerState"));
}
// Autogenerated static field setter
// Set static field: static public System.String playerState
void GlobalNamespace::NetworkConstants::_set_playerState(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_playerState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "playerState", value));
}
// Autogenerated static field getter
// Get static field: static public System.String spectatingState
::Il2CppString* GlobalNamespace::NetworkConstants::_get_spectatingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_spectatingState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "spectatingState"));
}
// Autogenerated static field setter
// Set static field: static public System.String spectatingState
void GlobalNamespace::NetworkConstants::_set_spectatingState(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_spectatingState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "spectatingState", value));
}
// Autogenerated static field getter
// Get static field: static public System.String backgroundedState
::Il2CppString* GlobalNamespace::NetworkConstants::_get_backgroundedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_backgroundedState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "backgroundedState"));
}
// Autogenerated static field setter
// Set static field: static public System.String backgroundedState
void GlobalNamespace::NetworkConstants::_set_backgroundedState(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_backgroundedState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "backgroundedState", value));
}
// Autogenerated static field getter
// Get static field: static public System.String wantsToPlayNextLevel
::Il2CppString* GlobalNamespace::NetworkConstants::_get_wantsToPlayNextLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_wantsToPlayNextLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "wantsToPlayNextLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.String wantsToPlayNextLevel
void GlobalNamespace::NetworkConstants::_set_wantsToPlayNextLevel(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_wantsToPlayNextLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "wantsToPlayNextLevel", value));
}
// Autogenerated static field getter
// Get static field: static public System.String wasActiveAtLevelStart
::Il2CppString* GlobalNamespace::NetworkConstants::_get_wasActiveAtLevelStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_wasActiveAtLevelStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "wasActiveAtLevelStart"));
}
// Autogenerated static field setter
// Set static field: static public System.String wasActiveAtLevelStart
void GlobalNamespace::NetworkConstants::_set_wasActiveAtLevelStart(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_wasActiveAtLevelStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "wasActiveAtLevelStart", value));
}
// Autogenerated static field getter
// Get static field: static public System.String isActive
::Il2CppString* GlobalNamespace::NetworkConstants::_get_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_isActive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "isActive"));
}
// Autogenerated static field setter
// Set static field: static public System.String isActive
void GlobalNamespace::NetworkConstants::_set_isActive(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_isActive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "isActive", value));
}
// Autogenerated static field getter
// Get static field: static public System.String finishedLevel
::Il2CppString* GlobalNamespace::NetworkConstants::_get_finishedLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_finishedLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "finishedLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.String finishedLevel
void GlobalNamespace::NetworkConstants::_set_finishedLevel(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_finishedLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "finishedLevel", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkUtility
#include "GlobalNamespace/NetworkUtility.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] _nameEncryptionKey
::Array<uint8_t>* GlobalNamespace::NetworkUtility::_get__nameEncryptionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::_get__nameEncryptionKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("", "NetworkUtility", "_nameEncryptionKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _nameEncryptionKey
void GlobalNamespace::NetworkUtility::_set__nameEncryptionKey(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::_set__nameEncryptionKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkUtility", "_nameEncryptionKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] _nameEncryptionIv
::Array<uint8_t>* GlobalNamespace::NetworkUtility::_get__nameEncryptionIv() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::_get__nameEncryptionIv");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("", "NetworkUtility", "_nameEncryptionIv"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _nameEncryptionIv
void GlobalNamespace::NetworkUtility::_set__nameEncryptionIv(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::_set__nameEncryptionIv");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkUtility", "_nameEncryptionIv", value));
}
// Autogenerated method: NetworkUtility..cctor
void GlobalNamespace::NetworkUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "NetworkUtility", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NetworkUtility.Init
void GlobalNamespace::NetworkUtility::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "NetworkUtility", "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NetworkUtility.GetHashedUserId
::Il2CppString* GlobalNamespace::NetworkUtility::GetHashedUserId(::Il2CppString* userId, GlobalNamespace::AuthenticationToken::Platform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::GetHashedUserId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "NetworkUtility", "GetHashedUserId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, platform)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userId, platform);
}
// Autogenerated method: NetworkUtility.EncryptName
::Il2CppString* GlobalNamespace::NetworkUtility::EncryptName(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::EncryptName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "NetworkUtility", "EncryptName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text);
}
// Autogenerated method: NetworkUtility.DecryptName
::Il2CppString* GlobalNamespace::NetworkUtility::DecryptName(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::DecryptName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "NetworkUtility", "DecryptName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text);
}
// Autogenerated method: NetworkUtility.GenerateId
::Il2CppString* GlobalNamespace::NetworkUtility::GenerateId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::GenerateId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "NetworkUtility", "GenerateId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NetworkUtility.GetHashBase64
::Il2CppString* GlobalNamespace::NetworkUtility::GetHashBase64(::Il2CppString* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::GetHashBase64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "NetworkUtility", "GetHashBase64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PacketEncryptionLayer
#include "GlobalNamespace/PacketEncryptionLayer.hpp"
// Including type: PacketEncryptionLayer/EncryptionStatistics
#include "GlobalNamespace/PacketEncryptionLayer_EncryptionStatistics.hpp"
// Including type: PacketEncryptionLayer/IEncryptionState
#include "GlobalNamespace/PacketEncryptionLayer_IEncryptionState.hpp"
// Including type: PacketEncryptionLayer/EncryptionState
#include "GlobalNamespace/PacketEncryptionLayer_EncryptionState.hpp"
// Including type: PacketEncryptionLayer/PendingEncryptionStateList
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList.hpp"
// Including type: ExpiringDictionary`2
#include "GlobalNamespace/ExpiringDictionary_2.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Security.Cryptography.AesCryptoServiceProvider
#include "System/Security/Cryptography/AesCryptoServiceProvider.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMacHashSize
int GlobalNamespace::PacketEncryptionLayer::_get_kMacHashSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_kMacHashSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PacketEncryptionLayer", "kMacHashSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMacHashSize
void GlobalNamespace::PacketEncryptionLayer::_set_kMacHashSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_kMacHashSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kMacHashSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kHeaderSize
int GlobalNamespace::PacketEncryptionLayer::_get_kHeaderSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_kHeaderSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PacketEncryptionLayer", "kHeaderSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kHeaderSize
void GlobalNamespace::PacketEncryptionLayer::_set_kHeaderSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_kHeaderSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kHeaderSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxPadding
int GlobalNamespace::PacketEncryptionLayer::_get_kMaxPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_kMaxPadding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PacketEncryptionLayer", "kMaxPadding"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxPadding
void GlobalNamespace::PacketEncryptionLayer::_set_kMaxPadding(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_kMaxPadding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kMaxPadding", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMacKeySize
int GlobalNamespace::PacketEncryptionLayer::_get_kMacKeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_kMacKeySize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PacketEncryptionLayer", "kMacKeySize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMacKeySize
void GlobalNamespace::PacketEncryptionLayer::_set_kMacKeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_kMacKeySize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kMacKeySize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kKeySize
int GlobalNamespace::PacketEncryptionLayer::_get_kKeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_kKeySize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PacketEncryptionLayer", "kKeySize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kKeySize
void GlobalNamespace::PacketEncryptionLayer::_set_kKeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_kKeySize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kKeySize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kBlockSize
int GlobalNamespace::PacketEncryptionLayer::_get_kBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_kBlockSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PacketEncryptionLayer", "kBlockSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kBlockSize
void GlobalNamespace::PacketEncryptionLayer::_set_kBlockSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_kBlockSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kBlockSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMasterKeySize
int GlobalNamespace::PacketEncryptionLayer::_get_kMasterKeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_kMasterKeySize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PacketEncryptionLayer", "kMasterKeySize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMasterKeySize
void GlobalNamespace::PacketEncryptionLayer::_set_kMasterKeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_kMasterKeySize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kMasterKeySize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte kEncryptedPacketType
uint8_t GlobalNamespace::PacketEncryptionLayer::_get_kEncryptedPacketType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_kEncryptedPacketType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "PacketEncryptionLayer", "kEncryptedPacketType"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kEncryptedPacketType
void GlobalNamespace::PacketEncryptionLayer::_set_kEncryptedPacketType(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_kEncryptedPacketType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kEncryptedPacketType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte kPlaintextPacketType
uint8_t GlobalNamespace::PacketEncryptionLayer::_get_kPlaintextPacketType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_kPlaintextPacketType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "PacketEncryptionLayer", "kPlaintextPacketType"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kPlaintextPacketType
void GlobalNamespace::PacketEncryptionLayer::_set_kPlaintextPacketType(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_kPlaintextPacketType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kPlaintextPacketType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kRandomBlockSize
int GlobalNamespace::PacketEncryptionLayer::_get_kRandomBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_kRandomBlockSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PacketEncryptionLayer", "kRandomBlockSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kRandomBlockSize
void GlobalNamespace::PacketEncryptionLayer::_set_kRandomBlockSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_kRandomBlockSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kRandomBlockSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kEncryptionStateTimeout
int64_t GlobalNamespace::PacketEncryptionLayer::_get_kEncryptionStateTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_kEncryptionStateTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "PacketEncryptionLayer", "kEncryptionStateTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kEncryptionStateTimeout
void GlobalNamespace::PacketEncryptionLayer::_set_kEncryptionStateTimeout(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_kEncryptionStateTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kEncryptionStateTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kPendingEncryptionStateTimeout
int64_t GlobalNamespace::PacketEncryptionLayer::_get_kPendingEncryptionStateTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_kPendingEncryptionStateTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "PacketEncryptionLayer", "kPendingEncryptionStateTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kPendingEncryptionStateTimeout
void GlobalNamespace::PacketEncryptionLayer::_set_kPendingEncryptionStateTimeout(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_kPendingEncryptionStateTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kPendingEncryptionStateTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] _masterSecretSeed
::Array<uint8_t>* GlobalNamespace::PacketEncryptionLayer::_get__masterSecretSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get__masterSecretSeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("", "PacketEncryptionLayer", "_masterSecretSeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _masterSecretSeed
void GlobalNamespace::PacketEncryptionLayer::_set__masterSecretSeed(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set__masterSecretSeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "_masterSecretSeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] _keyExpansionSeed
::Array<uint8_t>* GlobalNamespace::PacketEncryptionLayer::_get__keyExpansionSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get__keyExpansionSeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("", "PacketEncryptionLayer", "_keyExpansionSeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _keyExpansionSeed
void GlobalNamespace::PacketEncryptionLayer::_set__keyExpansionSeed(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set__keyExpansionSeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "_keyExpansionSeed", value));
}
// [ThreadStaticAttribute] Offset: 0xD0624C
// Autogenerated static field getter
// Get static field: static private System.Byte[] _tempIV
::Array<uint8_t>* GlobalNamespace::PacketEncryptionLayer::_get__tempIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get__tempIV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("", "PacketEncryptionLayer", "_tempIV"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _tempIV
void GlobalNamespace::PacketEncryptionLayer::_set__tempIV(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set__tempIV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "_tempIV", value));
}
// [ThreadStaticAttribute] Offset: 0xD0625C
// Autogenerated static field getter
// Get static field: static private System.Byte[] _tempHash
::Array<uint8_t>* GlobalNamespace::PacketEncryptionLayer::_get__tempHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get__tempHash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("", "PacketEncryptionLayer", "_tempHash"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _tempHash
void GlobalNamespace::PacketEncryptionLayer::_set__tempHash(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set__tempHash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "_tempHash", value));
}
// [ThreadStaticAttribute] Offset: 0xD0626C
// Autogenerated static field getter
// Get static field: static private System.Diagnostics.Stopwatch _stopwatch
System::Diagnostics::Stopwatch* GlobalNamespace::PacketEncryptionLayer::_get__stopwatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get__stopwatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Stopwatch*>("", "PacketEncryptionLayer", "_stopwatch"));
}
// Autogenerated static field setter
// Set static field: static private System.Diagnostics.Stopwatch _stopwatch
void GlobalNamespace::PacketEncryptionLayer::_set__stopwatch(System::Diagnostics::Stopwatch* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set__stopwatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "_stopwatch", value));
}
// Autogenerated method: PacketEncryptionLayer.get_filterUnencryptedTraffic
bool GlobalNamespace::PacketEncryptionLayer::get_filterUnencryptedTraffic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::get_filterUnencryptedTraffic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_filterUnencryptedTraffic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer.set_filterUnencryptedTraffic
void GlobalNamespace::PacketEncryptionLayer::set_filterUnencryptedTraffic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::set_filterUnencryptedTraffic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_filterUnencryptedTraffic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PacketEncryptionLayer.get_enableStatistics
bool GlobalNamespace::PacketEncryptionLayer::get_enableStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::get_enableStatistics");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_enableStatistics", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer.set_enableStatistics
void GlobalNamespace::PacketEncryptionLayer::set_enableStatistics(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::set_enableStatistics");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_enableStatistics", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PacketEncryptionLayer.SetUnencryptedTrafficFilter
void GlobalNamespace::PacketEncryptionLayer::SetUnencryptedTrafficFilter(::Array<uint8_t>* unencryptedTrafficFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::SetUnencryptedTrafficFilter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetUnencryptedTrafficFilter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(unencryptedTrafficFilter)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, unencryptedTrafficFilter);
}
// Autogenerated method: PacketEncryptionLayer.AddEncryptedEndpoint
GlobalNamespace::PacketEncryptionLayer::IEncryptionState* GlobalNamespace::PacketEncryptionLayer::AddEncryptedEndpoint(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* serverRandom, ::Array<uint8_t>* clientRandom, bool isClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::AddEncryptedEndpoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddEncryptedEndpoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(protocolVersion, endPoint, preMasterSecret, serverRandom, clientRandom, isClient)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketEncryptionLayer::IEncryptionState*, false>(this, ___internal__method, protocolVersion, endPoint, preMasterSecret, serverRandom, clientRandom, isClient);
}
// Autogenerated method: PacketEncryptionLayer.RemoveEncryptedEndpoint
bool GlobalNamespace::PacketEncryptionLayer::RemoveEncryptedEndpoint(System::Net::IPEndPoint* endPoint, GlobalNamespace::PacketEncryptionLayer::IEncryptionState* encryptedState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::RemoveEncryptedEndpoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveEncryptedEndpoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint, encryptedState)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, endPoint, encryptedState);
}
// Autogenerated method: PacketEncryptionLayer.AddPendingEncryptedEndpoint
void GlobalNamespace::PacketEncryptionLayer::AddPendingEncryptedEndpoint(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* serverRandom, ::Array<uint8_t>* clientRandom, bool isClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::AddPendingEncryptedEndpoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddPendingEncryptedEndpoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(protocolVersion, endPoint, preMasterSecret, serverRandom, clientRandom, isClient)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, endPoint, preMasterSecret, serverRandom, clientRandom, isClient);
}
// Autogenerated method: PacketEncryptionLayer.PollUpdate
void GlobalNamespace::PacketEncryptionLayer::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PollUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer.RemoveAllEndpoints
void GlobalNamespace::PacketEncryptionLayer::RemoveAllEndpoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::RemoveAllEndpoints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveAllEndpoints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer.TryGetEncryptionState
bool GlobalNamespace::PacketEncryptionLayer::TryGetEncryptionState(System::Net::IPEndPoint* endPoint, GlobalNamespace::PacketEncryptionLayer::EncryptionState*& state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::TryGetEncryptionState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryGetEncryptionState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint, state)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, endPoint, state);
}
// Autogenerated method: PacketEncryptionLayer.TryGetPendingEncryptionState
bool GlobalNamespace::PacketEncryptionLayer::TryGetPendingEncryptionState(System::Net::IPEndPoint* endPoint, GlobalNamespace::PacketEncryptionLayer::EncryptionState*& state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::TryGetPendingEncryptionState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryGetPendingEncryptionState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint, state)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, endPoint, state);
}
// Autogenerated method: PacketEncryptionLayer.TryGetPotentialPendingEncryptionStates
bool GlobalNamespace::PacketEncryptionLayer::TryGetPotentialPendingEncryptionStates(System::Net::IPEndPoint* endPoint, ::Array<GlobalNamespace::PacketEncryptionLayer::EncryptionState*>*& encryptionStates) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::TryGetPotentialPendingEncryptionStates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryGetPotentialPendingEncryptionStates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint, encryptionStates)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, endPoint, encryptionStates);
}
// Autogenerated method: PacketEncryptionLayer.PromotePendingEncryptionState
void GlobalNamespace::PacketEncryptionLayer::PromotePendingEncryptionState(System::Net::IPEndPoint* endPoint, GlobalNamespace::PacketEncryptionLayer::EncryptionState* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PromotePendingEncryptionState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PromotePendingEncryptionState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint, state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPoint, state);
}
// Autogenerated method: PacketEncryptionLayer.MatchesFilter
bool GlobalNamespace::PacketEncryptionLayer::MatchesFilter(::Array<uint8_t>* data, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::MatchesFilter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MatchesFilter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data, offset, length)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, data, offset, length);
}
// Autogenerated method: PacketEncryptionLayer.ProcessInboundPacketInternal
bool GlobalNamespace::PacketEncryptionLayer::ProcessInboundPacketInternal(System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>*& data, int& offset, int& length, bool& encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::ProcessInboundPacketInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessInboundPacketInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(remoteEndPoint, data, offset, length, encrypted)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, remoteEndPoint, data, offset, length, encrypted);
}
// Autogenerated method: PacketEncryptionLayer.TryDecryptData
bool GlobalNamespace::PacketEncryptionLayer::TryDecryptData(::Array<uint8_t>* data, GlobalNamespace::PacketEncryptionLayer::EncryptionState* state, int startingOffset, int& offset, int& length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::TryDecryptData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryDecryptData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data, state, startingOffset, offset, length)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, data, state, startingOffset, offset, length);
}
// Autogenerated method: PacketEncryptionLayer.ProcessOutBoundPacketInternal
bool GlobalNamespace::PacketEncryptionLayer::ProcessOutBoundPacketInternal(System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>*& data, int& offset, int& length, bool& encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::ProcessOutBoundPacketInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessOutBoundPacketInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(remoteEndPoint, data, offset, length, encrypted)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, remoteEndPoint, data, offset, length, encrypted);
}
// Autogenerated method: PacketEncryptionLayer.FastCopyBlock
void GlobalNamespace::PacketEncryptionLayer::FastCopyBlock(::Array<uint8_t>* inArr, int inOff, ::Array<uint8_t>* outArr, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::FastCopyBlock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PacketEncryptionLayer", "FastCopyBlock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inArr, inOff, outArr, outOff)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, inArr, inOff, outArr, outOff);
}
// Autogenerated method: PacketEncryptionLayer.FastCopyMac
void GlobalNamespace::PacketEncryptionLayer::FastCopyMac(::Array<uint8_t>* inArr, int inOff, ::Array<uint8_t>* outArr, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::FastCopyMac");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PacketEncryptionLayer", "FastCopyMac", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inArr, inOff, outArr, outOff)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, inArr, inOff, outArr, outOff);
}
// Autogenerated method: PacketEncryptionLayer.Log
void GlobalNamespace::PacketEncryptionLayer::Log(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::Log");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PacketEncryptionLayer", "Log", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: PacketEncryptionLayer.LogV
void GlobalNamespace::PacketEncryptionLayer::LogV(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::LogV");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PacketEncryptionLayer", "LogV", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: PacketEncryptionLayer..cctor
void GlobalNamespace::PacketEncryptionLayer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PacketEncryptionLayer", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer.ProcessInboundPacket
void GlobalNamespace::PacketEncryptionLayer::ProcessInboundPacket(System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>*& data, int& offset, int& length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::ProcessInboundPacket");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessInboundPacket", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(remoteEndPoint, data, offset, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, data, offset, length);
}
// Autogenerated method: PacketEncryptionLayer.ProcessOutBoundPacket
void GlobalNamespace::PacketEncryptionLayer::ProcessOutBoundPacket(System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>*& data, int& offset, int& length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::ProcessOutBoundPacket");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessOutBoundPacket", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(remoteEndPoint, data, offset, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, data, offset, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer/EncryptionStatistics
#include "GlobalNamespace/PacketEncryptionLayer_EncryptionStatistics.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsReceivedPlaintext
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedPlaintext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_packetsReceivedPlaintext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsReceivedEncrypted
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedEncrypted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_packetsReceivedEncrypted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsReceivedRejected
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedRejected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_packetsReceivedRejected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsSentPlaintext
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentPlaintext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_packetsSentPlaintext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsSentEncrypted
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentEncrypted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_packetsSentEncrypted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsSentRejected
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentRejected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_packetsSentRejected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_encryptionProcessingTime
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_encryptionProcessingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_encryptionProcessingTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_encryptionProcessingTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_decryptionProcessingTime
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_decryptionProcessingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_decryptionProcessingTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_decryptionProcessingTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsReceivedPlaintext
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedPlaintext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IncrementPacketsReceivedPlaintext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsReceivedEncrypted
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedEncrypted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IncrementPacketsReceivedEncrypted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsReceivedRejected
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedRejected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IncrementPacketsReceivedRejected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsSentPlaintext
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentPlaintext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IncrementPacketsSentPlaintext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsSentEncrypted
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentEncrypted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IncrementPacketsSentEncrypted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsSentRejected
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentRejected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IncrementPacketsSentRejected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.AddEncryptionProcessingTime
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::AddEncryptionProcessingTime(int64_t time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::AddEncryptionProcessingTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddEncryptionProcessingTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.AddDecryptionProcessingTime
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::AddDecryptionProcessingTime(int64_t time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::AddDecryptionProcessingTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddDecryptionProcessingTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer/IEncryptionState
#include "GlobalNamespace/PacketEncryptionLayer_IEncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PacketEncryptionLayer/IEncryptionState.get_isValid
bool GlobalNamespace::PacketEncryptionLayer::IEncryptionState::get_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::IEncryptionState::get_isValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PacketEncryptionLayer/EncryptionState
#include "GlobalNamespace/PacketEncryptionLayer_EncryptionState.hpp"
// Including type: System.Collections.Concurrent.ConcurrentQueue`1
#include "System/Collections/Concurrent/ConcurrentQueue_1.hpp"
// Including type: Org.BouncyCastle.Crypto.Macs.HMac
#include "Org/BouncyCastle/Crypto/Macs/HMac.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kReceivedSequencNumBufferLength
int GlobalNamespace::PacketEncryptionLayer::EncryptionState::_get_kReceivedSequencNumBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionState::_get_kReceivedSequencNumBufferLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PacketEncryptionLayer/EncryptionState", "kReceivedSequencNumBufferLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kReceivedSequencNumBufferLength
void GlobalNamespace::PacketEncryptionLayer::EncryptionState::_set_kReceivedSequencNumBufferLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionState::_set_kReceivedSequencNumBufferLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer/EncryptionState", "kReceivedSequencNumBufferLength", value));
}
// Autogenerated method: PacketEncryptionLayer/EncryptionState.get_isValid
bool GlobalNamespace::PacketEncryptionLayer::EncryptionState::get_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionState::get_isValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionState.ComputeSendMac
::Array<uint8_t>* GlobalNamespace::PacketEncryptionLayer::EncryptionState::ComputeSendMac(::Array<uint8_t>* data, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionState::ComputeSendMac");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ComputeSendMac", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data, offset, count)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, data, offset, count);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionState.ComputeReceiveMac
::Array<uint8_t>* GlobalNamespace::PacketEncryptionLayer::EncryptionState::ComputeReceiveMac(::Array<uint8_t>* data, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionState::ComputeReceiveMac");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ComputeReceiveMac", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data, offset, count)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, data, offset, count);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionState.IsValidSequenceNum
bool GlobalNamespace::PacketEncryptionLayer::EncryptionState::IsValidSequenceNum(uint sequenceNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionState::IsValidSequenceNum");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValidSequenceNum", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sequenceNum)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sequenceNum);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionState.PutSequenceNum
bool GlobalNamespace::PacketEncryptionLayer::EncryptionState::PutSequenceNum(uint sequenceNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionState::PutSequenceNum");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PutSequenceNum", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sequenceNum)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sequenceNum);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionState.GetNextSentSequenceNum
uint GlobalNamespace::PacketEncryptionLayer::EncryptionState::GetNextSentSequenceNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionState::GetNextSentSequenceNum");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNextSentSequenceNum", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionState.MakeSeed
::Array<uint8_t>* GlobalNamespace::PacketEncryptionLayer::EncryptionState::MakeSeed(::Array<uint8_t>* baseSeed, ::Array<uint8_t>* serverSeed, ::Array<uint8_t>* clientSeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionState::MakeSeed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeSeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(baseSeed, serverSeed, clientSeed)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, baseSeed, serverSeed, clientSeed);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionState.PRF
::Array<uint8_t>* GlobalNamespace::PacketEncryptionLayer::EncryptionState::PRF(::Array<uint8_t>* key, ::Array<uint8_t>* seed, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionState::PRF");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PacketEncryptionLayer/EncryptionState", "PRF", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, seed, length)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key, seed, length);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionState.PRF_Hash
void GlobalNamespace::PacketEncryptionLayer::EncryptionState::PRF_Hash(::Array<uint8_t>* key, ::Array<uint8_t>* seed, int& length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionState::PRF_Hash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PacketEncryptionLayer/EncryptionState", "PRF_Hash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, seed, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key, seed, length);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionState.Dispose
void GlobalNamespace::PacketEncryptionLayer::EncryptionState::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionState::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PacketEncryptionLayer/PendingEncryptionStateList
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList.hpp"
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass4_0
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c__DisplayClass4_0.hpp"
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c.hpp"
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass8_0
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c__DisplayClass8_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PacketEncryptionLayer/EncryptionState
#include "GlobalNamespace/PacketEncryptionLayer_EncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.get_isEmpty
bool GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::get_isEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::get_isEmpty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isEmpty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.Dispose
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.GetSortedEncryptionStates
::Array<GlobalNamespace::PacketEncryptionLayer::EncryptionState*>* GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::GetSortedEncryptionStates(int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::GetSortedEncryptionStates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSortedEncryptionStates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(port)));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::PacketEncryptionLayer::EncryptionState*>*, false>(this, ___internal__method, port);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.TryGetEncryptionState
bool GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::TryGetEncryptionState(int port, GlobalNamespace::PacketEncryptionLayer::EncryptionState*& encryptionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::TryGetEncryptionState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryGetEncryptionState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(port, encryptionState)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, port, encryptionState);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.Add
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Add(int port, GlobalNamespace::PacketEncryptionLayer::EncryptionState* encryptionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(port, encryptionState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, port, encryptionState);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.Remove
bool GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Remove(int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(port)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, port);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.Remove
bool GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Remove(int port, GlobalNamespace::PacketEncryptionLayer::EncryptionState* encryptionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(port, encryptionState)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, port, encryptionState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass4_0
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c__DisplayClass4_0.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
// Including type: PacketEncryptionLayer/EncryptionState
#include "GlobalNamespace/PacketEncryptionLayer_EncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass4_0.<GetSortedEncryptionStates>b__0
int GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass4_0::$GetSortedEncryptionStates$b__0(System::Collections::Generic::KeyValuePair_2<int, GlobalNamespace::PacketEncryptionLayer::EncryptionState*> kvp) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass4_0::<GetSortedEncryptionStates>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSortedEncryptionStates>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(kvp))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, kvp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: PacketEncryptionLayer/EncryptionState
#include "GlobalNamespace/PacketEncryptionLayer_EncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly PacketEncryptionLayer/PendingEncryptionStateList/<>c <>9
GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c* GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c*>("", "PacketEncryptionLayer/PendingEncryptionStateList/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly PacketEncryptionLayer/PendingEncryptionStateList/<>c <>9
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_set_$$9(GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer/PendingEncryptionStateList/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.Int32,PacketEncryptionLayer/EncryptionState>,PacketEncryptionLayer/EncryptionState> <>9__4_1
System::Func_2<System::Collections::Generic::KeyValuePair_2<int, GlobalNamespace::PacketEncryptionLayer::EncryptionState*>, GlobalNamespace::PacketEncryptionLayer::EncryptionState*>* GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_get_$$9__4_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_get_$$9__4_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Collections::Generic::KeyValuePair_2<int, GlobalNamespace::PacketEncryptionLayer::EncryptionState*>, GlobalNamespace::PacketEncryptionLayer::EncryptionState*>*>("", "PacketEncryptionLayer/PendingEncryptionStateList/<>c", "<>9__4_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.Int32,PacketEncryptionLayer/EncryptionState>,PacketEncryptionLayer/EncryptionState> <>9__4_1
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_set_$$9__4_1(System::Func_2<System::Collections::Generic::KeyValuePair_2<int, GlobalNamespace::PacketEncryptionLayer::EncryptionState*>, GlobalNamespace::PacketEncryptionLayer::EncryptionState*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_set_$$9__4_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer/PendingEncryptionStateList/<>c", "<>9__4_1", value)));
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList/<>c..cctor
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PacketEncryptionLayer/PendingEncryptionStateList/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList/<>c.<GetSortedEncryptionStates>b__4_1
GlobalNamespace::PacketEncryptionLayer::EncryptionState* GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::$GetSortedEncryptionStates$b__4_1(System::Collections::Generic::KeyValuePair_2<int, GlobalNamespace::PacketEncryptionLayer::EncryptionState*> kvp) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::<GetSortedEncryptionStates>b__4_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSortedEncryptionStates>b__4_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(kvp))));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketEncryptionLayer::EncryptionState*, false>(this, ___internal__method, kvp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass8_0
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c__DisplayClass8_0.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
// Including type: PacketEncryptionLayer/EncryptionState
#include "GlobalNamespace/PacketEncryptionLayer_EncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass8_0.<Remove>b__0
bool GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass8_0::$Remove$b__0(System::Collections::Generic::KeyValuePair_2<int, GlobalNamespace::PacketEncryptionLayer::EncryptionState*> kvp) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass8_0::<Remove>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Remove>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(kvp))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, kvp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PartyMessageHandler
#include "GlobalNamespace/PartyMessageHandler.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: PartyMessageHandler/ServerStatusUpdatedDelegate
#include "GlobalNamespace/PartyMessageHandler_ServerStatusUpdatedDelegate.hpp"
// Including type: PartyMessageHandler/ConnectToMasterServerDelegate
#include "GlobalNamespace/PartyMessageHandler_ConnectToMasterServerDelegate.hpp"
// Including type: PartyMessageHandler/ServerStatusUpdateMessage
#include "GlobalNamespace/PartyMessageHandler_ServerStatusUpdateMessage.hpp"
// Including type: PartyMessageHandler/ConnectToMasterServerMessage
#include "GlobalNamespace/PartyMessageHandler_ConnectToMasterServerMessage.hpp"
// Including type: NetworkPacketSerializer`2
#include "GlobalNamespace/NetworkPacketSerializer_2.hpp"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: DiscoveryPolicy
#include "GlobalNamespace/DiscoveryPolicy.hpp"
// Including type: InvitePolicy
#include "GlobalNamespace/InvitePolicy.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PartyMessageHandler.Dispose
void GlobalNamespace::PartyMessageHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PartyMessageHandler.add_serverStatusUpdatedEvent
void GlobalNamespace::PartyMessageHandler::add_serverStatusUpdatedEvent(GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::add_serverStatusUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_serverStatusUpdatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PartyMessageHandler.remove_serverStatusUpdatedEvent
void GlobalNamespace::PartyMessageHandler::remove_serverStatusUpdatedEvent(GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::remove_serverStatusUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_serverStatusUpdatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PartyMessageHandler.SetServerStatus
void GlobalNamespace::PartyMessageHandler::SetServerStatus(::Il2CppString* serverName, ::Il2CppString* password, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, int maxPlayerCount, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::SetServerStatus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetServerStatus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serverName, password, discoveryPolicy, invitePolicy, maxPlayerCount, configuration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverName, password, discoveryPolicy, invitePolicy, maxPlayerCount, configuration);
}
// Autogenerated method: PartyMessageHandler.HandleServerStatusUpdate
void GlobalNamespace::PartyMessageHandler::HandleServerStatusUpdate(GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::HandleServerStatusUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleServerStatusUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated method: PartyMessageHandler.add_connectToMasterServerEvent
void GlobalNamespace::PartyMessageHandler::add_connectToMasterServerEvent(GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::add_connectToMasterServerEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_connectToMasterServerEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PartyMessageHandler.remove_connectToMasterServerEvent
void GlobalNamespace::PartyMessageHandler::remove_connectToMasterServerEvent(GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::remove_connectToMasterServerEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_connectToMasterServerEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PartyMessageHandler.ConnectToMasterServer
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServer(System::Net::IPEndPoint* endPoint, ::Il2CppString* serverName, ::Il2CppString* password, ::Il2CppString* secret, ::Il2CppString* userId, ::Il2CppString* userName, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, int maxPlayerCount, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConnectToMasterServer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint, serverName, password, secret, userId, userName, discoveryPolicy, invitePolicy, maxPlayerCount, configuration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPoint, serverName, password, secret, userId, userName, discoveryPolicy, invitePolicy, maxPlayerCount, configuration);
}
// Autogenerated method: PartyMessageHandler.HandleConnectToMasterServer
void GlobalNamespace::PartyMessageHandler::HandleConnectToMasterServer(GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::HandleConnectToMasterServer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleConnectToMasterServer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PartyMessageHandler/MessageType
#include "GlobalNamespace/PartyMessageHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PartyMessageHandler/MessageType ServerStatusUpdate
GlobalNamespace::PartyMessageHandler::MessageType GlobalNamespace::PartyMessageHandler::MessageType::_get_ServerStatusUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::MessageType::_get_ServerStatusUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PartyMessageHandler::MessageType>("", "PartyMessageHandler/MessageType", "ServerStatusUpdate"));
}
// Autogenerated static field setter
// Set static field: static public PartyMessageHandler/MessageType ServerStatusUpdate
void GlobalNamespace::PartyMessageHandler::MessageType::_set_ServerStatusUpdate(GlobalNamespace::PartyMessageHandler::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::MessageType::_set_ServerStatusUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PartyMessageHandler/MessageType", "ServerStatusUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public PartyMessageHandler/MessageType ConnectToMasterServer
GlobalNamespace::PartyMessageHandler::MessageType GlobalNamespace::PartyMessageHandler::MessageType::_get_ConnectToMasterServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::MessageType::_get_ConnectToMasterServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PartyMessageHandler::MessageType>("", "PartyMessageHandler/MessageType", "ConnectToMasterServer"));
}
// Autogenerated static field setter
// Set static field: static public PartyMessageHandler/MessageType ConnectToMasterServer
void GlobalNamespace::PartyMessageHandler::MessageType::_set_ConnectToMasterServer(GlobalNamespace::PartyMessageHandler::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::MessageType::_set_ConnectToMasterServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PartyMessageHandler/MessageType", "ConnectToMasterServer", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PartyMessageHandler/ServerStatusUpdatedDelegate
#include "GlobalNamespace/PartyMessageHandler_ServerStatusUpdatedDelegate.hpp"
// Including type: DiscoveryPolicy
#include "GlobalNamespace/DiscoveryPolicy.hpp"
// Including type: InvitePolicy
#include "GlobalNamespace/InvitePolicy.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PartyMessageHandler/ServerStatusUpdatedDelegate.Invoke
void GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::Invoke(::Il2CppString* serverName, ::Il2CppString* password, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, int maxPlayerCount, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serverName, password, discoveryPolicy, invitePolicy, maxPlayerCount, configuration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverName, password, discoveryPolicy, invitePolicy, maxPlayerCount, configuration);
}
// Autogenerated method: PartyMessageHandler/ServerStatusUpdatedDelegate.BeginInvoke
System::IAsyncResult* GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::BeginInvoke(::Il2CppString* serverName, ::Il2CppString* password, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, int maxPlayerCount, GlobalNamespace::GameplayServerConfiguration configuration, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serverName, password, discoveryPolicy, invitePolicy, maxPlayerCount, configuration, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, serverName, password, discoveryPolicy, invitePolicy, maxPlayerCount, configuration, callback, object);
}
// Autogenerated method: PartyMessageHandler/ServerStatusUpdatedDelegate.EndInvoke
void GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PartyMessageHandler/ConnectToMasterServerDelegate
#include "GlobalNamespace/PartyMessageHandler_ConnectToMasterServerDelegate.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: DiscoveryPolicy
#include "GlobalNamespace/DiscoveryPolicy.hpp"
// Including type: InvitePolicy
#include "GlobalNamespace/InvitePolicy.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerDelegate.Invoke
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::Invoke(System::Net::IPEndPoint* endPoint, ::Il2CppString* serverName, ::Il2CppString* password, ::Il2CppString* secret, ::Il2CppString* userId, ::Il2CppString* userName, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, int maxPlayerCount, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint, serverName, password, secret, userId, userName, discoveryPolicy, invitePolicy, maxPlayerCount, configuration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPoint, serverName, password, secret, userId, userName, discoveryPolicy, invitePolicy, maxPlayerCount, configuration);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerDelegate.BeginInvoke
System::IAsyncResult* GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::BeginInvoke(System::Net::IPEndPoint* endPoint, ::Il2CppString* serverName, ::Il2CppString* password, ::Il2CppString* secret, ::Il2CppString* userId, ::Il2CppString* userName, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, int maxPlayerCount, GlobalNamespace::GameplayServerConfiguration configuration, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint, serverName, password, secret, userId, userName, discoveryPolicy, invitePolicy, maxPlayerCount, configuration, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, endPoint, serverName, password, secret, userId, userName, discoveryPolicy, invitePolicy, maxPlayerCount, configuration, callback, object);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerDelegate.EndInvoke
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PartyMessageHandler/ServerStatusUpdateMessage
#include "GlobalNamespace/PartyMessageHandler_ServerStatusUpdateMessage.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PartyMessageHandler/ServerStatusUpdateMessage.get_pool
GlobalNamespace::PacketPool_1<GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage*>* GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::get_pool");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PartyMessageHandler/ServerStatusUpdateMessage", "get_pool", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: PartyMessageHandler/ServerStatusUpdateMessage.Init
GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage* GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::Init(::Il2CppString* serverName, ::Il2CppString* password, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, int maxPlayerCount, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serverName, password, discoveryPolicy, invitePolicy, maxPlayerCount, configuration)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage*, false>(this, ___internal__method, serverName, password, discoveryPolicy, invitePolicy, maxPlayerCount, configuration);
}
// Autogenerated method: PartyMessageHandler/ServerStatusUpdateMessage.Serialize
void GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: PartyMessageHandler/ServerStatusUpdateMessage.Deserialize
void GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: PartyMessageHandler/ServerStatusUpdateMessage.Release
void GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::Release");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PartyMessageHandler/ConnectToMasterServerMessage
#include "GlobalNamespace/PartyMessageHandler_ConnectToMasterServerMessage.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerMessage.get_pool
GlobalNamespace::PacketPool_1<GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage*>* GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::get_pool");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PartyMessageHandler/ConnectToMasterServerMessage", "get_pool", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerMessage.Init
GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage* GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Init(System::Net::IPEndPoint* endPoint, ::Il2CppString* serverName, ::Il2CppString* password, ::Il2CppString* secret, ::Il2CppString* userId, ::Il2CppString* userName, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, int maxPlayerCount, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint, serverName, password, secret, userId, userName, discoveryPolicy, invitePolicy, maxPlayerCount, configuration)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage*, false>(this, ___internal__method, endPoint, serverName, password, secret, userId, userName, discoveryPolicy, invitePolicy, maxPlayerCount, configuration);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerMessage.Serialize
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerMessage.Deserialize
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerMessage.Release
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Release");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSpecificSettingsAtStartNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsAtStartNetSerializable.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: PlayerSpecificSettingsNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsNetSerializable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayerSpecificSettingsAtStartNetSerializable.get_activePlayersAtGameStart
System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::get_activePlayersAtGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::get_activePlayersAtGameStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_activePlayersAtGameStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettingsAtStartNetSerializable.get_activePlayerSpecificSettingsAtGameStart
System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::get_activePlayerSpecificSettingsAtGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::get_activePlayerSpecificSettingsAtGameStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_activePlayerSpecificSettingsAtGameStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PlayerSpecificSettingsNetSerializable*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettingsAtStartNetSerializable.set_activePlayerSpecificSettingsAtGameStart
void GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::set_activePlayerSpecificSettingsAtGameStart(System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::set_activePlayerSpecificSettingsAtGameStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_activePlayerSpecificSettingsAtGameStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerSpecificSettingsAtStartNetSerializable.Serialize
void GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: PlayerSpecificSettingsAtStartNetSerializable.Deserialize
void GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
