// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IAsyncComputeManager
#include "GlobalNamespace/IAsyncComputeManager.hpp"
// Including type: AsyncComputeOperation
#include "GlobalNamespace/AsyncComputeOperation.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: AsyncComputeOperation`1
#include "GlobalNamespace/AsyncComputeOperation_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IAsyncComputeManager.BeginOperation
void GlobalNamespace::IAsyncComputeManager::BeginOperation(GlobalNamespace::AsyncComputeOperation* asyncComputeOperation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IAsyncComputeManager::BeginOperation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncComputeOperation)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, asyncComputeOperation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: IAuthenticationTokenProvider
#include "GlobalNamespace/IAuthenticationTokenProvider.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IAuthenticationTokenProvider.get_hashedUserId
::Il2CppString* GlobalNamespace::IAuthenticationTokenProvider::get_hashedUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IAuthenticationTokenProvider::get_hashedUserId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hashedUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IAuthenticationTokenProvider.get_userName
::Il2CppString* GlobalNamespace::IAuthenticationTokenProvider::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IAuthenticationTokenProvider::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IAuthenticationTokenProvider.GetAuthenticationToken
System::Threading::Tasks::Task_1<GlobalNamespace::AuthenticationToken>* GlobalNamespace::IAuthenticationTokenProvider::GetAuthenticationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IAuthenticationTokenProvider::GetAuthenticationToken");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAuthenticationToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AuthenticationToken>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ICPUMonitor
#include "GlobalNamespace/ICPUMonitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ICPUMonitor.get_utilization
float GlobalNamespace::ICPUMonitor::get_utilization() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ICPUMonitor::get_utilization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_utilization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ICPUMonitor.PollUpdate
void GlobalNamespace::ICPUMonitor::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ICPUMonitor::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ICertificateEncryptionProvider
#include "GlobalNamespace/ICertificateEncryptionProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ICertificateEncryptionProvider.SignData
::Array<uint8_t>* GlobalNamespace::ICertificateEncryptionProvider::SignData(::Array<uint8_t>* data, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ICertificateEncryptionProvider::SignData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SignData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(___instance_arg, ___internal__method, data, offset, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ICertificateValidator
#include "GlobalNamespace/ICertificateValidator.hpp"
// Including type: MasterServerEndPoint
#include "GlobalNamespace/MasterServerEndPoint.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ICertificateValidator.ValidateCertificateChain
void GlobalNamespace::ICertificateValidator::ValidateCertificateChain(GlobalNamespace::MasterServerEndPoint* endPoint, System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::Array<::Array<uint8_t>*>* certificateChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ICertificateValidator::ValidateCertificateChain");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificateChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(certificateChain)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endPoint, certificate, certificateChain);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
// Including type: MultiplayerAvatarData
#include "GlobalNamespace/MultiplayerAvatarData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IConnectedPlayer.get_isMe
bool GlobalNamespace::IConnectedPlayer::get_isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectedPlayer::get_isMe");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_userId
::Il2CppString* GlobalNamespace::IConnectedPlayer::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectedPlayer::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_userName
::Il2CppString* GlobalNamespace::IConnectedPlayer::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectedPlayer::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_currentLatency
float GlobalNamespace::IConnectedPlayer::get_currentLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectedPlayer::get_currentLatency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_isConnected
bool GlobalNamespace::IConnectedPlayer::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectedPlayer::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_disconnectedReason
GlobalNamespace::DisconnectedReason GlobalNamespace::IConnectedPlayer::get_disconnectedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectedPlayer::get_disconnectedReason");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disconnectedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::DisconnectedReason, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_isConnectionOwner
bool GlobalNamespace::IConnectedPlayer::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectedPlayer::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_offsetSyncTime
float GlobalNamespace::IConnectedPlayer::get_offsetSyncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectedPlayer::get_offsetSyncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offsetSyncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_sortIndex
int GlobalNamespace::IConnectedPlayer::get_sortIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectedPlayer::get_sortIndex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_isKicked
bool GlobalNamespace::IConnectedPlayer::get_isKicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectedPlayer::get_isKicked");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isKicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_multiplayerAvatarData
GlobalNamespace::MultiplayerAvatarData GlobalNamespace::IConnectedPlayer::get_multiplayerAvatarData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectedPlayer::get_multiplayerAvatarData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerAvatarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerAvatarData, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.HasState
bool GlobalNamespace::IConnectedPlayer::HasState(::Il2CppString* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectedPlayer::HasState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IConnectedPlayerNoteEventManager
#include "GlobalNamespace/IConnectedPlayerNoteEventManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NoteCutInfoNetSerializable
#include "GlobalNamespace/NoteCutInfoNetSerializable.hpp"
// Including type: NoteMissInfoNetSerializable
#include "GlobalNamespace/NoteMissInfoNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IConnectedPlayerNoteEventManager.add_connectedPlayerNoteWasCutEvent
void GlobalNamespace::IConnectedPlayerNoteEventManager::add_connectedPlayerNoteWasCutEvent(System::Action_1<GlobalNamespace::NoteCutInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectedPlayerNoteEventManager::add_connectedPlayerNoteWasCutEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerNoteWasCutEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IConnectedPlayerNoteEventManager.remove_connectedPlayerNoteWasCutEvent
void GlobalNamespace::IConnectedPlayerNoteEventManager::remove_connectedPlayerNoteWasCutEvent(System::Action_1<GlobalNamespace::NoteCutInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectedPlayerNoteEventManager::remove_connectedPlayerNoteWasCutEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerNoteWasCutEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IConnectedPlayerNoteEventManager.add_connectedPlayerNoteWasMissedEvent
void GlobalNamespace::IConnectedPlayerNoteEventManager::add_connectedPlayerNoteWasMissedEvent(System::Action_1<GlobalNamespace::NoteMissInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectedPlayerNoteEventManager::add_connectedPlayerNoteWasMissedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerNoteWasMissedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IConnectedPlayerNoteEventManager.remove_connectedPlayerNoteWasMissedEvent
void GlobalNamespace::IConnectedPlayerNoteEventManager::remove_connectedPlayerNoteWasMissedEvent(System::Action_1<GlobalNamespace::NoteMissInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectedPlayerNoteEventManager::remove_connectedPlayerNoteWasMissedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerNoteWasMissedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: IConnectionManager
#include "GlobalNamespace/IConnectionManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IConnectionManager.get_userId
::Il2CppString* GlobalNamespace::IConnectionManager::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnectionManager.get_userName
::Il2CppString* GlobalNamespace::IConnectionManager::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnectionManager.get_isConnected
bool GlobalNamespace::IConnectionManager::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnectionManager.get_isConnecting
bool GlobalNamespace::IConnectionManager::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::get_isConnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnectionManager.get_isDisconnecting
bool GlobalNamespace::IConnectionManager::get_isDisconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::get_isDisconnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisconnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnectionManager.get_connectionCount
int GlobalNamespace::IConnectionManager::get_connectionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::get_connectionCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnectionManager.get_isConnectionOwner
bool GlobalNamespace::IConnectionManager::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnectionManager.get_isDisposed
bool GlobalNamespace::IConnectionManager::get_isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::get_isDisposed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnectionManager.add_onConnectedEvent
void GlobalNamespace::IConnectionManager::add_onConnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::add_onConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.remove_onConnectedEvent
void GlobalNamespace::IConnectionManager::remove_onConnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::remove_onConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.add_onDisconnectedEvent
void GlobalNamespace::IConnectionManager::add_onDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::add_onDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.remove_onDisconnectedEvent
void GlobalNamespace::IConnectionManager::remove_onDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::remove_onDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.add_onConnectionFailedEvent
void GlobalNamespace::IConnectionManager::add_onConnectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::add_onConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.remove_onConnectionFailedEvent
void GlobalNamespace::IConnectionManager::remove_onConnectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::remove_onConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.add_onConnectionConnectedEvent
void GlobalNamespace::IConnectionManager::add_onConnectionConnectedEvent(System::Action_1<GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::add_onConnectionConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.remove_onConnectionConnectedEvent
void GlobalNamespace::IConnectionManager::remove_onConnectionConnectedEvent(System::Action_1<GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::remove_onConnectionConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.add_onConnectionDisconnectedEvent
void GlobalNamespace::IConnectionManager::add_onConnectionDisconnectedEvent(System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::add_onConnectionDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.remove_onConnectionDisconnectedEvent
void GlobalNamespace::IConnectionManager::remove_onConnectionDisconnectedEvent(System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::remove_onConnectionDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.add_onLatencyUpdatedEvent
void GlobalNamespace::IConnectionManager::add_onLatencyUpdatedEvent(System::Action_2<GlobalNamespace::IConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::add_onLatencyUpdatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onLatencyUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.remove_onLatencyUpdatedEvent
void GlobalNamespace::IConnectionManager::remove_onLatencyUpdatedEvent(System::Action_2<GlobalNamespace::IConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::remove_onLatencyUpdatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onLatencyUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.add_onReceivedDataEvent
void GlobalNamespace::IConnectionManager::add_onReceivedDataEvent(System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::add_onReceivedDataEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.remove_onReceivedDataEvent
void GlobalNamespace::IConnectionManager::remove_onReceivedDataEvent(System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::remove_onReceivedDataEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.SendToAll
void GlobalNamespace::IConnectionManager::SendToAll(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::SendToAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer, deliveryMethod);
}
// Autogenerated method: IConnectionManager.SendToAll
void GlobalNamespace::IConnectionManager::SendToAll(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod, GlobalNamespace::IConnection* excludingConnection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::SendToAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod), ::il2cpp_utils::ExtractType(excludingConnection)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer, deliveryMethod, excludingConnection);
}
// Autogenerated method: IConnectionManager.PollUpdate
void GlobalNamespace::IConnectionManager::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnectionManager.Disconnect
void GlobalNamespace::IConnectionManager::Disconnect(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::Disconnect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disconnectedReason);
}
// Autogenerated method: IConnectionManager.GetConnection
GlobalNamespace::IConnection* GlobalNamespace::IConnectionManager::GetConnection(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnectionManager::GetConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnection*, false>(___instance_arg, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.DeliveryMethod
#include "LiteNetLib/DeliveryMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IConnection.get_userId
::Il2CppString* GlobalNamespace::IConnection::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnection::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnection.get_userName
::Il2CppString* GlobalNamespace::IConnection::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnection::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnection.get_isConnectionOwner
bool GlobalNamespace::IConnection::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnection::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IConnection.Send
void GlobalNamespace::IConnection::Send(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnection::Send");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer, deliveryMethod);
}
// Autogenerated method: IConnection.Disconnect
void GlobalNamespace::IConnection::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IConnection::Disconnect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: PlayerSpecificSettingsAtStartNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsAtStartNetSerializable.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: PlayerSpecificSettingsNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsNetSerializable.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: MultiplayerLevelCompletionResults
#include "GlobalNamespace/MultiplayerLevelCompletionResults.hpp"
// Including type: NoteCutInfoNetSerializable
#include "GlobalNamespace/NoteCutInfoNetSerializable.hpp"
// Including type: NoteMissInfoNetSerializable
#include "GlobalNamespace/NoteMissInfoNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IGameplayRpcManager.get_enabled
bool GlobalNamespace::IGameplayRpcManager::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::get_enabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IGameplayRpcManager.set_enabled
void GlobalNamespace::IGameplayRpcManager::set_enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::set_enabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_setGameplaySceneSyncFinishedEvent
void GlobalNamespace::IGameplayRpcManager::add_setGameplaySceneSyncFinishedEvent(System::Action_3<::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::add_setGameplaySceneSyncFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setGameplaySceneSyncFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_setGameplaySceneSyncFinishedEvent
void GlobalNamespace::IGameplayRpcManager::remove_setGameplaySceneSyncFinishedEvent(System::Action_3<::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::remove_setGameplaySceneSyncFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setGameplaySceneSyncFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_setGameplaySceneReadyEvent
void GlobalNamespace::IGameplayRpcManager::add_setGameplaySceneReadyEvent(System::Action_2<::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::add_setGameplaySceneReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setGameplaySceneReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_setGameplaySceneReadyEvent
void GlobalNamespace::IGameplayRpcManager::remove_setGameplaySceneReadyEvent(System::Action_2<::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::remove_setGameplaySceneReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setGameplaySceneReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_getGameplaySceneReadyEvent
void GlobalNamespace::IGameplayRpcManager::add_getGameplaySceneReadyEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::add_getGameplaySceneReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getGameplaySceneReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_getGameplaySceneReadyEvent
void GlobalNamespace::IGameplayRpcManager::remove_getGameplaySceneReadyEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::remove_getGameplaySceneReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getGameplaySceneReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_setPlayerDidConnectLateEvent
void GlobalNamespace::IGameplayRpcManager::add_setPlayerDidConnectLateEvent(System::Action_4<::Il2CppString*, ::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::add_setPlayerDidConnectLateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setPlayerDidConnectLateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_setPlayerDidConnectLateEvent
void GlobalNamespace::IGameplayRpcManager::remove_setPlayerDidConnectLateEvent(System::Action_4<::Il2CppString*, ::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::remove_setPlayerDidConnectLateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setPlayerDidConnectLateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_setGameplaySongReadyEvent
void GlobalNamespace::IGameplayRpcManager::add_setGameplaySongReadyEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::add_setGameplaySongReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setGameplaySongReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_setGameplaySongReadyEvent
void GlobalNamespace::IGameplayRpcManager::remove_setGameplaySongReadyEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::remove_setGameplaySongReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setGameplaySongReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_getGameplaySongReadyEvent
void GlobalNamespace::IGameplayRpcManager::add_getGameplaySongReadyEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::add_getGameplaySongReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getGameplaySongReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_getGameplaySongReadyEvent
void GlobalNamespace::IGameplayRpcManager::remove_getGameplaySongReadyEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::remove_getGameplaySongReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getGameplaySongReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_setSongStartTimeEvent
void GlobalNamespace::IGameplayRpcManager::add_setSongStartTimeEvent(System::Action_2<::Il2CppString*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::add_setSongStartTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setSongStartTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_setSongStartTimeEvent
void GlobalNamespace::IGameplayRpcManager::remove_setSongStartTimeEvent(System::Action_2<::Il2CppString*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::remove_setSongStartTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setSongStartTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_requestReturnToMenuEvent
void GlobalNamespace::IGameplayRpcManager::add_requestReturnToMenuEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::add_requestReturnToMenuEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_requestReturnToMenuEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_requestReturnToMenuEvent
void GlobalNamespace::IGameplayRpcManager::remove_requestReturnToMenuEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::remove_requestReturnToMenuEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_requestReturnToMenuEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_returnToMenuEvent
void GlobalNamespace::IGameplayRpcManager::add_returnToMenuEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::add_returnToMenuEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_returnToMenuEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_returnToMenuEvent
void GlobalNamespace::IGameplayRpcManager::remove_returnToMenuEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::remove_returnToMenuEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_returnToMenuEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_levelFinishedEvent
void GlobalNamespace::IGameplayRpcManager::add_levelFinishedEvent(System::Action_2<::Il2CppString*, GlobalNamespace::MultiplayerLevelCompletionResults*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::add_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_levelFinishedEvent
void GlobalNamespace::IGameplayRpcManager::remove_levelFinishedEvent(System::Action_2<::Il2CppString*, GlobalNamespace::MultiplayerLevelCompletionResults*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::remove_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_noteWasCutEvent
void GlobalNamespace::IGameplayRpcManager::add_noteWasCutEvent(System::Action_4<::Il2CppString*, float, float, GlobalNamespace::NoteCutInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::add_noteWasCutEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteWasCutEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_noteWasCutEvent
void GlobalNamespace::IGameplayRpcManager::remove_noteWasCutEvent(System::Action_4<::Il2CppString*, float, float, GlobalNamespace::NoteCutInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::remove_noteWasCutEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteWasCutEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_noteWasMissedEvent
void GlobalNamespace::IGameplayRpcManager::add_noteWasMissedEvent(System::Action_4<::Il2CppString*, float, float, GlobalNamespace::NoteMissInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::add_noteWasMissedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteWasMissedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_noteWasMissedEvent
void GlobalNamespace::IGameplayRpcManager::remove_noteWasMissedEvent(System::Action_4<::Il2CppString*, float, float, GlobalNamespace::NoteMissInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::remove_noteWasMissedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteWasMissedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.NoteMissed
void GlobalNamespace::IGameplayRpcManager::NoteMissed(float songTime, GlobalNamespace::NoteMissInfoNetSerializable* noteMissInfoNetSerializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::NoteMissed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteMissed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTime), ::il2cpp_utils::ExtractType(noteMissInfoNetSerializable)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, songTime, noteMissInfoNetSerializable);
}
// Autogenerated method: IGameplayRpcManager.NoteCut
void GlobalNamespace::IGameplayRpcManager::NoteCut(float songTime, GlobalNamespace::NoteCutInfoNetSerializable* noteCutInfoNetSerializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::NoteCut");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTime), ::il2cpp_utils::ExtractType(noteCutInfoNetSerializable)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, songTime, noteCutInfoNetSerializable);
}
// Autogenerated method: IGameplayRpcManager.SetGameplaySceneSyncFinished
void GlobalNamespace::IGameplayRpcManager::SetGameplaySceneSyncFinished(GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStartNetSerializable, ::Il2CppString* sessionGameId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::SetGameplaySceneSyncFinished");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameplaySceneSyncFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersAtGameStartNetSerializable), ::il2cpp_utils::ExtractType(sessionGameId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playersAtGameStartNetSerializable, sessionGameId);
}
// Autogenerated method: IGameplayRpcManager.SetGameplaySceneReady
void GlobalNamespace::IGameplayRpcManager::SetGameplaySceneReady(GlobalNamespace::PlayerSpecificSettingsNetSerializable* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::SetGameplaySceneReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameplaySceneReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerSpecificSettings)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playerSpecificSettings);
}
// Autogenerated method: IGameplayRpcManager.GetGameplaySceneReady
void GlobalNamespace::IGameplayRpcManager::GetGameplaySceneReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::GetGameplaySceneReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGameplaySceneReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IGameplayRpcManager.SetPlayerDidConnectLate
void GlobalNamespace::IGameplayRpcManager::SetPlayerDidConnectLate(::Il2CppString* userId, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStartNetSerializable, ::Il2CppString* sessionGameId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::SetPlayerDidConnectLate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerDidConnectLate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersAtGameStartNetSerializable), ::il2cpp_utils::ExtractType(sessionGameId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, playersAtGameStartNetSerializable, sessionGameId);
}
// Autogenerated method: IGameplayRpcManager.SetSongStartTime
void GlobalNamespace::IGameplayRpcManager::SetSongStartTime(float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::SetSongStartTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSongStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTime)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, startTime);
}
// Autogenerated method: IGameplayRpcManager.SetGameplaySongReady
void GlobalNamespace::IGameplayRpcManager::SetGameplaySongReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::SetGameplaySongReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameplaySongReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IGameplayRpcManager.GetGameplaySongReady
void GlobalNamespace::IGameplayRpcManager::GetGameplaySongReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::GetGameplaySongReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGameplaySongReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IGameplayRpcManager.RequestReturnToMenu
void GlobalNamespace::IGameplayRpcManager::RequestReturnToMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::RequestReturnToMenu");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestReturnToMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IGameplayRpcManager.ReturnToMenu
void GlobalNamespace::IGameplayRpcManager::ReturnToMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::ReturnToMenu");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReturnToMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IGameplayRpcManager.LevelFinished
void GlobalNamespace::IGameplayRpcManager::LevelFinished(GlobalNamespace::MultiplayerLevelCompletionResults* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameplayRpcManager::LevelFinished");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(results)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, results);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IHealthCheckService
#include "GlobalNamespace/IHealthCheckService.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IHealthCheckService.PollUpdate
void GlobalNamespace::IHealthCheckService::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IHealthCheckService::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: PlayersLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayersLobbyPermissionConfigurationNetSerializable.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: PlayersMissingEntitlementsNetSerializable
#include "GlobalNamespace/PlayersMissingEntitlementsNetSerializable.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IMenuRpcManager.get_syncTime
float GlobalNamespace::IMenuRpcManager::get_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::get_syncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.add_getPlayersPermissionConfigurationEvent
void GlobalNamespace::IMenuRpcManager::add_getPlayersPermissionConfigurationEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_getPlayersPermissionConfigurationEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getPlayersPermissionConfigurationEvent
void GlobalNamespace::IMenuRpcManager::remove_getPlayersPermissionConfigurationEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_getPlayersPermissionConfigurationEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setPlayersPermissionConfigurationEvent
void GlobalNamespace::IMenuRpcManager::add_setPlayersPermissionConfigurationEvent(System::Action_2<::Il2CppString*, GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_setPlayersPermissionConfigurationEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setPlayersPermissionConfigurationEvent
void GlobalNamespace::IMenuRpcManager::remove_setPlayersPermissionConfigurationEvent(System::Action_2<::Il2CppString*, GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_setPlayersPermissionConfigurationEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_recommendBeatmapEvent
void GlobalNamespace::IMenuRpcManager::add_recommendBeatmapEvent(System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_recommendBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_recommendBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_recommendBeatmapEvent
void GlobalNamespace::IMenuRpcManager::remove_recommendBeatmapEvent(System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_recommendBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_recommendBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getRecommendedBeatmapEvent
void GlobalNamespace::IMenuRpcManager::add_getRecommendedBeatmapEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_getRecommendedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getRecommendedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getRecommendedBeatmapEvent
void GlobalNamespace::IMenuRpcManager::remove_getRecommendedBeatmapEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_getRecommendedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getRecommendedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_clearRecommendedBeatmapEvent
void GlobalNamespace::IMenuRpcManager::add_clearRecommendedBeatmapEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_clearRecommendedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_clearRecommendedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_clearRecommendedBeatmapEvent
void GlobalNamespace::IMenuRpcManager::remove_clearRecommendedBeatmapEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_clearRecommendedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_clearRecommendedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setSelectedBeatmapEvent
void GlobalNamespace::IMenuRpcManager::add_setSelectedBeatmapEvent(System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_setSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setSelectedBeatmapEvent
void GlobalNamespace::IMenuRpcManager::remove_setSelectedBeatmapEvent(System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_setSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getSelectedBeatmapEvent
void GlobalNamespace::IMenuRpcManager::add_getSelectedBeatmapEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_getSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getSelectedBeatmapEvent
void GlobalNamespace::IMenuRpcManager::remove_getSelectedBeatmapEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_getSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_recommendGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::add_recommendGameplayModifiersEvent(System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_recommendGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_recommendGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_recommendGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::remove_recommendGameplayModifiersEvent(System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_recommendGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_recommendGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getRecommendedGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::add_getRecommendedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_getRecommendedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getRecommendedGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::remove_getRecommendedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_getRecommendedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_clearRecommendedGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::add_clearRecommendedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_clearRecommendedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_clearRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_clearRecommendedGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::remove_clearRecommendedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_clearRecommendedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_clearRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setSelectGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::add_setSelectGameplayModifiersEvent(System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_setSelectGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setSelectGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setSelectGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::remove_setSelectGameplayModifiersEvent(System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_setSelectGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setSelectGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getSelectedGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::add_getSelectedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_getSelectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getSelectedGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::remove_getSelectedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_getSelectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getIsStartButtonEnabledEvent
void GlobalNamespace::IMenuRpcManager::add_getIsStartButtonEnabledEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_getIsStartButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getIsStartButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getIsStartButtonEnabledEvent
void GlobalNamespace::IMenuRpcManager::remove_getIsStartButtonEnabledEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_getIsStartButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getIsStartButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setIsStartButtonEnabledEvent
void GlobalNamespace::IMenuRpcManager::add_setIsStartButtonEnabledEvent(System::Action_2<::Il2CppString*, GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_setIsStartButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setIsStartButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setIsStartButtonEnabledEvent
void GlobalNamespace::IMenuRpcManager::remove_setIsStartButtonEnabledEvent(System::Action_2<::Il2CppString*, GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_setIsStartButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setIsStartButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getIsReadyEvent
void GlobalNamespace::IMenuRpcManager::add_getIsReadyEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_getIsReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getIsReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getIsReadyEvent
void GlobalNamespace::IMenuRpcManager::remove_getIsReadyEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_getIsReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getIsReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setIsReadyEvent
void GlobalNamespace::IMenuRpcManager::add_setIsReadyEvent(System::Action_2<::Il2CppString*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_setIsReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setIsReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setIsReadyEvent
void GlobalNamespace::IMenuRpcManager::remove_setIsReadyEvent(System::Action_2<::Il2CppString*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_setIsReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setIsReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setStartGameTimeEvent
void GlobalNamespace::IMenuRpcManager::add_setStartGameTimeEvent(System::Action_2<::Il2CppString*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_setStartGameTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setStartGameTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setStartGameTimeEvent
void GlobalNamespace::IMenuRpcManager::remove_setStartGameTimeEvent(System::Action_2<::Il2CppString*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_setStartGameTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setStartGameTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_cancelledLevelStartEvent
void GlobalNamespace::IMenuRpcManager::add_cancelledLevelStartEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_cancelledLevelStartEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cancelledLevelStartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_cancelledLevelStartEvent
void GlobalNamespace::IMenuRpcManager::remove_cancelledLevelStartEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_cancelledLevelStartEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cancelledLevelStartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_startedLevelEvent
void GlobalNamespace::IMenuRpcManager::add_startedLevelEvent(System::Action_4<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*, GlobalNamespace::GameplayModifiers*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_startedLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_startedLevelEvent
void GlobalNamespace::IMenuRpcManager::remove_startedLevelEvent(System::Action_4<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*, GlobalNamespace::GameplayModifiers*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_startedLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getStartedLevelEvent
void GlobalNamespace::IMenuRpcManager::add_getStartedLevelEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_getStartedLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getStartedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getStartedLevelEvent
void GlobalNamespace::IMenuRpcManager::remove_getStartedLevelEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_getStartedLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getStartedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getMultiplayerGameStateEvent
void GlobalNamespace::IMenuRpcManager::add_getMultiplayerGameStateEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_getMultiplayerGameStateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getMultiplayerGameStateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getMultiplayerGameStateEvent
void GlobalNamespace::IMenuRpcManager::remove_getMultiplayerGameStateEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_getMultiplayerGameStateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getMultiplayerGameStateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setMultiplayerGameStateEvent
void GlobalNamespace::IMenuRpcManager::add_setMultiplayerGameStateEvent(System::Action_2<::Il2CppString*, GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_setMultiplayerGameStateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setMultiplayerGameStateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setMultiplayerGameStateEvent
void GlobalNamespace::IMenuRpcManager::remove_setMultiplayerGameStateEvent(System::Action_2<::Il2CppString*, GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_setMultiplayerGameStateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setMultiplayerGameStateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getIsEntitledToLevelEvent
void GlobalNamespace::IMenuRpcManager::add_getIsEntitledToLevelEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_getIsEntitledToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getIsEntitledToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getIsEntitledToLevelEvent
void GlobalNamespace::IMenuRpcManager::remove_getIsEntitledToLevelEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_getIsEntitledToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getIsEntitledToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setPlayersMissingEntitlementsToLevelEvent
void GlobalNamespace::IMenuRpcManager::add_setPlayersMissingEntitlementsToLevelEvent(System::Action_2<::Il2CppString*, GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_setPlayersMissingEntitlementsToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setPlayersMissingEntitlementsToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setPlayersMissingEntitlementsToLevelEvent
void GlobalNamespace::IMenuRpcManager::remove_setPlayersMissingEntitlementsToLevelEvent(System::Action_2<::Il2CppString*, GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_setPlayersMissingEntitlementsToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setPlayersMissingEntitlementsToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setIsEntitledToLevelEvent
void GlobalNamespace::IMenuRpcManager::add_setIsEntitledToLevelEvent(System::Action_3<::Il2CppString*, ::Il2CppString*, GlobalNamespace::EntitlementsStatus>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_setIsEntitledToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setIsEntitledToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setIsEntitledToLevelEvent
void GlobalNamespace::IMenuRpcManager::remove_setIsEntitledToLevelEvent(System::Action_3<::Il2CppString*, ::Il2CppString*, GlobalNamespace::EntitlementsStatus>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_setIsEntitledToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setIsEntitledToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_levelEntitlementStatusesInvalidatedEvent
void GlobalNamespace::IMenuRpcManager::add_levelEntitlementStatusesInvalidatedEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_levelEntitlementStatusesInvalidatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelEntitlementStatusesInvalidatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_levelEntitlementStatusesInvalidatedEvent
void GlobalNamespace::IMenuRpcManager::remove_levelEntitlementStatusesInvalidatedEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_levelEntitlementStatusesInvalidatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelEntitlementStatusesInvalidatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getIsInLobbyEvent
void GlobalNamespace::IMenuRpcManager::add_getIsInLobbyEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_getIsInLobbyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getIsInLobbyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getIsInLobbyEvent
void GlobalNamespace::IMenuRpcManager::remove_getIsInLobbyEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_getIsInLobbyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getIsInLobbyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setIsInLobbyEvent
void GlobalNamespace::IMenuRpcManager::add_setIsInLobbyEvent(System::Action_2<::Il2CppString*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_setIsInLobbyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setIsInLobbyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setIsInLobbyEvent
void GlobalNamespace::IMenuRpcManager::remove_setIsInLobbyEvent(System::Action_2<::Il2CppString*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_setIsInLobbyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setIsInLobbyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_cancelCountdownEvent
void GlobalNamespace::IMenuRpcManager::add_cancelCountdownEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_cancelCountdownEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cancelCountdownEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_cancelCountdownEvent
void GlobalNamespace::IMenuRpcManager::remove_cancelCountdownEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_cancelCountdownEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cancelCountdownEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setCountdownEndTimeEvent
void GlobalNamespace::IMenuRpcManager::add_setCountdownEndTimeEvent(System::Action_2<::Il2CppString*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_setCountdownEndTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setCountdownEndTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setCountdownEndTimeEvent
void GlobalNamespace::IMenuRpcManager::remove_setCountdownEndTimeEvent(System::Action_2<::Il2CppString*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_setCountdownEndTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setCountdownEndTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setOwnedSongPacksEvent
void GlobalNamespace::IMenuRpcManager::add_setOwnedSongPacksEvent(System::Action_2<::Il2CppString*, GlobalNamespace::SongPackMask>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_setOwnedSongPacksEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setOwnedSongPacksEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setOwnedSongPacksEvent
void GlobalNamespace::IMenuRpcManager::remove_setOwnedSongPacksEvent(System::Action_2<::Il2CppString*, GlobalNamespace::SongPackMask>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_setOwnedSongPacksEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setOwnedSongPacksEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getOwnedSongPacksEvent
void GlobalNamespace::IMenuRpcManager::add_getOwnedSongPacksEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_getOwnedSongPacksEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getOwnedSongPacksEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getOwnedSongPacksEvent
void GlobalNamespace::IMenuRpcManager::remove_getOwnedSongPacksEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_getOwnedSongPacksEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getOwnedSongPacksEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_requestedKickPlayerEvent
void GlobalNamespace::IMenuRpcManager::add_requestedKickPlayerEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::add_requestedKickPlayerEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_requestedKickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_requestedKickPlayerEvent
void GlobalNamespace::IMenuRpcManager::remove_requestedKickPlayerEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::remove_requestedKickPlayerEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_requestedKickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.GetPlayersPermissionConfiguration
void GlobalNamespace::IMenuRpcManager::GetPlayersPermissionConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::GetPlayersPermissionConfiguration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayersPermissionConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.SetPlayersPermissionConfiguration
void GlobalNamespace::IMenuRpcManager::SetPlayersPermissionConfiguration(GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* permissions) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::SetPlayersPermissionConfiguration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayersPermissionConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permissions)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, permissions);
}
// Autogenerated method: IMenuRpcManager.RecommendBeatmap
void GlobalNamespace::IMenuRpcManager::RecommendBeatmap(GlobalNamespace::BeatmapIdentifierNetSerializable* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::RecommendBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecommendBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, identifier);
}
// Autogenerated method: IMenuRpcManager.GetRecommendedBeatmap
void GlobalNamespace::IMenuRpcManager::GetRecommendedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::GetRecommendedBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRecommendedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.ClearRecommendedBeatmap
void GlobalNamespace::IMenuRpcManager::ClearRecommendedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::ClearRecommendedBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRecommendedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.SetSelectedBeatmap
void GlobalNamespace::IMenuRpcManager::SetSelectedBeatmap(GlobalNamespace::BeatmapIdentifierNetSerializable* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::SetSelectedBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, identifier);
}
// Autogenerated method: IMenuRpcManager.GetSelectedBeatmap
void GlobalNamespace::IMenuRpcManager::GetSelectedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::GetSelectedBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.RecommendGameplayModifiers
void GlobalNamespace::IMenuRpcManager::RecommendGameplayModifiers(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::RecommendGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecommendGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, gameplayModifiers);
}
// Autogenerated method: IMenuRpcManager.GetRecommendedGameplayModifiers
void GlobalNamespace::IMenuRpcManager::GetRecommendedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::GetRecommendedGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRecommendedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.ClearRecommendedGameplayModifiers
void GlobalNamespace::IMenuRpcManager::ClearRecommendedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::ClearRecommendedGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRecommendedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.SetSelectedGameplayModifiers
void GlobalNamespace::IMenuRpcManager::SetSelectedGameplayModifiers(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::SetSelectedGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, gameplayModifiers);
}
// Autogenerated method: IMenuRpcManager.GetSelectedGameplayModifiers
void GlobalNamespace::IMenuRpcManager::GetSelectedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::GetSelectedGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.GetIsReady
void GlobalNamespace::IMenuRpcManager::GetIsReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::GetIsReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.SetIsReady
void GlobalNamespace::IMenuRpcManager::SetIsReady(bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::SetIsReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isReady)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, isReady);
}
// Autogenerated method: IMenuRpcManager.GetIsStartButtonEnabled
void GlobalNamespace::IMenuRpcManager::GetIsStartButtonEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::GetIsStartButtonEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsStartButtonEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.SetIsStartButtonEnabled
void GlobalNamespace::IMenuRpcManager::SetIsStartButtonEnabled(GlobalNamespace::CannotStartGameReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::SetIsStartButtonEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsStartButtonEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reason);
}
// Autogenerated method: IMenuRpcManager.GetIsInLobby
void GlobalNamespace::IMenuRpcManager::GetIsInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::GetIsInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.SetIsInLobby
void GlobalNamespace::IMenuRpcManager::SetIsInLobby(bool isBack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::SetIsInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isBack)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, isBack);
}
// Autogenerated method: IMenuRpcManager.SetPlayersMissingEntitlementsToLevel
void GlobalNamespace::IMenuRpcManager::SetPlayersMissingEntitlementsToLevel(GlobalNamespace::PlayersMissingEntitlementsNetSerializable* playersMissingEntitlements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::SetPlayersMissingEntitlementsToLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayersMissingEntitlementsToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersMissingEntitlements)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playersMissingEntitlements);
}
// Autogenerated method: IMenuRpcManager.GetIsEntitledToLevel
void GlobalNamespace::IMenuRpcManager::GetIsEntitledToLevel(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::GetIsEntitledToLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsEntitledToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, levelId);
}
// Autogenerated method: IMenuRpcManager.SetIsEntitledToLevel
void GlobalNamespace::IMenuRpcManager::SetIsEntitledToLevel(::Il2CppString* levelId, GlobalNamespace::EntitlementsStatus entitlementStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::SetIsEntitledToLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsEntitledToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(entitlementStatus)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, levelId, entitlementStatus);
}
// Autogenerated method: IMenuRpcManager.InvalidateLevelEntitlementStatuses
void GlobalNamespace::IMenuRpcManager::InvalidateLevelEntitlementStatuses() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::InvalidateLevelEntitlementStatuses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateLevelEntitlementStatuses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.GetMultiplayerGameState
void GlobalNamespace::IMenuRpcManager::GetMultiplayerGameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::GetMultiplayerGameState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMultiplayerGameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.SetMultiplayerGameState
void GlobalNamespace::IMenuRpcManager::SetMultiplayerGameState(GlobalNamespace::MultiplayerGameState lobbyState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::SetMultiplayerGameState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMultiplayerGameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyState)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, lobbyState);
}
// Autogenerated method: IMenuRpcManager.GetOwnedSongPacks
void GlobalNamespace::IMenuRpcManager::GetOwnedSongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::GetOwnedSongPacks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.SetOwnedSongPacks
void GlobalNamespace::IMenuRpcManager::SetOwnedSongPacks(GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::SetOwnedSongPacks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, songPackMask);
}
// Autogenerated method: IMenuRpcManager.StartLevel
void GlobalNamespace::IMenuRpcManager::StartLevel(GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, GlobalNamespace::GameplayModifiers* gameplayModifiers, float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::StartLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapId), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(startTime)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapId, gameplayModifiers, startTime);
}
// Autogenerated method: IMenuRpcManager.GetStartedLevel
void GlobalNamespace::IMenuRpcManager::GetStartedLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::GetStartedLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStartedLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.CancelLevelStart
void GlobalNamespace::IMenuRpcManager::CancelLevelStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::CancelLevelStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelLevelStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.SetStartGameTime
void GlobalNamespace::IMenuRpcManager::SetStartGameTime(float newTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::SetStartGameTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStartGameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newTime)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, newTime);
}
// Autogenerated method: IMenuRpcManager.GetCountdownEndTime
void GlobalNamespace::IMenuRpcManager::GetCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::GetCountdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.RequestKickPlayer
void GlobalNamespace::IMenuRpcManager::RequestKickPlayer(::Il2CppString* kickedPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMenuRpcManager::RequestKickPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestKickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kickedPlayerId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, kickedPlayerId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: INetworkPacketSubSerializer`1
#include "GlobalNamespace/INetworkPacketSubSerializer_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IMultiplayerSessionManager.get_localPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::IMultiplayerSessionManager::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::get_localPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_isConnectionOwner
bool GlobalNamespace::IMultiplayerSessionManager::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_syncTime
float GlobalNamespace::IMultiplayerSessionManager::get_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::get_syncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_isSyncTimeInitialized
bool GlobalNamespace::IMultiplayerSessionManager::get_isSyncTimeInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::get_isSyncTimeInitialized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSyncTimeInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_syncTimeDelay
float GlobalNamespace::IMultiplayerSessionManager::get_syncTimeDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::get_syncTimeDelay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncTimeDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_maxPlayerCount
int GlobalNamespace::IMultiplayerSessionManager::get_maxPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::get_maxPlayerCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxPlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_connectedPlayerCount
int GlobalNamespace::IMultiplayerSessionManager::get_connectedPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::get_connectedPlayerCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_isConnectingOrConnected
bool GlobalNamespace::IMultiplayerSessionManager::get_isConnectingOrConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::get_isConnectingOrConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectingOrConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_isConnected
bool GlobalNamespace::IMultiplayerSessionManager::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_isConnecting
bool GlobalNamespace::IMultiplayerSessionManager::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::get_isConnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_isDisconnecting
bool GlobalNamespace::IMultiplayerSessionManager::get_isDisconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::get_isDisconnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisconnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_isSpectating
bool GlobalNamespace::IMultiplayerSessionManager::get_isSpectating() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::get_isSpectating");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSpectating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_connectedPlayers
System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::IMultiplayerSessionManager::get_connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::get_connectedPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_connectionOwner
GlobalNamespace::IConnectedPlayer* GlobalNamespace::IMultiplayerSessionManager::get_connectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::get_connectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.add_connectedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_connectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::add_connectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.remove_connectedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_connectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::remove_connectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.add_connectionFailedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_connectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::add_connectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.remove_connectionFailedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_connectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::remove_connectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.add_playerConnectedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::add_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.remove_playerConnectedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::remove_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.add_playerDisconnectedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::add_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.remove_playerDisconnectedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::remove_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.add_playerAvatarChangedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_playerAvatarChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::add_playerAvatarChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerAvatarChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.remove_playerAvatarChangedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_playerAvatarChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::remove_playerAvatarChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerAvatarChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.add_playerStateChangedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_playerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::add_playerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.remove_playerStateChangedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_playerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::remove_playerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.add_connectionOwnerStateChangedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_connectionOwnerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::add_connectionOwnerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectionOwnerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.remove_connectionOwnerStateChangedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_connectionOwnerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::remove_connectionOwnerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectionOwnerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.add_disconnectedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_disconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::add_disconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_disconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.remove_disconnectedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_disconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::remove_disconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_disconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.SetMaxPlayerCount
void GlobalNamespace::IMultiplayerSessionManager::SetMaxPlayerCount(int maxPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::SetMaxPlayerCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaxPlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxPlayerCount)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, maxPlayerCount);
}
// Autogenerated method: IMultiplayerSessionManager.StartSession
void GlobalNamespace::IMultiplayerSessionManager::StartSession(GlobalNamespace::ConnectedPlayerManager* connectedPlayerManager) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::StartSession");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayerManager)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, connectedPlayerManager);
}
// Autogenerated method: IMultiplayerSessionManager.EndSession
void GlobalNamespace::IMultiplayerSessionManager::EndSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::EndSession");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.GetPlayerByUserId
GlobalNamespace::IConnectedPlayer* GlobalNamespace::IMultiplayerSessionManager::GetPlayerByUserId(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::GetPlayerByUserId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerByUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: IMultiplayerSessionManager.GetConnectedPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::IMultiplayerSessionManager::GetConnectedPlayer(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::GetConnectedPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(___instance_arg, ___internal__method, index);
}
// Autogenerated method: IMultiplayerSessionManager.KickPlayer
void GlobalNamespace::IMultiplayerSessionManager::KickPlayer(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::KickPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: IMultiplayerSessionManager.Disconnect
void GlobalNamespace::IMultiplayerSessionManager::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::Disconnect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.SetLocalPlayerState
void GlobalNamespace::IMultiplayerSessionManager::SetLocalPlayerState(::Il2CppString* state, bool hasState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::SetLocalPlayerState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(hasState)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state, hasState);
}
// Autogenerated method: IMultiplayerSessionManager.LocalPlayerHasState
bool GlobalNamespace::IMultiplayerSessionManager::LocalPlayerHasState(::Il2CppString* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::LocalPlayerHasState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalPlayerHasState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated method: IMultiplayerSessionManager.RegisterSerializer
void GlobalNamespace::IMultiplayerSessionManager::RegisterSerializer(GlobalNamespace::MultiplayerSessionManager_MessageType serializerType, GlobalNamespace::INetworkPacketSubSerializer_1<GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::RegisterSerializer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializerType), ::il2cpp_utils::ExtractType(subSerializer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, serializerType, subSerializer);
}
// Autogenerated method: IMultiplayerSessionManager.UnregisterSerializer
void GlobalNamespace::IMultiplayerSessionManager::UnregisterSerializer(GlobalNamespace::MultiplayerSessionManager_MessageType serializerType, GlobalNamespace::INetworkPacketSubSerializer_1<GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::UnregisterSerializer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializerType), ::il2cpp_utils::ExtractType(subSerializer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, serializerType, subSerializer);
}
// Autogenerated method: IMultiplayerSessionManager.PerformAtSyncTime
void GlobalNamespace::IMultiplayerSessionManager::PerformAtSyncTime(float syncTime, System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSessionManager::PerformAtSyncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformAtSyncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syncTime), ::il2cpp_utils::ExtractType(action)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, syncTime, action);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: MasterServerEndPoint
#include "GlobalNamespace/MasterServerEndPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INetworkConfig.get_maxPartySize
int GlobalNamespace::INetworkConfig::get_maxPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkConfig::get_maxPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkConfig.get_discoveryPort
int GlobalNamespace::INetworkConfig::get_discoveryPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkConfig::get_discoveryPort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_discoveryPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkConfig.get_partyPort
int GlobalNamespace::INetworkConfig::get_partyPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkConfig::get_partyPort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkConfig.get_multiplayerPort
int GlobalNamespace::INetworkConfig::get_multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkConfig::get_multiplayerPort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkConfig.get_masterServerEndPoint
GlobalNamespace::MasterServerEndPoint* GlobalNamespace::INetworkConfig::get_masterServerEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkConfig::get_masterServerEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_masterServerEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MasterServerEndPoint*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkConfig.get_masterServerStatusUrl
::Il2CppString* GlobalNamespace::INetworkConfig::get_masterServerStatusUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkConfig::get_masterServerStatusUrl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_masterServerStatusUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INetworkPlayer.get_userId
::Il2CppString* GlobalNamespace::INetworkPlayer::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_userName
::Il2CppString* GlobalNamespace::INetworkPlayer::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_isMe
bool GlobalNamespace::INetworkPlayer::get_isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::get_isMe");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_currentPartySize
int GlobalNamespace::INetworkPlayer::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_isMyPartyOwner
bool GlobalNamespace::INetworkPlayer::get_isMyPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::get_isMyPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMyPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_connectedPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::INetworkPlayer::get_connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::get_connectedPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::INetworkPlayer::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayServerConfiguration, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_selectionMask
GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::INetworkPlayer::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::get_selectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapLevelSelectionMask, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_canJoin
bool GlobalNamespace::INetworkPlayer::get_canJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::get_canJoin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_requiresPassword
bool GlobalNamespace::INetworkPlayer::get_requiresPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::get_requiresPassword");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requiresPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_isWaitingOnJoin
bool GlobalNamespace::INetworkPlayer::get_isWaitingOnJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::get_isWaitingOnJoin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaitingOnJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_canInvite
bool GlobalNamespace::INetworkPlayer::get_canInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::get_canInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_isWaitingOnInvite
bool GlobalNamespace::INetworkPlayer::get_isWaitingOnInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::get_isWaitingOnInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaitingOnInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_canKick
bool GlobalNamespace::INetworkPlayer::get_canKick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::get_canKick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canKick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_canLeave
bool GlobalNamespace::INetworkPlayer::get_canLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::get_canLeave");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canLeave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_canBlock
bool GlobalNamespace::INetworkPlayer::get_canBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::get_canBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_canUnblock
bool GlobalNamespace::INetworkPlayer::get_canUnblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::get_canUnblock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canUnblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.Join
void GlobalNamespace::INetworkPlayer::Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::Join");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.Join
void GlobalNamespace::INetworkPlayer::Join(::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::Join");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, password);
}
// Autogenerated method: INetworkPlayer.Invite
void GlobalNamespace::INetworkPlayer::Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::Invite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.Kick
void GlobalNamespace::INetworkPlayer::Kick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::Kick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Kick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.Leave
void GlobalNamespace::INetworkPlayer::Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::Leave");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.Block
void GlobalNamespace::INetworkPlayer::Block() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::Block");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.Unblock
void GlobalNamespace::INetworkPlayer::Unblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::Unblock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayer.SendJoinResponse
void GlobalNamespace::INetworkPlayer::SendJoinResponse(bool accept) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::SendJoinResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accept)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, accept);
}
// Autogenerated method: INetworkPlayer.SendInviteResponse
void GlobalNamespace::INetworkPlayer::SendInviteResponse(bool accept) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayer::SendInviteResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accept)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, accept);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: INetworkPlayerModelPartyConfig`1
#include "GlobalNamespace/INetworkPlayerModelPartyConfig_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INetworkPlayerModel.get_discoveryEnabled
bool GlobalNamespace::INetworkPlayerModel::get_discoveryEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::get_discoveryEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_discoveryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayerModel.set_discoveryEnabled
void GlobalNamespace::INetworkPlayerModel::set_discoveryEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::set_discoveryEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_discoveryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.get_localPlayerIsPartyOwner
bool GlobalNamespace::INetworkPlayerModel::get_localPlayerIsPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::get_localPlayerIsPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerIsPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayerModel.get_configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::INetworkPlayerModel::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayServerConfiguration, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayerModel.get_selectionMask
GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::INetworkPlayerModel::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::get_selectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapLevelSelectionMask, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayerModel.get_currentPartySize
int GlobalNamespace::INetworkPlayerModel::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayerModel.get_partyPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::INetworkPlayerModel::get_partyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::get_partyPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayerModel.get_otherPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::INetworkPlayerModel::get_otherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::get_otherPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_otherPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayerModel.get_connectedPlayerManager
GlobalNamespace::ConnectedPlayerManager* GlobalNamespace::INetworkPlayerModel::get_connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::get_connectedPlayerManager");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ConnectedPlayerManager*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INetworkPlayerModel.add_connectedPlayerManagerCreatedEvent
void GlobalNamespace::INetworkPlayerModel::add_connectedPlayerManagerCreatedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::add_connectedPlayerManagerCreatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerManagerCreatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.remove_connectedPlayerManagerCreatedEvent
void GlobalNamespace::INetworkPlayerModel::remove_connectedPlayerManagerCreatedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::remove_connectedPlayerManagerCreatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerManagerCreatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.add_connectedPlayerManagerDestroyedEvent
void GlobalNamespace::INetworkPlayerModel::add_connectedPlayerManagerDestroyedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::add_connectedPlayerManagerDestroyedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerManagerDestroyedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.remove_connectedPlayerManagerDestroyedEvent
void GlobalNamespace::INetworkPlayerModel::remove_connectedPlayerManagerDestroyedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::remove_connectedPlayerManagerDestroyedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerManagerDestroyedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.add_partyChangedEvent
void GlobalNamespace::INetworkPlayerModel::add_partyChangedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::add_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.remove_partyChangedEvent
void GlobalNamespace::INetworkPlayerModel::remove_partyChangedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::remove_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.add_partySizeChangedEvent
void GlobalNamespace::INetworkPlayerModel::add_partySizeChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::add_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.remove_partySizeChangedEvent
void GlobalNamespace::INetworkPlayerModel::remove_partySizeChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::remove_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.add_joinRequestedEvent
void GlobalNamespace::INetworkPlayerModel::add_joinRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::add_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.remove_joinRequestedEvent
void GlobalNamespace::INetworkPlayerModel::remove_joinRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::remove_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.add_inviteRequestedEvent
void GlobalNamespace::INetworkPlayerModel::add_inviteRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::add_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.remove_inviteRequestedEvent
void GlobalNamespace::INetworkPlayerModel::remove_inviteRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::remove_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.DestroyPartyConnection
void GlobalNamespace::INetworkPlayerModel::DestroyPartyConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INetworkPlayerModel::DestroyPartyConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyPartyConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IPoolablePacket
#include "GlobalNamespace/IPoolablePacket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IPoolablePacket.Release
void GlobalNamespace::IPoolablePacket::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPoolablePacket::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: IPacketPool
#include "GlobalNamespace/IPacketPool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IPacketPool.Release
void GlobalNamespace::IPacketPool::Release(::Il2CppObject* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPacketPool::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IRemoteProcedureCall
#include "GlobalNamespace/IRemoteProcedureCall.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IRemoteProcedureCall.get_syncTime
float GlobalNamespace::IRemoteProcedureCall::get_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IRemoteProcedureCall::get_syncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: IServerBeatmapProvider
#include "GlobalNamespace/IServerBeatmapProvider.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IServerBeatmapProvider.VerifyBeatmapForSelectionMask
bool GlobalNamespace::IServerBeatmapProvider::VerifyBeatmapForSelectionMask(GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, GlobalNamespace::BeatmapLevelSelectionMask selectionMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IServerBeatmapProvider::VerifyBeatmapForSelectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyBeatmapForSelectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapId), ::il2cpp_utils::ExtractType(selectionMask)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, beatmapId, selectionMask);
}
// Autogenerated method: IServerBeatmapProvider.SelectBeatmapFromSuggestionsWithSelectionMaskAndOwnedSongPacks
GlobalNamespace::BeatmapIdentifierNetSerializable* GlobalNamespace::IServerBeatmapProvider::SelectBeatmapFromSuggestionsWithSelectionMaskAndOwnedSongPacks(int playerCount, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* beatmapsSuggestedByPlayers, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::SongPackMask>* playerOwnedSongPacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IServerBeatmapProvider::SelectBeatmapFromSuggestionsWithSelectionMaskAndOwnedSongPacks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectBeatmapFromSuggestionsWithSelectionMaskAndOwnedSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerCount), ::il2cpp_utils::ExtractType(beatmapsSuggestedByPlayers), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(playerOwnedSongPacks)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapIdentifierNetSerializable*, false>(___instance_arg, ___internal__method, playerCount, beatmapsSuggestedByPlayers, selectionMask, playerOwnedSongPacks);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IServerBeatmapProviderManager
#include "GlobalNamespace/IServerBeatmapProviderManager.hpp"
// Including type: IServerBeatmapProvider
#include "GlobalNamespace/IServerBeatmapProvider.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IServerBeatmapProviderManager.GetServerBeatmapProvider
GlobalNamespace::IServerBeatmapProvider* GlobalNamespace::IServerBeatmapProviderManager::GetServerBeatmapProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IServerBeatmapProviderManager::GetServerBeatmapProvider");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServerBeatmapProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IServerBeatmapProvider*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IServerBeatmapProviderManager.RefreshAsync
System::Threading::Tasks::Task* GlobalNamespace::IServerBeatmapProviderManager::RefreshAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IServerBeatmapProviderManager::RefreshAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: IServerSongPackProvider
#include "GlobalNamespace/IServerSongPackProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IServerSongPackProvider.DecomposeSongPackMask
::Array<GlobalNamespace::SongPackMask>* GlobalNamespace::IServerSongPackProvider::DecomposeSongPackMask(GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IServerSongPackProvider::DecomposeSongPackMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecomposeSongPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::SongPackMask>*, false>(___instance_arg, ___internal__method, songPackMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IServerSongPackProviderManager
#include "GlobalNamespace/IServerSongPackProviderManager.hpp"
// Including type: IServerSongPackProvider
#include "GlobalNamespace/IServerSongPackProvider.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IServerSongPackProviderManager.GetServerSongPackProvider
GlobalNamespace::IServerSongPackProvider* GlobalNamespace::IServerSongPackProviderManager::GetServerSongPackProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IServerSongPackProviderManager::GetServerSongPackProvider");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServerSongPackProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IServerSongPackProvider*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IServerSongPackProviderManager.RefreshAsync
System::Threading::Tasks::Task* GlobalNamespace::IServerSongPackProviderManager::RefreshAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IServerSongPackProviderManager::RefreshAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: IUnconnectedSenderReceiver
#include "GlobalNamespace/IUnconnectedSenderReceiver.hpp"
// Including type: PacketEncryptionLayer
#include "GlobalNamespace/PacketEncryptionLayer.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IUnconnectedSenderReceiver.get_unconnectedPacketHeader
::Array<uint8_t>* GlobalNamespace::IUnconnectedSenderReceiver::get_unconnectedPacketHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnconnectedSenderReceiver::get_unconnectedPacketHeader");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_unconnectedPacketHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IUnconnectedSenderReceiver.get_encryptionLayer
GlobalNamespace::PacketEncryptionLayer* GlobalNamespace::IUnconnectedSenderReceiver::get_encryptionLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnconnectedSenderReceiver::get_encryptionLayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_encryptionLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketEncryptionLayer*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IUnconnectedSenderReceiver.get_port
int GlobalNamespace::IUnconnectedSenderReceiver::get_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnconnectedSenderReceiver::get_port");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IUnconnectedSenderReceiver.add_onReceiveUnconnectedDataEvent
void GlobalNamespace::IUnconnectedSenderReceiver::add_onReceiveUnconnectedDataEvent(System::Action_2<System::Net::IPEndPoint*, LiteNetLib::Utils::NetDataReader*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnconnectedSenderReceiver::add_onReceiveUnconnectedDataEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onReceiveUnconnectedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IUnconnectedSenderReceiver.remove_onReceiveUnconnectedDataEvent
void GlobalNamespace::IUnconnectedSenderReceiver::remove_onReceiveUnconnectedDataEvent(System::Action_2<System::Net::IPEndPoint*, LiteNetLib::Utils::NetDataReader*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnconnectedSenderReceiver::remove_onReceiveUnconnectedDataEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onReceiveUnconnectedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IUnconnectedSenderReceiver.SendUnconnected
void GlobalNamespace::IUnconnectedSenderReceiver::SendUnconnected(System::Net::IPEndPoint* remoteEndPoint, LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnconnectedSenderReceiver::SendUnconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendUnconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, remoteEndPoint, writer);
}
// Autogenerated method: IUnconnectedSenderReceiver.PollUpdate
void GlobalNamespace::IUnconnectedSenderReceiver::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnconnectedSenderReceiver::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLibConnectionManager
#include "GlobalNamespace/LiteNetLibConnectionManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: LiteNetLibConnectionManager/LiteNetLibConnectionParamsBase
#include "GlobalNamespace/LiteNetLibConnectionManager_LiteNetLibConnectionParamsBase.hpp"
// Including type: LiteNetLibConnectionManager/StartServerParams
#include "GlobalNamespace/LiteNetLibConnectionManager_StartServerParams.hpp"
// Including type: LiteNetLibConnectionManager/StartClientParams
#include "GlobalNamespace/LiteNetLibConnectionManager_StartClientParams.hpp"
// Including type: LiteNetLibConnectionManager/ConnectToServerParams
#include "GlobalNamespace/LiteNetLibConnectionManager_ConnectToServerParams.hpp"
// Including type: LiteNetLibConnectionManager/NetPeerConnectionRequest
#include "GlobalNamespace/LiteNetLibConnectionManager_NetPeerConnectionRequest.hpp"
// Including type: LiteNetLibConnectionManager/NetPeerConnection
#include "GlobalNamespace/LiteNetLibConnectionManager_NetPeerConnection.hpp"
// Including type: LiteNetLibConnectionManager/StatisticsUpdated
#include "GlobalNamespace/LiteNetLibConnectionManager_StatisticsUpdated.hpp"
// Including type: LiteNetLibConnectionManager/<>c
#include "GlobalNamespace/LiteNetLibConnectionManager_--c.hpp"
// Including type: LiteNetLibConnectionManager/<BackgroundDisconnectSentry>d__126
#include "GlobalNamespace/LiteNetLibConnectionManager_-BackgroundDisconnectSentry-d__126.hpp"
// Including type: LiteNetLibConnectionManager/<BackgroundShutdownSentry>d__127
#include "GlobalNamespace/LiteNetLibConnectionManager_-BackgroundShutdownSentry-d__127.hpp"
// Including type: LiteNetLib.NetManager
#include "LiteNetLib/NetManager.hpp"
// Including type: PacketEncryptionLayer
#include "GlobalNamespace/PacketEncryptionLayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: MasterServer.ITimeProvider
#include "MasterServer/ITimeProvider.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: System.Net.Sockets.SocketError
#include "System/Net/Sockets/SocketError.hpp"
// Including type: LiteNetLib.ConnectionRequest
#include "LiteNetLib/ConnectionRequest.hpp"
// Including type: LiteNetLib.DisconnectInfo
#include "LiteNetLib/DisconnectInfo.hpp"
// Including type: LiteNetLib.NetPacketReader
#include "LiteNetLib/NetPacketReader.hpp"
// Including type: LiteNetLib.UnconnectedMessageType
#include "LiteNetLib/UnconnectedMessageType.hpp"
// Including type: LiteNetLib.DisconnectReason
#include "LiteNetLib/DisconnectReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 kBackgroundDisconnectTimeout
int64_t GlobalNamespace::LiteNetLibConnectionManager::_get_kBackgroundDisconnectTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::_get_kBackgroundDisconnectTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "LiteNetLibConnectionManager", "kBackgroundDisconnectTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kBackgroundDisconnectTimeout
void GlobalNamespace::LiteNetLibConnectionManager::_set_kBackgroundDisconnectTimeout(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::_set_kBackgroundDisconnectTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager", "kBackgroundDisconnectTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kBackgroundShutdownTimeout
int64_t GlobalNamespace::LiteNetLibConnectionManager::_get_kBackgroundShutdownTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::_get_kBackgroundShutdownTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "LiteNetLibConnectionManager", "kBackgroundShutdownTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kBackgroundShutdownTimeout
void GlobalNamespace::LiteNetLibConnectionManager::_set_kBackgroundShutdownTimeout(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::_set_kBackgroundShutdownTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager", "kBackgroundShutdownTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kStatisticsUpdateInterval
int64_t GlobalNamespace::LiteNetLibConnectionManager::_get_kStatisticsUpdateInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::_get_kStatisticsUpdateInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "LiteNetLibConnectionManager", "kStatisticsUpdateInterval"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kStatisticsUpdateInterval
void GlobalNamespace::LiteNetLibConnectionManager::_set_kStatisticsUpdateInterval(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::_set_kStatisticsUpdateInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager", "kStatisticsUpdateInterval", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _unconnectedPacketHeader
::Array<uint8_t>*& GlobalNamespace::LiteNetLibConnectionManager::dyn__unconnectedPacketHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn__unconnectedPacketHeader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unconnectedPacketHeader"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.NetManager _netManager
LiteNetLib::NetManager*& GlobalNamespace::LiteNetLibConnectionManager::dyn__netManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn__netManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_netManager"))->offset;
  return *reinterpret_cast<LiteNetLib::NetManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PacketEncryptionLayer _encryptionLayer
GlobalNamespace::PacketEncryptionLayer*& GlobalNamespace::LiteNetLibConnectionManager::dyn__encryptionLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn__encryptionLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encryptionLayer"))->offset;
  return *reinterpret_cast<GlobalNamespace::PacketEncryptionLayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<LiteNetLibConnectionManager/NetPeerConnection> _connections
System::Collections::Generic::List_1<GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*>*& GlobalNamespace::LiteNetLibConnectionManager::dyn__connections() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn__connections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connections"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<LiteNetLibConnectionManager/NetPeerConnection> _pendingConnections
System::Collections::Generic::List_1<GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*>*& GlobalNamespace::LiteNetLibConnectionManager::dyn__pendingConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn__pendingConnections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pendingConnections"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<LiteNetLibConnectionManager/NetPeerConnectionRequest> _pendingRequests
System::Collections::Generic::List_1<GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest*>*& GlobalNamespace::LiteNetLibConnectionManager::dyn__pendingRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn__pendingRequests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pendingRequests"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.Net.IPEndPoint> _pendingReconnections
System::Collections::Generic::HashSet_1<System::Net::IPEndPoint*>*& GlobalNamespace::LiteNetLibConnectionManager::dyn__pendingReconnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn__pendingReconnections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pendingReconnections"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<System::Net::IPEndPoint*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _userId
::Il2CppString*& GlobalNamespace::LiteNetLibConnectionManager::dyn__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn__userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _userName
::Il2CppString*& GlobalNamespace::LiteNetLibConnectionManager::dyn__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn__userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _secret
::Il2CppString*& GlobalNamespace::LiteNetLibConnectionManager::dyn__secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn__secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secret"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LiteNetLibConnectionManager/NetworkMode _mode
GlobalNamespace::LiteNetLibConnectionManager::NetworkMode& GlobalNamespace::LiteNetLibConnectionManager::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<GlobalNamespace::LiteNetLibConnectionManager::NetworkMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LiteNetLibConnectionManager/ConnectionState _connectionState
GlobalNamespace::LiteNetLibConnectionManager::ConnectionState& GlobalNamespace::LiteNetLibConnectionManager::dyn__connectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn__connectionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionState"))->offset;
  return *reinterpret_cast<GlobalNamespace::LiteNetLibConnectionManager::ConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _backgroundSentryDisconnectCts
System::Threading::CancellationTokenSource*& GlobalNamespace::LiteNetLibConnectionManager::dyn__backgroundSentryDisconnectCts() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn__backgroundSentryDisconnectCts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundSentryDisconnectCts"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _backgroundSentryShutdownCts
System::Threading::CancellationTokenSource*& GlobalNamespace::LiteNetLibConnectionManager::dyn__backgroundSentryShutdownCts() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn__backgroundSentryShutdownCts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundSentryShutdownCts"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sentryDisconnected
bool& GlobalNamespace::LiteNetLibConnectionManager::dyn__sentryDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn__sentryDisconnected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sentryDisconnected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sentryShutdown
bool& GlobalNamespace::LiteNetLibConnectionManager::dyn__sentryShutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn__sentryShutdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sentryShutdown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _lastPollUpdateTime
int64_t& GlobalNamespace::LiteNetLibConnectionManager::dyn__lastPollUpdateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn__lastPollUpdateTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastPollUpdateTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _lastStatisticsUpdateTime
int64_t& GlobalNamespace::LiteNetLibConnectionManager::dyn__lastStatisticsUpdateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn__lastStatisticsUpdateTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastStatisticsUpdateTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action onConnectedEvent
System::Action*& GlobalNamespace::LiteNetLibConnectionManager::dyn_onConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn_onConnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<DisconnectedReason> onDisconnectedEvent
System::Action_1<GlobalNamespace::DisconnectedReason>*& GlobalNamespace::LiteNetLibConnectionManager::dyn_onDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn_onDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onDisconnectedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::DisconnectedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ConnectionFailedReason> onConnectionFailedEvent
System::Action_1<GlobalNamespace::ConnectionFailedReason>*& GlobalNamespace::LiteNetLibConnectionManager::dyn_onConnectionFailedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn_onConnectionFailedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectionFailedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::ConnectionFailedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnection> onConnectionConnectedEvent
System::Action_1<GlobalNamespace::IConnection*>*& GlobalNamespace::LiteNetLibConnectionManager::dyn_onConnectionConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn_onConnectionConnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectionConnectedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::IConnection*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<IConnection,DisconnectedReason> onConnectionDisconnectedEvent
System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>*& GlobalNamespace::LiteNetLibConnectionManager::dyn_onConnectionDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn_onConnectionDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectionDisconnectedEvent"))->offset;
  return *reinterpret_cast<System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<IConnection,System.Single> onLatencyUpdatedEvent
System::Action_2<GlobalNamespace::IConnection*, float>*& GlobalNamespace::LiteNetLibConnectionManager::dyn_onLatencyUpdatedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn_onLatencyUpdatedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onLatencyUpdatedEvent"))->offset;
  return *reinterpret_cast<System::Action_2<GlobalNamespace::IConnection*, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<IConnection,LiteNetLib.Utils.NetDataReader,LiteNetLib.DeliveryMethod> onReceivedDataEvent
System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>*& GlobalNamespace::LiteNetLibConnectionManager::dyn_onReceivedDataEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn_onReceivedDataEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onReceivedDataEvent"))->offset;
  return *reinterpret_cast<System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.Net.IPEndPoint,LiteNetLib.Utils.NetDataReader> onReceiveUnconnectedDataEvent
System::Action_2<System::Net::IPEndPoint*, LiteNetLib::Utils::NetDataReader*>*& GlobalNamespace::LiteNetLibConnectionManager::dyn_onReceiveUnconnectedDataEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn_onReceiveUnconnectedDataEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onReceiveUnconnectedDataEvent"))->offset;
  return *reinterpret_cast<System::Action_2<System::Net::IPEndPoint*, LiteNetLib::Utils::NetDataReader*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LiteNetLibConnectionManager/StatisticsUpdated onStatisticsUpdatedEvent
GlobalNamespace::LiteNetLibConnectionManager::StatisticsUpdated*& GlobalNamespace::LiteNetLibConnectionManager::dyn_onStatisticsUpdatedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::dyn_onStatisticsUpdatedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onStatisticsUpdatedEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::LiteNetLibConnectionManager::StatisticsUpdated**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LiteNetLibConnectionManager.get_userId
::Il2CppString* GlobalNamespace::LiteNetLibConnectionManager::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_userName
::Il2CppString* GlobalNamespace::LiteNetLibConnectionManager::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isConnected
bool GlobalNamespace::LiteNetLibConnectionManager::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isConnecting
bool GlobalNamespace::LiteNetLibConnectionManager::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_isConnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isDisconnecting
bool GlobalNamespace::LiteNetLibConnectionManager::get_isDisconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_isDisconnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisconnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isConnectionOwner
bool GlobalNamespace::LiteNetLibConnectionManager::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_hasConnectionOwner
bool GlobalNamespace::LiteNetLibConnectionManager::get_hasConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_hasConnectionOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isServer
bool GlobalNamespace::LiteNetLibConnectionManager::get_isServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_isServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isClient
bool GlobalNamespace::LiteNetLibConnectionManager::get_isClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_isClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isDisposed
bool GlobalNamespace::LiteNetLibConnectionManager::get_isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_isDisposed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_connectionCount
int GlobalNamespace::LiteNetLibConnectionManager::get_connectionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_connectionCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_secret
::Il2CppString* GlobalNamespace::LiteNetLibConnectionManager::get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_secret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_port
int GlobalNamespace::LiteNetLibConnectionManager::get_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_port");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_unconnectedPacketHeader
::Array<uint8_t>* GlobalNamespace::LiteNetLibConnectionManager::get_unconnectedPacketHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_unconnectedPacketHeader");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_unconnectedPacketHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_encryptionLayer
GlobalNamespace::PacketEncryptionLayer* GlobalNamespace::LiteNetLibConnectionManager::get_encryptionLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::get_encryptionLayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_encryptionLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketEncryptionLayer*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onConnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onConnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::add_onConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onConnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onDisconnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::add_onDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onDisconnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::remove_onDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onConnectionFailedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onConnectionFailedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onConnectionConnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionConnectedEvent(System::Action_1<GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onConnectionConnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionConnectedEvent(System::Action_1<GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onConnectionDisconnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionDisconnectedEvent(System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onConnectionDisconnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionDisconnectedEvent(System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onLatencyUpdatedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onLatencyUpdatedEvent(System::Action_2<GlobalNamespace::IConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::add_onLatencyUpdatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onLatencyUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onLatencyUpdatedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onLatencyUpdatedEvent(System::Action_2<GlobalNamespace::IConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::remove_onLatencyUpdatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onLatencyUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onReceivedDataEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onReceivedDataEvent(System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::add_onReceivedDataEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onReceivedDataEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onReceivedDataEvent(System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::remove_onReceivedDataEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onReceiveUnconnectedDataEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onReceiveUnconnectedDataEvent(System::Action_2<System::Net::IPEndPoint*, LiteNetLib::Utils::NetDataReader*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::add_onReceiveUnconnectedDataEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onReceiveUnconnectedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onReceiveUnconnectedDataEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onReceiveUnconnectedDataEvent(System::Action_2<System::Net::IPEndPoint*, LiteNetLib::Utils::NetDataReader*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::remove_onReceiveUnconnectedDataEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onReceiveUnconnectedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onStatisticsUpdatedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onStatisticsUpdatedEvent(GlobalNamespace::LiteNetLibConnectionManager::StatisticsUpdated* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::add_onStatisticsUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onStatisticsUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onStatisticsUpdatedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onStatisticsUpdatedEvent(GlobalNamespace::LiteNetLibConnectionManager::StatisticsUpdated* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::remove_onStatisticsUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onStatisticsUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.SendToAll
void GlobalNamespace::LiteNetLibConnectionManager::SendToAll(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::SendToAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer, deliveryMethod);
}
// Autogenerated method: LiteNetLibConnectionManager.SendToAll
void GlobalNamespace::LiteNetLibConnectionManager::SendToAll(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod, GlobalNamespace::IConnection* excludingConnection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::SendToAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod), ::il2cpp_utils::ExtractType(excludingConnection)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer, deliveryMethod, excludingConnection);
}
// Autogenerated method: LiteNetLibConnectionManager.SendUnconnected
void GlobalNamespace::LiteNetLibConnectionManager::SendUnconnected(System::Net::IPEndPoint* remoteEndPoint, LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::SendUnconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendUnconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, remoteEndPoint, writer);
}
// Autogenerated method: LiteNetLibConnectionManager.PollUpdate
void GlobalNamespace::LiteNetLibConnectionManager::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.SetSecret
void GlobalNamespace::LiteNetLibConnectionManager::SetSecret(::Il2CppString* secret) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::SetSecret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSecret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secret)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, secret);
}
// Autogenerated method: LiteNetLibConnectionManager.ConnectToEndPoint
void GlobalNamespace::LiteNetLibConnectionManager::ConnectToEndPoint(System::Net::IPEndPoint* remoteEndPoint, ::Il2CppString* remoteUserId, ::Il2CppString* remoteUserName, bool remoteUserIsConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectToEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(remoteUserId), ::il2cpp_utils::ExtractType(remoteUserName), ::il2cpp_utils::ExtractType(remoteUserIsConnectionOwner)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, remoteEndPoint, remoteUserId, remoteUserName, remoteUserIsConnectionOwner);
}
// Autogenerated method: LiteNetLibConnectionManager.Dispose
void GlobalNamespace::LiteNetLibConnectionManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.DisposeAsync
System::Threading::Tasks::Task* GlobalNamespace::LiteNetLibConnectionManager::DisposeAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::DisposeAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposeAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.DisposeInternal
void GlobalNamespace::LiteNetLibConnectionManager::DisposeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::DisposeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.Disconnect
void GlobalNamespace::LiteNetLibConnectionManager::Disconnect(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::Disconnect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disconnectedReason);
}
// Autogenerated method: LiteNetLibConnectionManager.DisconnectInternal
void GlobalNamespace::LiteNetLibConnectionManager::DisconnectInternal(GlobalNamespace::DisconnectedReason disconnectedReason, GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::DisconnectInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason), ::il2cpp_utils::ExtractType(connectionFailedReason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disconnectedReason, connectionFailedReason);
}
// Autogenerated method: LiteNetLibConnectionManager.TryStartNetManager
bool GlobalNamespace::LiteNetLibConnectionManager::TryStartNetManager(int port, bool enableBackgroundSentry) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::TryStartNetManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryStartNetManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(enableBackgroundSentry)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, port, enableBackgroundSentry);
}
// Autogenerated method: LiteNetLibConnectionManager.StartBackgroundSentry
void GlobalNamespace::LiteNetLibConnectionManager::StartBackgroundSentry() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::StartBackgroundSentry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartBackgroundSentry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.CheckSentryState
void GlobalNamespace::LiteNetLibConnectionManager::CheckSentryState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::CheckSentryState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckSentryState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.UpdateStatistics
void GlobalNamespace::LiteNetLibConnectionManager::UpdateStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::UpdateStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.GetConnection
GlobalNamespace::IConnection* GlobalNamespace::LiteNetLibConnectionManager::GetConnection(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::GetConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnection*, false>(___instance_arg, ___internal__method, index);
}
// Autogenerated method: LiteNetLibConnectionManager.IsConnectedToUser
bool GlobalNamespace::LiteNetLibConnectionManager::IsConnectedToUser(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::IsConnectedToUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsConnectedToUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: LiteNetLibConnectionManager.HasConnectionToEndPoint
bool GlobalNamespace::LiteNetLibConnectionManager::HasConnectionToEndPoint(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::HasConnectionToEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasConnectionToEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, endPoint);
}
// Autogenerated method: LiteNetLibConnectionManager.HasPendingConnectionToEndPoint
bool GlobalNamespace::LiteNetLibConnectionManager::HasPendingConnectionToEndPoint(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::HasPendingConnectionToEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasPendingConnectionToEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, endPoint);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnPeerConnected
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnPeerConnected(LiteNetLib::NetPeer* peer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnPeerConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnPeerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, peer);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnNetworkError
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnNetworkError(System::Net::IPEndPoint* endPoint, System::Net::Sockets::SocketError socketError) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnNetworkError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(socketError)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endPoint, socketError);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnNetworkLatencyUpdate
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnNetworkLatencyUpdate(LiteNetLib::NetPeer* peer, int latencyMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnNetworkLatencyUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkLatencyUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(latencyMs)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, peer, latencyMs);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnConnectionRequest
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnConnectionRequest(LiteNetLib::ConnectionRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnConnectionRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnConnectionRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, request);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnPeerDisconnected
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnPeerDisconnected(LiteNetLib::NetPeer* peer, LiteNetLib::DisconnectInfo disconnectInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnPeerDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnPeerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(disconnectInfo)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, peer, disconnectInfo);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnNetworkReceive
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnNetworkReceive(LiteNetLib::NetPeer* peer, LiteNetLib::NetPacketReader* reader, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnNetworkReceive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, peer, reader, deliveryMethod);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnNetworkReceiveUnconnected(System::Net::IPEndPoint* remoteEndPoint, LiteNetLib::NetPacketReader* reader, LiteNetLib::UnconnectedMessageType messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(messageType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, remoteEndPoint, reader, messageType);
}
// Autogenerated method: LiteNetLibConnectionManager.GetConnection
GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection* GlobalNamespace::LiteNetLibConnectionManager::GetConnection(LiteNetLib::NetPeer* peer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::GetConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*, false>(___instance_arg, ___internal__method, peer);
}
// Autogenerated method: LiteNetLibConnectionManager.AcceptAllPendingRequests
void GlobalNamespace::LiteNetLibConnectionManager::AcceptAllPendingRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::AcceptAllPendingRequests");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcceptAllPendingRequests", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.TryAccept
void GlobalNamespace::LiteNetLibConnectionManager::TryAccept(LiteNetLib::ConnectionRequest* request, ::Il2CppString* userId, ::Il2CppString* userName, bool isConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::TryAccept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAccept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(isConnectionOwner)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, request, userId, userName, isConnectionOwner);
}
// Autogenerated method: LiteNetLibConnectionManager.CreatePendingConnection
void GlobalNamespace::LiteNetLibConnectionManager::CreatePendingConnection(LiteNetLib::NetPeer* peer, ::Il2CppString* userId, ::Il2CppString* userName, bool isConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::CreatePendingConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePendingConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(isConnectionOwner)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, peer, userId, userName, isConnectionOwner);
}
// Autogenerated method: LiteNetLibConnectionManager.RemoveConnection
void GlobalNamespace::LiteNetLibConnectionManager::RemoveConnection(LiteNetLib::NetPeer* netPeer, LiteNetLib::DisconnectReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::RemoveConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(netPeer), ::il2cpp_utils::ExtractType(reason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, netPeer, reason);
}
// Autogenerated method: LiteNetLibConnectionManager.TryDisconnect
void GlobalNamespace::LiteNetLibConnectionManager::TryDisconnect(LiteNetLib::DisconnectReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::TryDisconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDisconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reason);
}
// Autogenerated method: LiteNetLibConnectionManager.ToDisconnectedReason
GlobalNamespace::DisconnectedReason GlobalNamespace::LiteNetLibConnectionManager::ToDisconnectedReason(LiteNetLib::DisconnectReason disconnectReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ToDisconnectedReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDisconnectedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectReason)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::DisconnectedReason, false>(___instance_arg, ___internal__method, disconnectReason);
}
// Autogenerated method: LiteNetLibConnectionManager.ToConnectionFailedReason
GlobalNamespace::ConnectionFailedReason GlobalNamespace::LiteNetLibConnectionManager::ToConnectionFailedReason(LiteNetLib::DisconnectReason disconnectReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ToConnectionFailedReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToConnectionFailedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectReason)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ConnectionFailedReason, false>(___instance_arg, ___internal__method, disconnectReason);
}
// Autogenerated method: LiteNetLibConnectionManager.GetConnectionMessage
LiteNetLib::Utils::NetDataWriter* GlobalNamespace::LiteNetLibConnectionManager::GetConnectionMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::GetConnectionMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectionMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::Utils::NetDataWriter*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.ParseConnectionMessage
bool GlobalNamespace::LiteNetLibConnectionManager::ParseConnectionMessage(LiteNetLib::Utils::NetDataReader* reader, ByRef<::Il2CppString*> secret, ByRef<::Il2CppString*> userId, ByRef<::Il2CppString*> userName, ByRef<bool> isConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ParseConnectionMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseConnectionMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, reader, byref(secret), byref(userId), byref(userName), byref(isConnectionOwner));
}
// Autogenerated method: LiteNetLibConnectionManager.BackgroundDisconnectSentry
System::Threading::Tasks::Task* GlobalNamespace::LiteNetLibConnectionManager::BackgroundDisconnectSentry() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::BackgroundDisconnectSentry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackgroundDisconnectSentry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.BackgroundShutdownSentry
System::Threading::Tasks::Task* GlobalNamespace::LiteNetLibConnectionManager::BackgroundShutdownSentry() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::BackgroundShutdownSentry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackgroundShutdownSentry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.Log
void GlobalNamespace::LiteNetLibConnectionManager::Log(::Il2CppString* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, msg);
}
// Autogenerated method: LiteNetLibConnectionManager.LogError
void GlobalNamespace::LiteNetLibConnectionManager::LogError(::Il2CppString* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, msg);
}
// Autogenerated method: LiteNetLibConnectionManager.<DisposeAsync>b__97_0
void GlobalNamespace::LiteNetLibConnectionManager::$DisposeAsync$b__97_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::<DisposeAsync>b__97_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DisposeAsync>b__97_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/NetworkMode
#include "GlobalNamespace/LiteNetLibConnectionManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/NetworkMode None
GlobalNamespace::LiteNetLibConnectionManager::NetworkMode GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LiteNetLibConnectionManager::NetworkMode>("", "LiteNetLibConnectionManager/NetworkMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/NetworkMode None
void GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_set_None(GlobalNamespace::LiteNetLibConnectionManager::NetworkMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/NetworkMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/NetworkMode Client
GlobalNamespace::LiteNetLibConnectionManager::NetworkMode GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_get_Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_get_Client");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LiteNetLibConnectionManager::NetworkMode>("", "LiteNetLibConnectionManager/NetworkMode", "Client"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/NetworkMode Client
void GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_set_Client(GlobalNamespace::LiteNetLibConnectionManager::NetworkMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_set_Client");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/NetworkMode", "Client", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/NetworkMode Server
GlobalNamespace::LiteNetLibConnectionManager::NetworkMode GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_get_Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_get_Server");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LiteNetLibConnectionManager::NetworkMode>("", "LiteNetLibConnectionManager/NetworkMode", "Server"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/NetworkMode Server
void GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_set_Server(GlobalNamespace::LiteNetLibConnectionManager::NetworkMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_set_Server");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/NetworkMode", "Server", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/ConnectionState
#include "GlobalNamespace/LiteNetLibConnectionManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/ConnectionState Unconnected
GlobalNamespace::LiteNetLibConnectionManager::ConnectionState GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Unconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Unconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LiteNetLibConnectionManager::ConnectionState>("", "LiteNetLibConnectionManager/ConnectionState", "Unconnected"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/ConnectionState Unconnected
void GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Unconnected(GlobalNamespace::LiteNetLibConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Unconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/ConnectionState", "Unconnected", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/ConnectionState Connecting
GlobalNamespace::LiteNetLibConnectionManager::ConnectionState GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LiteNetLibConnectionManager::ConnectionState>("", "LiteNetLibConnectionManager/ConnectionState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/ConnectionState Connecting
void GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Connecting(GlobalNamespace::LiteNetLibConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/ConnectionState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/ConnectionState Connected
GlobalNamespace::LiteNetLibConnectionManager::ConnectionState GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LiteNetLibConnectionManager::ConnectionState>("", "LiteNetLibConnectionManager/ConnectionState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/ConnectionState Connected
void GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Connected(GlobalNamespace::LiteNetLibConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/ConnectionState", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/ConnectionState Disconnecting
GlobalNamespace::LiteNetLibConnectionManager::ConnectionState GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Disconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Disconnecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LiteNetLibConnectionManager::ConnectionState>("", "LiteNetLibConnectionManager/ConnectionState", "Disconnecting"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/ConnectionState Disconnecting
void GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Disconnecting(GlobalNamespace::LiteNetLibConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Disconnecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/ConnectionState", "Disconnecting", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLibConnectionManager/LiteNetLibConnectionParamsBase
#include "GlobalNamespace/LiteNetLibConnectionManager_LiteNetLibConnectionParamsBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
::Il2CppString*& GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
::Il2CppString*& GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String secret
::Il2CppString*& GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 port
int& GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean filterUnencryptedTraffic
bool& GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_filterUnencryptedTraffic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_filterUnencryptedTraffic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filterUnencryptedTraffic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableUnconnectedMessages
bool& GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_enableUnconnectedMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_enableUnconnectedMessages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableUnconnectedMessages"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableBackgroundSentry
bool& GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_enableBackgroundSentry() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_enableBackgroundSentry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableBackgroundSentry"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableStatistics
bool& GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_enableStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_enableStatistics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableStatistics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 disconnectTimeoutMs
int& GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_disconnectTimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_disconnectTimeoutMs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disconnectTimeoutMs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/StartServerParams
#include "GlobalNamespace/LiteNetLibConnectionManager_StartServerParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/StartClientParams
#include "GlobalNamespace/LiteNetLibConnectionManager_StartClientParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLibConnectionManager/ConnectToServerParams
#include "GlobalNamespace/LiteNetLibConnectionManager_ConnectToServerParams.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint endPoint
System::Net::IPEndPoint*& GlobalNamespace::LiteNetLibConnectionManager::ConnectToServerParams::dyn_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectToServerParams::dyn_endPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String serverUserId
::Il2CppString*& GlobalNamespace::LiteNetLibConnectionManager::ConnectToServerParams::dyn_serverUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectToServerParams::dyn_serverUserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverUserId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String serverUserName
::Il2CppString*& GlobalNamespace::LiteNetLibConnectionManager::ConnectToServerParams::dyn_serverUserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectToServerParams::dyn_serverUserName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverUserName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean serverIsConnectionOwner
bool& GlobalNamespace::LiteNetLibConnectionManager::ConnectToServerParams::dyn_serverIsConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::ConnectToServerParams::dyn_serverIsConnectionOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverIsConnectionOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLibConnectionManager/NetPeerConnectionRequest
#include "GlobalNamespace/LiteNetLibConnectionManager_NetPeerConnectionRequest.hpp"
// Including type: LiteNetLib.ConnectionRequest
#include "LiteNetLib/ConnectionRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userId
::Il2CppString*& GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::dyn__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::dyn__userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userName
::Il2CppString*& GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::dyn__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::dyn__userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isConnectionOwner
bool& GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::dyn__isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::dyn__isConnectionOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isConnectionOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.ConnectionRequest _request
LiteNetLib::ConnectionRequest*& GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::dyn__request() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::dyn__request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_request"))->offset;
  return *reinterpret_cast<LiteNetLib::ConnectionRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnectionRequest.get_userId
::Il2CppString* GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_userId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnectionRequest.get_userName
::Il2CppString* GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_userName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnectionRequest.get_isConnectionOwner
bool GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_isConnectionOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnectionRequest.get_endPoint
System::Net::IPEndPoint* GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_endPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPEndPoint*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnectionRequest.Accept
LiteNetLib::NetPeer* GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::Accept() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::NetPeer*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLibConnectionManager/NetPeerConnection
#include "GlobalNamespace/LiteNetLibConnectionManager_NetPeerConnection.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.DeliveryMethod
#include "LiteNetLib/DeliveryMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userId
::Il2CppString*& GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::dyn__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::dyn__userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userName
::Il2CppString*& GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::dyn__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::dyn__userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isConnectionOwner
bool& GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::dyn__isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::dyn__isConnectionOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isConnectionOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly LiteNetLib.NetPeer netPeer
LiteNetLib::NetPeer*& GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::dyn_netPeer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::dyn_netPeer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "netPeer"))->offset;
  return *reinterpret_cast<LiteNetLib::NetPeer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.get_userId
::Il2CppString* GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.get_userName
::Il2CppString* GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.get_isConnectionOwner
bool GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.Send
void GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Send(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Send");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer, deliveryMethod);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.Equals
bool GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Equals(GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, other);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.Disconnect
void GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Disconnect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.Equals
bool GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, obj);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.GetHashCode
int GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLibConnectionManager/StatisticsUpdated
#include "GlobalNamespace/LiteNetLibConnectionManager_StatisticsUpdated.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLibConnectionManager/StatisticsUpdated.Invoke
void GlobalNamespace::LiteNetLibConnectionManager::StatisticsUpdated::Invoke(int64_t packetsSent, int64_t packetsReceived, int64_t bytesSent, int64_t bytesReceived, int64_t packetsLost, int64_t packetsSentEncrypted, int64_t packetsSentPlaintext, int64_t packetsSentRejected, int64_t packetsReceivedEncrypted, int64_t packetsReceivedPlaintext, int64_t packetsReceivedRejected, int64_t encryptionProcessingTime, int64_t decryptionProcessingTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::StatisticsUpdated::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packetsSent), ::il2cpp_utils::ExtractType(packetsReceived), ::il2cpp_utils::ExtractType(bytesSent), ::il2cpp_utils::ExtractType(bytesReceived), ::il2cpp_utils::ExtractType(packetsLost), ::il2cpp_utils::ExtractType(packetsSentEncrypted), ::il2cpp_utils::ExtractType(packetsSentPlaintext), ::il2cpp_utils::ExtractType(packetsSentRejected), ::il2cpp_utils::ExtractType(packetsReceivedEncrypted), ::il2cpp_utils::ExtractType(packetsReceivedPlaintext), ::il2cpp_utils::ExtractType(packetsReceivedRejected), ::il2cpp_utils::ExtractType(encryptionProcessingTime), ::il2cpp_utils::ExtractType(decryptionProcessingTime)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packetsSent, packetsReceived, bytesSent, bytesReceived, packetsLost, packetsSentEncrypted, packetsSentPlaintext, packetsSentRejected, packetsReceivedEncrypted, packetsReceivedPlaintext, packetsReceivedRejected, encryptionProcessingTime, decryptionProcessingTime);
}
// Autogenerated method: LiteNetLibConnectionManager/StatisticsUpdated.BeginInvoke
System::IAsyncResult* GlobalNamespace::LiteNetLibConnectionManager::StatisticsUpdated::BeginInvoke(int64_t packetsSent, int64_t packetsReceived, int64_t bytesSent, int64_t bytesReceived, int64_t packetsLost, int64_t packetsSentEncrypted, int64_t packetsSentPlaintext, int64_t packetsSentRejected, int64_t packetsReceivedEncrypted, int64_t packetsReceivedPlaintext, int64_t packetsReceivedRejected, int64_t encryptionProcessingTime, int64_t decryptionProcessingTime, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::StatisticsUpdated::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packetsSent), ::il2cpp_utils::ExtractType(packetsReceived), ::il2cpp_utils::ExtractType(bytesSent), ::il2cpp_utils::ExtractType(bytesReceived), ::il2cpp_utils::ExtractType(packetsLost), ::il2cpp_utils::ExtractType(packetsSentEncrypted), ::il2cpp_utils::ExtractType(packetsSentPlaintext), ::il2cpp_utils::ExtractType(packetsSentRejected), ::il2cpp_utils::ExtractType(packetsReceivedEncrypted), ::il2cpp_utils::ExtractType(packetsReceivedPlaintext), ::il2cpp_utils::ExtractType(packetsReceivedRejected), ::il2cpp_utils::ExtractType(encryptionProcessingTime), ::il2cpp_utils::ExtractType(decryptionProcessingTime), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, packetsSent, packetsReceived, bytesSent, bytesReceived, packetsLost, packetsSentEncrypted, packetsSentPlaintext, packetsSentRejected, packetsReceivedEncrypted, packetsReceivedPlaintext, packetsReceivedRejected, encryptionProcessingTime, decryptionProcessingTime, callback, object);
}
// Autogenerated method: LiteNetLibConnectionManager/StatisticsUpdated.EndInvoke
void GlobalNamespace::LiteNetLibConnectionManager::StatisticsUpdated::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::StatisticsUpdated::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/<>c
#include "GlobalNamespace/LiteNetLibConnectionManager_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: LiteNetLibConnectionManager/NetPeerConnection
#include "GlobalNamespace/LiteNetLibConnectionManager_NetPeerConnection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly LiteNetLibConnectionManager/<>c <>9
GlobalNamespace::LiteNetLibConnectionManager::$$c* GlobalNamespace::LiteNetLibConnectionManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::LiteNetLibConnectionManager::$$c*>("", "LiteNetLibConnectionManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly LiteNetLibConnectionManager/<>c <>9
void GlobalNamespace::LiteNetLibConnectionManager::$$c::_set_$$9(GlobalNamespace::LiteNetLibConnectionManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<LiteNetLibConnectionManager/NetPeerConnection> <>9__70_0
System::Predicate_1<GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*>* GlobalNamespace::LiteNetLibConnectionManager::$$c::_get_$$9__70_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$$c::_get_$$9__70_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Predicate_1<GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*>*>("", "LiteNetLibConnectionManager/<>c", "<>9__70_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<LiteNetLibConnectionManager/NetPeerConnection> <>9__70_0
void GlobalNamespace::LiteNetLibConnectionManager::$$c::_set_$$9__70_0(System::Predicate_1<GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$$c::_set_$$9__70_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/<>c", "<>9__70_0", value)));
}
// Autogenerated method: LiteNetLibConnectionManager/<>c..cctor
void GlobalNamespace::LiteNetLibConnectionManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LiteNetLibConnectionManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/<>c.<get_hasConnectionOwner>b__70_0
bool GlobalNamespace::LiteNetLibConnectionManager::$$c::$get_hasConnectionOwner$b__70_0(GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$$c::<get_hasConnectionOwner>b__70_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_hasConnectionOwner>b__70_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/<BackgroundDisconnectSentry>d__126
#include "GlobalNamespace/LiteNetLibConnectionManager_-BackgroundDisconnectSentry-d__126.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__126::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__126::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__126::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__126::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LiteNetLibConnectionManager <>4__this
GlobalNamespace::LiteNetLibConnectionManager*& GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__126::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__126::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::LiteNetLibConnectionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
System::Threading::CancellationToken& GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__126::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__126::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__126::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__126::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LiteNetLibConnectionManager/<BackgroundDisconnectSentry>d__126.MoveNext
void GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__126::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__126::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/<BackgroundDisconnectSentry>d__126.SetStateMachine
void GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__126::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__126::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/<BackgroundShutdownSentry>d__127
#include "GlobalNamespace/LiteNetLibConnectionManager_-BackgroundShutdownSentry-d__127.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__127::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__127::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__127::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__127::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LiteNetLibConnectionManager <>4__this
GlobalNamespace::LiteNetLibConnectionManager*& GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__127::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__127::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::LiteNetLibConnectionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
System::Threading::CancellationToken& GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__127::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__127::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__127::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__127::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LiteNetLibConnectionManager/<BackgroundShutdownSentry>d__127.MoveNext
void GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__127::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__127::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/<BackgroundShutdownSentry>d__127.SetStateMachine
void GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__127::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__127::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseMasterServerAcknowledgeMessage
#include "GlobalNamespace/BaseMasterServerAcknowledgeMessage.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <messageHandled>k__BackingField
bool& GlobalNamespace::BaseMasterServerAcknowledgeMessage::dyn_$messageHandled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerAcknowledgeMessage::dyn_$messageHandled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<messageHandled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseMasterServerAcknowledgeMessage.get_messageHandled
bool GlobalNamespace::BaseMasterServerAcknowledgeMessage::get_messageHandled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerAcknowledgeMessage::get_messageHandled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_messageHandled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseMasterServerAcknowledgeMessage.set_messageHandled
void GlobalNamespace::BaseMasterServerAcknowledgeMessage::set_messageHandled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerAcknowledgeMessage::set_messageHandled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_messageHandled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: BaseMasterServerAcknowledgeMessage.Init
GlobalNamespace::BaseMasterServerAcknowledgeMessage* GlobalNamespace::BaseMasterServerAcknowledgeMessage::Init(bool messageHandled) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerAcknowledgeMessage::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageHandled)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseMasterServerAcknowledgeMessage*, false>(___instance_arg, ___internal__method, messageHandled);
}
// Autogenerated method: BaseMasterServerAcknowledgeMessage.get_resultCode
uint8_t GlobalNamespace::BaseMasterServerAcknowledgeMessage::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerAcknowledgeMessage::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseMasterServerAcknowledgeMessage.get_resultCodeString
::Il2CppString* GlobalNamespace::BaseMasterServerAcknowledgeMessage::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerAcknowledgeMessage::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseMasterServerAcknowledgeMessage.Serialize
void GlobalNamespace::BaseMasterServerAcknowledgeMessage::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerAcknowledgeMessage::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: BaseMasterServerAcknowledgeMessage.Deserialize
void GlobalNamespace::BaseMasterServerAcknowledgeMessage::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerAcknowledgeMessage::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseMasterServerReliableRequest
#include "GlobalNamespace/BaseMasterServerReliableRequest.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <requestId>k__BackingField
uint& GlobalNamespace::BaseMasterServerReliableRequest::dyn_$requestId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableRequest::dyn_$requestId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<requestId>k__BackingField"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseMasterServerReliableRequest.get_requestId
uint GlobalNamespace::BaseMasterServerReliableRequest::get_requestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableRequest::get_requestId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableRequest.set_requestId
void GlobalNamespace::BaseMasterServerReliableRequest::set_requestId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableRequest::set_requestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_requestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: BaseMasterServerReliableRequest.Serialize
void GlobalNamespace::BaseMasterServerReliableRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: BaseMasterServerReliableRequest.Deserialize
void GlobalNamespace::BaseMasterServerReliableRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: BaseMasterServerReliableRequest.Release
void GlobalNamespace::BaseMasterServerReliableRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableRequest.MasterServer.IMasterServerReliableRequest.WithRequestId
MasterServer::IMasterServerReliableRequest* GlobalNamespace::BaseMasterServerReliableRequest::MasterServer_IMasterServerReliableRequest_WithRequestId(uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableRequest::MasterServer.IMasterServerReliableRequest.WithRequestId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MasterServer.IMasterServerReliableRequest.WithRequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerReliableRequest*, false>(___instance_arg, ___internal__method, requestId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseMasterServerReliableResponse
#include "GlobalNamespace/BaseMasterServerReliableResponse.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <requestId>k__BackingField
uint& GlobalNamespace::BaseMasterServerReliableResponse::dyn_$requestId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::dyn_$requestId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<requestId>k__BackingField"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <responseId>k__BackingField
uint& GlobalNamespace::BaseMasterServerReliableResponse::dyn_$responseId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::dyn_$responseId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<responseId>k__BackingField"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseMasterServerReliableResponse.get_requestId
uint GlobalNamespace::BaseMasterServerReliableResponse::get_requestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::get_requestId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableResponse.set_requestId
void GlobalNamespace::BaseMasterServerReliableResponse::set_requestId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::set_requestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_requestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: BaseMasterServerReliableResponse.get_responseId
uint GlobalNamespace::BaseMasterServerReliableResponse::get_responseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::get_responseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_responseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableResponse.set_responseId
void GlobalNamespace::BaseMasterServerReliableResponse::set_responseId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::set_responseId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_responseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: BaseMasterServerReliableResponse.get_resultCode
uint8_t GlobalNamespace::BaseMasterServerReliableResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableResponse.get_resultCodeString
::Il2CppString* GlobalNamespace::BaseMasterServerReliableResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableResponse.Serialize
void GlobalNamespace::BaseMasterServerReliableResponse::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: BaseMasterServerReliableResponse.Deserialize
void GlobalNamespace::BaseMasterServerReliableResponse::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: BaseMasterServerReliableResponse.Release
void GlobalNamespace::BaseMasterServerReliableResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableResponse.MasterServer.IMasterServerReliableRequest.WithRequestId
MasterServer::IMasterServerReliableRequest* GlobalNamespace::BaseMasterServerReliableResponse::MasterServer_IMasterServerReliableRequest_WithRequestId(uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::MasterServer.IMasterServerReliableRequest.WithRequestId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MasterServer.IMasterServerReliableRequest.WithRequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerReliableRequest*, false>(___instance_arg, ___internal__method, requestId);
}
// Autogenerated method: BaseMasterServerReliableResponse.MasterServer.IMasterServerResponse.WithResponseId
MasterServer::IMasterServerResponse* GlobalNamespace::BaseMasterServerReliableResponse::MasterServer_IMasterServerResponse_WithResponseId(uint responseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::MasterServer.IMasterServerResponse.WithResponseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MasterServer.IMasterServerResponse.WithResponseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerResponse*, false>(___instance_arg, ___internal__method, responseId);
}
// Autogenerated method: BaseMasterServerReliableResponse.MasterServer.IMasterServerReliableResponse.WithRequestAndResponseId
MasterServer::IMasterServerReliableResponse* GlobalNamespace::BaseMasterServerReliableResponse::MasterServer_IMasterServerReliableResponse_WithRequestAndResponseId(uint requestId, uint responseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerReliableResponse::MasterServer.IMasterServerReliableResponse.WithRequestAndResponseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MasterServer.IMasterServerReliableResponse.WithRequestAndResponseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(responseId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerReliableResponse*, false>(___instance_arg, ___internal__method, requestId, responseId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseMasterServerResponse
#include "GlobalNamespace/BaseMasterServerResponse.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <responseId>k__BackingField
uint& GlobalNamespace::BaseMasterServerResponse::dyn_$responseId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerResponse::dyn_$responseId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<responseId>k__BackingField"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseMasterServerResponse.get_responseId
uint GlobalNamespace::BaseMasterServerResponse::get_responseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerResponse::get_responseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_responseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseMasterServerResponse.set_responseId
void GlobalNamespace::BaseMasterServerResponse::set_responseId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerResponse::set_responseId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_responseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: BaseMasterServerResponse.get_resultCode
uint8_t GlobalNamespace::BaseMasterServerResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseMasterServerResponse.get_resultCodeString
::Il2CppString* GlobalNamespace::BaseMasterServerResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseMasterServerResponse.Serialize
void GlobalNamespace::BaseMasterServerResponse::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: BaseMasterServerResponse.Deserialize
void GlobalNamespace::BaseMasterServerResponse::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: BaseMasterServerResponse.Release
void GlobalNamespace::BaseMasterServerResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseMasterServerResponse.MasterServer.IMasterServerResponse.WithResponseId
MasterServer::IMasterServerResponse* GlobalNamespace::BaseMasterServerResponse::MasterServer_IMasterServerResponse_WithResponseId(uint responseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMasterServerResponse::MasterServer.IMasterServerResponse.WithResponseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MasterServer.IMasterServerResponse.WithResponseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerResponse*, false>(___instance_arg, ___internal__method, responseId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DiscoveryPolicy
#include "GlobalNamespace/DiscoveryPolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public DiscoveryPolicy Hidden
GlobalNamespace::DiscoveryPolicy GlobalNamespace::DiscoveryPolicy::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DiscoveryPolicy::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DiscoveryPolicy>("", "DiscoveryPolicy", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public DiscoveryPolicy Hidden
void GlobalNamespace::DiscoveryPolicy::_set_Hidden(GlobalNamespace::DiscoveryPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DiscoveryPolicy::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DiscoveryPolicy", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public DiscoveryPolicy WithCode
GlobalNamespace::DiscoveryPolicy GlobalNamespace::DiscoveryPolicy::_get_WithCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DiscoveryPolicy::_get_WithCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DiscoveryPolicy>("", "DiscoveryPolicy", "WithCode"));
}
// Autogenerated static field setter
// Set static field: static public DiscoveryPolicy WithCode
void GlobalNamespace::DiscoveryPolicy::_set_WithCode(GlobalNamespace::DiscoveryPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DiscoveryPolicy::_set_WithCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DiscoveryPolicy", "WithCode", value));
}
// Autogenerated static field getter
// Get static field: static public DiscoveryPolicy Public
GlobalNamespace::DiscoveryPolicy GlobalNamespace::DiscoveryPolicy::_get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DiscoveryPolicy::_get_Public");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DiscoveryPolicy>("", "DiscoveryPolicy", "Public"));
}
// Autogenerated static field setter
// Set static field: static public DiscoveryPolicy Public
void GlobalNamespace::DiscoveryPolicy::_set_Public(GlobalNamespace::DiscoveryPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DiscoveryPolicy::_set_Public");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DiscoveryPolicy", "Public", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
uint8_t& GlobalNamespace::DiscoveryPolicy::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DiscoveryPolicy::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayServerControlSettings
#include "GlobalNamespace/GameplayServerControlSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GameplayServerControlSettings None
GlobalNamespace::GameplayServerControlSettings GlobalNamespace::GameplayServerControlSettings::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayServerControlSettings::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayServerControlSettings>("", "GameplayServerControlSettings", "None"));
}
// Autogenerated static field setter
// Set static field: static public GameplayServerControlSettings None
void GlobalNamespace::GameplayServerControlSettings::_set_None(GlobalNamespace::GameplayServerControlSettings value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayServerControlSettings::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayServerControlSettings", "None", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayServerControlSettings AllowModifierSelection
GlobalNamespace::GameplayServerControlSettings GlobalNamespace::GameplayServerControlSettings::_get_AllowModifierSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayServerControlSettings::_get_AllowModifierSelection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayServerControlSettings>("", "GameplayServerControlSettings", "AllowModifierSelection"));
}
// Autogenerated static field setter
// Set static field: static public GameplayServerControlSettings AllowModifierSelection
void GlobalNamespace::GameplayServerControlSettings::_set_AllowModifierSelection(GlobalNamespace::GameplayServerControlSettings value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayServerControlSettings::_set_AllowModifierSelection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayServerControlSettings", "AllowModifierSelection", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayServerControlSettings AllowSpectate
GlobalNamespace::GameplayServerControlSettings GlobalNamespace::GameplayServerControlSettings::_get_AllowSpectate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayServerControlSettings::_get_AllowSpectate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayServerControlSettings>("", "GameplayServerControlSettings", "AllowSpectate"));
}
// Autogenerated static field setter
// Set static field: static public GameplayServerControlSettings AllowSpectate
void GlobalNamespace::GameplayServerControlSettings::_set_AllowSpectate(GlobalNamespace::GameplayServerControlSettings value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayServerControlSettings::_set_AllowSpectate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayServerControlSettings", "AllowSpectate", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayServerControlSettings All
GlobalNamespace::GameplayServerControlSettings GlobalNamespace::GameplayServerControlSettings::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayServerControlSettings::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayServerControlSettings>("", "GameplayServerControlSettings", "All"));
}
// Autogenerated static field setter
// Set static field: static public GameplayServerControlSettings All
void GlobalNamespace::GameplayServerControlSettings::_set_All(GlobalNamespace::GameplayServerControlSettings value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayServerControlSettings::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayServerControlSettings", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::GameplayServerControlSettings::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayServerControlSettings::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayServerMode
#include "GlobalNamespace/GameplayServerMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GameplayServerMode Countdown
GlobalNamespace::GameplayServerMode GlobalNamespace::GameplayServerMode::_get_Countdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayServerMode::_get_Countdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayServerMode>("", "GameplayServerMode", "Countdown"));
}
// Autogenerated static field setter
// Set static field: static public GameplayServerMode Countdown
void GlobalNamespace::GameplayServerMode::_set_Countdown(GlobalNamespace::GameplayServerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayServerMode::_set_Countdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayServerMode", "Countdown", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayServerMode Managed
GlobalNamespace::GameplayServerMode GlobalNamespace::GameplayServerMode::_get_Managed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayServerMode::_get_Managed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayServerMode>("", "GameplayServerMode", "Managed"));
}
// Autogenerated static field setter
// Set static field: static public GameplayServerMode Managed
void GlobalNamespace::GameplayServerMode::_set_Managed(GlobalNamespace::GameplayServerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayServerMode::_set_Managed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayServerMode", "Managed", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayServerMode QuickStartOneSong
GlobalNamespace::GameplayServerMode GlobalNamespace::GameplayServerMode::_get_QuickStartOneSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayServerMode::_get_QuickStartOneSong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayServerMode>("", "GameplayServerMode", "QuickStartOneSong"));
}
// Autogenerated static field setter
// Set static field: static public GameplayServerMode QuickStartOneSong
void GlobalNamespace::GameplayServerMode::_set_QuickStartOneSong(GlobalNamespace::GameplayServerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayServerMode::_set_QuickStartOneSong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayServerMode", "QuickStartOneSong", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::GameplayServerMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayServerMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InvitePolicy
#include "GlobalNamespace/InvitePolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public InvitePolicy OnlyConnectionOwnerCanInvite
GlobalNamespace::InvitePolicy GlobalNamespace::InvitePolicy::_get_OnlyConnectionOwnerCanInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InvitePolicy::_get_OnlyConnectionOwnerCanInvite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::InvitePolicy>("", "InvitePolicy", "OnlyConnectionOwnerCanInvite"));
}
// Autogenerated static field setter
// Set static field: static public InvitePolicy OnlyConnectionOwnerCanInvite
void GlobalNamespace::InvitePolicy::_set_OnlyConnectionOwnerCanInvite(GlobalNamespace::InvitePolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InvitePolicy::_set_OnlyConnectionOwnerCanInvite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InvitePolicy", "OnlyConnectionOwnerCanInvite", value));
}
// Autogenerated static field getter
// Get static field: static public InvitePolicy AnyoneCanInvite
GlobalNamespace::InvitePolicy GlobalNamespace::InvitePolicy::_get_AnyoneCanInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InvitePolicy::_get_AnyoneCanInvite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::InvitePolicy>("", "InvitePolicy", "AnyoneCanInvite"));
}
// Autogenerated static field setter
// Set static field: static public InvitePolicy AnyoneCanInvite
void GlobalNamespace::InvitePolicy::_set_AnyoneCanInvite(GlobalNamespace::InvitePolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InvitePolicy::_set_AnyoneCanInvite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InvitePolicy", "AnyoneCanInvite", value));
}
// Autogenerated static field getter
// Get static field: static public InvitePolicy NobodyCanInvite
GlobalNamespace::InvitePolicy GlobalNamespace::InvitePolicy::_get_NobodyCanInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InvitePolicy::_get_NobodyCanInvite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::InvitePolicy>("", "InvitePolicy", "NobodyCanInvite"));
}
// Autogenerated static field setter
// Set static field: static public InvitePolicy NobodyCanInvite
void GlobalNamespace::InvitePolicy::_set_NobodyCanInvite(GlobalNamespace::InvitePolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InvitePolicy::_set_NobodyCanInvite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InvitePolicy", "NobodyCanInvite", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::InvitePolicy::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InvitePolicy::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerConnectionManager
#include "GlobalNamespace/MasterServerConnectionManager.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: MasterServerConnectionManager/MasterServerConnectionManagerParamsBase
#include "GlobalNamespace/MasterServerConnectionManager_MasterServerConnectionManagerParamsBase.hpp"
// Including type: MasterServerConnectionManager/ConnectToServerParams
#include "GlobalNamespace/MasterServerConnectionManager_ConnectToServerParams.hpp"
// Including type: MasterServerConnectionManager/StartClientParams
#include "GlobalNamespace/MasterServerConnectionManager_StartClientParams.hpp"
// Including type: MasterServerConnectionManager/<ConnectToEndPoint>d__84
#include "GlobalNamespace/MasterServerConnectionManager_-ConnectToEndPoint-d__84.hpp"
// Including type: MasterServer.ITimeProvider
#include "MasterServer/ITimeProvider.hpp"
// Including type: LiteNetLibConnectionManager
#include "GlobalNamespace/LiteNetLibConnectionManager.hpp"
// Including type: MasterServer.UserMessageHandler
#include "MasterServer/UserMessageHandler.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: MasterServerEndPoint
#include "GlobalNamespace/MasterServerEndPoint.hpp"
// Including type: IAuthenticationTokenProvider
#include "GlobalNamespace/IAuthenticationTokenProvider.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly MasterServer.ITimeProvider _timeProvider
MasterServer::ITimeProvider*& GlobalNamespace::MasterServerConnectionManager::dyn__timeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::dyn__timeProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeProvider"))->offset;
  return *reinterpret_cast<MasterServer::ITimeProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLibConnectionManager _liteNetLibConnectionManager
GlobalNamespace::LiteNetLibConnectionManager*& GlobalNamespace::MasterServerConnectionManager::dyn__liteNetLibConnectionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::dyn__liteNetLibConnectionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_liteNetLibConnectionManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::LiteNetLibConnectionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _code
::Il2CppString*& GlobalNamespace::MasterServerConnectionManager::dyn__code() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::dyn__code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_code"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MasterServer.UserMessageHandler _messageHandler
MasterServer::UserMessageHandler*& GlobalNamespace::MasterServerConnectionManager::dyn__messageHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::dyn__messageHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_messageHandler"))->offset;
  return *reinterpret_cast<MasterServer::UserMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSelectionMask _selectionMask
GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::MasterServerConnectionManager::dyn__selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::dyn__selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionMask"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayServerConfiguration _configuration
GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::MasterServerConnectionManager::dyn__configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::dyn__configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_configuration"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _managerId
::Il2CppString*& GlobalNamespace::MasterServerConnectionManager::dyn__managerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::dyn__managerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_managerId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MasterServerConnectionManager/ConnectionState _connectionState
GlobalNamespace::MasterServerConnectionManager::ConnectionState& GlobalNamespace::MasterServerConnectionManager::dyn__connectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::dyn__connectionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionState"))->offset;
  return *reinterpret_cast<GlobalNamespace::MasterServerConnectionManager::ConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _connectionCancellationTokenSource
System::Threading::CancellationTokenSource*& GlobalNamespace::MasterServerConnectionManager::dyn__connectionCancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::dyn__connectionCancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionCancellationTokenSource"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action onConnectedEvent
System::Action*& GlobalNamespace::MasterServerConnectionManager::dyn_onConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::dyn_onConnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<DisconnectedReason> onDisconnectedEvent
System::Action_1<GlobalNamespace::DisconnectedReason>*& GlobalNamespace::MasterServerConnectionManager::dyn_onDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::dyn_onDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onDisconnectedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::DisconnectedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ConnectionFailedReason> onConnectionFailedEvent
System::Action_1<GlobalNamespace::ConnectionFailedReason>*& GlobalNamespace::MasterServerConnectionManager::dyn_onConnectionFailedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::dyn_onConnectionFailedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectionFailedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::ConnectionFailedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnection> onConnectionConnectedEvent
System::Action_1<GlobalNamespace::IConnection*>*& GlobalNamespace::MasterServerConnectionManager::dyn_onConnectionConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::dyn_onConnectionConnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectionConnectedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::IConnection*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<IConnection,DisconnectedReason> onConnectionDisconnectedEvent
System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>*& GlobalNamespace::MasterServerConnectionManager::dyn_onConnectionDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::dyn_onConnectionDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectionDisconnectedEvent"))->offset;
  return *reinterpret_cast<System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<IConnection,System.Single> onLatencyUpdatedEvent
System::Action_2<GlobalNamespace::IConnection*, float>*& GlobalNamespace::MasterServerConnectionManager::dyn_onLatencyUpdatedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::dyn_onLatencyUpdatedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onLatencyUpdatedEvent"))->offset;
  return *reinterpret_cast<System::Action_2<GlobalNamespace::IConnection*, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<IConnection,LiteNetLib.Utils.NetDataReader,LiteNetLib.DeliveryMethod> onReceivedDataEvent
System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>*& GlobalNamespace::MasterServerConnectionManager::dyn_onReceivedDataEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::dyn_onReceivedDataEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onReceivedDataEvent"))->offset;
  return *reinterpret_cast<System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServerConnectionManager.get_userId
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_userName
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_isConnected
bool GlobalNamespace::MasterServerConnectionManager::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_isConnecting
bool GlobalNamespace::MasterServerConnectionManager::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_isConnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_isDisconnecting
bool GlobalNamespace::MasterServerConnectionManager::get_isDisconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_isDisconnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisconnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_connectionCount
int GlobalNamespace::MasterServerConnectionManager::get_connectionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_connectionCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_isConnectionOwner
bool GlobalNamespace::MasterServerConnectionManager::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_isDisposed
bool GlobalNamespace::MasterServerConnectionManager::get_isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_isDisposed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_port
int GlobalNamespace::MasterServerConnectionManager::get_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_secret
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_secret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_selectionMask
GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::MasterServerConnectionManager::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_selectionMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapLevelSelectionMask, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::MasterServerConnectionManager::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_configuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayServerConfiguration, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_managerId
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_managerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_managerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_managerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.get_code
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::get_code");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.add_onConnectedEvent
void GlobalNamespace::MasterServerConnectionManager::add_onConnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::add_onConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.remove_onConnectedEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onConnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::remove_onConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.add_onDisconnectedEvent
void GlobalNamespace::MasterServerConnectionManager::add_onDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::add_onDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.remove_onDisconnectedEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::remove_onDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.add_onConnectionFailedEvent
void GlobalNamespace::MasterServerConnectionManager::add_onConnectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::add_onConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.remove_onConnectionFailedEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onConnectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::remove_onConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.add_onConnectionConnectedEvent
void GlobalNamespace::MasterServerConnectionManager::add_onConnectionConnectedEvent(System::Action_1<GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::add_onConnectionConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.remove_onConnectionConnectedEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onConnectionConnectedEvent(System::Action_1<GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::remove_onConnectionConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.add_onConnectionDisconnectedEvent
void GlobalNamespace::MasterServerConnectionManager::add_onConnectionDisconnectedEvent(System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::add_onConnectionDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.remove_onConnectionDisconnectedEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onConnectionDisconnectedEvent(System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::remove_onConnectionDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.add_onLatencyUpdatedEvent
void GlobalNamespace::MasterServerConnectionManager::add_onLatencyUpdatedEvent(System::Action_2<GlobalNamespace::IConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::add_onLatencyUpdatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onLatencyUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.remove_onLatencyUpdatedEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onLatencyUpdatedEvent(System::Action_2<GlobalNamespace::IConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::remove_onLatencyUpdatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onLatencyUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.add_onReceivedDataEvent
void GlobalNamespace::MasterServerConnectionManager::add_onReceivedDataEvent(System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::add_onReceivedDataEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.remove_onReceivedDataEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onReceivedDataEvent(System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::remove_onReceivedDataEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServerConnectionManager.SendToAll
void GlobalNamespace::MasterServerConnectionManager::SendToAll(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::SendToAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer, deliveryMethod);
}
// Autogenerated method: MasterServerConnectionManager.SendToAll
void GlobalNamespace::MasterServerConnectionManager::SendToAll(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod, GlobalNamespace::IConnection* excludingConnection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::SendToAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod), ::il2cpp_utils::ExtractType(excludingConnection)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer, deliveryMethod, excludingConnection);
}
// Autogenerated method: MasterServerConnectionManager.PollUpdate
void GlobalNamespace::MasterServerConnectionManager::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.InitMasterServerHandler
void GlobalNamespace::MasterServerConnectionManager::InitMasterServerHandler(GlobalNamespace::MasterServerEndPoint* masterServerEndPoint, GlobalNamespace::IAuthenticationTokenProvider* authenticationTokenProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::InitMasterServerHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitMasterServerHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(masterServerEndPoint), ::il2cpp_utils::ExtractType(authenticationTokenProvider)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, masterServerEndPoint, authenticationTokenProvider);
}
// Autogenerated method: MasterServerConnectionManager.DisposeMasterServerHandler
void GlobalNamespace::MasterServerConnectionManager::DisposeMasterServerHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::DisposeMasterServerHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposeMasterServerHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.Dispose
void GlobalNamespace::MasterServerConnectionManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.Disconnect
void GlobalNamespace::MasterServerConnectionManager::Disconnect(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::Disconnect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disconnectedReason);
}
// Autogenerated method: MasterServerConnectionManager.DisconnectInternal
void GlobalNamespace::MasterServerConnectionManager::DisconnectInternal(GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::DisconnectInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionFailedReason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, connectionFailedReason);
}
// Autogenerated method: MasterServerConnectionManager.DisconnectInternal
void GlobalNamespace::MasterServerConnectionManager::DisconnectInternal(GlobalNamespace::DisconnectedReason disconnectedReason, GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::DisconnectInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason), ::il2cpp_utils::ExtractType(connectionFailedReason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disconnectedReason, connectionFailedReason);
}
// Autogenerated method: MasterServerConnectionManager.GetConnection
GlobalNamespace::IConnection* GlobalNamespace::MasterServerConnectionManager::GetConnection(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::GetConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnection*, false>(___instance_arg, ___internal__method, index);
}
// Autogenerated method: MasterServerConnectionManager.HandleConnected
void GlobalNamespace::MasterServerConnectionManager::HandleConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::HandleConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager.HandleConnectionConnected
void GlobalNamespace::MasterServerConnectionManager::HandleConnectionConnected(GlobalNamespace::IConnection* connection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::HandleConnectionConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectionConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, connection);
}
// Autogenerated method: MasterServerConnectionManager.HandleConnectionDisconnected
void GlobalNamespace::MasterServerConnectionManager::HandleConnectionDisconnected(GlobalNamespace::IConnection* connection, GlobalNamespace::DisconnectedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::HandleConnectionDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectionDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection), ::il2cpp_utils::ExtractType(reason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, connection, reason);
}
// Autogenerated method: MasterServerConnectionManager.HandleConnectionFailed
void GlobalNamespace::MasterServerConnectionManager::HandleConnectionFailed(GlobalNamespace::ConnectionFailedReason failedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::HandleConnectionFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectionFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failedReason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, failedReason);
}
// Autogenerated method: MasterServerConnectionManager.HandleLatencyUpdate
void GlobalNamespace::MasterServerConnectionManager::HandleLatencyUpdate(GlobalNamespace::IConnection* connection, float latency) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::HandleLatencyUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLatencyUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection), ::il2cpp_utils::ExtractType(latency)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, connection, latency);
}
// Autogenerated method: MasterServerConnectionManager.HandleReceivedData
void GlobalNamespace::MasterServerConnectionManager::HandleReceivedData(GlobalNamespace::IConnection* connection, LiteNetLib::Utils::NetDataReader* reader, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::HandleReceivedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleReceivedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, connection, reader, deliveryMethod);
}
// Autogenerated method: MasterServerConnectionManager.HandleConnectToClient
void GlobalNamespace::MasterServerConnectionManager::HandleConnectToClient(::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* myRandom, ::Array<uint8_t>* remoteRandom, bool isConnectionOwner, bool isDedicatedServer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::HandleConnectToClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectToClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(myRandom), ::il2cpp_utils::ExtractType(remoteRandom), ::il2cpp_utils::ExtractType(isConnectionOwner), ::il2cpp_utils::ExtractType(isDedicatedServer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, userName, remoteEndPoint, preMasterSecret, myRandom, remoteRandom, isConnectionOwner, isDedicatedServer);
}
// Autogenerated method: MasterServerConnectionManager.MasterServerConnectToServer
void GlobalNamespace::MasterServerConnectionManager::MasterServerConnectToServer(::Il2CppString* userId, ::Il2CppString* userName, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, ::Il2CppString* secret, ::Il2CppString* code) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::MasterServerConnectToServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MasterServerConnectToServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, userName, selectionMask, configuration, secret, code);
}
// Autogenerated method: MasterServerConnectionManager.HandleConnectToServerSuccess
void GlobalNamespace::MasterServerConnectionManager::HandleConnectToServerSuccess(::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* remoteEndPoint, ::Il2CppString* secret, ::Il2CppString* code, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* myRandom, ::Array<uint8_t>* remoteRandom, bool isConnectionOwner, bool isDedicatedServer, ::Il2CppString* managerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::HandleConnectToServerSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectToServerSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(myRandom), ::il2cpp_utils::ExtractType(remoteRandom), ::il2cpp_utils::ExtractType(isConnectionOwner), ::il2cpp_utils::ExtractType(isDedicatedServer), ::il2cpp_utils::ExtractType(managerId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, userName, remoteEndPoint, secret, code, selectionMask, configuration, preMasterSecret, myRandom, remoteRandom, isConnectionOwner, isDedicatedServer, managerId);
}
// Autogenerated method: MasterServerConnectionManager.ConnectToEndPoint
void GlobalNamespace::MasterServerConnectionManager::ConnectToEndPoint(System::Net::IPEndPoint* remoteEndPoint, ::Il2CppString* userId, ::Il2CppString* userName, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* myRandom, ::Array<uint8_t>* remoteRandom, bool remoteUserIsConnectionOwner, bool isDedicatedServer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectToEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(myRandom), ::il2cpp_utils::ExtractType(remoteRandom), ::il2cpp_utils::ExtractType(remoteUserIsConnectionOwner), ::il2cpp_utils::ExtractType(isDedicatedServer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, remoteEndPoint, userId, userName, preMasterSecret, myRandom, remoteRandom, remoteUserIsConnectionOwner, isDedicatedServer);
}
// Autogenerated method: MasterServerConnectionManager.GetPublicServers
void GlobalNamespace::MasterServerConnectionManager::GetPublicServers(System::Action_1<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PublicServerInfo>*>* onSuccess, System::Action_1<GlobalNamespace::ConnectionFailedReason>* onFailure, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::GetPublicServers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPublicServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, onSuccess, onFailure, selectionMask, configuration, offset, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServerConnectionManager/ConnectionState
#include "GlobalNamespace/MasterServerConnectionManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServerConnectionManager/ConnectionState Unconnected
GlobalNamespace::MasterServerConnectionManager::ConnectionState GlobalNamespace::MasterServerConnectionManager::ConnectionState::_get_Unconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionState::_get_Unconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MasterServerConnectionManager::ConnectionState>("", "MasterServerConnectionManager/ConnectionState", "Unconnected"));
}
// Autogenerated static field setter
// Set static field: static public MasterServerConnectionManager/ConnectionState Unconnected
void GlobalNamespace::MasterServerConnectionManager::ConnectionState::_set_Unconnected(GlobalNamespace::MasterServerConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionState::_set_Unconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerConnectionManager/ConnectionState", "Unconnected", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServerConnectionManager/ConnectionState Connecting
GlobalNamespace::MasterServerConnectionManager::ConnectionState GlobalNamespace::MasterServerConnectionManager::ConnectionState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MasterServerConnectionManager::ConnectionState>("", "MasterServerConnectionManager/ConnectionState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public MasterServerConnectionManager/ConnectionState Connecting
void GlobalNamespace::MasterServerConnectionManager::ConnectionState::_set_Connecting(GlobalNamespace::MasterServerConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerConnectionManager/ConnectionState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServerConnectionManager/ConnectionState Connected
GlobalNamespace::MasterServerConnectionManager::ConnectionState GlobalNamespace::MasterServerConnectionManager::ConnectionState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MasterServerConnectionManager::ConnectionState>("", "MasterServerConnectionManager/ConnectionState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public MasterServerConnectionManager/ConnectionState Connected
void GlobalNamespace::MasterServerConnectionManager::ConnectionState::_set_Connected(GlobalNamespace::MasterServerConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerConnectionManager/ConnectionState", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServerConnectionManager/ConnectionState Disconnecting
GlobalNamespace::MasterServerConnectionManager::ConnectionState GlobalNamespace::MasterServerConnectionManager::ConnectionState::_get_Disconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionState::_get_Disconnecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MasterServerConnectionManager::ConnectionState>("", "MasterServerConnectionManager/ConnectionState", "Disconnecting"));
}
// Autogenerated static field setter
// Set static field: static public MasterServerConnectionManager/ConnectionState Disconnecting
void GlobalNamespace::MasterServerConnectionManager::ConnectionState::_set_Disconnecting(GlobalNamespace::MasterServerConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionState::_set_Disconnecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerConnectionManager/ConnectionState", "Disconnecting", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::MasterServerConnectionManager::ConnectionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerConnectionManager/MasterServerConnectionManagerParamsBase
#include "GlobalNamespace/MasterServerConnectionManager_MasterServerConnectionManagerParamsBase.hpp"
// Including type: MasterServerEndPoint
#include "GlobalNamespace/MasterServerEndPoint.hpp"
// Including type: IAuthenticationTokenProvider
#include "GlobalNamespace/IAuthenticationTokenProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServerEndPoint masterServerEndPoint
GlobalNamespace::MasterServerEndPoint*& GlobalNamespace::MasterServerConnectionManager::MasterServerConnectionManagerParamsBase::dyn_masterServerEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::MasterServerConnectionManagerParamsBase::dyn_masterServerEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "masterServerEndPoint"))->offset;
  return *reinterpret_cast<GlobalNamespace::MasterServerEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IAuthenticationTokenProvider authenticationTokenProvider
GlobalNamespace::IAuthenticationTokenProvider*& GlobalNamespace::MasterServerConnectionManager::MasterServerConnectionManagerParamsBase::dyn_authenticationTokenProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::MasterServerConnectionManagerParamsBase::dyn_authenticationTokenProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "authenticationTokenProvider"))->offset;
  return *reinterpret_cast<GlobalNamespace::IAuthenticationTokenProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
::Il2CppString*& GlobalNamespace::MasterServerConnectionManager::MasterServerConnectionManagerParamsBase::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::MasterServerConnectionManagerParamsBase::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
::Il2CppString*& GlobalNamespace::MasterServerConnectionManager::MasterServerConnectionManagerParamsBase::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::MasterServerConnectionManagerParamsBase::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::MasterServerConnectionManager::MasterServerConnectionManagerParamsBase::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::MasterServerConnectionManagerParamsBase::dyn_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::MasterServerConnectionManager::MasterServerConnectionManagerParamsBase::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::MasterServerConnectionManagerParamsBase::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerConnectionManager/ConnectToServerParams
#include "GlobalNamespace/MasterServerConnectionManager_ConnectToServerParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String secret
::Il2CppString*& GlobalNamespace::MasterServerConnectionManager::ConnectToServerParams::dyn_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectToServerParams::dyn_secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String code
::Il2CppString*& GlobalNamespace::MasterServerConnectionManager::ConnectToServerParams::dyn_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectToServerParams::dyn_code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "code"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServerConnectionManager/StartClientParams
#include "GlobalNamespace/MasterServerConnectionManager_StartClientParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerConnectionManager/<ConnectToEndPoint>d__84
#include "GlobalNamespace/MasterServerConnectionManager_-ConnectToEndPoint-d__84.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isDedicatedServer
bool& GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_isDedicatedServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_isDedicatedServer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDedicatedServer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServerConnectionManager <>4__this
GlobalNamespace::MasterServerConnectionManager*& GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::MasterServerConnectionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint remoteEndPoint
System::Net::IPEndPoint*& GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_remoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_remoteEndPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] preMasterSecret
::Array<uint8_t>*& GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_preMasterSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_preMasterSecret");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preMasterSecret"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] myRandom
::Array<uint8_t>*& GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_myRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_myRandom");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myRandom"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] remoteRandom
::Array<uint8_t>*& GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_remoteRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_remoteRandom");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteRandom"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
::Il2CppString*& GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_userId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
::Il2CppString*& GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_userName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean remoteUserIsConnectionOwner
bool& GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_remoteUserIsConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_remoteUserIsConnectionOwner");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteUserIsConnectionOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<EncryptionUtility/IEncryptionState> <>u__2
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EncryptionUtility::IEncryptionState*>& GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EncryptionUtility::IEncryptionState*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServerConnectionManager/<ConnectToEndPoint>d__84.MoveNext
void GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServerConnectionManager/<ConnectToEndPoint>d__84.SetStateMachine
void GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::$ConnectToEndPoint$d__84::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerEndPoint
#include "GlobalNamespace/MasterServerEndPoint.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String hostName
::Il2CppString*& GlobalNamespace::MasterServerEndPoint::dyn_hostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerEndPoint::dyn_hostName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hostName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 port
int& GlobalNamespace::MasterServerEndPoint::dyn_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerEndPoint::dyn_port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<System.Net.IPEndPoint> _getEndPointTask
System::Threading::Tasks::Task_1<System::Net::IPEndPoint*>*& GlobalNamespace::MasterServerEndPoint::dyn__getEndPointTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerEndPoint::dyn__getEndPointTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_getEndPointTask"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task_1<System::Net::IPEndPoint*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServerEndPoint.get_endPoint
System::Net::IPEndPoint* GlobalNamespace::MasterServerEndPoint::get_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerEndPoint::get_endPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPEndPoint*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerEndPoint.GetEndPointAsync
System::Threading::Tasks::Task_1<System::Net::IPEndPoint*>* GlobalNamespace::MasterServerEndPoint::GetEndPointAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerEndPoint::GetEndPointAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEndPointAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Net::IPEndPoint*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerEndPoint.GetEndPoint
System::Net::IPEndPoint* GlobalNamespace::MasterServerEndPoint::GetEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerEndPoint::GetEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPEndPoint*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerEndPoint.GetEndPointInternal
System::Net::IPEndPoint* GlobalNamespace::MasterServerEndPoint::GetEndPointInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerEndPoint::GetEndPointInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEndPointInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPEndPoint*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerEndPoint.Equals
bool GlobalNamespace::MasterServerEndPoint::Equals(GlobalNamespace::MasterServerEndPoint* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerEndPoint::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, other);
}
// Autogenerated method: MasterServerEndPoint.ToString
::Il2CppString* GlobalNamespace::MasterServerEndPoint::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerEndPoint::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServerEndPoint.Equals
bool GlobalNamespace::MasterServerEndPoint::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerEndPoint::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, obj);
}
// Autogenerated method: MasterServerEndPoint.GetHashCode
int GlobalNamespace::MasterServerEndPoint::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerEndPoint::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MessageHandlerAnalyticsManagerExtensions
#include "GlobalNamespace/MessageHandlerAnalyticsManagerExtensions.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: MasterServer.IMasterServerMessage
#include "MasterServer/IMasterServerMessage.hpp"
// Including type: MasterServer.IMasterServerResponse
#include "MasterServer/IMasterServerResponse.hpp"
// Including type: MasterServer.IAnalyticsManager
#include "MasterServer/IAnalyticsManager.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: MasterServer.IMasterServerReliableResponse
#include "MasterServer/IMasterServerReliableResponse.hpp"
// Including type: MasterServer.IMasterServerUnreliableMessage
#include "MasterServer/IMasterServerUnreliableMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kReceivedMessagesMetricName
::Il2CppString* GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kReceivedMessagesMetricName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kReceivedMessagesMetricName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MessageHandlerAnalyticsManagerExtensions", "kReceivedMessagesMetricName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kReceivedMessagesMetricName
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kReceivedMessagesMetricName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kReceivedMessagesMetricName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MessageHandlerAnalyticsManagerExtensions", "kReceivedMessagesMetricName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kSentMessagesMetricName
::Il2CppString* GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kSentMessagesMetricName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kSentMessagesMetricName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MessageHandlerAnalyticsManagerExtensions", "kSentMessagesMetricName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kSentMessagesMetricName
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kSentMessagesMetricName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kSentMessagesMetricName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MessageHandlerAnalyticsManagerExtensions", "kSentMessagesMetricName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDeliveryTypeKey
::Il2CppString* GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kDeliveryTypeKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kDeliveryTypeKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MessageHandlerAnalyticsManagerExtensions", "kDeliveryTypeKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDeliveryTypeKey
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kDeliveryTypeKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kDeliveryTypeKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MessageHandlerAnalyticsManagerExtensions", "kDeliveryTypeKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMessageCategoryKey
::Il2CppString* GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kMessageCategoryKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kMessageCategoryKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MessageHandlerAnalyticsManagerExtensions", "kMessageCategoryKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMessageCategoryKey
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kMessageCategoryKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kMessageCategoryKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MessageHandlerAnalyticsManagerExtensions", "kMessageCategoryKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMessageTypeKey
::Il2CppString* GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kMessageTypeKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kMessageTypeKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MessageHandlerAnalyticsManagerExtensions", "kMessageTypeKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMessageTypeKey
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kMessageTypeKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kMessageTypeKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MessageHandlerAnalyticsManagerExtensions", "kMessageTypeKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kResultKey
::Il2CppString* GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kResultKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kResultKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MessageHandlerAnalyticsManagerExtensions", "kResultKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kResultKey
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kResultKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kResultKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MessageHandlerAnalyticsManagerExtensions", "kResultKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDeliveryTypeReliable
::Il2CppString* GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kDeliveryTypeReliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kDeliveryTypeReliable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MessageHandlerAnalyticsManagerExtensions", "kDeliveryTypeReliable"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDeliveryTypeReliable
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kDeliveryTypeReliable(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kDeliveryTypeReliable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MessageHandlerAnalyticsManagerExtensions", "kDeliveryTypeReliable", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDeliveryTypeUnreliable
::Il2CppString* GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kDeliveryTypeUnreliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kDeliveryTypeUnreliable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MessageHandlerAnalyticsManagerExtensions", "kDeliveryTypeUnreliable"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDeliveryTypeUnreliable
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kDeliveryTypeUnreliable(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kDeliveryTypeUnreliable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MessageHandlerAnalyticsManagerExtensions", "kDeliveryTypeUnreliable", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMessageCategoryRequest
::Il2CppString* GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kMessageCategoryRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kMessageCategoryRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MessageHandlerAnalyticsManagerExtensions", "kMessageCategoryRequest"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMessageCategoryRequest
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kMessageCategoryRequest(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kMessageCategoryRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MessageHandlerAnalyticsManagerExtensions", "kMessageCategoryRequest", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMessageCategoryResponse
::Il2CppString* GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kMessageCategoryResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kMessageCategoryResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MessageHandlerAnalyticsManagerExtensions", "kMessageCategoryResponse"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMessageCategoryResponse
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kMessageCategoryResponse(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kMessageCategoryResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MessageHandlerAnalyticsManagerExtensions", "kMessageCategoryResponse", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMessageCategoryMessage
::Il2CppString* GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kMessageCategoryMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get_kMessageCategoryMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MessageHandlerAnalyticsManagerExtensions", "kMessageCategoryMessage"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMessageCategoryMessage
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kMessageCategoryMessage(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set_kMessageCategoryMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MessageHandlerAnalyticsManagerExtensions", "kMessageCategoryMessage", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.String> _typeNameLookup
System::Collections::Generic::Dictionary_2<System::Type*, ::Il2CppString*>* GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get__typeNameLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get__typeNameLookup");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<System::Type*, ::Il2CppString*>*>("", "MessageHandlerAnalyticsManagerExtensions", "_typeNameLookup")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.String> _typeNameLookup
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set__typeNameLookup(System::Collections::Generic::Dictionary_2<System::Type*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set__typeNameLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MessageHandlerAnalyticsManagerExtensions", "_typeNameLookup", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.Dictionary`2<System.Byte,System.String>> _responseCodeLookup
System::Collections::Generic::Dictionary_2<System::Type*, System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppString*>*>* GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get__responseCodeLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_get__responseCodeLookup");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<System::Type*, System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppString*>*>*>("", "MessageHandlerAnalyticsManagerExtensions", "_responseCodeLookup")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.Dictionary`2<System.Byte,System.String>> _responseCodeLookup
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set__responseCodeLookup(System::Collections::Generic::Dictionary_2<System::Type*, System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppString*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_set__responseCodeLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MessageHandlerAnalyticsManagerExtensions", "_responseCodeLookup", value));
}
// Autogenerated method: MessageHandlerAnalyticsManagerExtensions..cctor
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MessageHandlerAnalyticsManagerExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MessageHandlerAnalyticsManagerExtensions.GetMessageName
::Il2CppString* GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::GetMessageName(MasterServer::IMasterServerMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::GetMessageName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MessageHandlerAnalyticsManagerExtensions", "GetMessageName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: MessageHandlerAnalyticsManagerExtensions.GetResponseCodeName
::Il2CppString* GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::GetResponseCodeName(MasterServer::IMasterServerResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::GetResponseCodeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MessageHandlerAnalyticsManagerExtensions", "GetResponseCodeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, response);
}
// Autogenerated method: MessageHandlerAnalyticsManagerExtensions.ReceivedReliableRequestEvent
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::ReceivedReliableRequestEvent(MasterServer::IAnalyticsManager* analyticsManager, MasterServer::IMasterServerReliableRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::ReceivedReliableRequestEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MessageHandlerAnalyticsManagerExtensions", "ReceivedReliableRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(analyticsManager), ::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, analyticsManager, request);
}
// Autogenerated method: MessageHandlerAnalyticsManagerExtensions.SentReliableRequestEvent
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::SentReliableRequestEvent(MasterServer::IAnalyticsManager* analyticsManager, MasterServer::IMasterServerReliableRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::SentReliableRequestEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MessageHandlerAnalyticsManagerExtensions", "SentReliableRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(analyticsManager), ::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, analyticsManager, request);
}
// Autogenerated method: MessageHandlerAnalyticsManagerExtensions.ReceivedReliableResponseEvent
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::ReceivedReliableResponseEvent(MasterServer::IAnalyticsManager* analyticsManager, MasterServer::IMasterServerReliableResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::ReceivedReliableResponseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MessageHandlerAnalyticsManagerExtensions", "ReceivedReliableResponseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(analyticsManager), ::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, analyticsManager, response);
}
// Autogenerated method: MessageHandlerAnalyticsManagerExtensions.SentReliableResponseEvent
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::SentReliableResponseEvent(MasterServer::IAnalyticsManager* analyticsManager, MasterServer::IMasterServerReliableResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::SentReliableResponseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MessageHandlerAnalyticsManagerExtensions", "SentReliableResponseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(analyticsManager), ::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, analyticsManager, response);
}
// Autogenerated method: MessageHandlerAnalyticsManagerExtensions.ReceivedUnreliableMessageEvent
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::ReceivedUnreliableMessageEvent(MasterServer::IAnalyticsManager* analyticsManager, MasterServer::IMasterServerUnreliableMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::ReceivedUnreliableMessageEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MessageHandlerAnalyticsManagerExtensions", "ReceivedUnreliableMessageEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(analyticsManager), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, analyticsManager, message);
}
// Autogenerated method: MessageHandlerAnalyticsManagerExtensions.SentUnreliableMessageEvent
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::SentUnreliableMessageEvent(MasterServer::IAnalyticsManager* analyticsManager, MasterServer::IMasterServerUnreliableMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::SentUnreliableMessageEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MessageHandlerAnalyticsManagerExtensions", "SentUnreliableMessageEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(analyticsManager), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, analyticsManager, message);
}
// Autogenerated method: MessageHandlerAnalyticsManagerExtensions.ReceivedUnreliableResponseEvent
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::ReceivedUnreliableResponseEvent(MasterServer::IAnalyticsManager* analyticsManager, MasterServer::IMasterServerResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::ReceivedUnreliableResponseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MessageHandlerAnalyticsManagerExtensions", "ReceivedUnreliableResponseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(analyticsManager), ::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, analyticsManager, response);
}
// Autogenerated method: MessageHandlerAnalyticsManagerExtensions.SentUnreliableResponseEvent
void GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::SentUnreliableResponseEvent(MasterServer::IAnalyticsManager* analyticsManager, MasterServer::IMasterServerResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MessageHandlerAnalyticsManagerExtensions::SentUnreliableResponseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MessageHandlerAnalyticsManagerExtensions", "SentUnreliableResponseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(analyticsManager), ::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, analyticsManager, response);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MetricIdentifier
#include "GlobalNamespace/MetricIdentifier.hpp"
// Including type: MetricIdentifier/<GetTags>d__13
#include "GlobalNamespace/MetricIdentifier_-GetTags-d__13.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String metricName
::Il2CppString*& GlobalNamespace::MetricIdentifier::dyn_metricName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::dyn_metricName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "metricName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.ValueTuple`2<System.String,System.String> _tag0
System::ValueTuple_2<::Il2CppString*, ::Il2CppString*>& GlobalNamespace::MetricIdentifier::dyn__tag0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::dyn__tag0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tag0"))->offset;
  return *reinterpret_cast<System::ValueTuple_2<::Il2CppString*, ::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.ValueTuple`2<System.String,System.String> _tag1
System::ValueTuple_2<::Il2CppString*, ::Il2CppString*>& GlobalNamespace::MetricIdentifier::dyn__tag1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::dyn__tag1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tag1"))->offset;
  return *reinterpret_cast<System::ValueTuple_2<::Il2CppString*, ::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.ValueTuple`2<System.String,System.String> _tag2
System::ValueTuple_2<::Il2CppString*, ::Il2CppString*>& GlobalNamespace::MetricIdentifier::dyn__tag2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::dyn__tag2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tag2"))->offset;
  return *reinterpret_cast<System::ValueTuple_2<::Il2CppString*, ::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.ValueTuple`2<System.String,System.String> _tag3
System::ValueTuple_2<::Il2CppString*, ::Il2CppString*>& GlobalNamespace::MetricIdentifier::dyn__tag3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::dyn__tag3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tag3"))->offset;
  return *reinterpret_cast<System::ValueTuple_2<::Il2CppString*, ::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MetricIdentifier.get_tagCount
int GlobalNamespace::MetricIdentifier::get_tagCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::get_tagCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_tagCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: MetricIdentifier.CompareTo
int GlobalNamespace::MetricIdentifier::CompareTo(GlobalNamespace::MetricIdentifier other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, other);
}
// Autogenerated method: MetricIdentifier.Equals
bool GlobalNamespace::MetricIdentifier::Equals(GlobalNamespace::MetricIdentifier other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: MetricIdentifier.GetTags
System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::Il2CppString*, ::Il2CppString*>>* GlobalNamespace::MetricIdentifier::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::GetTags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<System::ValueTuple_2<::Il2CppString*, ::Il2CppString*>>*, false>(*this, ___internal__method);
}
// Autogenerated method: MetricIdentifier.Equals
bool GlobalNamespace::MetricIdentifier::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: MetricIdentifier.GetHashCode
int GlobalNamespace::MetricIdentifier::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: MetricIdentifier.ToString
::Il2CppString* GlobalNamespace::MetricIdentifier::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MetricIdentifier/<GetTags>d__13
#include "GlobalNamespace/MetricIdentifier_-GetTags-d__13.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::MetricIdentifier::$GetTags$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::$GetTags$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ValueTuple`2<System.String,System.String> <>2__current
System::ValueTuple_2<::Il2CppString*, ::Il2CppString*>& GlobalNamespace::MetricIdentifier::$GetTags$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::$GetTags$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<System::ValueTuple_2<::Il2CppString*, ::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int& GlobalNamespace::MetricIdentifier::$GetTags$d__13::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::$GetTags$d__13::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MetricIdentifier <>4__this
GlobalNamespace::MetricIdentifier& GlobalNamespace::MetricIdentifier::$GetTags$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::$GetTags$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::MetricIdentifier*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MetricIdentifier <>3__<>4__this
GlobalNamespace::MetricIdentifier& GlobalNamespace::MetricIdentifier::$GetTags$d__13::dyn_$$3__$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::$GetTags$d__13::dyn_$$3__$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::MetricIdentifier*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MetricIdentifier/<GetTags>d__13.System.Collections.Generic.IEnumerator<(System.Stringkey,System.Stringvalue)>.get_Current
System::ValueTuple_2<::Il2CppString*, ::Il2CppString*> GlobalNamespace::MetricIdentifier::$GetTags$d__13::System_Collections_Generic_IEnumerator$_System_Stringkey_System_Stringvalue_$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::$GetTags$d__13::System.Collections.Generic.IEnumerator<_System.Stringkey,System.Stringvalue_>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<(System.Stringkey,System.Stringvalue)>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::ValueTuple_2<::Il2CppString*, ::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MetricIdentifier/<GetTags>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MetricIdentifier::$GetTags$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::$GetTags$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MetricIdentifier/<GetTags>d__13.System.IDisposable.Dispose
void GlobalNamespace::MetricIdentifier::$GetTags$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::$GetTags$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MetricIdentifier/<GetTags>d__13.MoveNext
bool GlobalNamespace::MetricIdentifier::$GetTags$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::$GetTags$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MetricIdentifier/<GetTags>d__13.System.Collections.IEnumerator.Reset
void GlobalNamespace::MetricIdentifier::$GetTags$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::$GetTags$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MetricIdentifier/<GetTags>d__13.System.Collections.Generic.IEnumerable<(System.Stringkey,System.Stringvalue)>.GetEnumerator
System::Collections::Generic::IEnumerator_1<System::ValueTuple_2<::Il2CppString*, ::Il2CppString*>>* GlobalNamespace::MetricIdentifier::$GetTags$d__13::System_Collections_Generic_IEnumerable$_System_Stringkey_System_Stringvalue_$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::$GetTags$d__13::System.Collections.Generic.IEnumerable<_System.Stringkey,System.Stringvalue_>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<(System.Stringkey,System.Stringvalue)>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<System::ValueTuple_2<::Il2CppString*, ::Il2CppString*>>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MetricIdentifier/<GetTags>d__13.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* GlobalNamespace::MetricIdentifier::$GetTags$d__13::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MetricIdentifier::$GetTags$d__13::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PublicServerInfo
#include "GlobalNamespace/PublicServerInfo.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String code
::Il2CppString*& GlobalNamespace::PublicServerInfo::dyn_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PublicServerInfo::dyn_code");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "code"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 currentPlayerCount
int& GlobalNamespace::PublicServerInfo::dyn_currentPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PublicServerInfo::dyn_currentPlayerCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPlayerCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PublicServerInfo.Serialize
void GlobalNamespace::PublicServerInfo::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PublicServerInfo::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: PublicServerInfo.Deserialize
GlobalNamespace::PublicServerInfo GlobalNamespace::PublicServerInfo::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PublicServerInfo::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PublicServerInfo", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PublicServerInfo, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongSelectionMode
#include "GlobalNamespace/SongSelectionMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SongSelectionMode Vote
GlobalNamespace::SongSelectionMode GlobalNamespace::SongSelectionMode::_get_Vote() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongSelectionMode::_get_Vote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SongSelectionMode>("", "SongSelectionMode", "Vote"));
}
// Autogenerated static field setter
// Set static field: static public SongSelectionMode Vote
void GlobalNamespace::SongSelectionMode::_set_Vote(GlobalNamespace::SongSelectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongSelectionMode::_set_Vote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongSelectionMode", "Vote", value));
}
// Autogenerated static field getter
// Get static field: static public SongSelectionMode Random
GlobalNamespace::SongSelectionMode GlobalNamespace::SongSelectionMode::_get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongSelectionMode::_get_Random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SongSelectionMode>("", "SongSelectionMode", "Random"));
}
// Autogenerated static field setter
// Set static field: static public SongSelectionMode Random
void GlobalNamespace::SongSelectionMode::_set_Random(GlobalNamespace::SongSelectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongSelectionMode::_set_Random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongSelectionMode", "Random", value));
}
// Autogenerated static field getter
// Get static field: static public SongSelectionMode OwnerPicks
GlobalNamespace::SongSelectionMode GlobalNamespace::SongSelectionMode::_get_OwnerPicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongSelectionMode::_get_OwnerPicks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SongSelectionMode>("", "SongSelectionMode", "OwnerPicks"));
}
// Autogenerated static field setter
// Set static field: static public SongSelectionMode OwnerPicks
void GlobalNamespace::SongSelectionMode::_set_OwnerPicks(GlobalNamespace::SongSelectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongSelectionMode::_set_OwnerPicks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongSelectionMode", "OwnerPicks", value));
}
// Autogenerated static field getter
// Get static field: static public SongSelectionMode RandomPlayerPicks
GlobalNamespace::SongSelectionMode GlobalNamespace::SongSelectionMode::_get_RandomPlayerPicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongSelectionMode::_get_RandomPlayerPicks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SongSelectionMode>("", "SongSelectionMode", "RandomPlayerPicks"));
}
// Autogenerated static field setter
// Set static field: static public SongSelectionMode RandomPlayerPicks
void GlobalNamespace::SongSelectionMode::_set_RandomPlayerPicks(GlobalNamespace::SongSelectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongSelectionMode::_set_RandomPlayerPicks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongSelectionMode", "RandomPlayerPicks", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::SongSelectionMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongSelectionMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UserCertificateValidator
#include "GlobalNamespace/UserCertificateValidator.hpp"
// Including type: MasterServerEndPoint
#include "GlobalNamespace/MasterServerEndPoint.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UserCertificateValidator.ValidateCertificateChain
void GlobalNamespace::UserCertificateValidator::ValidateCertificateChain(GlobalNamespace::MasterServerEndPoint* endPoint, System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::Array<::Array<uint8_t>*>* certificateChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserCertificateValidator::ValidateCertificateChain");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificateChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(certificateChain)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endPoint, certificate, certificateChain);
}
// Autogenerated method: UserCertificateValidator.ValidateCertificateChainInternal
void GlobalNamespace::UserCertificateValidator::ValidateCertificateChainInternal(GlobalNamespace::MasterServerEndPoint* endPoint, System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::Array<::Array<uint8_t>*>* certificateChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserCertificateValidator::ValidateCertificateChainInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificateChainInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(certificateChain)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endPoint, certificate, certificateChain);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuRpcManager
#include "GlobalNamespace/MenuRpcManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MenuRpcManager/GetPlayersPermissionConfigurationRpc
#include "GlobalNamespace/MenuRpcManager_GetPlayersPermissionConfigurationRpc.hpp"
// Including type: MenuRpcManager/SetPlayersPermissionConfigurationRpc
#include "GlobalNamespace/MenuRpcManager_SetPlayersPermissionConfigurationRpc.hpp"
// Including type: MenuRpcManager/SetPlayersMissingEntitlementsToLevelRpc
#include "GlobalNamespace/MenuRpcManager_SetPlayersMissingEntitlementsToLevelRpc.hpp"
// Including type: MenuRpcManager/GetIsEntitledToLevelRpc
#include "GlobalNamespace/MenuRpcManager_GetIsEntitledToLevelRpc.hpp"
// Including type: MenuRpcManager/SetIsEntitledToLevelRpc
#include "GlobalNamespace/MenuRpcManager_SetIsEntitledToLevelRpc.hpp"
// Including type: MenuRpcManager/InvalidateLevelEntitlementStatusesRpc
#include "GlobalNamespace/MenuRpcManager_InvalidateLevelEntitlementStatusesRpc.hpp"
// Including type: MenuRpcManager/SelectLevelPackRpc
#include "GlobalNamespace/MenuRpcManager_SelectLevelPackRpc.hpp"
// Including type: MenuRpcManager/SetSelectedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_SetSelectedBeatmapRpc.hpp"
// Including type: MenuRpcManager/GetSelectedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_GetSelectedBeatmapRpc.hpp"
// Including type: MenuRpcManager/RecommendBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_RecommendBeatmapRpc.hpp"
// Including type: MenuRpcManager/ClearRecommendedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_ClearRecommendedBeatmapRpc.hpp"
// Including type: MenuRpcManager/GetRecommendedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_GetRecommendedBeatmapRpc.hpp"
// Including type: MenuRpcManager/SetSelectedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_SetSelectedGameplayModifiersRpc.hpp"
// Including type: MenuRpcManager/GetSelectedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_GetSelectedGameplayModifiersRpc.hpp"
// Including type: MenuRpcManager/RecommendGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_RecommendGameplayModifiersRpc.hpp"
// Including type: MenuRpcManager/ClearRecommendedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_ClearRecommendedGameplayModifiersRpc.hpp"
// Including type: MenuRpcManager/GetRecommendedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_GetRecommendedGameplayModifiersRpc.hpp"
// Including type: MenuRpcManager/GetIsStartButtonEnabledRpc
#include "GlobalNamespace/MenuRpcManager_GetIsStartButtonEnabledRpc.hpp"
// Including type: MenuRpcManager/SetIsStartButtonEnabledRpc
#include "GlobalNamespace/MenuRpcManager_SetIsStartButtonEnabledRpc.hpp"
// Including type: MenuRpcManager/LevelLoadErrorRpc
#include "GlobalNamespace/MenuRpcManager_LevelLoadErrorRpc.hpp"
// Including type: MenuRpcManager/LevelLoadSuccessRpc
#include "GlobalNamespace/MenuRpcManager_LevelLoadSuccessRpc.hpp"
// Including type: MenuRpcManager/StartLevelRpc
#include "GlobalNamespace/MenuRpcManager_StartLevelRpc.hpp"
// Including type: MenuRpcManager/GetStartedLevelRpc
#include "GlobalNamespace/MenuRpcManager_GetStartedLevelRpc.hpp"
// Including type: MenuRpcManager/GetMultiplayerGameStateRpc
#include "GlobalNamespace/MenuRpcManager_GetMultiplayerGameStateRpc.hpp"
// Including type: MenuRpcManager/SetMultiplayerGameStateRpc
#include "GlobalNamespace/MenuRpcManager_SetMultiplayerGameStateRpc.hpp"
// Including type: MenuRpcManager/CancelCountdownRpc
#include "GlobalNamespace/MenuRpcManager_CancelCountdownRpc.hpp"
// Including type: MenuRpcManager/SetCountdownEndTimeRpc
#include "GlobalNamespace/MenuRpcManager_SetCountdownEndTimeRpc.hpp"
// Including type: MenuRpcManager/GetCountdownEndTimeRpc
#include "GlobalNamespace/MenuRpcManager_GetCountdownEndTimeRpc.hpp"
// Including type: MenuRpcManager/CancelLevelStartRpc
#include "GlobalNamespace/MenuRpcManager_CancelLevelStartRpc.hpp"
// Including type: MenuRpcManager/GetIsReadyRpc
#include "GlobalNamespace/MenuRpcManager_GetIsReadyRpc.hpp"
// Including type: MenuRpcManager/SetIsReadyRpc
#include "GlobalNamespace/MenuRpcManager_SetIsReadyRpc.hpp"
// Including type: MenuRpcManager/SetStartGameTimeRpc
#include "GlobalNamespace/MenuRpcManager_SetStartGameTimeRpc.hpp"
// Including type: MenuRpcManager/CancelStartGameTimeRpc
#include "GlobalNamespace/MenuRpcManager_CancelStartGameTimeRpc.hpp"
// Including type: MenuRpcManager/GetIsInLobbyRpc
#include "GlobalNamespace/MenuRpcManager_GetIsInLobbyRpc.hpp"
// Including type: MenuRpcManager/SetIsInLobbyRpc
#include "GlobalNamespace/MenuRpcManager_SetIsInLobbyRpc.hpp"
// Including type: MenuRpcManager/GetOwnedSongPacksRpc
#include "GlobalNamespace/MenuRpcManager_GetOwnedSongPacksRpc.hpp"
// Including type: MenuRpcManager/SetOwnedSongPacksRpc
#include "GlobalNamespace/MenuRpcManager_SetOwnedSongPacksRpc.hpp"
// Including type: MenuRpcManager/RequestKickPlayerRpc
#include "GlobalNamespace/MenuRpcManager_RequestKickPlayerRpc.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: RpcHandler`1
#include "GlobalNamespace/RpcHandler_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: PlayersLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayersLobbyPermissionConfigurationNetSerializable.hpp"
// Including type: PlayersMissingEntitlementsNetSerializable
#include "GlobalNamespace/PlayersMissingEntitlementsNetSerializable.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kMenuState
::Il2CppString* GlobalNamespace::MenuRpcManager::_get_kMenuState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::_get_kMenuState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MenuRpcManager", "kMenuState"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMenuState
void GlobalNamespace::MenuRpcManager::_set_kMenuState(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::_set_kMenuState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager", "kMenuState", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::MenuRpcManager::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly RpcHandler`1<MenuRpcManager/RpcType> _rpcHandler
GlobalNamespace::RpcHandler_1<GlobalNamespace::MenuRpcManager::RpcType>*& GlobalNamespace::MenuRpcManager::dyn__rpcHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn__rpcHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rpcHandler"))->offset;
  return *reinterpret_cast<GlobalNamespace::RpcHandler_1<GlobalNamespace::MenuRpcManager::RpcType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getPlayersPermissionConfigurationEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_getPlayersPermissionConfigurationEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_getPlayersPermissionConfigurationEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getPlayersPermissionConfigurationEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,PlayersLobbyPermissionConfigurationNetSerializable> setPlayersPermissionConfigurationEvent
System::Action_2<::Il2CppString*, GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>*& GlobalNamespace::MenuRpcManager::dyn_setPlayersPermissionConfigurationEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_setPlayersPermissionConfigurationEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setPlayersPermissionConfigurationEvent"))->offset;
  return *reinterpret_cast<System::Action_2<::Il2CppString*, GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,PlayersMissingEntitlementsNetSerializable> setPlayersMissingEntitlementsToLevelEvent
System::Action_2<::Il2CppString*, GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>*& GlobalNamespace::MenuRpcManager::dyn_setPlayersMissingEntitlementsToLevelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_setPlayersMissingEntitlementsToLevelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setPlayersMissingEntitlementsToLevelEvent"))->offset;
  return *reinterpret_cast<System::Action_2<::Il2CppString*, GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,System.String> getIsEntitledToLevelEvent
System::Action_2<::Il2CppString*, ::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_getIsEntitledToLevelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_getIsEntitledToLevelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getIsEntitledToLevelEvent"))->offset;
  return *reinterpret_cast<System::Action_2<::Il2CppString*, ::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<System.String,System.String,EntitlementsStatus> setIsEntitledToLevelEvent
System::Action_3<::Il2CppString*, ::Il2CppString*, GlobalNamespace::EntitlementsStatus>*& GlobalNamespace::MenuRpcManager::dyn_setIsEntitledToLevelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_setIsEntitledToLevelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setIsEntitledToLevelEvent"))->offset;
  return *reinterpret_cast<System::Action_3<::Il2CppString*, ::Il2CppString*, GlobalNamespace::EntitlementsStatus>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> levelEntitlementStatusesInvalidatedEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_levelEntitlementStatusesInvalidatedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_levelEntitlementStatusesInvalidatedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelEntitlementStatusesInvalidatedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,System.String> selectedLevelPackEvent
System::Action_2<::Il2CppString*, ::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_selectedLevelPackEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_selectedLevelPackEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectedLevelPackEvent"))->offset;
  return *reinterpret_cast<System::Action_2<::Il2CppString*, ::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,BeatmapIdentifierNetSerializable> setSelectedBeatmapEvent
System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>*& GlobalNamespace::MenuRpcManager::dyn_setSelectedBeatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_setSelectedBeatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setSelectedBeatmapEvent"))->offset;
  return *reinterpret_cast<System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getSelectedBeatmapEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_getSelectedBeatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_getSelectedBeatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getSelectedBeatmapEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,BeatmapIdentifierNetSerializable> recommendBeatmapEvent
System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>*& GlobalNamespace::MenuRpcManager::dyn_recommendBeatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_recommendBeatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recommendBeatmapEvent"))->offset;
  return *reinterpret_cast<System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> clearRecommendedBeatmapEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_clearRecommendedBeatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_clearRecommendedBeatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearRecommendedBeatmapEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getRecommendedBeatmapEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_getRecommendedBeatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_getRecommendedBeatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getRecommendedBeatmapEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,GameplayModifiers> setSelectGameplayModifiersEvent
System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>*& GlobalNamespace::MenuRpcManager::dyn_setSelectGameplayModifiersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_setSelectGameplayModifiersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setSelectGameplayModifiersEvent"))->offset;
  return *reinterpret_cast<System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getSelectedGameplayModifiersEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_getSelectedGameplayModifiersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_getSelectedGameplayModifiersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getSelectedGameplayModifiersEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,GameplayModifiers> recommendGameplayModifiersEvent
System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>*& GlobalNamespace::MenuRpcManager::dyn_recommendGameplayModifiersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_recommendGameplayModifiersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recommendGameplayModifiersEvent"))->offset;
  return *reinterpret_cast<System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> clearRecommendedGameplayModifiersEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_clearRecommendedGameplayModifiersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_clearRecommendedGameplayModifiersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearRecommendedGameplayModifiersEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getRecommendedGameplayModifiersEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_getRecommendedGameplayModifiersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_getRecommendedGameplayModifiersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getRecommendedGameplayModifiersEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getIsStartButtonEnabledEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_getIsStartButtonEnabledEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_getIsStartButtonEnabledEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getIsStartButtonEnabledEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,CannotStartGameReason> setIsStartButtonEnabledEvent
System::Action_2<::Il2CppString*, GlobalNamespace::CannotStartGameReason>*& GlobalNamespace::MenuRpcManager::dyn_setIsStartButtonEnabledEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_setIsStartButtonEnabledEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setIsStartButtonEnabledEvent"))->offset;
  return *reinterpret_cast<System::Action_2<::Il2CppString*, GlobalNamespace::CannotStartGameReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,System.String> levelLoadErrorEvent
System::Action_2<::Il2CppString*, ::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_levelLoadErrorEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_levelLoadErrorEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelLoadErrorEvent"))->offset;
  return *reinterpret_cast<System::Action_2<::Il2CppString*, ::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,System.String> levelLoadSuccessEvent
System::Action_2<::Il2CppString*, ::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_levelLoadSuccessEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_levelLoadSuccessEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelLoadSuccessEvent"))->offset;
  return *reinterpret_cast<System::Action_2<::Il2CppString*, ::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`4<System.String,BeatmapIdentifierNetSerializable,GameplayModifiers,System.Single> startedLevelEvent
System::Action_4<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*, GlobalNamespace::GameplayModifiers*, float>*& GlobalNamespace::MenuRpcManager::dyn_startedLevelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_startedLevelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startedLevelEvent"))->offset;
  return *reinterpret_cast<System::Action_4<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*, GlobalNamespace::GameplayModifiers*, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getStartedLevelEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_getStartedLevelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_getStartedLevelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getStartedLevelEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getMultiplayerGameStateEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_getMultiplayerGameStateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_getMultiplayerGameStateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getMultiplayerGameStateEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,MultiplayerGameState> setMultiplayerGameStateEvent
System::Action_2<::Il2CppString*, GlobalNamespace::MultiplayerGameState>*& GlobalNamespace::MenuRpcManager::dyn_setMultiplayerGameStateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_setMultiplayerGameStateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setMultiplayerGameStateEvent"))->offset;
  return *reinterpret_cast<System::Action_2<::Il2CppString*, GlobalNamespace::MultiplayerGameState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> cancelCountdownEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_cancelCountdownEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_cancelCountdownEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancelCountdownEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,System.Single> setCountdownEndTimeEvent
System::Action_2<::Il2CppString*, float>*& GlobalNamespace::MenuRpcManager::dyn_setCountdownEndTimeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_setCountdownEndTimeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setCountdownEndTimeEvent"))->offset;
  return *reinterpret_cast<System::Action_2<::Il2CppString*, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getCountdownEndTimeEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_getCountdownEndTimeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_getCountdownEndTimeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getCountdownEndTimeEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> cancelledLevelStartEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_cancelledLevelStartEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_cancelledLevelStartEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancelledLevelStartEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getIsReadyEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_getIsReadyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_getIsReadyEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getIsReadyEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,System.Boolean> setIsReadyEvent
System::Action_2<::Il2CppString*, bool>*& GlobalNamespace::MenuRpcManager::dyn_setIsReadyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_setIsReadyEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setIsReadyEvent"))->offset;
  return *reinterpret_cast<System::Action_2<::Il2CppString*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,System.Single> setStartGameTimeEvent
System::Action_2<::Il2CppString*, float>*& GlobalNamespace::MenuRpcManager::dyn_setStartGameTimeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_setStartGameTimeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setStartGameTimeEvent"))->offset;
  return *reinterpret_cast<System::Action_2<::Il2CppString*, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> cancelStartGameTimeEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_cancelStartGameTimeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_cancelStartGameTimeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancelStartGameTimeEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getIsInLobbyEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_getIsInLobbyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_getIsInLobbyEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getIsInLobbyEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,System.Boolean> setIsInLobbyEvent
System::Action_2<::Il2CppString*, bool>*& GlobalNamespace::MenuRpcManager::dyn_setIsInLobbyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_setIsInLobbyEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setIsInLobbyEvent"))->offset;
  return *reinterpret_cast<System::Action_2<::Il2CppString*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getOwnedSongPacksEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_getOwnedSongPacksEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_getOwnedSongPacksEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getOwnedSongPacksEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,SongPackMask> setOwnedSongPacksEvent
System::Action_2<::Il2CppString*, GlobalNamespace::SongPackMask>*& GlobalNamespace::MenuRpcManager::dyn_setOwnedSongPacksEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_setOwnedSongPacksEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setOwnedSongPacksEvent"))->offset;
  return *reinterpret_cast<System::Action_2<::Il2CppString*, GlobalNamespace::SongPackMask>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,System.String> requestedKickPlayerEvent
System::Action_2<::Il2CppString*, ::Il2CppString*>*& GlobalNamespace::MenuRpcManager::dyn_requestedKickPlayerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::dyn_requestedKickPlayerEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestedKickPlayerEvent"))->offset;
  return *reinterpret_cast<System::Action_2<::Il2CppString*, ::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuRpcManager.get_multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager* GlobalNamespace::MenuRpcManager::get_multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::get_multiplayerSessionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerSessionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IMultiplayerSessionManager*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.get_enabled
bool GlobalNamespace::MenuRpcManager::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::get_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.set_enabled
void GlobalNamespace::MenuRpcManager::set_enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::set_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.get_enabledForAllPlayers
bool GlobalNamespace::MenuRpcManager::get_enabledForAllPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::get_enabledForAllPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enabledForAllPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.get_syncTime
float GlobalNamespace::MenuRpcManager::get_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::get_syncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.add_getPlayersPermissionConfigurationEvent
void GlobalNamespace::MenuRpcManager::add_getPlayersPermissionConfigurationEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getPlayersPermissionConfigurationEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getPlayersPermissionConfigurationEvent
void GlobalNamespace::MenuRpcManager::remove_getPlayersPermissionConfigurationEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getPlayersPermissionConfigurationEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setPlayersPermissionConfigurationEvent
void GlobalNamespace::MenuRpcManager::add_setPlayersPermissionConfigurationEvent(System::Action_2<::Il2CppString*, GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_setPlayersPermissionConfigurationEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setPlayersPermissionConfigurationEvent
void GlobalNamespace::MenuRpcManager::remove_setPlayersPermissionConfigurationEvent(System::Action_2<::Il2CppString*, GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_setPlayersPermissionConfigurationEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setPlayersMissingEntitlementsToLevelEvent
void GlobalNamespace::MenuRpcManager::add_setPlayersMissingEntitlementsToLevelEvent(System::Action_2<::Il2CppString*, GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_setPlayersMissingEntitlementsToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setPlayersMissingEntitlementsToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setPlayersMissingEntitlementsToLevelEvent
void GlobalNamespace::MenuRpcManager::remove_setPlayersMissingEntitlementsToLevelEvent(System::Action_2<::Il2CppString*, GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_setPlayersMissingEntitlementsToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setPlayersMissingEntitlementsToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getIsEntitledToLevelEvent
void GlobalNamespace::MenuRpcManager::add_getIsEntitledToLevelEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getIsEntitledToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getIsEntitledToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getIsEntitledToLevelEvent
void GlobalNamespace::MenuRpcManager::remove_getIsEntitledToLevelEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getIsEntitledToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getIsEntitledToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setIsEntitledToLevelEvent
void GlobalNamespace::MenuRpcManager::add_setIsEntitledToLevelEvent(System::Action_3<::Il2CppString*, ::Il2CppString*, GlobalNamespace::EntitlementsStatus>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_setIsEntitledToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setIsEntitledToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setIsEntitledToLevelEvent
void GlobalNamespace::MenuRpcManager::remove_setIsEntitledToLevelEvent(System::Action_3<::Il2CppString*, ::Il2CppString*, GlobalNamespace::EntitlementsStatus>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_setIsEntitledToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setIsEntitledToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_levelEntitlementStatusesInvalidatedEvent
void GlobalNamespace::MenuRpcManager::add_levelEntitlementStatusesInvalidatedEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_levelEntitlementStatusesInvalidatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelEntitlementStatusesInvalidatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_levelEntitlementStatusesInvalidatedEvent
void GlobalNamespace::MenuRpcManager::remove_levelEntitlementStatusesInvalidatedEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_levelEntitlementStatusesInvalidatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelEntitlementStatusesInvalidatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_selectedLevelPackEvent
void GlobalNamespace::MenuRpcManager::add_selectedLevelPackEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_selectedLevelPackEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectedLevelPackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_selectedLevelPackEvent
void GlobalNamespace::MenuRpcManager::remove_selectedLevelPackEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_selectedLevelPackEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectedLevelPackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setSelectedBeatmapEvent
void GlobalNamespace::MenuRpcManager::add_setSelectedBeatmapEvent(System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_setSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setSelectedBeatmapEvent
void GlobalNamespace::MenuRpcManager::remove_setSelectedBeatmapEvent(System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_setSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getSelectedBeatmapEvent
void GlobalNamespace::MenuRpcManager::add_getSelectedBeatmapEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getSelectedBeatmapEvent
void GlobalNamespace::MenuRpcManager::remove_getSelectedBeatmapEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_recommendBeatmapEvent
void GlobalNamespace::MenuRpcManager::add_recommendBeatmapEvent(System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_recommendBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_recommendBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_recommendBeatmapEvent
void GlobalNamespace::MenuRpcManager::remove_recommendBeatmapEvent(System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_recommendBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_recommendBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_clearRecommendedBeatmapEvent
void GlobalNamespace::MenuRpcManager::add_clearRecommendedBeatmapEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_clearRecommendedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_clearRecommendedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_clearRecommendedBeatmapEvent
void GlobalNamespace::MenuRpcManager::remove_clearRecommendedBeatmapEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_clearRecommendedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_clearRecommendedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getRecommendedBeatmapEvent
void GlobalNamespace::MenuRpcManager::add_getRecommendedBeatmapEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getRecommendedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getRecommendedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getRecommendedBeatmapEvent
void GlobalNamespace::MenuRpcManager::remove_getRecommendedBeatmapEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getRecommendedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getRecommendedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setSelectGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::add_setSelectGameplayModifiersEvent(System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_setSelectGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setSelectGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setSelectGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::remove_setSelectGameplayModifiersEvent(System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_setSelectGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setSelectGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getSelectedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::add_getSelectedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getSelectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getSelectedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::remove_getSelectedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getSelectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_recommendGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::add_recommendGameplayModifiersEvent(System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_recommendGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_recommendGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_recommendGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::remove_recommendGameplayModifiersEvent(System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_recommendGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_recommendGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_clearRecommendedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::add_clearRecommendedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_clearRecommendedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_clearRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_clearRecommendedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::remove_clearRecommendedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_clearRecommendedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_clearRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getRecommendedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::add_getRecommendedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getRecommendedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getRecommendedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::remove_getRecommendedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getRecommendedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getIsStartButtonEnabledEvent
void GlobalNamespace::MenuRpcManager::add_getIsStartButtonEnabledEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getIsStartButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getIsStartButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getIsStartButtonEnabledEvent
void GlobalNamespace::MenuRpcManager::remove_getIsStartButtonEnabledEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getIsStartButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getIsStartButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setIsStartButtonEnabledEvent
void GlobalNamespace::MenuRpcManager::add_setIsStartButtonEnabledEvent(System::Action_2<::Il2CppString*, GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_setIsStartButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setIsStartButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setIsStartButtonEnabledEvent
void GlobalNamespace::MenuRpcManager::remove_setIsStartButtonEnabledEvent(System::Action_2<::Il2CppString*, GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_setIsStartButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setIsStartButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_levelLoadErrorEvent
void GlobalNamespace::MenuRpcManager::add_levelLoadErrorEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_levelLoadErrorEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelLoadErrorEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_levelLoadErrorEvent
void GlobalNamespace::MenuRpcManager::remove_levelLoadErrorEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_levelLoadErrorEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelLoadErrorEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_levelLoadSuccessEvent
void GlobalNamespace::MenuRpcManager::add_levelLoadSuccessEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_levelLoadSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelLoadSuccessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_levelLoadSuccessEvent
void GlobalNamespace::MenuRpcManager::remove_levelLoadSuccessEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_levelLoadSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelLoadSuccessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_startedLevelEvent
void GlobalNamespace::MenuRpcManager::add_startedLevelEvent(System::Action_4<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*, GlobalNamespace::GameplayModifiers*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_startedLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_startedLevelEvent
void GlobalNamespace::MenuRpcManager::remove_startedLevelEvent(System::Action_4<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*, GlobalNamespace::GameplayModifiers*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_startedLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getStartedLevelEvent
void GlobalNamespace::MenuRpcManager::add_getStartedLevelEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getStartedLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getStartedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getStartedLevelEvent
void GlobalNamespace::MenuRpcManager::remove_getStartedLevelEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getStartedLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getStartedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getMultiplayerGameStateEvent
void GlobalNamespace::MenuRpcManager::add_getMultiplayerGameStateEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getMultiplayerGameStateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getMultiplayerGameStateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getMultiplayerGameStateEvent
void GlobalNamespace::MenuRpcManager::remove_getMultiplayerGameStateEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getMultiplayerGameStateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getMultiplayerGameStateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setMultiplayerGameStateEvent
void GlobalNamespace::MenuRpcManager::add_setMultiplayerGameStateEvent(System::Action_2<::Il2CppString*, GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_setMultiplayerGameStateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setMultiplayerGameStateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setMultiplayerGameStateEvent
void GlobalNamespace::MenuRpcManager::remove_setMultiplayerGameStateEvent(System::Action_2<::Il2CppString*, GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_setMultiplayerGameStateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setMultiplayerGameStateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_cancelCountdownEvent
void GlobalNamespace::MenuRpcManager::add_cancelCountdownEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_cancelCountdownEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cancelCountdownEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_cancelCountdownEvent
void GlobalNamespace::MenuRpcManager::remove_cancelCountdownEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_cancelCountdownEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cancelCountdownEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setCountdownEndTimeEvent
void GlobalNamespace::MenuRpcManager::add_setCountdownEndTimeEvent(System::Action_2<::Il2CppString*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_setCountdownEndTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setCountdownEndTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setCountdownEndTimeEvent
void GlobalNamespace::MenuRpcManager::remove_setCountdownEndTimeEvent(System::Action_2<::Il2CppString*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_setCountdownEndTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setCountdownEndTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getCountdownEndTimeEvent
void GlobalNamespace::MenuRpcManager::add_getCountdownEndTimeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getCountdownEndTimeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getCountdownEndTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getCountdownEndTimeEvent
void GlobalNamespace::MenuRpcManager::remove_getCountdownEndTimeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getCountdownEndTimeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getCountdownEndTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_cancelledLevelStartEvent
void GlobalNamespace::MenuRpcManager::add_cancelledLevelStartEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_cancelledLevelStartEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cancelledLevelStartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_cancelledLevelStartEvent
void GlobalNamespace::MenuRpcManager::remove_cancelledLevelStartEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_cancelledLevelStartEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cancelledLevelStartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getIsReadyEvent
void GlobalNamespace::MenuRpcManager::add_getIsReadyEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getIsReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getIsReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getIsReadyEvent
void GlobalNamespace::MenuRpcManager::remove_getIsReadyEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getIsReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getIsReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setIsReadyEvent
void GlobalNamespace::MenuRpcManager::add_setIsReadyEvent(System::Action_2<::Il2CppString*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_setIsReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setIsReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setIsReadyEvent
void GlobalNamespace::MenuRpcManager::remove_setIsReadyEvent(System::Action_2<::Il2CppString*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_setIsReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setIsReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setStartGameTimeEvent
void GlobalNamespace::MenuRpcManager::add_setStartGameTimeEvent(System::Action_2<::Il2CppString*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_setStartGameTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setStartGameTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setStartGameTimeEvent
void GlobalNamespace::MenuRpcManager::remove_setStartGameTimeEvent(System::Action_2<::Il2CppString*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_setStartGameTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setStartGameTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_cancelStartGameTimeEvent
void GlobalNamespace::MenuRpcManager::add_cancelStartGameTimeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_cancelStartGameTimeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cancelStartGameTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_cancelStartGameTimeEvent
void GlobalNamespace::MenuRpcManager::remove_cancelStartGameTimeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_cancelStartGameTimeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cancelStartGameTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getIsInLobbyEvent
void GlobalNamespace::MenuRpcManager::add_getIsInLobbyEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getIsInLobbyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getIsInLobbyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getIsInLobbyEvent
void GlobalNamespace::MenuRpcManager::remove_getIsInLobbyEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getIsInLobbyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getIsInLobbyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setIsInLobbyEvent
void GlobalNamespace::MenuRpcManager::add_setIsInLobbyEvent(System::Action_2<::Il2CppString*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_setIsInLobbyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setIsInLobbyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setIsInLobbyEvent
void GlobalNamespace::MenuRpcManager::remove_setIsInLobbyEvent(System::Action_2<::Il2CppString*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_setIsInLobbyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setIsInLobbyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getOwnedSongPacksEvent
void GlobalNamespace::MenuRpcManager::add_getOwnedSongPacksEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_getOwnedSongPacksEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getOwnedSongPacksEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getOwnedSongPacksEvent
void GlobalNamespace::MenuRpcManager::remove_getOwnedSongPacksEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_getOwnedSongPacksEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getOwnedSongPacksEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setOwnedSongPacksEvent
void GlobalNamespace::MenuRpcManager::add_setOwnedSongPacksEvent(System::Action_2<::Il2CppString*, GlobalNamespace::SongPackMask>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_setOwnedSongPacksEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setOwnedSongPacksEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setOwnedSongPacksEvent
void GlobalNamespace::MenuRpcManager::remove_setOwnedSongPacksEvent(System::Action_2<::Il2CppString*, GlobalNamespace::SongPackMask>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_setOwnedSongPacksEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setOwnedSongPacksEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_requestedKickPlayerEvent
void GlobalNamespace::MenuRpcManager::add_requestedKickPlayerEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::add_requestedKickPlayerEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_requestedKickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_requestedKickPlayerEvent
void GlobalNamespace::MenuRpcManager::remove_requestedKickPlayerEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::remove_requestedKickPlayerEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_requestedKickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.Dispose
void GlobalNamespace::MenuRpcManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.EnabledForPlayer
bool GlobalNamespace::MenuRpcManager::EnabledForPlayer(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::EnabledForPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnabledForPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, player);
}
// Autogenerated method: MenuRpcManager.GetPlayersPermissionConfiguration
void GlobalNamespace::MenuRpcManager::GetPlayersPermissionConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetPlayersPermissionConfiguration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayersPermissionConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetPlayersPermissionConfiguration
void GlobalNamespace::MenuRpcManager::InvokeGetPlayersPermissionConfiguration(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetPlayersPermissionConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetPlayersPermissionConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.SetPlayersPermissionConfiguration
void GlobalNamespace::MenuRpcManager::SetPlayersPermissionConfiguration(GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* playersPermissionConfiguration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SetPlayersPermissionConfiguration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayersPermissionConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersPermissionConfiguration)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playersPermissionConfiguration);
}
// Autogenerated method: MenuRpcManager.InvokeSetPlayersPermissionConfiguration
void GlobalNamespace::MenuRpcManager::InvokeSetPlayersPermissionConfiguration(::Il2CppString* userId, GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* playersPermissionConfiguration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeSetPlayersPermissionConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetPlayersPermissionConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersPermissionConfiguration)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, playersPermissionConfiguration);
}
// Autogenerated method: MenuRpcManager.SetPlayersMissingEntitlementsToLevel
void GlobalNamespace::MenuRpcManager::SetPlayersMissingEntitlementsToLevel(GlobalNamespace::PlayersMissingEntitlementsNetSerializable* playersMissingEntitlements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SetPlayersMissingEntitlementsToLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayersMissingEntitlementsToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersMissingEntitlements)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playersMissingEntitlements);
}
// Autogenerated method: MenuRpcManager.InvokeSetPlayersMissingEntitlementsToLevelRpc
void GlobalNamespace::MenuRpcManager::InvokeSetPlayersMissingEntitlementsToLevelRpc(::Il2CppString* userId, GlobalNamespace::PlayersMissingEntitlementsNetSerializable* playersMissingEntitlements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeSetPlayersMissingEntitlementsToLevelRpc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetPlayersMissingEntitlementsToLevelRpc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersMissingEntitlements)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, playersMissingEntitlements);
}
// Autogenerated method: MenuRpcManager.GetIsEntitledToLevel
void GlobalNamespace::MenuRpcManager::GetIsEntitledToLevel(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetIsEntitledToLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsEntitledToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, levelId);
}
// Autogenerated method: MenuRpcManager.InvokeGetIsEntitledToLevel
void GlobalNamespace::MenuRpcManager::InvokeGetIsEntitledToLevel(::Il2CppString* userId, ::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetIsEntitledToLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetIsEntitledToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(levelId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, levelId);
}
// Autogenerated method: MenuRpcManager.SetIsEntitledToLevel
void GlobalNamespace::MenuRpcManager::SetIsEntitledToLevel(::Il2CppString* levelId, GlobalNamespace::EntitlementsStatus entitlementStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SetIsEntitledToLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsEntitledToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(entitlementStatus)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, levelId, entitlementStatus);
}
// Autogenerated method: MenuRpcManager.InvokeSetIsEntitledToLevel
void GlobalNamespace::MenuRpcManager::InvokeSetIsEntitledToLevel(::Il2CppString* userId, ::Il2CppString* levelId, int entitlementStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeSetIsEntitledToLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetIsEntitledToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(entitlementStatus)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, levelId, entitlementStatus);
}
// Autogenerated method: MenuRpcManager.InvalidateLevelEntitlementStatuses
void GlobalNamespace::MenuRpcManager::InvalidateLevelEntitlementStatuses() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvalidateLevelEntitlementStatuses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateLevelEntitlementStatuses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeLevelEntitlementStatusesInvalidated
void GlobalNamespace::MenuRpcManager::InvokeLevelEntitlementStatusesInvalidated(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeLevelEntitlementStatusesInvalidated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeLevelEntitlementStatusesInvalidated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.SelectLevelPack
void GlobalNamespace::MenuRpcManager::SelectLevelPack(::Il2CppString* levelPackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SelectLevelPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectLevelPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, levelPackId);
}
// Autogenerated method: MenuRpcManager.InvokeOnSelectedLevelPackEvent
void GlobalNamespace::MenuRpcManager::InvokeOnSelectedLevelPackEvent(::Il2CppString* userId, ::Il2CppString* levelPackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeOnSelectedLevelPackEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeOnSelectedLevelPackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(levelPackId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, levelPackId);
}
// Autogenerated method: MenuRpcManager.SetSelectedBeatmap
void GlobalNamespace::MenuRpcManager::SetSelectedBeatmap(GlobalNamespace::BeatmapIdentifierNetSerializable* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SetSelectedBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, identifier);
}
// Autogenerated method: MenuRpcManager.InvokeSetSelectedBeatmap
void GlobalNamespace::MenuRpcManager::InvokeSetSelectedBeatmap(::Il2CppString* userId, GlobalNamespace::BeatmapIdentifierNetSerializable* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeSetSelectedBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetSelectedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(identifier)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, identifier);
}
// Autogenerated method: MenuRpcManager.GetSelectedBeatmap
void GlobalNamespace::MenuRpcManager::GetSelectedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetSelectedBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetSelectedBeatmapRpc
void GlobalNamespace::MenuRpcManager::InvokeGetSelectedBeatmapRpc(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetSelectedBeatmapRpc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetSelectedBeatmapRpc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.RecommendBeatmap
void GlobalNamespace::MenuRpcManager::RecommendBeatmap(GlobalNamespace::BeatmapIdentifierNetSerializable* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RecommendBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecommendBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, identifier);
}
// Autogenerated method: MenuRpcManager.InvokeRecommendBeatmap
void GlobalNamespace::MenuRpcManager::InvokeRecommendBeatmap(::Il2CppString* userId, GlobalNamespace::BeatmapIdentifierNetSerializable* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeRecommendBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeRecommendBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(identifier)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, identifier);
}
// Autogenerated method: MenuRpcManager.ClearRecommendedBeatmap
void GlobalNamespace::MenuRpcManager::ClearRecommendedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::ClearRecommendedBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRecommendedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeClearRecommendedBeatmap
void GlobalNamespace::MenuRpcManager::InvokeClearRecommendedBeatmap(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeClearRecommendedBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeClearRecommendedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.GetRecommendedBeatmap
void GlobalNamespace::MenuRpcManager::GetRecommendedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetRecommendedBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRecommendedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetRecommendedBeatmap
void GlobalNamespace::MenuRpcManager::InvokeGetRecommendedBeatmap(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetRecommendedBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetRecommendedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.SetSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::SetSelectedGameplayModifiers(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SetSelectedGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, gameplayModifiers);
}
// Autogenerated method: MenuRpcManager.InvokeSetSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::InvokeSetSelectedGameplayModifiers(::Il2CppString* userId, GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeSetSelectedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(gameplayModifiers)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, gameplayModifiers);
}
// Autogenerated method: MenuRpcManager.GetSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::GetSelectedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetSelectedGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::InvokeGetSelectedGameplayModifiers(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetSelectedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.RecommendGameplayModifiers
void GlobalNamespace::MenuRpcManager::RecommendGameplayModifiers(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RecommendGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecommendGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, gameplayModifiers);
}
// Autogenerated method: MenuRpcManager.InvokeRecommendGameplayModifiers
void GlobalNamespace::MenuRpcManager::InvokeRecommendGameplayModifiers(::Il2CppString* userId, GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeRecommendGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeRecommendGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(gameplayModifiers)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, gameplayModifiers);
}
// Autogenerated method: MenuRpcManager.ClearRecommendedGameplayModifiers
void GlobalNamespace::MenuRpcManager::ClearRecommendedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::ClearRecommendedGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRecommendedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeClearRecommendedGameplayModifiers
void GlobalNamespace::MenuRpcManager::InvokeClearRecommendedGameplayModifiers(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeClearRecommendedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeClearRecommendedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.GetRecommendedGameplayModifiers
void GlobalNamespace::MenuRpcManager::GetRecommendedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetRecommendedGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRecommendedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetRecommendedGameplayModifiers
void GlobalNamespace::MenuRpcManager::InvokeGetRecommendedGameplayModifiers(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetRecommendedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetRecommendedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.GetIsStartButtonEnabled
void GlobalNamespace::MenuRpcManager::GetIsStartButtonEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetIsStartButtonEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsStartButtonEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetIsStartButtonEnabled
void GlobalNamespace::MenuRpcManager::InvokeGetIsStartButtonEnabled(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetIsStartButtonEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetIsStartButtonEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.SetIsStartButtonEnabled
void GlobalNamespace::MenuRpcManager::SetIsStartButtonEnabled(GlobalNamespace::CannotStartGameReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SetIsStartButtonEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsStartButtonEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reason);
}
// Autogenerated method: MenuRpcManager.InvokeSetIsStartButtonEnabled
void GlobalNamespace::MenuRpcManager::InvokeSetIsStartButtonEnabled(::Il2CppString* userId, GlobalNamespace::CannotStartGameReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeSetIsStartButtonEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetIsStartButtonEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(reason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, reason);
}
// Autogenerated method: MenuRpcManager.LevelLoadError
void GlobalNamespace::MenuRpcManager::LevelLoadError(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::LevelLoadError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelLoadError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, levelId);
}
// Autogenerated method: MenuRpcManager.InvokeLevelLoadError
void GlobalNamespace::MenuRpcManager::InvokeLevelLoadError(::Il2CppString* userId, ::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeLevelLoadError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeLevelLoadError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(levelId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, levelId);
}
// Autogenerated method: MenuRpcManager.LevelLoadSuccess
void GlobalNamespace::MenuRpcManager::LevelLoadSuccess(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::LevelLoadSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelLoadSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, levelId);
}
// Autogenerated method: MenuRpcManager.InvokeLevelLoadSuccess
void GlobalNamespace::MenuRpcManager::InvokeLevelLoadSuccess(::Il2CppString* userId, ::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeLevelLoadSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeLevelLoadSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(levelId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, levelId);
}
// Autogenerated method: MenuRpcManager.StartLevel
void GlobalNamespace::MenuRpcManager::StartLevel(GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, GlobalNamespace::GameplayModifiers* gameplayModifiers, float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::StartLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapId), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(startTime)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapId, gameplayModifiers, startTime);
}
// Autogenerated method: MenuRpcManager.InvokeStartLevel
void GlobalNamespace::MenuRpcManager::InvokeStartLevel(::Il2CppString* userId, GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, GlobalNamespace::GameplayModifiers* gameplayModifiers, float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeStartLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeStartLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(beatmapId), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(startTime)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, beatmapId, gameplayModifiers, startTime);
}
// Autogenerated method: MenuRpcManager.GetStartedLevel
void GlobalNamespace::MenuRpcManager::GetStartedLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetStartedLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStartedLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetStartedLevel
void GlobalNamespace::MenuRpcManager::InvokeGetStartedLevel(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetStartedLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetStartedLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.GetMultiplayerGameState
void GlobalNamespace::MenuRpcManager::GetMultiplayerGameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetMultiplayerGameState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMultiplayerGameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetMultiplayerGameState
void GlobalNamespace::MenuRpcManager::InvokeGetMultiplayerGameState(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetMultiplayerGameState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetMultiplayerGameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.SetMultiplayerGameState
void GlobalNamespace::MenuRpcManager::SetMultiplayerGameState(GlobalNamespace::MultiplayerGameState lobbyState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SetMultiplayerGameState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMultiplayerGameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyState)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, lobbyState);
}
// Autogenerated method: MenuRpcManager.InvokeSetMultiplayerGameState
void GlobalNamespace::MenuRpcManager::InvokeSetMultiplayerGameState(::Il2CppString* userId, GlobalNamespace::MultiplayerGameState lobbyState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeSetMultiplayerGameState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetMultiplayerGameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(lobbyState)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, lobbyState);
}
// Autogenerated method: MenuRpcManager.CancelCountdown
void GlobalNamespace::MenuRpcManager::CancelCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::CancelCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeCancelCountdown
void GlobalNamespace::MenuRpcManager::InvokeCancelCountdown(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeCancelCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeCancelCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.SetCountdownEndTime
void GlobalNamespace::MenuRpcManager::SetCountdownEndTime(float newTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SetCountdownEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newTime)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, newTime);
}
// Autogenerated method: MenuRpcManager.InvokeSetCountdownEndTime
void GlobalNamespace::MenuRpcManager::InvokeSetCountdownEndTime(::Il2CppString* userId, float newTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeSetCountdownEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(newTime)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, newTime);
}
// Autogenerated method: MenuRpcManager.GetCountdownEndTime
void GlobalNamespace::MenuRpcManager::GetCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetCountdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetCountdownEndTime
void GlobalNamespace::MenuRpcManager::InvokeGetCountdownEndTime(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetCountdownEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.CancelLevelStart
void GlobalNamespace::MenuRpcManager::CancelLevelStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::CancelLevelStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelLevelStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeCancelLevelStart
void GlobalNamespace::MenuRpcManager::InvokeCancelLevelStart(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeCancelLevelStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeCancelLevelStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.GetIsReady
void GlobalNamespace::MenuRpcManager::GetIsReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetIsReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetIsReady
void GlobalNamespace::MenuRpcManager::InvokeGetIsReady(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetIsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.SetIsReady
void GlobalNamespace::MenuRpcManager::SetIsReady(bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SetIsReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isReady)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, isReady);
}
// Autogenerated method: MenuRpcManager.InvokeSetIsReady
void GlobalNamespace::MenuRpcManager::InvokeSetIsReady(::Il2CppString* userId, bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeSetIsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isReady)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, isReady);
}
// Autogenerated method: MenuRpcManager.SetStartGameTime
void GlobalNamespace::MenuRpcManager::SetStartGameTime(float newTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SetStartGameTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStartGameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newTime)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, newTime);
}
// Autogenerated method: MenuRpcManager.InvokeSetStartGameCountdown
void GlobalNamespace::MenuRpcManager::InvokeSetStartGameCountdown(::Il2CppString* userId, float newTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeSetStartGameCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetStartGameCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(newTime)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, newTime);
}
// Autogenerated method: MenuRpcManager.CancelStartGameTime
void GlobalNamespace::MenuRpcManager::CancelStartGameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::CancelStartGameTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelStartGameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeCancelStartGameCountdown
void GlobalNamespace::MenuRpcManager::InvokeCancelStartGameCountdown(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeCancelStartGameCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeCancelStartGameCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.GetIsInLobby
void GlobalNamespace::MenuRpcManager::GetIsInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetIsInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetIsInLobby
void GlobalNamespace::MenuRpcManager::InvokeGetIsInLobby(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetIsInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.SetIsInLobby
void GlobalNamespace::MenuRpcManager::SetIsInLobby(bool isBack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SetIsInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isBack)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, isBack);
}
// Autogenerated method: MenuRpcManager.InvokeSetIsInLobby
void GlobalNamespace::MenuRpcManager::InvokeSetIsInLobby(::Il2CppString* userId, bool isBack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeSetIsInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isBack)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, isBack);
}
// Autogenerated method: MenuRpcManager.GetOwnedSongPacks
void GlobalNamespace::MenuRpcManager::GetOwnedSongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::GetOwnedSongPacks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetOwnedSongPacks
void GlobalNamespace::MenuRpcManager::InvokeGetOwnedSongPacks(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeGetOwnedSongPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.SetOwnedSongPacks
void GlobalNamespace::MenuRpcManager::SetOwnedSongPacks(GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::SetOwnedSongPacks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, songPackMask);
}
// Autogenerated method: MenuRpcManager.InvokeSetOwnedSongPacks
void GlobalNamespace::MenuRpcManager::InvokeSetOwnedSongPacks(::Il2CppString* userId, GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeSetOwnedSongPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(songPackMask)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, songPackMask);
}
// Autogenerated method: MenuRpcManager.RequestKickPlayer
void GlobalNamespace::MenuRpcManager::RequestKickPlayer(::Il2CppString* kickedPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RequestKickPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestKickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kickedPlayerId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, kickedPlayerId);
}
// Autogenerated method: MenuRpcManager.InvokeKickPlayer
void GlobalNamespace::MenuRpcManager::InvokeKickPlayer(::Il2CppString* userId, ::Il2CppString* kickedPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::InvokeKickPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeKickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(kickedPlayerId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, kickedPlayerId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/RpcType
#include "GlobalNamespace/MenuRpcManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetPlayersMissingEntitlementsToLevel
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetPlayersMissingEntitlementsToLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SetPlayersMissingEntitlementsToLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetPlayersMissingEntitlementsToLevel"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetPlayersMissingEntitlementsToLevel
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetPlayersMissingEntitlementsToLevel(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SetPlayersMissingEntitlementsToLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetPlayersMissingEntitlementsToLevel", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetIsEntitledToLevel
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsEntitledToLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsEntitledToLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetIsEntitledToLevel"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetIsEntitledToLevel
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsEntitledToLevel(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsEntitledToLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetIsEntitledToLevel", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetIsEntitledToLevel
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsEntitledToLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsEntitledToLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetIsEntitledToLevel"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetIsEntitledToLevel
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsEntitledToLevel(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsEntitledToLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetIsEntitledToLevel", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType InvalidateLevelEntitlementStatuses
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_InvalidateLevelEntitlementStatuses() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_InvalidateLevelEntitlementStatuses");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "InvalidateLevelEntitlementStatuses"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType InvalidateLevelEntitlementStatuses
void GlobalNamespace::MenuRpcManager::RpcType::_set_InvalidateLevelEntitlementStatuses(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_InvalidateLevelEntitlementStatuses");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "InvalidateLevelEntitlementStatuses", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SelectLevelPack
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SelectLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SelectLevelPack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SelectLevelPack"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SelectLevelPack
void GlobalNamespace::MenuRpcManager::RpcType::_set_SelectLevelPack(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SelectLevelPack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SelectLevelPack", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetSelectedBeatmap
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetSelectedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SetSelectedBeatmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetSelectedBeatmap"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetSelectedBeatmap
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetSelectedBeatmap(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SetSelectedBeatmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetSelectedBeatmap", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetSelectedBeatmap
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetSelectedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetSelectedBeatmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetSelectedBeatmap"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetSelectedBeatmap
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetSelectedBeatmap(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetSelectedBeatmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetSelectedBeatmap", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType RecommendBeatmap
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_RecommendBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_RecommendBeatmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "RecommendBeatmap"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType RecommendBeatmap
void GlobalNamespace::MenuRpcManager::RpcType::_set_RecommendBeatmap(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_RecommendBeatmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "RecommendBeatmap", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType ClearRecommendedBeatmap
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_ClearRecommendedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_ClearRecommendedBeatmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "ClearRecommendedBeatmap"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType ClearRecommendedBeatmap
void GlobalNamespace::MenuRpcManager::RpcType::_set_ClearRecommendedBeatmap(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_ClearRecommendedBeatmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "ClearRecommendedBeatmap", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetRecommendedBeatmap
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetRecommendedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetRecommendedBeatmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetRecommendedBeatmap"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetRecommendedBeatmap
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetRecommendedBeatmap(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetRecommendedBeatmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetRecommendedBeatmap", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetSelectedGameplayModifiers
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetSelectedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SetSelectedGameplayModifiers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetSelectedGameplayModifiers"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetSelectedGameplayModifiers(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SetSelectedGameplayModifiers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetSelectedGameplayModifiers", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetSelectedGameplayModifiers
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetSelectedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetSelectedGameplayModifiers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetSelectedGameplayModifiers"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetSelectedGameplayModifiers(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetSelectedGameplayModifiers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetSelectedGameplayModifiers", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType RecommendGameplayModifiers
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_RecommendGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_RecommendGameplayModifiers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "RecommendGameplayModifiers"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType RecommendGameplayModifiers
void GlobalNamespace::MenuRpcManager::RpcType::_set_RecommendGameplayModifiers(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_RecommendGameplayModifiers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "RecommendGameplayModifiers", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType ClearRecommendedGameplayModifiers
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_ClearRecommendedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_ClearRecommendedGameplayModifiers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "ClearRecommendedGameplayModifiers"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType ClearRecommendedGameplayModifiers
void GlobalNamespace::MenuRpcManager::RpcType::_set_ClearRecommendedGameplayModifiers(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_ClearRecommendedGameplayModifiers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "ClearRecommendedGameplayModifiers", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetRecommendedGameplayModifiers
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetRecommendedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetRecommendedGameplayModifiers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetRecommendedGameplayModifiers"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetRecommendedGameplayModifiers
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetRecommendedGameplayModifiers(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetRecommendedGameplayModifiers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetRecommendedGameplayModifiers", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType LevelLoadError
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_LevelLoadError() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_LevelLoadError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "LevelLoadError"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType LevelLoadError
void GlobalNamespace::MenuRpcManager::RpcType::_set_LevelLoadError(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_LevelLoadError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "LevelLoadError", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType LevelLoadSuccess
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_LevelLoadSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_LevelLoadSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "LevelLoadSuccess"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType LevelLoadSuccess
void GlobalNamespace::MenuRpcManager::RpcType::_set_LevelLoadSuccess(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_LevelLoadSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "LevelLoadSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType StartLevel
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_StartLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_StartLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "StartLevel"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType StartLevel
void GlobalNamespace::MenuRpcManager::RpcType::_set_StartLevel(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_StartLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "StartLevel", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetStartedLevel
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetStartedLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetStartedLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetStartedLevel"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetStartedLevel
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetStartedLevel(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetStartedLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetStartedLevel", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType CancelLevelStart
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_CancelLevelStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_CancelLevelStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "CancelLevelStart"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType CancelLevelStart
void GlobalNamespace::MenuRpcManager::RpcType::_set_CancelLevelStart(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_CancelLevelStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "CancelLevelStart", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetMultiplayerGameState
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetMultiplayerGameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetMultiplayerGameState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetMultiplayerGameState"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetMultiplayerGameState
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetMultiplayerGameState(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetMultiplayerGameState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetMultiplayerGameState", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetMultiplayerGameState
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetMultiplayerGameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SetMultiplayerGameState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetMultiplayerGameState"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetMultiplayerGameState
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetMultiplayerGameState(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SetMultiplayerGameState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetMultiplayerGameState", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetIsReady
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetIsReady"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetIsReady
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsReady(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetIsReady", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetIsReady
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetIsReady"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetIsReady
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsReady(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetIsReady", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetStartGameTime
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetStartGameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SetStartGameTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetStartGameTime"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetStartGameTime
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetStartGameTime(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SetStartGameTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetStartGameTime", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType CancelStartGameTime
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_CancelStartGameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_CancelStartGameTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "CancelStartGameTime"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType CancelStartGameTime
void GlobalNamespace::MenuRpcManager::RpcType::_set_CancelStartGameTime(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_CancelStartGameTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "CancelStartGameTime", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetIsInLobby
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsInLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetIsInLobby"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetIsInLobby
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsInLobby(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsInLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetIsInLobby", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetIsInLobby
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsInLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetIsInLobby"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetIsInLobby
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsInLobby(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsInLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetIsInLobby", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetCountdownEndTime
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetCountdownEndTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetCountdownEndTime"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetCountdownEndTime
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetCountdownEndTime(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetCountdownEndTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetCountdownEndTime", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetCountdownEndTime
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SetCountdownEndTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetCountdownEndTime"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetCountdownEndTime
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetCountdownEndTime(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SetCountdownEndTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetCountdownEndTime", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType CancelCountdown
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_CancelCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_CancelCountdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "CancelCountdown"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType CancelCountdown
void GlobalNamespace::MenuRpcManager::RpcType::_set_CancelCountdown(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_CancelCountdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "CancelCountdown", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetOwnedSongPacks
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetOwnedSongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetOwnedSongPacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetOwnedSongPacks"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetOwnedSongPacks
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetOwnedSongPacks(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetOwnedSongPacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetOwnedSongPacks", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetOwnedSongPacks
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetOwnedSongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SetOwnedSongPacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetOwnedSongPacks"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetOwnedSongPacks
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetOwnedSongPacks(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SetOwnedSongPacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetOwnedSongPacks", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType RequestKickPlayer
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_RequestKickPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_RequestKickPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "RequestKickPlayer"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType RequestKickPlayer
void GlobalNamespace::MenuRpcManager::RpcType::_set_RequestKickPlayer(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_RequestKickPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "RequestKickPlayer", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetPermissionConfiguration
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetPermissionConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetPermissionConfiguration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetPermissionConfiguration"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetPermissionConfiguration
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetPermissionConfiguration(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetPermissionConfiguration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetPermissionConfiguration", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetPermissionConfiguration
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetPermissionConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SetPermissionConfiguration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetPermissionConfiguration"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetPermissionConfiguration
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetPermissionConfiguration(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SetPermissionConfiguration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetPermissionConfiguration", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetIsStartButtonEnabled
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsStartButtonEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsStartButtonEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetIsStartButtonEnabled"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetIsStartButtonEnabled
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsStartButtonEnabled(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsStartButtonEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetIsStartButtonEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetIsStartButtonEnabled
GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsStartButtonEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsStartButtonEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetIsStartButtonEnabled"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetIsStartButtonEnabled
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsStartButtonEnabled(GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsStartButtonEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetIsStartButtonEnabled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
uint8_t& GlobalNamespace::MenuRpcManager::RpcType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::RpcType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetPlayersPermissionConfigurationRpc
#include "GlobalNamespace/MenuRpcManager_GetPlayersPermissionConfigurationRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetPlayersPermissionConfigurationRpc
#include "GlobalNamespace/MenuRpcManager_SetPlayersPermissionConfigurationRpc.hpp"
// Including type: PlayersLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayersLobbyPermissionConfigurationNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetPlayersMissingEntitlementsToLevelRpc
#include "GlobalNamespace/MenuRpcManager_SetPlayersMissingEntitlementsToLevelRpc.hpp"
// Including type: PlayersMissingEntitlementsNetSerializable
#include "GlobalNamespace/PlayersMissingEntitlementsNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuRpcManager/GetIsEntitledToLevelRpc
#include "GlobalNamespace/MenuRpcManager_GetIsEntitledToLevelRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuRpcManager/SetIsEntitledToLevelRpc
#include "GlobalNamespace/MenuRpcManager_SetIsEntitledToLevelRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/InvalidateLevelEntitlementStatusesRpc
#include "GlobalNamespace/MenuRpcManager_InvalidateLevelEntitlementStatusesRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuRpcManager/SelectLevelPackRpc
#include "GlobalNamespace/MenuRpcManager_SelectLevelPackRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetSelectedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_SetSelectedBeatmapRpc.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetSelectedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_GetSelectedBeatmapRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/RecommendBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_RecommendBeatmapRpc.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/ClearRecommendedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_ClearRecommendedBeatmapRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetRecommendedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_GetRecommendedBeatmapRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetSelectedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_SetSelectedGameplayModifiersRpc.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetSelectedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_GetSelectedGameplayModifiersRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/RecommendGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_RecommendGameplayModifiersRpc.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/ClearRecommendedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_ClearRecommendedGameplayModifiersRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetRecommendedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_GetRecommendedGameplayModifiersRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetIsStartButtonEnabledRpc
#include "GlobalNamespace/MenuRpcManager_GetIsStartButtonEnabledRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetIsStartButtonEnabledRpc
#include "GlobalNamespace/MenuRpcManager_SetIsStartButtonEnabledRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuRpcManager/LevelLoadErrorRpc
#include "GlobalNamespace/MenuRpcManager_LevelLoadErrorRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuRpcManager/LevelLoadSuccessRpc
#include "GlobalNamespace/MenuRpcManager_LevelLoadSuccessRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/StartLevelRpc
#include "GlobalNamespace/MenuRpcManager_StartLevelRpc.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetStartedLevelRpc
#include "GlobalNamespace/MenuRpcManager_GetStartedLevelRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetMultiplayerGameStateRpc
#include "GlobalNamespace/MenuRpcManager_GetMultiplayerGameStateRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetMultiplayerGameStateRpc
#include "GlobalNamespace/MenuRpcManager_SetMultiplayerGameStateRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/CancelCountdownRpc
#include "GlobalNamespace/MenuRpcManager_CancelCountdownRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetCountdownEndTimeRpc
#include "GlobalNamespace/MenuRpcManager_SetCountdownEndTimeRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetCountdownEndTimeRpc
#include "GlobalNamespace/MenuRpcManager_GetCountdownEndTimeRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/CancelLevelStartRpc
#include "GlobalNamespace/MenuRpcManager_CancelLevelStartRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetIsReadyRpc
#include "GlobalNamespace/MenuRpcManager_GetIsReadyRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetIsReadyRpc
#include "GlobalNamespace/MenuRpcManager_SetIsReadyRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
